#include "ppc_recomp_patch.h"
#include "../include/ppc/ppc_recomp_fix.h"
#include "../include/ppc/ppc_recomp_wrappers.h"
#include "ppc_recomp_shared.h"
#include "../include/ppc/ppc_register.h"




#include "../include/ppc/ppc_recomp_macros.h"



alias(__imp__sub_820FAE88) PPC_WEAK_FUNC(sub_820FAE88);
PPC_FUNC_IMPL(__imp__sub_820FAE88) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stwu ctx_arrow(ctx)->r1,-256(ctx_arrow(ctx)->r1)
	ea = -256 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r19,1
	ctx_arrow(ctx)->r19.s64 = 1;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820faeb8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FAEB8;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// b 0x820faebc
	goto loc_820FAEBC;
loc_820FAEB8:
	// stw ctx_arrow(ctx)->r19,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
loc_820FAEBC:
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// lwz ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r19.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stw ctx_arrow(ctx)->r29,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// ble ctx_arrow(ctx)->r6,0x820fb210
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB210;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r16,-32141
	ctx_arrow(ctx)->r16.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,2760
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 2760;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r15,-32141
	ctx_arrow(ctx)->r15.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11,-19476
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r11.s64 + -19476;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r21,-31994
	ctx_arrow(ctx)->r21.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r11,-19460
	ctx_arrow(ctx)->r17.s64 = ctx_arrow(ctx)->r11.s64 + -19460;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r22,-31994
	ctx_arrow(ctx)->r22.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,3212
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 3212;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,3916
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + 3916;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,2872
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 2872;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,3888
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 3888;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,3848
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 3848;
loc_820FAF38:
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ca110
	sub_820CA110(ctx, base);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820faf68
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FAF68;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820faf68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FAF68;
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
loc_820FAF68:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fafd0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FAFD0;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 11, xer);
	// bge ctx_arrow(ctx)->r6,0x820faf98
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FAF98;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820faf98
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FAF98;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r25.u32);
loc_820FAF98:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fafd0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FAFD0;
	// li ctx_arrow(ctx)->r14,0
	ctx_arrow(ctx)->r14.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,8187
	ctx_arrow(ctx)->r8.s64 = 8187;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stwx ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r26.u32);
	// bl 0x82144920
	sub_82144920(&ctx);
loc_820FAFD0:
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb164
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB164;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820faff4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FAFF4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r25.u32);
	// b 0x820fb164
	goto loc_820FB164;
loc_820FAFF4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb164
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB164;
	// li ctx_arrow(ctx)->r4,514
	ctx_arrow(ctx)->r4.s64 = 514;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r19.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb02c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB02C;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb150
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB150;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r29.u32);
	// b 0x820fb150
	goto loc_820FB150;
loc_820FB02C:
	// li ctx_arrow(ctx)->r4,257
	ctx_arrow(ctx)->r4.s64 = 257;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb060
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB060;
	// lwz ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fb150
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB150;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r29.u32);
	// b 0x820fb150
	goto loc_820FB150;
loc_820FB060:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb0cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB0CC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb094
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB094;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ef170
	sub_820EF170(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb150
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB150;
loc_820FB094:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,8217
	ctx_arrow(ctx)->r8.s64 = 8217;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r23.u64;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stwx ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r24.u32);
	// stwx ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r26.u32);
	// stwx ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r25.u32);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r17
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r17.u32);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r18
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r18.u32);
	// bl 0x82144920
	sub_82144920(&ctx);
	// b 0x820fb150
	goto loc_820FB150;
loc_820FB0CC:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb110
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB110;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb150
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB150;
	// lwz ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fb150
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB150;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r29.u32);
	// b 0x820fb150
	goto loc_820FB150;
loc_820FB110:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// bge ctx_arrow(ctx)->r6,0x820fb14c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB14C;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb150
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB150;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb150
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB150;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r29.u32);
	// b 0x820fb150
	goto loc_820FB150;
loc_820FB14C:
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
loc_820FB150:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb164
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB164;
	// li ctx_arrow(ctx)->r14,0
	ctx_arrow(ctx)->r14.s64 = 0;
	// stwx ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r24.u32);
loc_820FB164:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 * 84;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,84
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 * 84;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r10.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb1a4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB1A4;
	// lwz ctx_arrow(ctx)->r10,-14488(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r27.u32);
	// bge ctx_arrow(ctx)->r6,0x820fb1cc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB1CC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 84;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// b 0x820fb1c4
	goto loc_820FB1C4;
loc_820FB1A4:
	// bge ctx_arrow(ctx)->r6,0x820fb1cc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB1CC;
	// lwz ctx_arrow(ctx)->r10,-14488(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,83
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 83, xer);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r27.u32);
	// ble ctx_arrow(ctx)->r6,0x820fb1cc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB1CC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -84;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 1;
loc_820FB1C4:
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r20
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r20.u32);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r27.u32);
loc_820FB1CC:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb1f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB1F0;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 11, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb1f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB1F0;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
loc_820FB1F0:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// lwz ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// blt ctx_arrow(ctx)->r6,0x820faf38
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FAF38;
	// lwz ctx_arrow(ctx)->r29,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FB210:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb244
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB244;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r19,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FB244:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,168(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb264
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB264;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r19,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_820FB264:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r14,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r14.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4216
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4216;
	// beq ctx_arrow(ctx)->r6,0x820fb284
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB284;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// b 0x820fb288
	goto loc_820FB288;
loc_820FB284:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_820FB288:
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r30.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb2b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB2B0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb2c8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB2C8;
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb2c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB2C8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,300
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 300, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb2c8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB2C8;
loc_820FB2B0:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r19.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_820FB2C8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,256
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 256;
	// b 0x823ed150
	return;
}

alias(__imp__sub_820FB2D0) PPC_WEAK_FUNC(sub_820FB2D0);
PPC_FUNC_IMPL(__imp__sub_820FB2D0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stfd f31,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -160);
	// stwu ctx_arrow(ctx)->r1,-320(ctx_arrow(ctx)->r1)
	ea = -320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb300
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB300;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r30,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// b 0x820fb30c
	goto loc_820FB30C;
loc_820FB300:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// rotlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
loc_820FB30C:
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// li ctx_arrow(ctx)->r7,144
	ctx_arrow(ctx)->r7.s64 = 144;
	// li ctx_arrow(ctx)->r6,171
	ctx_arrow(ctx)->r6.s64 = 171;
	// li ctx_arrow(ctx)->r5,388
	ctx_arrow(ctx)->r5.s64 = 388;
	// li ctx_arrow(ctx)->r4,169
	ctx_arrow(ctx)->r4.s64 = 169;
	// li ctx_arrow(ctx)->r3,38
	ctx_arrow(ctx)->r3.s64 = 38;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb348
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB348;
	// li ctx_arrow(ctx)->r7,128
	ctx_arrow(ctx)->r7.s64 = 128;
	// li ctx_arrow(ctx)->r6,310
	ctx_arrow(ctx)->r6.s64 = 310;
	// li ctx_arrow(ctx)->r5,214
	ctx_arrow(ctx)->r5.s64 = 214;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// li ctx_arrow(ctx)->r3,212
	ctx_arrow(ctx)->r3.s64 = 212;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FB348:
	// li ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r20.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r20.u64;
	// stw ctx_arrow(ctx)->r9,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// ble ctx_arrow(ctx)->r6,0x820fb7b0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB7B0;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11,-19524
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r11.s64 + -19524;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r20.u64;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,2760
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + 2760;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f31,6580(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r17,-32141
	ctx_arrow(ctx)->r17.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,3916
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r11.s64 + 3916;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r21,-31991
	ctx_arrow(ctx)->r21.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3848
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3848;
	// lis ctx_arrow(ctx)->r22,-31994
	ctx_arrow(ctx)->r22.s64 = -2096758784;
	// li ctx_arrow(ctx)->r14,-1
	ctx_arrow(ctx)->r14.s64 = -1;
	// stw ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r11,3212
	ctx_arrow(ctx)->r15.s64 = ctx_arrow(ctx)->r11.s64 + 3212;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-17792
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -17792;
	// stw ctx_arrow(ctx)->r11,140(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,2872
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 2872;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11,3888
	ctx_arrow(ctx)->r16.s64 = ctx_arrow(ctx)->r11.s64 + 3888;
	// b 0x820fb3cc
	goto loc_820FB3CC;
loc_820FB3C4:
	// lwz ctx_arrow(ctx)->r9,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FB3CC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 2, xer);
	// li ctx_arrow(ctx)->r11,140
	ctx_arrow(ctx)->r11.s64 = 140;
	// bgt ctx_arrow(ctx)->r6,0x820fb3f4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FB3F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fb3e4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FB3E4;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u64;
loc_820FB3E4:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 30;
	// li ctx_arrow(ctx)->r26,38
	ctx_arrow(ctx)->r26.s64 = 38;
	// li ctx_arrow(ctx)->r24,350
	ctx_arrow(ctx)->r24.s64 = 350;
	// b 0x820fb41c
	goto loc_820FB41C;
loc_820FB3F4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fb400
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FB400;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u64;
loc_820FB400:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 30;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r24,175
	ctx_arrow(ctx)->r24.s64 = 175;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,175
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 175;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,38
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 38;
loc_820FB41C:
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,1
	xer.ca = (ctx_arrow(ctx)->r24.s32 < 0) & ((ctx_arrow(ctx)->r24.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r24.s32 >> 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,70
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r29.s64 + 70;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb4c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB4C8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb4c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB4C8;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40021
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40021;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,5
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 5;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r10,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// stw ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r14.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// stw ctx_arrow(ctx)->r20,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// stw ctx_arrow(ctx)->r20,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r14.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// li ctx_arrow(ctx)->r14,-1
	ctx_arrow(ctx)->r14.s64 = -1;
loc_820FB4C8:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r10,140(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,156
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 156;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,120
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 120;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// stw ctx_arrow(ctx)->r11,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// beq ctx_arrow(ctx)->r6,0x820fb594
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB594;
	// lbz ctx_arrow(ctx)->r10,-31(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,-30(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-29(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,8,16,23
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// stw ctx_arrow(ctx)->r14,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// stw ctx_arrow(ctx)->r20,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r20,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fb5b4
	goto loc_820FB5B4;
loc_820FB594:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r14,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// stw ctx_arrow(ctx)->r20,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r20,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FB5B4:
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb5d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB5D0;
	// lis ctx_arrow(ctx)->r11,-32241
	ctx_arrow(ctx)->r11.s64 = -2112946176;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-3728
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -3728;
	// b 0x820fb5d8
	goto loc_820FB5D8;
loc_820FB5D0:
	// lis ctx_arrow(ctx)->r11,-32204
	ctx_arrow(ctx)->r11.s64 = -2110521344;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,23912
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 23912;
loc_820FB5D8:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64 + ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26,13
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r26.s64 + 13;
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-14
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -14;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb61c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB61C;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb62c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB62C;
loc_820FB61C:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb794
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB794;
loc_820FB62C:
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb664
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB664;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-3
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -3;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3728
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3728;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-252
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -252;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
loc_820FB664:
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb69c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB69C;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -2;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3728
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3728;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-168
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -168;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
loc_820FB69C:
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fb6d4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FB6D4;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3728
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3728;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -84;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
loc_820FB6D4:
	// lwz ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fb718
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB718;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3728
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3728;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 84;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FB718:
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fb758
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB758;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 2;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3728
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3728;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,168
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 168;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FB758:
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -3;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fb794
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FB794;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 3;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3728
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3728;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,252
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 252;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
loc_820FB794:
	// lwz ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// lwz ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// stw ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// blt ctx_arrow(ctx)->r6,0x820fb3c4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FB3C4;
loc_820FB7B0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// lfd f31,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed150
	return;
}

alias(__imp__sub_820FB7C0) PPC_WEAK_FUNC(sub_820FB7C0);
PPC_FUNC_IMPL(__imp__sub_820FB7C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed10c
	// stfd f31,-136(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -136);
	// stwu ctx_arrow(ctx)->r1,-288(ctx_arrow(ctx)->r1)
	ea = -288 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820f5978
	sub_820F5978(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r7,144
	ctx_arrow(ctx)->r7.s64 = 144;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-19524
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -19524;
	// lwz ctx_arrow(ctx)->r11,3896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,3884(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// lwz ctx_arrow(ctx)->r11,3892(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,3888(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
	// lwz ctx_arrow(ctx)->r11,3892(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,3888(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,128
	ctx_arrow(ctx)->r7.s64 = 128;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// lwz ctx_arrow(ctx)->r11,3896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r11,3884(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// lis ctx_arrow(ctx)->r19,-31994
	ctx_arrow(ctx)->r19.s64 = -2096758784;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r24.u64;
	// lis ctx_arrow(ctx)->r17,-32010
	ctx_arrow(ctx)->r17.s64 = -2097807360;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r20,-32010
	ctx_arrow(ctx)->r20.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r18,-32010
	ctx_arrow(ctx)->r18.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r25,-31991
	ctx_arrow(ctx)->r25.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r26,-31994
	ctx_arrow(ctx)->r26.s64 = -2096758784;
	// li ctx_arrow(ctx)->r21,-1
	ctx_arrow(ctx)->r21.s64 = -1;
loc_820FB864:
	// lwz ctx_arrow(ctx)->r8,3896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, 1, xer);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,1
	xer.ca = (ctx_arrow(ctx)->r8.s32 < 0) & ((ctx_arrow(ctx)->r8.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s32 >> 1;
	// bgt ctx_arrow(ctx)->r6,0x820fb878
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FB878;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FB878:
	// lwz ctx_arrow(ctx)->r11,3888(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u32 & 0x1;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,3892(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// bne ctx_arrow(ctx)->r6,0x820fb898
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB898;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FB898:
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,2
	xer.ca = (ctx_arrow(ctx)->r8.s32 < 0) & ((ctx_arrow(ctx)->r8.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s32 >> 2;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r11,3884(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, 0, xer);
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// bne ctx_arrow(ctx)->r6,0x820fb93c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB93C;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40024
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40024;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,5
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 5;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r10,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stw ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// stw ctx_arrow(ctx)->r24,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// stw ctx_arrow(ctx)->r24,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
loc_820FB93C:
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 5, xer);
	// bne ctx_arrow(ctx)->r6,0x820fba3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBA3C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fba58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBA58;
	// lwz ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r11.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fba58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBA58;
loc_820FB95C:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40026
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40026;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// ori ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,65535
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r27.u64 | 65535;
loc_820FB974:
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r23.s64 - ctx_arrow(ctx)->r10.s64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lwz ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fb9cc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FB9CC;
	// lwz ctx_arrow(ctx)->r11,4292(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 10, xer);
	// bge ctx_arrow(ctx)->r6,0x820fba94
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FBA94;
loc_820FB9CC:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// beq ctx_arrow(ctx)->r6,0x820fba74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBA74;
	// lbz ctx_arrow(ctx)->r11,-31(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-30(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-29(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8,16,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r21,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r24,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fba94
	goto loc_820FBA94;
loc_820FBA3C:
	// lwz ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r22.s64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fb95c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FB95C;
loc_820FBA58:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40025
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40025;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r27,-256
	ctx_arrow(ctx)->r27.s64 = -16777216;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// ori ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,255
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r27.u64 | 255;
	// b 0x820fb974
	goto loc_820FB974;
loc_820FBA74:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r21,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r24,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r24,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FBA94:
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x820fb864
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FB864;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-136(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed15c
	return;
}

alias(__imp__sub_820FBAB0) PPC_WEAK_FUNC(sub_820FBAB0);
PPC_FUNC_IMPL(__imp__sub_820FBAB0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed110
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.s64 = 1;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbadc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBADC;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r19,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r19.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x820fbae0
	goto loc_820FBAE0;
loc_820FBADC:
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r20.u64;
loc_820FBAE0:
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r23.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r19.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fbcb8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FBCB8;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r23.u64;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,-19444
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + -19444;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r26,-31994
	ctx_arrow(ctx)->r26.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,3936
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 3936;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r27,-31994
	ctx_arrow(ctx)->r27.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,3888
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 3888;
loc_820FBB24:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// bl 0x820ca110
	sub_820CA110(ctx, base);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbb70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBB70;
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbb70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBB70;
	// li ctx_arrow(ctx)->r8,8723
	ctx_arrow(ctx)->r8.s64 = 8723;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stwx ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r30.u32);
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_820FBB70:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbc98
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBC98;
	// li ctx_arrow(ctx)->r4,514
	ctx_arrow(ctx)->r4.s64 = 514;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbc44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBC44;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// bge ctx_arrow(ctx)->r6,0x820fbbb4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FBBB4;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbc44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBC44;
loc_820FBBB4:
	// li ctx_arrow(ctx)->r4,257
	ctx_arrow(ctx)->r4.s64 = 257;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbc2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBC2C;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fbbec
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FBBEC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbc2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBC2C;
loc_820FBBEC:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbc5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBC5C;
	// li ctx_arrow(ctx)->r8,8751
	ctx_arrow(ctx)->r8.s64 = 8751;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stwx ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r30.u32);
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x82144920
	sub_82144920(ctx, base);
	// b 0x820fbc5c
	goto loc_820FBC5C;
loc_820FBC2C:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r23.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 10, xer);
	// bge ctx_arrow(ctx)->r6,0x820fbc5c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FBC5C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// b 0x820fbc58
	goto loc_820FBC58;
loc_820FBC44:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r23.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fbc5c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FBC5C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
loc_820FBC58:
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r24.u32);
loc_820FBC5C:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbc94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBC94;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbc94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBC94;
	// stwx ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r22
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r22.u32);
	// b 0x820fbc98
	goto loc_820FBC98;
loc_820FBC94:
	// stwx ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r22
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r22.u32);
loc_820FBC98:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbca8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBCA8;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r18,1
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r18.s64 + 1;
loc_820FBCA8:
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r21.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r21.s32, ctx_arrow(ctx)->r19.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fbb24
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FBB24;
loc_820FBCB8:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbcec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBCEC;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r20,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FBCEC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,168(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbd0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBD0C;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r20,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_820FBD0C:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4216
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4216;
	// beq ctx_arrow(ctx)->r6,0x820fbd2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBD2C;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// b 0x820fbd30
	goto loc_820FBD30;
loc_820FBD2C:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
loc_820FBD30:
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r18.s32, ctx_arrow(ctx)->r19.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fbd44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBD44;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,300
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 300, xer);
	// ble ctx_arrow(ctx)->r6,0x820fbd5c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FBD5C;
loc_820FBD44:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_820FBD5C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed160
	return;
}

alias(__imp__sub_820FBD68) PPC_WEAK_FUNC(sub_820FBD68);
PPC_FUNC_IMPL(__imp__sub_820FBD68) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-288(ctx_arrow(ctx)->r1)
	ea = -288 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbd94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBD94;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r17,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r17.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x820fbd98
	goto loc_820FBD98;
loc_820FBD94:
	// li ctx_arrow(ctx)->r17,1
	ctx_arrow(ctx)->r17.s64 = 1;
loc_820FBD98:
	// bl 0x820f5898
	sub_820F5898(ctx, base);
	// li ctx_arrow(ctx)->r7,144
	ctx_arrow(ctx)->r7.s64 = 144;
	// li ctx_arrow(ctx)->r6,171
	ctx_arrow(ctx)->r6.s64 = 171;
	// li ctx_arrow(ctx)->r5,388
	ctx_arrow(ctx)->r5.s64 = 388;
	// li ctx_arrow(ctx)->r4,169
	ctx_arrow(ctx)->r4.s64 = 169;
	// li ctx_arrow(ctx)->r3,38
	ctx_arrow(ctx)->r3.s64 = 38;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r17.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x820fbdd4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FBDD4;
	// li ctx_arrow(ctx)->r7,128
	ctx_arrow(ctx)->r7.s64 = 128;
	// li ctx_arrow(ctx)->r6,310
	ctx_arrow(ctx)->r6.s64 = 310;
	// li ctx_arrow(ctx)->r5,214
	ctx_arrow(ctx)->r5.s64 = 214;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// li ctx_arrow(ctx)->r3,212
	ctx_arrow(ctx)->r3.s64 = 212;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FBDD4:
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r17.s32, 0, xer);
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r26.u64;
	// ble ctx_arrow(ctx)->r6,0x820fc00c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC00C;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-19524
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -19524;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,-19444
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + -19444;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f31,6580(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r20,-31994
	ctx_arrow(ctx)->r20.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,-17024
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + -17024;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r28,-31991
	ctx_arrow(ctx)->r28.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r29,-31994
	ctx_arrow(ctx)->r29.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,3888
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r11.s64 + 3888;
	// li ctx_arrow(ctx)->r23,-1
	ctx_arrow(ctx)->r23.s64 = -1;
loc_820FBE20:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r17.s32, 2, xer);
	// li ctx_arrow(ctx)->r11,140
	ctx_arrow(ctx)->r11.s64 = 140;
	// bgt ctx_arrow(ctx)->r6,0x820fbe44
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FBE44;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r18.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fbe38
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FBE38;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
loc_820FBE38:
	// li ctx_arrow(ctx)->r9,38
	ctx_arrow(ctx)->r9.s64 = 38;
	// li ctx_arrow(ctx)->r10,350
	ctx_arrow(ctx)->r10.s64 = 350;
	// b 0x820fbe68
	goto loc_820FBE68;
loc_820FBE44:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r18.s32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fbe50
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FBE50;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
loc_820FBE50:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r18,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r18.u32 & 0x1;
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 0;
	ctx_arrow(ctx)->r9.s64 = 0 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r10,175
	ctx_arrow(ctx)->r10.s64 = 175;
	// subfe ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 < ~ctx_arrow(ctx)->r9.u32) | (~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r9.u64 = ~ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r9.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,175
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & 175;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,38
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 38;
loc_820FBE68:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 30;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,70
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 70;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fbf14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FBF14;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40022
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40022;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -15;
	// stw ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r16.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// stw ctx_arrow(ctx)->r26,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r16.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
loc_820FBF14:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r21.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,140(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 15;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// beq ctx_arrow(ctx)->r6,0x820fbfdc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FBFDC;
	// lbz ctx_arrow(ctx)->r10,-31(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,-30(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-29(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,8,16,23
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// stw ctx_arrow(ctx)->r23,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// stw ctx_arrow(ctx)->r26,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r26,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fbffc
	goto loc_820FBFFC;
loc_820FBFDC:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r23,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// stw ctx_arrow(ctx)->r26,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FBFFC:
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r18,1
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r18.s64 + 1;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r24,4
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r24.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r18.s32, ctx_arrow(ctx)->r17.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fbe20
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FBE20;
loc_820FC00C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_820FC018) PPC_WEAK_FUNC(sub_820FC018);
PPC_FUNC_IMPL(__imp__sub_820FC018) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stfd f29,-176(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -176);
	// stfd f30,-168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -168);
	// stfd f31,-160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -160);
	// stwu ctx_arrow(ctx)->r1,-272(ctx_arrow(ctx)->r1)
	ea = -272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r18,1
	ctx_arrow(ctx)->r18.s64 = 1;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc050
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC050;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r14,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r14.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x820fc054
	goto loc_820FC054;
loc_820FC050:
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r18.u64;
loc_820FC054:
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r18.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r24.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r14.s32, 0, xer);
	// stw ctx_arrow(ctx)->r24,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// ble ctx_arrow(ctx)->r6,0x820fc58c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC58C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r16,-32141
	ctx_arrow(ctx)->r16.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,3936
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r11.s64 + 3936;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r17,-32141
	ctx_arrow(ctx)->r17.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,3628
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + 3628;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r20,-31994
	ctx_arrow(ctx)->r20.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r21,-31994
	ctx_arrow(ctx)->r21.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,3888
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 3888;
	// lis ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// ori ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r11.u64 | 32768;
loc_820FC0A4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ca110
	sub_820CA110(ctx, base);
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27,2,0,29
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc0f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC0F4;
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc0f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC0F4;
	// li ctx_arrow(ctx)->r8,8936
	ctx_arrow(ctx)->r8.s64 = 8936;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stwx ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + ctx_arrow(ctx)->r26.u32);
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FC0F4:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc568
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC568;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a0248
	sub_820A0248(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f30,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f1.f64;
	// bl 0x820a02c8
	sub_820A02C8(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f29,f1
	ctx.fpscr.disableFlushMode();
	f29.f64 = ctx.f1.f64;
	// bl 0x820a0148
	sub_820A0148(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x820a01c8
	sub_820A01C8(ctx, base);
	// lfs f0,-14484(ctx_arrow(ctx)->r17)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fneg f13,f0
	ctx.f13.u64 = f0.u64 ^ 0x8000000000000000;
	// fcmpu ctx_arrow(ctx)->r6,f31,f13
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x820fc14c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FC14C;
	// fcmpu ctx_arrow(ctx)->r6,f1,f13
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x820fc14c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC14C;
	// li ctx_arrow(ctx)->r30,-2
	ctx_arrow(ctx)->r30.s64 = -2;
	// b 0x820fc164
	goto loc_820FC164;
loc_820FC14C:
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x820fc160
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC160;
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r18.u64;
	// blt ctx_arrow(ctx)->r6,0x820fc164
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC164;
loc_820FC160:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FC164:
	// lfs f0,-14480(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fneg f13,f0
	ctx.f13.u64 = f0.u64 ^ 0x8000000000000000;
	// fcmpu ctx_arrow(ctx)->r6,f30,f13
	ctx_arrow(ctx)->r6.compare(f30.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x820fc184
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FC184;
	// fcmpu ctx_arrow(ctx)->r6,f29,f13
	ctx_arrow(ctx)->r6.compare(f29.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x820fc184
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC184;
	// li ctx_arrow(ctx)->r31,-2
	ctx_arrow(ctx)->r31.s64 = -2;
	// b 0x820fc19c
	goto loc_820FC19C;
loc_820FC184:
	// fcmpu ctx_arrow(ctx)->r6,f30,f0
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f30.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x820fc198
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC198;
	// fcmpu ctx_arrow(ctx)->r6,f29,f0
	ctx_arrow(ctx)->r6.compare(f29.f64, f0.f64);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r18.u64;
	// blt ctx_arrow(ctx)->r6,0x820fc19c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC19C;
loc_820FC198:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FC19C:
	// li ctx_arrow(ctx)->r4,2056
	ctx_arrow(ctx)->r4.s64 = 2056;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc49c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC49C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fc49c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FC49C;
	// li ctx_arrow(ctx)->r4,1028
	ctx_arrow(ctx)->r4.s64 = 1028;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc484
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC484;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, -1, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc484
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC484;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc21c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC21C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r15.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// li ctx_arrow(ctx)->r8,8979
	ctx_arrow(ctx)->r8.s64 = 8979;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stwx ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + ctx_arrow(ctx)->r26.u32);
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// b 0x820fc4b4
	goto loc_820FC4B4;
loc_820FC21C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc26c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC26C;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,33539
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 33539;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc248
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC248;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, -1, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc248
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC248;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC4B4;
loc_820FC248:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x820c2c28
	sub_820C2C28(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x820c2c80
	sub_820C2C80(ctx, base);
	// b 0x820fc4b4
	goto loc_820FC4B4;
loc_820FC26C:
	// li ctx_arrow(ctx)->r4,514
	ctx_arrow(ctx)->r4.s64 = 514;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc360
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, -1, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc360
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC360;
	// li ctx_arrow(ctx)->r4,257
	ctx_arrow(ctx)->r4.s64 = 257;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc304
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC304;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fc304
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FC304;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r15.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc2d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC2D4;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x820fc2d8
	goto loc_820FC2D8;
loc_820FC2D4:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FC2D8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// addze ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	temp.s64 = ctx_arrow(ctx)->r10.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r10.u32;
	ctx_arrow(ctx)->r10.s64 = temp.s64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
	// b 0x820fc4b4
	goto loc_820FC4B4;
loc_820FC304:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc324
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC324;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 3, xer);
	// bge ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FC4B4;
loc_820FC324:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc340
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC340;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x820fc344
	goto loc_820FC344;
loc_820FC340:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FC344:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
	// b 0x820fc4b4
	goto loc_820FC4B4;
loc_820FC360:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC4B4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r14.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc3d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC3D8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc3d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC3D8;
	// bl 0x8209fe50
	sub_8209FE50(ctx, base);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc3d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC3D8;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc3d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC3D8;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc3d8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC3D8;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// ble ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC4B4;
loc_820FC3D8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc3f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC3F4;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x820fc3f8
	goto loc_820FC3F8;
loc_820FC3F4:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FC3F8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc410
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC410;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + -1;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
loc_820FC410:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r14.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC4B4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC4B4;
	// bl 0x8209fe50
	sub_8209FE50(ctx, base);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC4B4;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc44c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC44C;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// bge ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FC4B4;
loc_820FC44C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC4B4;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4B4;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
	// b 0x820fc4b4
	goto loc_820FC4B4;
loc_820FC484:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bge ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FC4B4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// b 0x820fc4b0
	goto loc_820FC4B0;
loc_820FC49C:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fc4b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC4B4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
loc_820FC4B0:
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + ctx_arrow(ctx)->r23.u32);
loc_820FC4B4:
	// bl 0x8209fe50
	sub_8209FE50(&ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc52c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC52C;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4F8;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc4f8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC4F8;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc4f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC4F8;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
loc_820FC4F8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc52c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC52C;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc52c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC52C;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc52c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC52C;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
loc_820FC52C:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc564
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC564;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc564
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC564;
	// stwx ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r19
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + ctx_arrow(ctx)->r19.u32);
	// b 0x820fc568
	goto loc_820FC568;
loc_820FC564:
	// stwx ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r19
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + ctx_arrow(ctx)->r19.u32);
loc_820FC568:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc580
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC580;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
loc_820FC580:
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, ctx_arrow(ctx)->r14.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc0a4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC0A4;
loc_820FC58C:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc5c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC5C0;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r18,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FC5C0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,168(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc5e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC5E0;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r18,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_820FC5E0:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4216
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4216;
	// beq ctx_arrow(ctx)->r6,0x820fc600
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC600;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// b 0x820fc604
	goto loc_820FC604;
loc_820FC600:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FC604:
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r14.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc61c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC61C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,300
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 300, xer);
	// ble ctx_arrow(ctx)->r6,0x820fc634
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC634;
loc_820FC61C:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r18.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_820FC634:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// lfd f29,-176(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-168(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-160(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed150
	return;
}

alias(__imp__sub_820FC648) PPC_WEAK_FUNC(sub_820FC648);
PPC_FUNC_IMPL(__imp__sub_820FC648) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-320(ctx_arrow(ctx)->r1)
	ea = -320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc674
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC674;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r16,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x820fc678
	goto loc_820FC678;
loc_820FC674:
	// li ctx_arrow(ctx)->r16,1
	ctx_arrow(ctx)->r16.s64 = 1;
loc_820FC678:
	// bl 0x820f5898
	sub_820F5898(ctx, base);
	// li ctx_arrow(ctx)->r7,144
	ctx_arrow(ctx)->r7.s64 = 144;
	// li ctx_arrow(ctx)->r6,171
	ctx_arrow(ctx)->r6.s64 = 171;
	// li ctx_arrow(ctx)->r5,388
	ctx_arrow(ctx)->r5.s64 = 388;
	// li ctx_arrow(ctx)->r4,169
	ctx_arrow(ctx)->r4.s64 = 169;
	// li ctx_arrow(ctx)->r3,38
	ctx_arrow(ctx)->r3.s64 = 38;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r16.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x820fc6b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FC6B4;
	// li ctx_arrow(ctx)->r7,128
	ctx_arrow(ctx)->r7.s64 = 128;
	// li ctx_arrow(ctx)->r6,310
	ctx_arrow(ctx)->r6.s64 = 310;
	// li ctx_arrow(ctx)->r5,214
	ctx_arrow(ctx)->r5.s64 = 214;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// li ctx_arrow(ctx)->r3,212
	ctx_arrow(ctx)->r3.s64 = 212;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FC6B4:
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r16.s32, 0, xer);
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r27.u64;
	// ble ctx_arrow(ctx)->r6,0x820fcb2c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FCB2C;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,-19524
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + -19524;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,3628
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 3628;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f31,6580(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r18,-31994
	ctx_arrow(ctx)->r18.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,-16936
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + -16936;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r31,-31994
	ctx_arrow(ctx)->r31.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,3888
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r11.s64 + 3888;
	// li ctx_arrow(ctx)->r21,-1
	ctx_arrow(ctx)->r21.s64 = -1;
loc_820FC700:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r16.s32, 2, xer);
	// li ctx_arrow(ctx)->r11,140
	ctx_arrow(ctx)->r11.s64 = 140;
	// bgt ctx_arrow(ctx)->r6,0x820fc724
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FC724;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r17.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fc718
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FC718;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
loc_820FC718:
	// li ctx_arrow(ctx)->r9,38
	ctx_arrow(ctx)->r9.s64 = 38;
	// li ctx_arrow(ctx)->r10,350
	ctx_arrow(ctx)->r10.s64 = 350;
	// b 0x820fc748
	goto loc_820FC748;
loc_820FC724:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r17.s32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fc730
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FC730;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
loc_820FC730:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u32 & 0x1;
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 0;
	ctx_arrow(ctx)->r9.s64 = 0 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r10,175
	ctx_arrow(ctx)->r10.s64 = 175;
	// subfe ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 < ~ctx_arrow(ctx)->r9.u32) | (~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r9.u64 = ~ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r9.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,175
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & 175;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,38
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 38;
loc_820FC748:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 30;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,70
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 70;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc7f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC7F4;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40221
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40221;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,132(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r11,140(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -15;
	// stw ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// stw ctx_arrow(ctx)->r27,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
loc_820FC7F4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r17.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fc80c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC80C;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// b 0x820fc810
	goto loc_820FC810;
loc_820FC80C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
loc_820FC810:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r20.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,148
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 148;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r9,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,1
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s32 >> 1;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r26.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 - ctx_arrow(ctx)->r11.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 15;
	// stw ctx_arrow(ctx)->r10,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x820fc898
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC898;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc898
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC898;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FC898:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// beq ctx_arrow(ctx)->r6,0x820fc908
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC908;
	// lbz ctx_arrow(ctx)->r11,-31(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-30(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-29(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8,16,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r21,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r27,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fc928
	goto loc_820FC928;
loc_820FC908:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r21,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r27,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FC928:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r17.u64;
	// bl 0x820c2c28
	sub_820C2C28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// beq ctx_arrow(ctx)->r6,0x820fc944
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FC944;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40268
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40268;
	// b 0x820fc948
	goto loc_820FC948;
loc_820FC944:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40269
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40269;
loc_820FC948:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,156
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 156;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r9,152(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,156(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,1
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s32 >> 1;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r26.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 - ctx_arrow(ctx)->r11.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 1, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,35
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 35;
	// stw ctx_arrow(ctx)->r10,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stw ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// bne ctx_arrow(ctx)->r6,0x820fc9c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC9C8;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fc9c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FC9C8;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FC9C8:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// beq ctx_arrow(ctx)->r6,0x820fca38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCA38;
	// lbz ctx_arrow(ctx)->r11,-31(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-30(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-29(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8,16,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r21,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r27,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fca58
	goto loc_820FCA58;
loc_820FCA38:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r21,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r27,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FCA58:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fcb1c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FCB1C;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40294
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40294;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,164
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 164;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r9,160(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,164(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,1
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s32 >> 1;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r26.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 - ctx_arrow(ctx)->r11.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 2, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,55
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 55;
	// stw ctx_arrow(ctx)->r10,172(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 172);
	// stw ctx_arrow(ctx)->r11,168(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// bne ctx_arrow(ctx)->r6,0x820fcae0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FCAE0;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FCAE0:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,172
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 172;
	// stw ctx_arrow(ctx)->r27,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
loc_820FCB1C:
	// addi ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r17,1
	ctx_arrow(ctx)->r17.s64 = ctx_arrow(ctx)->r17.s64 + 1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,4
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r17.s32, ctx_arrow(ctx)->r16.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fc700
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FC700;
loc_820FCB2C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_820FCB38) PPC_WEAK_FUNC(sub_820FCB38);
PPC_FUNC_IMPL(__imp__sub_820FCB38) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r21,-32010
	ctx_arrow(ctx)->r21.s64 = -2097807360;
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4284(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 4284);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,4152(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4152);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r10,3544
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r10.s64 + 3544;
loc_820FCB6C:
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fcb88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FCB88;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,81
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 81, xer);
	// blt ctx_arrow(ctx)->r6,0x820fcb6c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FCB6C;
	// b 0x820fcb8c
	goto loc_820FCB8C;
loc_820FCB88:
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FCB8C:
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,2888
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + 2888;
	// bne ctx_arrow(ctx)->r6,0x820fcd54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FCD54;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r26.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4000);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4004);
	// stw ctx_arrow(ctx)->r11,4280(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4280);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f10,24796(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f12,24800(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-19588(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f0,-19584(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// beq ctx_arrow(ctx)->r6,0x820fcc2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCC2C;
	// fcmpu ctx_arrow(ctx)->r6,f11,f12
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x820fcc48
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FCC48;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24804(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x820fcc2c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FCC2C;
	// fcmpu ctx_arrow(ctx)->r6,f0,f10
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x820fcc2c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FCC2C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4004);
	// b 0x820fcd54
	goto loc_820FCD54;
loc_820FCC2C:
	// fcmpu ctx_arrow(ctx)->r6,f11,f12
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x820fcc48
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FCC48;
	// fcmpu ctx_arrow(ctx)->r6,f0,f10
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f10.f64);
	// ble ctx_arrow(ctx)->r6,0x820fcc48
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FCC48;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// b 0x820fcd54
	goto loc_820FCD54;
loc_820FCC48:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4276(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// ble ctx_arrow(ctx)->r6,0x820fccf0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FCCF0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f13,f11
	ctx.fpscr.disableFlushMode();
	ctx.f13.s64 = (ctx.f11.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f11.f64));
	// stfiwx f13,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,220
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 220, xer);
	// blt ctx_arrow(ctx)->r6,0x820fcce8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FCCE8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-13
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -13;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x820fcce8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FCCE8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r23,48
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r23.s64 + 48;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,53
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 53;
loc_820FCC98:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 23, xer);
	// beq ctx_arrow(ctx)->r6,0x820fccbc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCCBC;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f13,f0
	ctx.fpscr.disableFlushMode();
	ctx.f13.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f13,0,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32);
	// lwz ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fccd8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FCCD8;
loc_820FCCBC:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-20
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -20;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x820fcc98
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FCC98;
	// li ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r11.s64 = 11;
	// b 0x820fccfc
	goto loc_820FCCFC;
loc_820FCCD8:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,4280(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4280);
	// bne ctx_arrow(ctx)->r6,0x820fcd54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FCD54;
loc_820FCCE8:
	// li ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r11.s64 = 11;
	// b 0x820fccfc
	goto loc_820FCCFC;
loc_820FCCF0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x820fcd54
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FCD54;
loc_820FCCFC:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r23.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,53
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 53;
loc_820FCD14:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 23, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcd38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCD38;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f13,f0
	ctx.fpscr.disableFlushMode();
	ctx.f13.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f13,0,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32);
	// lwz ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fcd50
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FCD50;
loc_820FCD38:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-20
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -20;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x820fcd14
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FCD14;
	// b 0x820fcd54
	goto loc_820FCD54;
loc_820FCD50:
	// stw ctx_arrow(ctx)->r11,4280(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4280);
loc_820FCD54:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r29,-32010
	ctx_arrow(ctx)->r29.s64 = -2097807360;
	// beq ctx_arrow(ctx)->r6,0x820fcdc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCDC8;
	// lwz ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcd8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCD8C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,3992(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 3992);
	// b 0x820fcda8
	goto loc_820FCDA8;
loc_820FCD8C:
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// beq ctx_arrow(ctx)->r6,0x820fcda4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCDA4;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 3996);
	// b 0x820fcda8
	goto loc_820FCDA8;
loc_820FCDA4:
	// stw ctx_arrow(ctx)->r11,4284(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 4284);
loc_820FCDA8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,9708
	ctx_arrow(ctx)->r8.s64 = 9708;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x820fce48
	goto loc_820FCE48;
loc_820FCDC8:
	// li ctx_arrow(ctx)->r4,4096
	ctx_arrow(ctx)->r4.s64 = 4096;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fce10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCE10;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fce10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCE10;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,9713
	ctx_arrow(ctx)->r8.s64 = 9713;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,3992(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 3992);
	// b 0x820fce48
	goto loc_820FCE48;
loc_820FCE10:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fce54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCE54;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,9718
	ctx_arrow(ctx)->r8.s64 = 9718;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 3996);
loc_820FCE48:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_820FCE54:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fce88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCE88;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FCE88:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,168(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fceac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCEAC;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FCEAC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcecc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCECC;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_820FCECC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// lwz ctx_arrow(ctx)->r11,3992(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcf58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCF58;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40353
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40353;
	// lwz ctx_arrow(ctx)->r11,-15584(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-15564(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfs f1,2780(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = 8;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfs f0,-19568(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19568);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// frsp f0,f13
	f0.f64 = double(float(ctx.f13.f64));
	// stfs f0,-19564(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19564);
	// bl 0x8209dbd8
	sub_8209DBD8(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_820FCF58:
	// lwz ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcf8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCF8C;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
	// bl 0x820ee118
	sub_820EE118(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_820FCF8C:
	// lwz ctx_arrow(ctx)->r11,4284(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcff0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCFF0;
	// lwz ctx_arrow(ctx)->r11,4280(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,26
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 26, xer);
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 1;
	ctx_arrow(ctx)->r10.s64 = 1 - ctx_arrow(ctx)->r10.s64;
	// stbx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r22.u32));
	// bne ctx_arrow(ctx)->r6,0x820fcfd4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FCFD4;
	// lbz ctx_arrow(ctx)->r11,26(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcff0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCFF0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,27(ctx_arrow(ctx)->r22)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r22.u32 + 27, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_820FCFD4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 27, xer);
	// bne ctx_arrow(ctx)->r6,0x820fcff0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FCFF0;
	// lbz ctx_arrow(ctx)->r11,27(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fcff0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FCFF0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,26(ctx_arrow(ctx)->r22)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r22.u32 + 26, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_820FCFF0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_820FCFF8) PPC_WEAK_FUNC(sub_820FCFF8);
PPC_FUNC_IMPL(__imp__sub_820FCFF8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stfd f31,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -160);
	// stwu ctx_arrow(ctx)->r1,-288(ctx_arrow(ctx)->r1)
	ea = -288 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11,2888
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r11.s64 + 2888;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-19524
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -19524;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f31,6580(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r18.u64;
	// li ctx_arrow(ctx)->r23,53
	ctx_arrow(ctx)->r23.s64 = 53;
	// lis ctx_arrow(ctx)->r15,-31994
	ctx_arrow(ctx)->r15.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r11,3544
	ctx_arrow(ctx)->r17.s64 = ctx_arrow(ctx)->r11.s64 + 3544;
	// lis ctx_arrow(ctx)->r16,-32010
	ctx_arrow(ctx)->r16.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r29,-31991
	ctx_arrow(ctx)->r29.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r30,-31994
	ctx_arrow(ctx)->r30.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r14,-32010
	ctx_arrow(ctx)->r14.s64 = -2097807360;
	// li ctx_arrow(ctx)->r20,55
	ctx_arrow(ctx)->r20.s64 = 55;
	// li ctx_arrow(ctx)->r24,-1
	ctx_arrow(ctx)->r24.s64 = -1;
	// li ctx_arrow(ctx)->r19,179
	ctx_arrow(ctx)->r19.s64 = 179;
loc_820FD05C:
	// lwz ctx_arrow(ctx)->r10,4276(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = 12;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 12, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fd070
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FD070;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
loc_820FD070:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r21.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fd2a0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FD2A0;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r25,255
	ctx_arrow(ctx)->r25.s64 = 255;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 23, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd08c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD08C;
	// li ctx_arrow(ctx)->r25,112
	ctx_arrow(ctx)->r25.s64 = 112;
loc_820FD08C:
	// bl 0x82136f70
	sub_82136F70(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4280(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r20,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r23,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r21.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd0fc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD0FC;
	// bl 0x820ed138
	sub_820ED138(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd0fc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD0FC;
	// bl 0x820ed178
	sub_820ED178(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd0fc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD0FC;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r23.s64 + -1;
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// li ctx_arrow(ctx)->r3,53
	ctx_arrow(ctx)->r3.s64 = 53;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r4.s64 + 15;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FD0FC:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// beq ctx_arrow(ctx)->r6,0x820fd16c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD16C;
	// lbz ctx_arrow(ctx)->r11,-31(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-30(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-29(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8,16,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r24,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r28,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fd18c
	goto loc_820FD18C;
loc_820FD16C:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FD18C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd1a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD1A8;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40051
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40051;
	// b 0x820fd1ac
	goto loc_820FD1AC;
loc_820FD1A8:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40052
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40052;
loc_820FD1AC:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r23,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd1f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD1F4;
	// lis ctx_arrow(ctx)->r25,-24576
	ctx_arrow(ctx)->r25.s64 = -1610612736;
	// ori ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,255
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r25.u64 | 255;
loc_820FD1F4:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// beq ctx_arrow(ctx)->r6,0x820fd270
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD270;
	// lbz ctx_arrow(ctx)->r11,-31(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-30(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-29(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8,16,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r24,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r28,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r21.s64 + 1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,20
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 20;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// b 0x820fd05c
	goto loc_820FD05C;
loc_820FD270:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r21.s64 + 1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,20
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 20;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// b 0x820fd05c
	goto loc_820FD05C;
loc_820FD2A0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 12, xer);
	// ble ctx_arrow(ctx)->r6,0x820fd4e4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FD4E4;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-12
	xer.ca = ctx_arrow(ctx)->r10.u32 > 11;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -12;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r28.u64;
	// ble 0x820fd4e4
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_820FD4E4;
	// li ctx_arrow(ctx)->r23,53
	ctx_arrow(ctx)->r23.s64 = 53;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r18,48
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r18.s64 + 48;
	// li ctx_arrow(ctx)->r20,220
	ctx_arrow(ctx)->r20.s64 = 220;
	// li ctx_arrow(ctx)->r19,344
	ctx_arrow(ctx)->r19.s64 = 344;
loc_820FD2C4:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r25,255
	ctx_arrow(ctx)->r25.s64 = 255;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 23, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd2d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD2D8;
	// li ctx_arrow(ctx)->r25,112
	ctx_arrow(ctx)->r25.s64 = 112;
loc_820FD2D8:
	// bl 0x82136f70
	sub_82136F70(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4280(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r21.s64 + 12;
	// stw ctx_arrow(ctx)->r20,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r23,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd340
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD340;
	// bl 0x820ed138
	sub_820ED138(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd340
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD340;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r23.s64 + -1;
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,225
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 225;
	// li ctx_arrow(ctx)->r3,218
	ctx_arrow(ctx)->r3.s64 = 218;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r4.s64 + 15;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FD340:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// beq ctx_arrow(ctx)->r6,0x820fd3b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD3B0;
	// lbz ctx_arrow(ctx)->r11,-31(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-30(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-29(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8,16,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r24,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r28,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fd3d0
	goto loc_820FD3D0;
loc_820FD3B0:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FD3D0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd3ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD3EC;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40051
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40051;
	// b 0x820fd3f0
	goto loc_820FD3F0;
loc_820FD3EC:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40052
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40052;
loc_820FD3F0:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r23,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd438
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD438;
	// lis ctx_arrow(ctx)->r25,-24576
	ctx_arrow(ctx)->r25.s64 = -1610612736;
	// ori ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,255
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r25.u64 | 255;
loc_820FD438:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// beq ctx_arrow(ctx)->r6,0x820fd4a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD4A8;
	// lbz ctx_arrow(ctx)->r11,-31(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,-30(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-29(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8,16,23
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r24,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF000000FF);
	// stw ctx_arrow(ctx)->r28,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFFFFFF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF000000FF);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e398
	sub_8213E398(ctx, base);
	// b 0x820fd4c8
	goto loc_820FD4C8;
loc_820FD4A8:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
loc_820FD4C8:
	// lwz ctx_arrow(ctx)->r11,4276(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r21.s64 + 1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,20
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 20;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -12;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r21.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fd2c4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FD2C4;
loc_820FD4E4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_820FD4E8:
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd514
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD514;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,81
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 81, xer);
	// blt ctx_arrow(ctx)->r6,0x820fd4e8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FD4E8;
	// bl 0x820ec830
	sub_820EC830(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed150
	return;
loc_820FD514:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x820eae68
	sub_820EAE68(ctx, base);
	// bl 0x820ec830
	sub_820EC830(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed150
	return;
}

alias(__imp__sub_820FD530) PPC_WEAK_FUNC(sub_820FD530);
PPC_FUNC_IMPL(__imp__sub_820FD530) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,16060(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8210e310
	sub_8210E310(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,17960(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,13964(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8210e3a0
	sub_8210E3A0(ctx, base);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x8210e300
	sub_8210E300(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,14124(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8210e350
	sub_8210E350(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x820c9c00
	sub_820C9C00(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x8210e1a8
	sub_8210E1A8(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820c9c18
	sub_820C9C18(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8210e228
	sub_8210E228(ctx, base);
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r10,3984(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,-6384(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,90
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 90, xer);
	// stw ctx_arrow(ctx)->r11,3984(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 3984);
	// ble ctx_arrow(ctx)->r6,0x820fd5c8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FD5C8;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820997d0
	sub_820997D0(ctx, base);
loc_820FD5C8:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r4,-1
	ctx_arrow(ctx)->r4.s64 = -1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r25,-32141
	ctx_arrow(ctx)->r25.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r23,-32010
	ctx_arrow(ctx)->r23.s64 = -2097807360;
	// beq ctx_arrow(ctx)->r6,0x820fd664
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD664;
	// lwz ctx_arrow(ctx)->r11,4204(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd628
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD628;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4116);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4120);
	// li ctx_arrow(ctx)->r11,33
	ctx_arrow(ctx)->r11.s64 = 33;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19616);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4204(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 4204);
	// stw ctx_arrow(ctx)->r11,4200(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4200);
	// b 0x820fd664
	goto loc_820FD664;
loc_820FD628:
	// lwz ctx_arrow(ctx)->r11,4200(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd644
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD644;
	// li ctx_arrow(ctx)->r11,180
	ctx_arrow(ctx)->r11.s64 = 180;
	// stw ctx_arrow(ctx)->r11,3984(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 3984);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
loc_820FD644:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4116);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4120);
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19616);
	// bl 0x820ee118
	sub_820EE118(&ctx);
loc_820FD664:
	// lwz ctx_arrow(ctx)->r11,3984(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,180
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 180, xer);
	// ble ctx_arrow(ctx)->r6,0x820fd908
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FD908;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,-16736
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r10.s64 + -16736;
	// lis ctx_arrow(ctx)->r10,-11849
	ctx_arrow(ctx)->r10.s64 = -776536064;
	// ori ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,5977
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r10.u64 | 5977;
loc_820FD684:
	// lwz ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FD688:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r28.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4176);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd6b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD6B8;
	// lwz ctx_arrow(ctx)->r9,4200(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD688;
loc_820FD6B8:
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,39
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 39, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd6d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD6D4;
	// bl 0x820ea218
	sub_820EA218(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD688;
loc_820FD6D4:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,40
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 40, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd6fc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD6FC;
	// bl 0x820ea218
	sub_820EA218(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD688;
loc_820FD6FC:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 14, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd74c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD74C;
	// bl 0x820ea218
	sub_820EA218(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd748
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD748;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r29.u32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,19,13,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 19) & 0x7FFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10000
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 10000;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x820fd684
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_820FD684;
loc_820FD748:
	// lwz ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FD74C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 13, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd79c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD79C;
	// bl 0x820ea218
	sub_820EA218(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd798
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD798;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r29.u32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,19,13,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 19) & 0x7FFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10000
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 10000;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x820fd684
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_820FD684;
loc_820FD798:
	// lwz ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FD79C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,15
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 15, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd7ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD7EC;
	// bl 0x820ea278
	sub_820EA278(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd7e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD7E8;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r29.u32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,19,13,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 19) & 0x7FFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10000
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 10000;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x820fd684
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_820FD684;
loc_820FD7E8:
	// lwz ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FD7EC:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 12, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd83c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD83C;
	// bl 0x820ea278
	sub_820EA278(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd838
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD838;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r29.u32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,19,13,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 19) & 0x7FFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10000
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 10000;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x820fd684
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_820FD684;
loc_820FD838:
	// lwz ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FD83C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x820fd894
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FD894;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4176);
loc_820FD85C:
	// lwz ctx_arrow(ctx)->r11,4204(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd8bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD8BC;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4116);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4120);
	// li ctx_arrow(ctx)->r11,33
	ctx_arrow(ctx)->r11.s64 = 33;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19616);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4204(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 4204);
	// stw ctx_arrow(ctx)->r11,4200(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4200);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
loc_820FD894:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fd85c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FD85C;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4116);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4120);
	// li ctx_arrow(ctx)->r11,25
	ctx_arrow(ctx)->r11.s64 = 25;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19616);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
loc_820FD8BC:
	// lwz ctx_arrow(ctx)->r11,4200(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4116);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4120);
	// beq ctx_arrow(ctx)->r6,0x820fd8f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD8F8;
	// li ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = 8;
	// li ctx_arrow(ctx)->r3,17
	ctx_arrow(ctx)->r3.s64 = 17;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19616);
	// bl 0x820f0c30
	sub_820F0C30(&ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4200(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4200);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
loc_820FD8F8:
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19616);
	// bl 0x820ee118
	sub_820EE118(&ctx);
loc_820FD908:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
}

alias(__imp__sub_820FD910) PPC_WEAK_FUNC(sub_820FD910);
PPC_FUNC_IMPL(__imp__sub_820FD910) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f23{};
	PPCRegister f24{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-152
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -152;
	// bl 0x823ed534
	// stwu ctx_arrow(ctx)->r1,-496(ctx_arrow(ctx)->r1)
	ea = -496 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r5,-32256
	ctx_arrow(ctx)->r5.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,-15564
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + -15564;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r6,-32256
	ctx_arrow(ctx)->r6.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r7,-32256
	ctx_arrow(ctx)->r7.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// lfs f29,2688(ctx_arrow(ctx)->r5)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// stw ctx_arrow(ctx)->r20,152(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r11,-15584
	ctx_arrow(ctx)->r14.s64 = ctx_arrow(ctx)->r11.s64 + -15584;
	// lfs f27,25408(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// lfs f28,25404(ctx_arrow(ctx)->r7)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f25,25400(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f25.f64 = double(temp.f32);
	// lfs f26,25396(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f26.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f31,2776(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r20.u64;
	// lis ctx_arrow(ctx)->r15,-32010
	ctx_arrow(ctx)->r15.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r25,-32141
	ctx_arrow(ctx)->r25.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r26,-32141
	ctx_arrow(ctx)->r26.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,-19088
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + -19088;
	// li ctx_arrow(ctx)->r21,-1
	ctx_arrow(ctx)->r21.s64 = -1;
	// li ctx_arrow(ctx)->r23,1
	ctx_arrow(ctx)->r23.s64 = 1;
	// li ctx_arrow(ctx)->r24,2
	ctx_arrow(ctx)->r24.s64 = 2;
loc_820FD998:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r14.u64;
loc_820FD9A0:
	// lhz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r22.u32 + 4);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd9dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD9DC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_820FD9B4:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,20
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r22.s64 + 20;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r29.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fd9e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FD9E0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 * 28;
	// lhzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fd9b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FD9B4;
loc_820FD9DC:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r21.u64;
loc_820FD9E0:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 * 28;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r22.s64 + 8;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdaac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDAAC;
	// bl 0x82115958
	sub_82115958(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820eb6f8
	sub_820EB6F8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x820fda28
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDA28;
	// lwz ctx_arrow(ctx)->r11,2804(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r29.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fda20
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FDA20;
	// fmr f30,f31
	ctx.fpscr.disableFlushMode();
	f30.f64 = f31.f64;
	// b 0x820fda2c
	goto loc_820FDA2C;
loc_820FDA20:
	// fmr f30,f26
	ctx.fpscr.disableFlushMode();
	f30.f64 = f26.f64;
	// b 0x820fda2c
	goto loc_820FDA2C;
loc_820FDA28:
	// fmr f30,f25
	ctx.fpscr.disableFlushMode();
	f30.f64 = f25.f64;
loc_820FDA2C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,-14476(ctx_arrow(ctx)->r26)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f13,-14472(ctx_arrow(ctx)->r25)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// std ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfd f12,144(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,136(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// lfd f11,136(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fmadds f24,f0,f28,f12
	f24.f64 = double(float(f0.f64 * f28.f64 + ctx.f12.f64));
	// fmadds f23,f13,f27,f11
	f23.f64 = double(float(ctx.f13.f64 * f27.f64 + ctx.f11.f64));
	// bl 0x821463f0
	sub_821463F0(ctx, base);
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// stw ctx_arrow(ctx)->r23,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// stw ctx_arrow(ctx)->r24,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// fmr f3,f30
	ctx.f3.f64 = f30.f64;
	// fmr f4,f31
	ctx.f4.f64 = f31.f64;
	// fmr f5,f23
	ctx.f5.f64 = f23.f64;
	// fmr f6,f24
	ctx.f6.f64 = f24.f64;
	// fmr f7,f31
	ctx.f7.f64 = f31.f64;
	// fmr f8,f29
	ctx.f8.f64 = f29.f64;
	// fmr f9,f29
	ctx.f9.f64 = f29.f64;
	// fmr f10,f31
	ctx.f10.f64 = f31.f64;
	// fmr f11,f31
	ctx.f11.f64 = f31.f64;
	// bl 0x82099530
	sub_82099530(ctx, base);
loc_820FDAAC:
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r14,20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r14.s64 + 20;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fd9a0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FD9A0;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r20.s64 + 16;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fd998
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FD998;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,15972
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 15972;
	// lis ctx_arrow(ctx)->r11,-26986
	ctx_arrow(ctx)->r11.s64 = -1768554496;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r31.u64;
	// ori ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,38400
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r11.u64 | 38400;
	// lis ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lfs f31,6580(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r14.u64;
	// lis ctx_arrow(ctx)->r28,-31991
	ctx_arrow(ctx)->r28.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r29,-31994
	ctx_arrow(ctx)->r29.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r17,-31994
	ctx_arrow(ctx)->r17.s64 = -2096758784;
	// li ctx_arrow(ctx)->r16,-256
	ctx_arrow(ctx)->r16.s64 = -256;
	// ori ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,65504
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r11.u64 | 65504;
loc_820FDB0C:
	// lwz ctx_arrow(ctx)->r26,152(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r18.u64;
loc_820FDB14:
	// lhz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r22.u32 + 4);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fdb50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FDB50;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_820FDB28:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,20
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r22.s64 + 20;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r23.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fdd44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FDD44;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 * 28;
	// lhzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fdb28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FDB28;
loc_820FDB50:
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r21.u64;
loc_820FDB54:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820eb6f8
	sub_820EB6F8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdd00
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDD00;
	// lwz ctx_arrow(ctx)->r11,2804(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r19.u64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r23.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fdb78
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FDB78;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r16.u64;
loc_820FDB78:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 * 28;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22,6
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r22.s64 + 6;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fdb94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FDB94;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
loc_820FDB94:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x823edad0
	sub_823EDAD0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11488(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fdbfc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FDBFC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x823edbb8
	sub_823EDBB8(ctx, base);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r3.s64 + -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdbfc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDBFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
loc_820FDBD4:
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,97
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 97, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdbec
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDBEC;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r20.u64;
	// sth ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 0, ctx_arrow(ctx)->r10.u16);
loc_820FDBEC:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x820fdbd4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FDBD4;
loc_820FDBFC:
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x823ee840
	sub_823EE840(ctx, base);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwz ctx_arrow(ctx)->r7,15120(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r6,-31544(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// stw ctx_arrow(ctx)->r31,144(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// stw ctx_arrow(ctx)->r31,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// bl 0x8213e098
	sub_8213E098(&ctx);
	// lwz ctx_arrow(ctx)->r10,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-31
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -31;
	// lwz ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,29
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + 29;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r4.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r3,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// stw ctx_arrow(ctx)->r4,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// bl 0x8213e018
	sub_8213E018(&ctx);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30,255
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64 | 255;
	// lwz ctx_arrow(ctx)->r7,15120(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwz ctx_arrow(ctx)->r6,-31544(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r21,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31;
	// lwz ctx_arrow(ctx)->r9,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// stw ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 29;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15120(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30,100
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64 | 100;
	// lwz ctx_arrow(ctx)->r6,-31544(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// stw ctx_arrow(ctx)->r21,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e0d8
	sub_8213E0D8(ctx, base);
loc_820FDD00:
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 4;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,5
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 5;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdb14
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDB14;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,4
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r14,20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r14.s64 + 20;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r18,1
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r18.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r25.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdb0c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDB0C;
	// bl 0x820ec830
	sub_820EC830(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,496
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 496;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-152
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -152;
	// bl 0x823ed580
	// b 0x823ed150
	return;
loc_820FDD44:
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r10.u64;
	// b 0x820fdb54
	goto loc_820FDB54;
}

alias(__imp__sub_820FDD50) PPC_WEAK_FUNC(sub_820FDD50);
PPC_FUNC_IMPL(__imp__sub_820FDD50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-56
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -56;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,-15548
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + -15548;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-15520
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -15520;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f30,3060(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r26.u64;
	// lis ctx_arrow(ctx)->r27,-31991
	ctx_arrow(ctx)->r27.s64 = -2096562176;
	// lfs f31,-4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lfs f28,6580(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
loc_820FDD9C:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// fmr f1,f28
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f28.f64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8209bd50
	sub_8209BD50(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r29.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fde34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FDE34;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f1,f0,f30
	ctx.f1.f64 = double(float(f0.f64 - f30.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// fsubs f2,f31,f30
	ctx.f2.f64 = double(float(f31.f64 - f30.f64));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r3,50
	ctx_arrow(ctx)->r3.s64 = 50;
	// std ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// std ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lfd f0,104(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,112(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fadds f4,f0,f2
	ctx.f4.f64 = double(float(f0.f64 + ctx.f2.f64));
	// fadds f3,f13,f1
	ctx.f3.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// bl 0x820972f8
	sub_820972F8(ctx, base);
loc_820FDE34:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lfs f29,4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + 20;
	// lfs f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f31,f0,f31
	f31.f64 = double(float(f0.f64 + f31.f64));
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdd9c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDD9C;
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-56
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -56;
	// bl 0x823ed594
	// b 0x823ed180
	return;
}

alias(__imp__sub_820FDEB8) PPC_WEAK_FUNC(sub_820FDEB8);
PPC_FUNC_IMPL(__imp__sub_820FDEB8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-272(ctx_arrow(ctx)->r1)
	ea = -272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ca240
	sub_820CA240(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-15396
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -15396;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-16936
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -16936;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f29,3060(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// lfs f31,-4(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// lfs f28,6580(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r28,-31991
	ctx_arrow(ctx)->r28.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,-15512
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + -15512;
loc_820FDF18:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f28
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f28.f64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209bd50
	sub_8209BD50(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fdfbc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FDFBC;
	// lwz ctx_arrow(ctx)->r11,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,-12(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f1,f0,f29
	ctx.f1.f64 = double(float(f0.f64 - f29.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// fsubs f2,f31,f29
	ctx.f2.f64 = double(float(f31.f64 - f29.f64));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r3,50
	ctx_arrow(ctx)->r3.s64 = 50;
	// std ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// std ctx_arrow(ctx)->r10,160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// lfd f0,152(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,160(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fadds f4,f0,f2
	ctx.f4.f64 = double(float(f0.f64 + ctx.f2.f64));
	// fadds f3,f13,f1
	ctx.f3.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// bl 0x820972f8
	sub_820972F8(ctx, base);
loc_820FDFBC:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f30,-12(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 4, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fe0bc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FE0BC;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-8148
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -8148;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r30.u64) {
	case 0:
		goto loc_820FE060;
	case 1:
		goto loc_820FE0A0;
	case 2:
		goto loc_820FE050;
	case 3:
		goto loc_820FE040;
	case 4:
		goto loc_820FE090;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,-8096(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-8032(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-8112(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-8128(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-8048(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FE040:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820c2df0
	sub_820C2DF0(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,64
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r27.s64 + 64;
	// b 0x820fe0ac
	goto loc_820FE0AC;
loc_820FE050:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820c2cc0
	sub_820C2CC0(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,44
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r27.s64 + 44;
	// b 0x820fe0ac
	goto loc_820FE0AC;
loc_820FE060:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fe080
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FE080;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r25.u32);
	// b 0x820fe0b4
	goto loc_820FE0B4;
loc_820FE080:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r25.u32);
	// b 0x820fe0b4
	goto loc_820FE0B4;
loc_820FE090:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820c2d58
	sub_820C2D58(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r27.s64 + 84;
	// b 0x820fe0ac
	goto loc_820FE0AC;
loc_820FE0A0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820c2c28
	sub_820C2C28(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r27.s64 + 24;
loc_820FE0AC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FE0B4:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
loc_820FE0BC:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f30,-8(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// lfs f0,0(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f31,f0,f31
	f31.f64 = double(float(f0.f64 + f31.f64));
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 5, xer);
	// blt ctx_arrow(ctx)->r6,0x820fdf18
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FDF18;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820fe13c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FE13C;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x820fe140
	goto loc_820FE140;
loc_820FE13C:
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
loc_820FE140:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820c2c28
	sub_820C2C28(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,-14440(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-14444(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r9,-14448(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f4,-14452(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r8,-14456(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,-31556(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f3,-14460(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f2,-14464(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f1,-14468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x820f1928
	sub_820F1928(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed594
	// b 0x823ed17c
	return;
}

alias(__imp__sub_820FE1B8) PPC_WEAK_FUNC(sub_820FE1B8);
PPC_FUNC_IMPL(__imp__sub_820FE1B8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f24{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-72
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -72;
	// bl 0x823ed538
	// stwu ctx_arrow(ctx)->r1,-320(ctx_arrow(ctx)->r1)
	ea = -320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,-15104
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + -15104;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r29,-31991
	ctx_arrow(ctx)->r29.s64 = -2096562176;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// lfs f24,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f24.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f1,f24
	ctx.f1.f64 = f24.f64;
	// bl 0x8209bd50
	sub_8209BD50(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-14972
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -14972;
	// lwz ctx_arrow(ctx)->r11,-136(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f25,3060(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f25.f64 = double(temp.f32);
	// bne ctx_arrow(ctx)->r6,0x820fe294
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FE294;
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f2,f0,f25
	ctx.f2.f64 = double(float(f0.f64 - f25.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lfs f0,20(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// fsubs f1,f0,f25
	ctx.f1.f64 = double(float(f0.f64 - f25.f64));
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r3,50
	ctx_arrow(ctx)->r3.s64 = 50;
	// std ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfd f0,144(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,136(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// lfd f13,136(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fadds f4,f0,f2
	ctx.f4.f64 = double(float(f0.f64 + ctx.f2.f64));
	// fadds f3,f13,f1
	ctx.f3.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// bl 0x820972f8
	sub_820972F8(ctx, base);
loc_820FE294:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lfs f31,12(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f30,20(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// fmr f1,f24
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f24.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8209bd50
	sub_8209BD50(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-136(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x820fe384
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FE384;
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,16(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f2,f0,f25
	ctx.f2.f64 = double(float(f0.f64 - f25.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lfs f0,20(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// fsubs f1,f0,f25
	ctx.f1.f64 = double(float(f0.f64 - f25.f64));
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r3,50
	ctx_arrow(ctx)->r3.s64 = 50;
	// std ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfd f0,144(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,136(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// lfd f13,136(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fadds f4,f0,f2
	ctx.f4.f64 = double(float(f0.f64 + ctx.f2.f64));
	// fadds f3,f13,f1
	ctx.f3.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// bl 0x820972f8
	sub_820972F8(ctx, base);
loc_820FE384:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lfs f31,16(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f30,20(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// bl 0x820c5868
	sub_820C5868(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFFFF;
	// std ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfd f0,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f29,15620(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f30,f0,f29
	f30.f64 = double(float(f0.f64 * f29.f64));
	// bl 0x820c5800
	sub_820C5800(ctx, base);
	// lfs f0,32(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u32 & 0xFFFF;
	// lfs f13,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fadds f6,f0,f13
	ctx.f6.f64 = double(float(f0.f64 + ctx.f13.f64));
	// lfs f0,28(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f5,24(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// fmadds f7,f0,f30,f5
	ctx.f7.f64 = double(float(f0.f64 * f30.f64 + ctx.f5.f64));
	// lfs f0,36(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// std ctx_arrow(ctx)->r10,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfs f28,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f4,f28
	ctx.f4.f64 = f28.f64;
	// stw ctx_arrow(ctx)->r30,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lfs f31,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fadds f8,f6,f0
	ctx.f8.f64 = double(float(ctx.f6.f64 + f0.f64));
	// lfd f0,144(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f29,f0,f29
	f29.f64 = double(float(f0.f64 * f29.f64));
	// bl 0x82096ba8
	sub_82096BA8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,32(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r30,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// fadds f6,f13,f12
	ctx.f6.f64 = double(float(ctx.f13.f64 + ctx.f12.f64));
	// lfs f0,28(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fmadds f5,f0,f30,f13
	ctx.f5.f64 = double(float(f0.f64 * f30.f64 + ctx.f13.f64));
	// lfs f13,36(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f27,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f12,f27,f30
	ctx.f12.f64 = double(float(f27.f64 - f30.f64));
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// lfs f26,12888(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f26.f64 = double(temp.f32);
	// fmr f4,f26
	ctx.f4.f64 = f26.f64;
	// fadds f8,f6,f13
	ctx.f8.f64 = double(float(ctx.f6.f64 + ctx.f13.f64));
	// fmadds f7,f12,f0,f5
	ctx.f7.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f5.f64));
	// bl 0x82096ba8
	sub_82096BA8(ctx, base);
	// lfs f0,32(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,16(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f6,f0,f13
	ctx.f6.f64 = double(float(f0.f64 + ctx.f13.f64));
	// lfs f0,36(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r30,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// fadds f8,f6,f0
	ctx.f8.f64 = double(float(ctx.f6.f64 + f0.f64));
	// lfs f5,24(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f0,28(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fmr f4,f28
	ctx.f4.f64 = f28.f64;
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// fmadds f7,f0,f29,f5
	ctx.f7.f64 = double(float(f0.f64 * f29.f64 + ctx.f5.f64));
	// bl 0x82096ba8
	sub_82096BA8(ctx, base);
	// lfs f13,32(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r30,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// lfs f12,16(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmr f4,f26
	ctx.f4.f64 = f26.f64;
	// fadds f6,f13,f12
	ctx.f6.f64 = double(float(ctx.f13.f64 + ctx.f12.f64));
	// lfs f0,28(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f12,f27,f29
	ctx.f12.f64 = double(float(f27.f64 - f29.f64));
	// fmadds f5,f0,f29,f13
	ctx.f5.f64 = double(float(f0.f64 * f29.f64 + ctx.f13.f64));
	// lfs f13,36(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// fadds f8,f6,f13
	ctx.f8.f64 = double(float(ctx.f6.f64 + ctx.f13.f64));
	// fmadds f7,f12,f0,f5
	ctx.f7.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f5.f64));
	// bl 0x82096ba8
	sub_82096BA8(ctx, base);
	// li ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r30.s64 = 2;
	// li ctx_arrow(ctx)->r25,8
	ctx_arrow(ctx)->r25.s64 = 8;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r26,32
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r26.s64 + 32;
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
loc_820FE54C:
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s32;
	// lfs f0,8(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// lfd f13,152(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f12,f13
	ctx.f12.f64 = double(float(ctx.f13.f64));
	// lfs f13,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmadds f31,f12,f0,f13
	f31.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// fmr f1,f24
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f24.f64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8209bd50
	sub_8209BD50(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-136(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x820fe604
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FE604;
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,-4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f1,f0,f25
	ctx.f1.f64 = double(float(f0.f64 - f25.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// fsubs f2,f31,f25
	ctx.f2.f64 = double(float(f31.f64 - f25.f64));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r3,50
	ctx_arrow(ctx)->r3.s64 = 50;
	// std ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// std ctx_arrow(ctx)->r10,168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// lfd f0,160(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,168(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fadds f4,f0,f2
	ctx.f4.f64 = double(float(f0.f64 + ctx.f2.f64));
	// fadds f3,f13,f1
	ctx.f3.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// bl 0x820972f8
	sub_820972F8(ctx, base);
loc_820FE604:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lfs f30,-4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ca240
	sub_820CA240(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + -2;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 5, xer);
	// bgt ctx_arrow(ctx)->r6,0x820fe6e0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FE6E0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + -2;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-6516
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -6516;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r10.u64) {
	case 0:
		goto loc_820FE6BC;
	case 1:
		goto loc_820FE6A4;
	case 2:
		goto loc_820FE6B0;
	case 3:
		goto loc_820FE6D8;
	case 4:
		goto loc_820FE6C8;
	case 5:
		goto loc_820FE6D0;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,-6468(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-6492(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-6480(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-6440(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-6456(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-6448(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FE6A4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// bl 0x820c2f20
	sub_820C2F20(ctx, base);
	// b 0x820fe6e0
	goto loc_820FE6E0;
loc_820FE6B0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// bl 0x820c2fb8
	sub_820C2FB8(ctx, base);
	// b 0x820fe6e0
	goto loc_820FE6E0;
loc_820FE6BC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// bl 0x820c2e88
	sub_820C2E88(ctx, base);
	// b 0x820fe6e0
	goto loc_820FE6E0;
loc_820FE6C8:
	// bl 0x820c30e8
	sub_820C30E8(ctx, base);
	// b 0x820fe6e0
	goto loc_820FE6E0;
loc_820FE6D0:
	// bl 0x820c31d0
	sub_820C31D0(ctx, base);
	// b 0x820fe6e0
	goto loc_820FE6E0;
loc_820FE6D8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// bl 0x820c3050
	sub_820C3050(ctx, base);
loc_820FE6E0:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64 + ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r26.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// lfs f30,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,16
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,128
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + 128;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,4
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x820fe54c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FE54C;
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-72
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -72;
	// bl 0x823ed584
	// b 0x823ed178
	return;
}

alias(__imp__sub_820FE770) PPC_WEAK_FUNC(sub_820FE770);
PPC_FUNC_IMPL(__imp__sub_820FE770) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stfd f30,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stfd f31,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,-14932
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s64 + -14932;
	// lwz ctx_arrow(ctx)->r11,4296(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r31,-31991
	ctx_arrow(ctx)->r31.s64 = -2096562176;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f2,24788(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,24784(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// lis ctx_arrow(ctx)->r28,-32141
	ctx_arrow(ctx)->r28.s64 = -2106392576;
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// lfs f30,-14432(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4296(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lfs f1,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209bd50
	sub_8209BD50(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f30,25072(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f1,-14432(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f2,f30
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f30.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// lfs f30,-14432(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4296(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// std ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// lfs f31,-14436(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4296(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// bge ctx_arrow(ctx)->r6,0x820fe9cc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FE9CC;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820eae68
	sub_820EAE68(ctx, base);
	// b 0x820fe9d0
	goto loc_820FE9D0;
loc_820FE9CC:
	// bl 0x820eacd8
	sub_820EACD8(ctx, base);
loc_820FE9D0:
	// bl 0x820ec830
	sub_820EC830(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-56(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed184
	return;
}

alias(__imp__sub_820FE9E8) PPC_WEAK_FUNC(sub_820FE9E8);
PPC_FUNC_IMPL(__imp__sub_820FE9E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed114
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-112
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -112;
	// bl 0x823ed53c
	// stwu ctx_arrow(ctx)->r1,-448(ctx_arrow(ctx)->r1)
	ea = -448 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820f5978
	sub_820F5978(&ctx);
	// lis ctx_arrow(ctx)->r23,-32010
	ctx_arrow(ctx)->r23.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-14872
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -14872;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff8d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF8D4;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r7,-32256
	ctx_arrow(ctx)->r7.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r10,-19476
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r10.s64 + -19476;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lfs f27,6580(ctx_arrow(ctx)->r7)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// lfs f29,2776(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r25,2
	ctx_arrow(ctx)->r25.s64 = 2;
	// lfs f30,2688(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// lis ctx_arrow(ctx)->r21,-32141
	ctx_arrow(ctx)->r21.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r10,-17792
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r10.s64 + -17792;
	// beq ctx_arrow(ctx)->r6,0x820fedf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FEDF0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 7, xer);
	// beq ctx_arrow(ctx)->r6,0x820fedf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FEDF0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x820febc4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FEBC4;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r28,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40022
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40022;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r29,-31994
	ctx_arrow(ctx)->r29.s64 = -2096758784;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-31556
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -31556;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,213
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 213;
	ctx_arrow(ctx)->r11.s64 = 213 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -15;
	// stw ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r19.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// stw ctx_arrow(ctx)->r24,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// stw ctx_arrow(ctx)->r24,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r19.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19444
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19444;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-17024
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -17024;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,213
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 213;
	ctx_arrow(ctx)->r11.s64 = 213 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 15;
	// stw ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r24,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stw ctx_arrow(ctx)->r24,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// b 0x820ff028
	goto loc_820FF028;
loc_820FEBC4:
	// bl 0x82159128
	sub_82159128(&ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x820febdc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FEBDC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_820FEBDC:
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,3
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r22.s64 + 3;
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s32;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s32;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s32;
	// std ctx_arrow(ctx)->r9,160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// lfd f0,160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-31994
	ctx_arrow(ctx)->r10.s64 = -2096758784;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// std ctx_arrow(ctx)->r8,152(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// lfd f13,152(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// std ctx_arrow(ctx)->r7,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfd f12,144(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27480
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 27480;
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 4);
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f28,f13
	f28.f64 = double(float(ctx.f13.f64));
	// frsp f26,f12
	f26.f64 = double(float(ctx.f12.f64));
	// lfs f0,15412(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f25,f31,f0
	f25.f64 = double(float(f31.f64 * f0.f64));
	// bl 0x821463f0
	sub_821463F0(ctx, base);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// fmr f1,f26
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f26.f64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// fmr f2,f28
	ctx.f2.f64 = f28.f64;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// fmr f3,f25
	ctx.f3.f64 = f25.f64;
	// fmr f4,f31
	ctx.f4.f64 = f31.f64;
	// stw ctx_arrow(ctx)->r25,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fmr f5,f30
	ctx.f5.f64 = f30.f64;
	// fmr f6,f30
	ctx.f6.f64 = f30.f64;
	// fmr f7,f29
	ctx.f7.f64 = f29.f64;
	// fmr f8,f29
	ctx.f8.f64 = f29.f64;
	// bl 0x820cb948
	sub_820CB948(ctx, base);
	// li ctx_arrow(ctx)->r7,17
	ctx_arrow(ctx)->r7.s64 = 17;
	// lwz ctx_arrow(ctx)->r29,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,768
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r26.s64 + 768;
	// lwz ctx_arrow(ctx)->r28,36(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,17
	ctx_arrow(ctx)->r5.s64 = 17;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x823eda38
	sub_823EDA38(ctx, base);
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-31556
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -31556;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820914c0
	sub_820914C0(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff028
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF028;
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19444
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19444;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-17024
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -17024;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x820feda0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FEDA0;
	// lwz ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r28.s64 + -1;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r29.s64 + -2;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FEDA0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820914c0
	sub_820914C0(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// b 0x820ff028
	goto loc_820FF028;
loc_820FEDF0:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r29,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40021
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40021;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-31556
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -31556;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// subfic ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,213
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 213;
	ctx_arrow(ctx)->r28.s64 = 213 - ctx_arrow(ctx)->r11.s64;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-60
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -60;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s32;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// std ctx_arrow(ctx)->r10,216(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,216(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,224(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f1,f0
	ctx.f1.f64 = double(float(f0.f64));
	// frsp f2,f13
	ctx.f2.f64 = double(float(ctx.f13.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32241
	ctx_arrow(ctx)->r11.s64 = -2112946176;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -3544;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// subfic ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,213
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 213;
	ctx_arrow(ctx)->r5.s64 = 213 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,374
	ctx_arrow(ctx)->r4.s64 = 374;
	// li ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r3.s64 = 51;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x820fef0c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FEF0C;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-3
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -3;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3544;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// subfic ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-39
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 4294967257;
	ctx_arrow(ctx)->r5.s64 = -39 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,374
	ctx_arrow(ctx)->r4.s64 = 374;
	// li ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r3.s64 = 51;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FEF0C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x820fef40
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FEF40;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3544;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// subfic ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,45
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 45;
	ctx_arrow(ctx)->r5.s64 = 45 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,374
	ctx_arrow(ctx)->r4.s64 = 374;
	// li ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r3.s64 = 51;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FEF40:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x820fef74
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_820FEF74;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3544;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// subfic ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,129
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 129;
	ctx_arrow(ctx)->r5.s64 = 129 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,374
	ctx_arrow(ctx)->r4.s64 = 374;
	// li ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r3.s64 = 51;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FEF74:
	// lis ctx_arrow(ctx)->r28,-32141
	ctx_arrow(ctx)->r28.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-19480(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820fefb8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FEFB8;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3544;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// subfic ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,297
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 297;
	ctx_arrow(ctx)->r5.s64 = 297 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,374
	ctx_arrow(ctx)->r4.s64 = 374;
	// li ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r3.s64 = 51;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,-19480(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FEFB8:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820feff4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FEFF4;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3544;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// subfic ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,381
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 381;
	ctx_arrow(ctx)->r5.s64 = 381 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,374
	ctx_arrow(ctx)->r4.s64 = 374;
	// li ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r3.s64 = 51;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,-19480(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FEFF4:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-3
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -3;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x820ff028
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FF028;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32241
	ctx_arrow(ctx)->r10.s64 = -2112946176;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -3544;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// subfic ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,465
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 465;
	ctx_arrow(ctx)->r5.s64 = 465 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,374
	ctx_arrow(ctx)->r4.s64 = 374;
	// li ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r3.s64 = 51;
	// bl 0x820ebc28
	sub_820EBC28(ctx, base);
loc_820FF028:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8216c140
	sub_8216C140(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// lwz ctx_arrow(ctx)->r29,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff5ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF5EC;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40266
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40266;
	// lwz ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 5, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff0a0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF0A0;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r27.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FF0A0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,172
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 172;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// std ctx_arrow(ctx)->r10,216(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,216(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// frsp f2,f13
	ctx.f2.f64 = double(float(ctx.f13.f64));
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,172
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 172;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,172
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 172;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40296
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40296;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff174
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF174;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r27.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FF174:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40267
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40267;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff234
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF234;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r27.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FF234:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,180
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 180;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,180
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 180;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,180
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 180;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40274
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40274;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff2f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF2F4;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r27.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FF2F4:
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,31,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFFFF1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFFF7F;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,255
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 255;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,184
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 184;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,184
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 184;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,184
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 184;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r28,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff388
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF388;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x820ff3a4
	goto loc_820FF3A4;
loc_820FF388:
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x820ff3a4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_820FF3A4;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_820FF3A4:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r22.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,188
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 188;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// std ctx_arrow(ctx)->r10,216(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,216(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// frsp f2,f13
	ctx.f2.f64 = double(float(ctx.f13.f64));
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,188
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 188;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,188
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 188;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff44c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF44C;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// b 0x820ff450
	goto loc_820FF450;
loc_820FF44C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FF450:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-16936
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -16936;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x820c2c28
	sub_820C2C28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x820ff4e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF4E8;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40269
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40269;
	// b 0x820ff4ec
	goto loc_820FF4EC;
loc_820FF4E8:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40268
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40268;
loc_820FF4EC:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,196
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 196;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 196;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,196
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 196;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff5c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF5C8;
	// li ctx_arrow(ctx)->r29,112
	ctx_arrow(ctx)->r29.s64 = 112;
loc_820FF568:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40052
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40052;
loc_820FF570:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,200
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 200;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,200
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 200;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,200
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 200;
	// b 0x820ff8c8
	goto loc_820FF8C8;
loc_820FF5C8:
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,255
	ctx_arrow(ctx)->r29.s64 = 255;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x820c2cc0
	sub_820C2CC0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff568
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF568;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40051
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40051;
	// b 0x820ff570
	goto loc_820FF570;
loc_820FF5EC:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40271
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40271;
	// lwz ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 8, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff648
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF648;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FF648:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,204
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 204;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// std ctx_arrow(ctx)->r10,216(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,216(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f28,f0
	f28.f64 = double(float(f0.f64));
	// frsp f26,f13
	f26.f64 = double(float(ctx.f13.f64));
	// fmr f2,f28
	ctx.f2.f64 = f28.f64;
	// fmr f1,f26
	ctx.f1.f64 = f26.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,204
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 204;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,204
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 204;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ca490
	sub_820CA490(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82159190
	sub_82159190(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff754
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF754;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 10;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28184
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 28184;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,64
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 64;
	// std ctx_arrow(ctx)->r10,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// bl 0x821463f0
	sub_821463F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f8,f29
	ctx.fpscr.disableFlushMode();
	ctx.f8.f64 = f29.f64;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// fmr f7,f29
	ctx.f7.f64 = f29.f64;
	// lis ctx_arrow(ctx)->r4,-29952
	ctx_arrow(ctx)->r4.s64 = -1962934272;
	// fmr f6,f30
	ctx.f6.f64 = f30.f64;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// fmr f5,f30
	ctx.f5.f64 = f30.f64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r25,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// lfs f0,2952(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,255
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 255;
	// fadds f4,f28,f0
	ctx.f4.f64 = double(float(f28.f64 + f0.f64));
	// stw ctx_arrow(ctx)->r8,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fadds f3,f31,f0
	ctx.f3.f64 = double(float(f31.f64 + f0.f64));
	// fmr f2,f28
	ctx.f2.f64 = f28.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x82099640
	sub_82099640(ctx, base);
loc_820FF754:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40272
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40272;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff7b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF7B8;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FF7B8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f26
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f26.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40273
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40273;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f1,f27
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f27.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 10, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff878
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF878;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + -2;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_820FF878:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f26
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f26.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,212
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 212;
	// std ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// lfd f0,224(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,212
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 212;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,212
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 212;
loc_820FF8C8:
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
loc_820FF8D4:
	// bl 0x820ec830
	sub_820EC830(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff8f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF8F0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff8f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF8F0;
	// bl 0x820ec700
	sub_820EC700(ctx, base);
loc_820FF8F0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,448
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 448;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-112
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -112;
	// bl 0x823ed588
	// b 0x823ed164
	return;
}

alias(__imp__sub_820FF900) PPC_WEAK_FUNC(sub_820FF900);
PPC_FUNC_IMPL(__imp__sub_820FF900) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// lis ctx_arrow(ctx)->r29,-32010
	ctx_arrow(ctx)->r29.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r30,-32141
	ctx_arrow(ctx)->r30.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r10,4240(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4228);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-16860
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -16860;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stw ctx_arrow(ctx)->r10,-24(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -24);
	// stw ctx_arrow(ctx)->r10,-20(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -20);
	// stw ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -16);
	// stw ctx_arrow(ctx)->r10,-12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -12);
	// stw ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -8);
	// stw ctx_arrow(ctx)->r10,-4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 7, xer);
	// blt ctx_arrow(ctx)->r6,0x820ff96c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FF96C;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -19424);
loc_820FF96C:
	// bl 0x820c9ab0
	sub_820C9AB0(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 16, xer);
	// blt ctx_arrow(ctx)->r6,0x820ff980
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FF980;
	// li ctx_arrow(ctx)->r3,15
	ctx_arrow(ctx)->r3.s64 = 15;
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
loc_820FF980:
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x820ff9bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF9BC;
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820ff9a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF9A8;
	// lbz ctx_arrow(ctx)->r11,4240(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne ctx_arrow(ctx)->r6,0x820ff9ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FF9AC;
loc_820FF9A8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_820FF9AC:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq ctx_arrow(ctx)->r6,0x820ff9c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF9C0;
loc_820FF9BC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_820FF9C0:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-19523
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -19523;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// beq ctx_arrow(ctx)->r6,0x820ff9e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FF9E0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16;
	// b 0x820ff9e4
	goto loc_820FF9E4;
loc_820FF9E0:
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,239
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 239;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
loc_820FF9E4:
	// stb ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4224);
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -19424);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
	// stb ctx_arrow(ctx)->r11,4129(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + 4129, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x820ffa24
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFA24;
	// lbz ctx_arrow(ctx)->r11,4240(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne ctx_arrow(ctx)->r6,0x820ffa28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFA28;
loc_820FFA24:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_820FFA28:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x820ffa40
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFA40;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16;
	// b 0x820ffa44
	goto loc_820FFA44;
loc_820FFA40:
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,239
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 239;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
loc_820FFA44:
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,224
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 224;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,35
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 35;
	// stb ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3544
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 3544;
loc_820FFA5C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 4, xer);
	// bgt ctx_arrow(ctx)->r6,0x820ffab8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_820FFAB8;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-1412
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -1412;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r10.u64) {
	case 0:
		goto loc_820FFA90;
	case 1:
		goto loc_820FFA98;
	case 2:
		goto loc_820FFAA0;
	case 3:
		goto loc_820FFAA8;
	case 4:
		goto loc_820FFAB0;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,-1392(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-1384(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-1376(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-1368(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-1360(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_820FFA90:
	// li ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r11.s64 = 11;
	// b 0x820ffabc
	goto loc_820FFABC;
loc_820FFA98:
	// li ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = 12;
	// b 0x820ffabc
	goto loc_820FFABC;
loc_820FFAA0:
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// b 0x820ffabc
	goto loc_820FFABC;
loc_820FFAA8:
	// li ctx_arrow(ctx)->r11,23
	ctx_arrow(ctx)->r11.s64 = 23;
	// b 0x820ffabc
	goto loc_820FFABC;
loc_820FFAB0:
	// li ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.s64 = 24;
	// b 0x820ffabc
	goto loc_820FFABC;
loc_820FFAB8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_820FFABC:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// stbx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r28), 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 5, xer);
	// blt ctx_arrow(ctx)->r6,0x820ffa5c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FFA5C;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_820FFAD8) PPC_WEAK_FUNC(sub_820FFAD8);
PPC_FUNC_IMPL(__imp__sub_820FFAD8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820ffb20
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFB20;
	// li ctx_arrow(ctx)->r3,278
	ctx_arrow(ctx)->r3.s64 = 278;
	// bl 0x820d03e8
	sub_820D03E8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32164
	ctx_arrow(ctx)->r11.s64 = -2107899904;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-3616
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -3616;
	// lwz ctx_arrow(ctx)->r3,4448(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821186e0
	sub_821186E0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stw ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4168);
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823ada90
	sub_823ADA90(ctx, base);
loc_820FFB20:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82160598
	sub_82160598(ctx, base);
	// bl 0x820ff900
	sub_820FF900(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_820FFB40) PPC_WEAK_FUNC(sub_820FFB40);
PPC_FUNC_IMPL(__imp__sub_820FFB40) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40306
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40306;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,200
	ctx_arrow(ctx)->r7.s64 = 200;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r5,115
	ctx_arrow(ctx)->r5.s64 = 115;
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-19136
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -19136;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40307
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40307;
	// lwz ctx_arrow(ctx)->r11,4304(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82136ad8
	sub_82136AD8(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4304(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40308
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40308;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4304(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40309
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40309;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// nop 
	// nop 
	// nop 
	// nop 
	// nop 
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_820FFC30) PPC_WEAK_FUNC(sub_820FFC30);
PPC_FUNC_IMPL(__imp__sub_820FFC30) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x8215fc88
	sub_8215FC88(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820ffcbc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFCBC;
	// lis ctx_arrow(ctx)->r7,-32010
	ctx_arrow(ctx)->r7.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r11,4128(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffcbc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFCBC;
	// li ctx_arrow(ctx)->r3,27
	ctx_arrow(ctx)->r3.s64 = 27;
	// bl 0x820ea508
	sub_820EA508(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffc8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFC8C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r3,4116(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4116);
	// li ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.s64 = 27;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,4128(ctx_arrow(ctx)->r7)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r7.u32 + 4128, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed178
	return;
loc_820FFC8C:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// li ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.s64 = 27;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4124(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4124);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,4128(ctx_arrow(ctx)->r7)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r7.u32 + 4128, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed178
	return;
loc_820FFCBC:
	// bl 0x8215fc88
	sub_8215FC88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x8210051c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210051C;
	// bl 0x82151c68
	sub_82151C68(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffcfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFCFC;
	// bl 0x82151c68
	sub_82151C68(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,728
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 728;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820ffcfc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFCFC;
	// bl 0x8217f020
	sub_8217F020(ctx, base);
loc_820FFCFC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14756
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 14756;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8216c178
	sub_8216C178(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,-19444
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + -19444;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-19460
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -19460;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,-19476
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + -19476;
loc_820FFD38:
	// lwz ctx_arrow(ctx)->r31,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffd54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFD54;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// bne ctx_arrow(ctx)->r6,0x820ffd58
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFD58;
loc_820FFD54:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_820FFD58:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820ffe90
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFE90;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,1960
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 1960;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r27.u32);
	// bl 0x8216c140
	sub_8216C140(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffe28
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFE28;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x82183908
	sub_82183908(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffde4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFDE4;
	// bl 0x82183d50
	sub_82183D50(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,255
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 255, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffde4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFDE4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82183d50
	sub_82183D50(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r29.u32);
loc_820FFDE4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,2064
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 2064;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,2012
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 2012;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8216c2a8
	sub_8216C2A8(ctx, base);
	// b 0x820ffd38
	goto loc_820FFD38;
loc_820FFE28:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,2064
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 2064;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,2012
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 2012;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r28.u32);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r29.u32);
	// bl 0x8216c2a8
	sub_8216C2A8(&ctx);
	// b 0x820ffd38
	goto loc_820FFD38;
loc_820FFE90:
	// bl 0x8215fca8
	sub_8215FCA8(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821003c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821003C4;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r11,4129(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820ffec0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFEC0;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// lbz ctx_arrow(ctx)->r11,4130(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x820ffec4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFEC4;
loc_820FFEC0:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
loc_820FFEC4:
	// lis ctx_arrow(ctx)->r27,-31993
	ctx_arrow(ctx)->r27.s64 = -2096693248;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,488
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 488;
	// bl 0x82176c80
	sub_82176C80(ctx, base);
	// li ctx_arrow(ctx)->r11,127
	ctx_arrow(ctx)->r11.s64 = 127;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// stw ctx_arrow(ctx)->r24,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// stw ctx_arrow(ctx)->r24,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r24,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// stb ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 80, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r11,81(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 81, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r11,82(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 82, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r11,83(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 83, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x8216c178
	sub_8216C178(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 96;
loc_820FFF14:
	// lwz ctx_arrow(ctx)->r30,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x820fff30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_820FFF30;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// bne ctx_arrow(ctx)->r6,0x820fff34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFF34;
loc_820FFF30:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_820FFF34:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x820fffa4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_820FFFA4;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u32 & 0xFF;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,1336
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 1336;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,1960
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 1960;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,2012
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 2012;
	// stbx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r10.u32));
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stbx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r10.u32, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x8216c2a8
	sub_8216C2A8(ctx, base);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// b 0x820fff14
	goto loc_820FFF14;
loc_820FFFA4:
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r1.s64 + 96;
loc_820FFFAC:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210003c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210003C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lbzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r4, 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,64
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 64, xer);
	// beq ctx_arrow(ctx)->r6,0x8210003c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210003C;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210003c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210003C;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
loc_820FFFE8:
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lbzx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r6, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82100010
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100010;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lbzx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r6, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82100020
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100020;
loc_82100010:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x820fffe8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FFFE8;
	// b 0x82100024
	goto loc_82100024;
loc_82100020:
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
loc_82100024:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210003c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210003C;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7,1960
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r7.s64 + 1960;
	// stbx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + ctx_arrow(ctx)->r8.u32));
	// bl 0x82177218
	sub_82177218(ctx, base);
loc_8210003C:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 96;
loc_82100044:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100128
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100128;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 96;
loc_82100058:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r31.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82100118
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100118;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100118
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100118;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82100118
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100118;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x821000a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821000A8;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r31.u64;
loc_821000A8:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
loc_821000AC:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
loc_821000B4:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lbzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r7, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x821000d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821000D8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x821000b4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821000B4;
	// b 0x821000dc
	goto loc_821000DC;
loc_821000D8:
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
loc_821000DC:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821000f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821000F8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x821000ac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821000AC;
	// b 0x82100118
	goto loc_82100118;
loc_821000F8:
	// extsb ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stbx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r9.u32));
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1960
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1960;
	// bl 0x82177218
	sub_82177218(ctx, base);
loc_82100118:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x82100058
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82100058;
loc_82100128:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x82100044
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82100044;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,4
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + 4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x820fffac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_820FFFAC;
	// bl 0x821581f8
	sub_821581F8(ctx, base);
	// bl 0x820ecc28
	sub_820ECC28(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1100;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// bl 0x82184a40
	sub_82184A40(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8215f9e0
	sub_8215F9E0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,596
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 596;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82100204
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100204;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,596
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 596;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82100204
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100204;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100204
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100204;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100204
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100204;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,596
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 596;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,1368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x821550e0
	sub_821550E0(ctx, base);
loc_82100204:
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,708
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 708;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x820c9ab0
	sub_820C9AB0(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82100294
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100294;
	// bl 0x820c9ab0
	sub_820C9AB0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,708
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 708;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82100294
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100294;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100294
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100294;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100294
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100294;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,708
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 708;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,1368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x82155128
	sub_82155128(ctx, base);
loc_82100294:
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,652
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 652;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210031c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210031C;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,652
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 652;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8210031c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210031C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210031c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210031C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210031c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210031C;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,652
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 652;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,1368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// bl 0x82154ff8
	sub_82154FF8(ctx, base);
loc_8210031C:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r4,-19523(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,820
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 820;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// bl 0x820eb128
	sub_820EB128(ctx, base);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,876
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 876;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1360
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1360;
	// lbz ctx_arrow(ctx)->r9,105(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100364
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100364;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_82100364:
	// lbz ctx_arrow(ctx)->r9,217(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100374
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100374;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
loc_82100374:
	// lbz ctx_arrow(ctx)->r9,329(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100384
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100384;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 4;
loc_82100384:
	// lbz ctx_arrow(ctx)->r11,441(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100394
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100394;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8;
loc_82100394:
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,932
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 932;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,764
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 764;
	// bl 0x82177218
	sub_82177218(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed178
	return;
loc_821003C4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x8217d900
	sub_8217D900(ctx, base);
	// lis ctx_arrow(ctx)->r31,-31993
	ctx_arrow(ctx)->r31.s64 = -2096693248;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1100;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4224);
	// bl 0x821581f8
	sub_821581F8(&ctx);
	// bl 0x820ecc28
	sub_820ECC28(&ctx);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,596
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 596;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,708
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 708;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r10,-19428(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -19428);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,820
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 820;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,876
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 876;
	// stb ctx_arrow(ctx)->r3,-19523(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19523));
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// bl 0x820eb1c0
	sub_820EB1C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,932
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 932;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,764
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 764;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1360
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1360;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64;
	// stb ctx_arrow(ctx)->r8,105(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 105));
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x1;
	// stb ctx_arrow(ctx)->r8,217(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 217));
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,30,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1;
	// stb ctx_arrow(ctx)->r8,329(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 329));
	// stb ctx_arrow(ctx)->r11,441(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + 441, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,652
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 652;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r10,-19424(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -19424);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// stw ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4228);
loc_8210051C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed178
	return;
}

alias(__imp__sub_82100528) PPC_WEAK_FUNC(sub_82100528);
PPC_FUNC_IMPL(__imp__sub_82100528) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stfd f31,-80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -80);
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40310
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40310;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r26,50
	ctx_arrow(ctx)->r26.s64 = 50;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,96
	ctx_arrow(ctx)->r11.s64 = 96;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// lis ctx_arrow(ctx)->r30,-31994
	ctx_arrow(ctx)->r30.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r31,-31991
	ctx_arrow(ctx)->r31.s64 = -2096562176;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40311
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40311;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// li ctx_arrow(ctx)->r10,115
	ctx_arrow(ctx)->r10.s64 = 115;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r11,-16891(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100634
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100634;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82100634
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100634;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82100634:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40312
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40312;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r10,135
	ctx_arrow(ctx)->r10.s64 = 135;
	// lbz ctx_arrow(ctx)->r11,-16891(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x821006ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821006EC;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821006ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821006EC;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821006EC:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// bl 0x820ec700
	sub_820EC700(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// lfd f31,-80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed178
	return;
}

alias(__imp__sub_82100738) PPC_WEAK_FUNC(sub_82100738);
PPC_FUNC_IMPL(__imp__sub_82100738) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -104);
	// stfd f31,-96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// bl 0x820f2948
	sub_820F2948(ctx, base);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r29,-32010
	ctx_arrow(ctx)->r29.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4004);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,4240
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 4240;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 64);
	// bl 0x820ec288
	sub_820EC288(&ctx);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = 1;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821007b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821007B4;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r22,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821007B4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821007d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821007D8;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r22,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821007D8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821007f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821007F8;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r22,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_821007F8:
	// bl 0x8209ea70
	sub_8209EA70(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210081c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210081C;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-16868
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -16868;
	// stw ctx_arrow(ctx)->r10,-12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -12);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
loc_8210081C:
	// bl 0x82160588
	sub_82160588(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210082c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210082C;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_8210082C:
	// bl 0x8215fc88
	sub_8215FC88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x82100cfc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100CFC;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r26,-32141
	ctx_arrow(ctx)->r26.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// lfs f31,24800(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19588(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// lfs f30,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// ble ctx_arrow(ctx)->r6,0x8210087c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210087C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19584(ctx_arrow(ctx)->r26)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24804(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x8210087c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210087C;
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// ble ctx_arrow(ctx)->r6,0x82100cb8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82100CB8;
loc_8210087C:
	// li ctx_arrow(ctx)->r4,4096
	ctx_arrow(ctx)->r4.s64 = 4096;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82100cb8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100CB8;
	// lfs f0,-19588(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// ble ctx_arrow(ctx)->r6,0x821008a8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821008A8;
	// lfs f0,-19584(ctx_arrow(ctx)->r26)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// bgt ctx_arrow(ctx)->r6,0x82100c6c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82100C6C;
loc_821008A8:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82100c6c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100C6C;
	// bl 0x820eb5e8
	sub_820EB5E8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100938
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100938;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DEC;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19608(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82100DEC;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// li ctx_arrow(ctx)->r8,13388
	ctx_arrow(ctx)->r8.s64 = 13388;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r11.s64 = 37;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82144920
	sub_82144920(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100938:
	// lfs f0,-19588(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// ble ctx_arrow(ctx)->r6,0x8210099c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210099C;
	// lfs f0,-19584(ctx_arrow(ctx)->r26)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// ble ctx_arrow(ctx)->r6,0x8210099c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210099C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 64);
	// bl 0x820a05b8
	sub_820A05B8(&ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DEC;
	// bl 0x82160de0
	sub_82160DE0(ctx, base);
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82100dc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100DC8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// li ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = 28;
	// b 0x82100de4
	goto loc_82100DE4;
loc_8210099C:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// li ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r27.s64 = -1;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 64);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,-19116
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + -19116;
loc_821009C0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 5, xer);
	// bne ctx_arrow(ctx)->r6,0x821009e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821009E4;
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82100a8c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100A8C;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100a58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100A58;
	// b 0x82100a8c
	goto loc_82100A8C;
loc_821009E4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82100a18
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100A18;
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23,3
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r23.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// bl 0x820f6290
	sub_820F6290(ctx, base);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r3.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82100a88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100A88;
	// bl 0x820f6248
	sub_820F6248(ctx, base);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r3.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82100a88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100A88;
	// b 0x82100a58
	goto loc_82100A58;
loc_82100A18:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x82100a30
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100A30;
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x82100a88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100A88;
	// b 0x82100a58
	goto loc_82100A58;
loc_82100A30:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x82100a40
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100A40;
	// bl 0x820ebbb0
	sub_820EBBB0(ctx, base);
	// b 0x82100a4c
	goto loc_82100A4C;
loc_82100A40:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82100a58
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100A58;
	// bl 0x8209ea70
	sub_8209EA70(ctx, base);
loc_82100A4C:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82100a88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100A88;
loc_82100A58:
	// lwz ctx_arrow(ctx)->r11,-14428(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f13,-19584(ctx_arrow(ctx)->r26)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x82100aa0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82100AA0;
loc_82100A88:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 20;
loc_82100A8C:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 6, xer);
	// ble ctx_arrow(ctx)->r6,0x821009c0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821009C0;
	// lwz ctx_arrow(ctx)->r31,64(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82100aa4
	goto loc_82100AA4;
loc_82100AA0:
	// stw ctx_arrow(ctx)->r31,64(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 64);
loc_82100AA4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82100ab0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100AB0;
	// stw ctx_arrow(ctx)->r27,64(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 64);
loc_82100AB0:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DEC;
	// lwz ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 6, xer);
	// bgt ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82100DEC;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,2796
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 2796;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_82100B08;
	case 1:
		goto loc_82100B94;
	case 2:
		goto loc_82100BB0;
	case 3:
		goto loc_82100BC4;
	case 4:
		goto loc_82100BE0;
	case 5:
		goto loc_82100BFC;
	case 6:
		goto loc_82100C50;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,2824(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,2964(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,2992(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,3012(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,3040(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,3068(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,3152(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_82100B08:
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23,3
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r23.s64 + 3;
	// lis ctx_arrow(ctx)->r6,-32010
	ctx_arrow(ctx)->r6.s64 = -2097807360;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82100b7c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82100B7C;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r8,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 2, xer);
	// lwz ctx_arrow(ctx)->r7,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u64;
	// beq ctx_arrow(ctx)->r6,0x82100b48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100B48;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u64;
loc_82100B48:
	// bl 0x820f6248
	sub_820F6248(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bgt ctx_arrow(ctx)->r6,0x82100b68
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82100B68;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 2, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// beq ctx_arrow(ctx)->r6,0x82100b68
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100B68;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
loc_82100B68:
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 4224);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100B7C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 4224);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100B94:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100BB0:
	// bl 0x820ecbb8
	sub_820ECBB8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100BC4:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,19
	ctx_arrow(ctx)->r11.s64 = 19;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100BE0:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = 32;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100BFC:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r11,4129(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stb ctx_arrow(ctx)->r11,4129(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + 4129, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bne ctx_arrow(ctx)->r6,0x82100c2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100C2C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lbz ctx_arrow(ctx)->r11,4130(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100c30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100C30;
loc_82100C2C:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
loc_82100C30:
	// lis ctx_arrow(ctx)->r11,-31993
	ctx_arrow(ctx)->r11.s64 = -2096693248;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,488
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 488;
	// bl 0x82176c80
	sub_82176C80(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100C50:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,43
	ctx_arrow(ctx)->r11.s64 = 43;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100C6C:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,57344
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 57344;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 64);
	// bl 0x820a05b8
	sub_820A05B8(&ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DEC;
	// bl 0x82160de0
	sub_82160DE0(ctx, base);
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82100dc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100DC8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// li ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = 28;
	// b 0x82100de4
	goto loc_82100DE4;
loc_82100CB8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,45056
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 45056;
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4004);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 64);
	// bl 0x820a05b8
	sub_820A05B8(&ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DEC;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.s64 = 31;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82100CFC:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f0,-19588(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82100d80
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82100D80;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f0,-19584(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82100d80
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82100D80;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// bl 0x820a05b8
	sub_820A05B8(&ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DEC;
	// bl 0x8215fc88
	sub_8215FC88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100d60
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100D60;
	// bl 0x82160de0
	sub_82160DE0(ctx, base);
loc_82100D60:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82100dc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100DC8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// li ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = 28;
	// b 0x82100de4
	goto loc_82100DE4;
loc_82100D80:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100dec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DEC;
	// bl 0x8215fc88
	sub_8215FC88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82100da8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100DA8;
	// bl 0x82160de0
	sub_82160DE0(ctx, base);
loc_82100DA8:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82100dc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100DC8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// li ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = 28;
	// b 0x82100de4
	goto loc_82100DE4;
loc_82100DC8:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82100dec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100DEC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// li ctx_arrow(ctx)->r11,38
	ctx_arrow(ctx)->r11.s64 = 38;
loc_82100DE4:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_82100DEC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
}

alias(__imp__sub_82100E00) PPC_WEAK_FUNC(sub_82100E00);
PPC_FUNC_IMPL(__imp__sub_82100E00) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-352(ctx_arrow(ctx)->r1)
	ea = -352 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// clrlwi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r17,24
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r17.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r18,0
	xer.ca = ctx_arrow(ctx)->r18.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r18.s64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r3.u64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// stw ctx_arrow(ctx)->r29,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r29,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r29.u64;
	// lfs f31,6580(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r31,-31994
	ctx_arrow(ctx)->r31.s64 = -2096758784;
	// li ctx_arrow(ctx)->r19,50
	ctx_arrow(ctx)->r19.s64 = 50;
	// li ctx_arrow(ctx)->r22,160
	ctx_arrow(ctx)->r22.s64 = 160;
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-19116
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -19116;
	// beq ctx_arrow(ctx)->r6,0x82100fd8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100FD8;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82100e88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100E88;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r9,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82100e8c
	goto loc_82100E8C;
loc_82100E88:
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
loc_82100E8C:
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25,3
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r25.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r9.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82100ed8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82100ED8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x82100ec8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100EC8;
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1360
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1360;
	// lbz ctx_arrow(ctx)->r11,441(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82100ec8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100EC8;
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// b 0x82100ed0
	goto loc_82100ED0;
loc_82100EC8:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 + 2;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_82100ED0:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82100edc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100EDC;
loc_82100ED8:
	// li ctx_arrow(ctx)->r26,112
	ctx_arrow(ctx)->r26.s64 = 112;
loc_82100EDC:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40247
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40247;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// li ctx_arrow(ctx)->r27,115
	ctx_arrow(ctx)->r27.s64 = 115;
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// stw ctx_arrow(ctx)->r27,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x82100f3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100F3C;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// li ctx_arrow(ctx)->r6,129
	ctx_arrow(ctx)->r6.s64 = 129;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 53;
	// li ctx_arrow(ctx)->r4,114
	ctx_arrow(ctx)->r4.s64 = 114;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82100F3C:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25236
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 25236;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r5,4224(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820f5478
	sub_820F5478(ctx, base);
	// stw ctx_arrow(ctx)->r22,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r27,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
loc_82100FD8:
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82100fec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82100FEC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82101114
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82101114;
loc_82100FEC:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40014
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40014;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 1, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x8210105c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210105C;
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + 53;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_8210105C:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r25.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// stw ctx_arrow(ctx)->r22,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r26,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
loc_82101114:
	// lis ctx_arrow(ctx)->r24,-32141
	ctx_arrow(ctx)->r24.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,-16872
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + -16872;
	// bne ctx_arrow(ctx)->r6,0x82101134
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101134;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82101288
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82101288;
loc_82101134:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40016
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40016;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210117c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210117C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// li ctx_arrow(ctx)->r26,255
	ctx_arrow(ctx)->r26.s64 = 255;
	// bne ctx_arrow(ctx)->r6,0x82101180
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101180;
loc_8210117C:
	// li ctx_arrow(ctx)->r26,112
	ctx_arrow(ctx)->r26.s64 = 112;
loc_82101180:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 2, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x821011c0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821011C0;
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + 53;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821011C0:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r16.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r16.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lwz ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18248
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18248;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// stw ctx_arrow(ctx)->r22,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r25,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
loc_82101288:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40015
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40015;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 3, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x821012f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821012F8;
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + 53;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821012F8:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lis ctx_arrow(ctx)->r24,-32141
	ctx_arrow(ctx)->r24.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82101354
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82101354;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lhz ctx_arrow(ctx)->r3,-18152(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -18152);
	// b 0x82101374
	goto loc_82101374;
loc_82101354:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18152
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18152;
	// lwz ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
loc_82101374:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r22,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r26,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821013dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821013DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r25,255
	ctx_arrow(ctx)->r25.s64 = 255;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821013e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821013E0;
loc_821013DC:
	// li ctx_arrow(ctx)->r25,112
	ctx_arrow(ctx)->r25.s64 = 112;
loc_821013E0:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40017
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40017;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 4, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x82101450
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101450;
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + 53;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82101450:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821014a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821014A8;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820c99b8
	sub_820C99B8(ctx, base);
	// b 0x821014ac
	goto loc_821014AC;
loc_821014A8:
	// bl 0x820c9990
	sub_820C9990(ctx, base);
loc_821014AC:
	// lhz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 0);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// stw ctx_arrow(ctx)->r22,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r26,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// stw ctx_arrow(ctx)->r28,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// bl 0x82160588
	sub_82160588(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// bne ctx_arrow(ctx)->r6,0x82101694
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101694;
	// lbz ctx_arrow(ctx)->r11,4240(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82101694
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101694;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// bne ctx_arrow(ctx)->r6,0x82101558
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101558;
	// lbz ctx_arrow(ctx)->r11,4129(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82101694
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82101694;
loc_82101558:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40345
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40345;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 5, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x821015c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821015C8;
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + 53;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821015C8:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lbz ctx_arrow(ctx)->r11,4129(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210161c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210161C;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40051
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40051;
	// b 0x82101620
	goto loc_82101620;
loc_8210161C:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40052
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40052;
loc_82101620:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// stw ctx_arrow(ctx)->r22,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r26,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// stw ctx_arrow(ctx)->r28,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
loc_82101694:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821016c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821016C8;
	// bl 0x820eee80
	sub_820EEE80(ctx, base);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r28.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 5, xer);
	// bgt ctx_arrow(ctx)->r6,0x821016c8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821016C8;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r20.u64;
	// bl 0x820f2f40
	sub_820F2F40(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
loc_821016C8:
	// bl 0x820eee80
	sub_820EEE80(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82101700
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82101700;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40341
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40341;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x82101718
	goto loc_82101718;
loc_82101700:
	// bne ctx_arrow(ctx)->r6,0x8210170c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210170C;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40342
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40342;
	// b 0x82101710
	goto loc_82101710;
loc_8210170C:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40323
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40323;
loc_82101710:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
loc_82101718:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82101734
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101734;
	// lbz ctx_arrow(ctx)->r11,4240(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne ctx_arrow(ctx)->r6,0x82101738
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101738;
loc_82101734:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_82101738:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40323
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40323;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,31,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFFFF1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFFF7F;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,255
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 255;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r19,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 6, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 115;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bne ctx_arrow(ctx)->r6,0x821017b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821017B8;
	// lwz ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + 53;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821017B8:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_82101800) PPC_WEAK_FUNC(sub_82101800);
PPC_FUNC_IMPL(__imp__sub_82101800) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stfd f30,-72(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -72);
	// stfd f31,-64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820f5978
	sub_820F5978(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x820eae68
	sub_820EAE68(ctx, base);
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82101840
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101840;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40248
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40248;
	// b 0x82101844
	goto loc_82101844;
loc_82101840:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40333
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40333;
loc_82101844:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r28,50
	ctx_arrow(ctx)->r28.s64 = 50;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,96
	ctx_arrow(ctx)->r11.s64 = 96;
	// stw ctx_arrow(ctx)->r28,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// lis ctx_arrow(ctx)->r29,-31994
	ctx_arrow(ctx)->r29.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// bl 0x8215fc88
	sub_8215FC88(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x821018cc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821018CC;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4304(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82100e00
	sub_82100E00(ctx, base);
	// b 0x82101924
	goto loc_82101924;
loc_821018CC:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40252
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40252;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r28,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,-112
	ctx_arrow(ctx)->r8.s64 = -112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
loc_82101924:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r11,4130(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821019e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821019E0;
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821019e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821019E0;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40346
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40346;
	// lfs f31,-14416(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f30,-14420(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r5,112
	ctx_arrow(ctx)->r5.s64 = 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// lfs f31,-14424(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// bl 0x8209ba58
	sub_8209BA58(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
loc_821019E0:
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// lfd f30,-72(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-64(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed180
	return;
}

alias(__imp__sub_821019F8) PPC_WEAK_FUNC(sub_821019F8);
PPC_FUNC_IMPL(__imp__sub_821019F8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -88);
	// stwu ctx_arrow(ctx)->r1,-288(ctx_arrow(ctx)->r1)
	ea = -288 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40249
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40249;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// li ctx_arrow(ctx)->r26,50
	ctx_arrow(ctx)->r26.s64 = 50;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,96
	ctx_arrow(ctx)->r11.s64 = 96;
	// stw ctx_arrow(ctx)->r31,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stw ctx_arrow(ctx)->r31,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lis ctx_arrow(ctx)->r29,-31994
	ctx_arrow(ctx)->r29.s64 = -2096758784;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,4312
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 4312;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bgt ctx_arrow(ctx)->r6,0x82101e58
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82101E58;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,6840
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 6840;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_82101AC8;
	case 1:
		goto loc_82101B30;
	case 2:
		goto loc_82101D80;
	case 3:
		goto loc_82101DE8;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,6856(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,6960(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,7552(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,7656(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_82101AC8:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40250
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40250;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
loc_82101B30:
	// bl 0x8215e5b0
	sub_8215E5B0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82101c60
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82101C60;
	// bl 0x8215e5b0
	sub_8215E5B0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 9, xer);
	// ble ctx_arrow(ctx)->r6,0x82101b50
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82101B50;
	// li ctx_arrow(ctx)->r24,9
	ctx_arrow(ctx)->r24.s64 = 9;
	// b 0x82101b58
	goto loc_82101B58;
loc_82101B50:
	// bl 0x8215e5b0
	sub_8215E5B0(ctx, base);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
loc_82101B58:
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r31.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82101e58
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82101E58;
	// li ctx_arrow(ctx)->r27,114
	ctx_arrow(ctx)->r27.s64 = 114;
	// lis ctx_arrow(ctx)->r25,-32141
	ctx_arrow(ctx)->r25.s64 = -2106392576;
loc_82101B6C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,214
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 214, xer);
	// bge ctx_arrow(ctx)->r6,0x82101e58
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82101E58;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8215e5c0
	sub_8215E5C0(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r3.s64 + 80;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_82101B88:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82101b88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101B88;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// bl 0x82183530
	sub_82183530(ctx, base);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lwz ctx_arrow(ctx)->r11,-14828(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82101c04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101C04;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,15
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r27.s64 + 15;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 53;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82101C04:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,20
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 20;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r24.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82101b6c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82101B6C;
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
loc_82101C60:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40251
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40251;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40311
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40311;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,145
	ctx_arrow(ctx)->r11.s64 = 145;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82101d34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101D34;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82101d34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101D34;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r3,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// lwz ctx_arrow(ctx)->r4,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r4.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82101D34:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// bl 0x820ec700
	sub_820EC700(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
loc_82101D80:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40253
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40253;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
loc_82101DE8:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82101e04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101E04;
	// bl 0x820f3130
	sub_820F3130(ctx, base);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// bl 0x8215fbb0
	sub_8215FBB0(&ctx);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82101E04:
	// bl 0x820f31c8
	sub_820F31C8(ctx, base);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
loc_82101E58:
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
}

alias(__imp__sub_82101E68) PPC_WEAK_FUNC(sub_82101E68);
PPC_FUNC_IMPL(__imp__sub_82101E68) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x8215fca8
	sub_8215FCA8(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// lis ctx_arrow(ctx)->r30,-32141
	ctx_arrow(ctx)->r30.s64 = -2106392576;
	// bne ctx_arrow(ctx)->r6,0x82101f84
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82101F84;
	// lis ctx_arrow(ctx)->r31,-31993
	ctx_arrow(ctx)->r31.s64 = -2096693248;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1100;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,596
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 596;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r10,4224(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4224);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,708
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 708;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r10,-19428(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -19428);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,820
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 820;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,876
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 876;
	// stb ctx_arrow(ctx)->r3,-19523(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19523));
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// bl 0x820eb1c0
	sub_820EB1C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,932
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 932;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1360
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1360;
	// stb ctx_arrow(ctx)->r9,105(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 105));
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x1;
	// stb ctx_arrow(ctx)->r9,217(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 217));
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,30,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1;
	// stb ctx_arrow(ctx)->r9,329(ctx_arrow(ctx)->r10)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 329));
	// stb ctx_arrow(ctx)->r11,441(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + 441, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_82101F84:
	// lis ctx_arrow(ctx)->r8,-32141
	ctx_arrow(ctx)->r8.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18152
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18152;
	// lwz ctx_arrow(ctx)->r9,-19616(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 12, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-19600(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19600);
	// beq ctx_arrow(ctx)->r6,0x82101ff0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82101FF0;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x82101ff0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82101FF0;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x82101ff0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82101FF0;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4148(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4148);
	// li ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = 12;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + -19616);
loc_82101FF0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82102008) PPC_WEAK_FUNC(sub_82102008);
PPC_FUNC_IMPL(__imp__sub_82102008) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40313
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40313;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,200
	ctx_arrow(ctx)->r7.s64 = 200;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r5,115
	ctx_arrow(ctx)->r5.s64 = 115;
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40314
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40314;
	// lwz ctx_arrow(ctx)->r11,4320(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r11,-19136(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19136);
	// bl 0x82136ad8
	sub_82136AD8(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4320(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40315
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40315;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4320(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40311
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40311;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821020F8) PPC_WEAK_FUNC(sub_821020F8);
PPC_FUNC_IMPL(__imp__sub_821020F8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40316
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40316;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// li ctx_arrow(ctx)->r5,135
	ctx_arrow(ctx)->r5.s64 = 135;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r7,160
	ctx_arrow(ctx)->r7.s64 = 160;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,4328
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 4328;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40015
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40015;
	// lbz ctx_arrow(ctx)->r31,-85(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U8(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// ori ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,40317
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r10.u64 | 40317;
	// lbz ctx_arrow(ctx)->r11,-16892(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210217c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210217C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x8210219c
	goto loc_8210219C;
loc_8210217C:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18152
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18152;
	// lwz ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
loc_8210219C:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// bl 0x820f54c8
	sub_820F54C8(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lbz ctx_arrow(ctx)->r31,-2(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40014
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40014;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r11,-19522(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821021e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821021E0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x821021f4
	goto loc_821021F4;
loc_821021E0:
	// lwz ctx_arrow(ctx)->r10,4228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19116
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19116;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
loc_821021F4:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// bl 0x820f54c8
	sub_820F54C8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lbz ctx_arrow(ctx)->r31,-4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -3;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40017
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40017;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r11,-19521(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102248
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102248;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x82102250
	goto loc_82102250;
loc_82102248:
	// bl 0x820c9990
	sub_820C9990(ctx, base);
	// lhz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 0);
loc_82102250:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// bl 0x820f54c8
	sub_820F54C8(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lbz ctx_arrow(ctx)->r31,-1(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40318
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40318;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lbz ctx_arrow(ctx)->r11,-86(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102290
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102290;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40320
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40320;
	// b 0x82102294
	goto loc_82102294;
loc_82102290:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40319
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40319;
loc_82102294:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// bl 0x820f54c8
	sub_820F54C8(ctx, base);
	// bl 0x820eee80
	sub_820EEE80(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x821022d4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821022D4;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40341
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40341;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// b 0x821022e8
	goto loc_821022E8;
loc_821022D4:
	// bne ctx_arrow(ctx)->r6,0x821022e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821022E0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40342
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40342;
	// b 0x821022e4
	goto loc_821022E4;
loc_821022E0:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40323
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40323;
loc_821022E4:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
loc_821022E8:
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// lbz ctx_arrow(ctx)->r4,-3(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lbz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40321
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40321;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82102328) PPC_WEAK_FUNC(sub_82102328);
PPC_FUNC_IMPL(__imp__sub_82102328) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// stwu ctx_arrow(ctx)->r1,-304(ctx_arrow(ctx)->r1)
	ea = -304 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// bl 0x820eacd8
	sub_820EACD8(&ctx);
	// bl 0x8215fa00
	sub_8215FA00(&ctx);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40334
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40334;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// li ctx_arrow(ctx)->r26,50
	ctx_arrow(ctx)->r26.s64 = 50;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,95
	ctx_arrow(ctx)->r11.s64 = 95;
	// stw ctx_arrow(ctx)->r31,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stw ctx_arrow(ctx)->r31,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// lis ctx_arrow(ctx)->r28,-31994
	ctx_arrow(ctx)->r28.s64 = -2096758784;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// lis ctx_arrow(ctx)->r29,-31991
	ctx_arrow(ctx)->r29.s64 = -2096562176;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,4312
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 4312;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bgt ctx_arrow(ctx)->r6,0x82102708
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82102708;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,9204
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 9204;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_82102404;
	case 1:
		goto loc_8210246C;
	case 2:
		goto loc_82102630;
	case 3:
		goto loc_82102698;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,9220(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,9324(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,9776(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,9880(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_82102404:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40250
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40250;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,304
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 304;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_8210246C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x82155c38
	sub_82155C38(ctx, base);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82102580
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82102580;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r27,114
	ctx_arrow(ctx)->r27.s64 = 114;
	// lis ctx_arrow(ctx)->r25,-32141
	ctx_arrow(ctx)->r25.s64 = -2106392576;
loc_8210248C:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x82155ca0
	sub_82155CA0(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821024A4:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821024a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821024A4;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// bl 0x82183530
	sub_82183530(ctx, base);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lwz ctx_arrow(ctx)->r11,-14824(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82102524
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82102524;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,15
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r27.s64 + 15;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,53
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 53;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82102524:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r22.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r22.u64;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,20
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 20;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r24.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210248c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210248C;
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,304
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 304;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82102580:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40251
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40251;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,205
	ctx_arrow(ctx)->r7.s64 = 205;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r5,145
	ctx_arrow(ctx)->r5.s64 = 145;
	// li ctx_arrow(ctx)->r4,55
	ctx_arrow(ctx)->r4.s64 = 55;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40311
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40311;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x820f5848
	sub_820F5848(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40321
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40321;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x820f5848
	sub_820F5848(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,304
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 304;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82102630:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40253
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40253;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,304
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 304;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
loc_82102698:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821026b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821026B4;
	// bl 0x820f3130
	sub_820F3130(ctx, base);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// bl 0x8215fbb0
	sub_8215FBB0(&ctx);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821026B4:
	// bl 0x820f31c8
	sub_820F31C8(ctx, base);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
loc_82102708:
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,304
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 304;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
}

alias(__imp__sub_82102718) PPC_WEAK_FUNC(sub_82102718);
PPC_FUNC_IMPL(__imp__sub_82102718) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40336
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40336;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r28,50
	ctx_arrow(ctx)->r28.s64 = 50;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,95
	ctx_arrow(ctx)->r11.s64 = 95;
	// stw ctx_arrow(ctx)->r28,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// lis ctx_arrow(ctx)->r29,-31994
	ctx_arrow(ctx)->r29.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// bl 0x8215fa00
	sub_8215FA00(&ctx);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,4312
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 4312;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bgt ctx_arrow(ctx)->r6,0x82102a04
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82102A04;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,10196
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 10196;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_821027E4;
	case 1:
		goto loc_8210284C;
	case 2:
		goto loc_821028F0;
	case 3:
		goto loc_82102958;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,10212(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,10316(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,10480(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,10584(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_821027E4:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40250
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40250;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r28,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed180
	return;
loc_8210284C:
	// bl 0x82155c38
	sub_82155C38(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x82102a04
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82102A04;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40251
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40251;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r28,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14820
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14820;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,205
	ctx_arrow(ctx)->r7.s64 = 205;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40311
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40311;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x820f5848
	sub_820F5848(ctx, base);
	// b 0x821029f0
	goto loc_821029F0;
loc_821028F0:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40253
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40253;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r28,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed180
	return;
loc_82102958:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82102974
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82102974;
	// bl 0x820f3130
	sub_820F3130(ctx, base);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// bl 0x8215fbb0
	sub_8215FBB0(&ctx);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82102974:
	// bl 0x820f31c8
	sub_820F31C8(ctx, base);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,115
	ctx_arrow(ctx)->r11.s64 = 115;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r28,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,112
	ctx_arrow(ctx)->r8.s64 = 112;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14820
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14820;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,205
	ctx_arrow(ctx)->r7.s64 = 205;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
loc_821029F0:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40321
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40321;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x820f5848
	sub_820F5848(ctx, base);
loc_82102A04:
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed180
	return;
}

alias(__imp__sub_82102A18) PPC_WEAK_FUNC(sub_82102A18);
PPC_FUNC_IMPL(__imp__sub_82102A18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40337
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40337;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,200
	ctx_arrow(ctx)->r7.s64 = 200;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r5,115
	ctx_arrow(ctx)->r5.s64 = 115;
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40320
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40320;
	// stw ctx_arrow(ctx)->r11,-19136(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19136);
	// lbz ctx_arrow(ctx)->r30,4240(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U8(ctx,  ctx);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lbz ctx_arrow(ctx)->r11,4240(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40319
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40319;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82102AD0) PPC_WEAK_FUNC(sub_82102AD0);
PPC_FUNC_IMPL(__imp__sub_82102AD0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40238
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40238;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,200
	ctx_arrow(ctx)->r7.s64 = 200;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r5,115
	ctx_arrow(ctx)->r5.s64 = 115;
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40385
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40385;
	// lwz ctx_arrow(ctx)->r11,4344(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r11,-19136(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19136);
	// bl 0x82136ad8
	sub_82136AD8(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4344(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40386
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40386;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82102B98) PPC_WEAK_FUNC(sub_82102B98);
PPC_FUNC_IMPL(__imp__sub_82102B98) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stfd f29,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// stfd f30,-88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -88);
	// stfd f31,-80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -80);
	// stwu ctx_arrow(ctx)->r1,-320(ctx_arrow(ctx)->r1)
	ea = -320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40387
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40387;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r4,50
	ctx_arrow(ctx)->r4.s64 = 50;
	// li ctx_arrow(ctx)->r5,115
	ctx_arrow(ctx)->r5.s64 = 115;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r7,205
	ctx_arrow(ctx)->r7.s64 = 205;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,12436
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 12436;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r24,-32141
	ctx_arrow(ctx)->r24.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,25116
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 25116;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,25460
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 25460;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,25444
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 25444;
loc_82102C08:
	// lwz ctx_arrow(ctx)->r10,-14812(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82102c20
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82102C20;
	// lwz ctx_arrow(ctx)->r11,-8088(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
loc_82102C20:
	// lbz ctx_arrow(ctx)->r10,-8106(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102d20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102D20;
	// lwz ctx_arrow(ctx)->r10,-8092(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// bne ctx_arrow(ctx)->r6,0x82102cbc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82102CBC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,-8084
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + -8084;
	// ldx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102d20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102D20;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-8084
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -8084;
	// li ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r7.s64 = 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// li ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r5.s64 = 16;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x823eda38
	sub_823EDA38(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-8084
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -8084;
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwzx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102ca8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102CA8;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x82102d28
	goto loc_82102D28;
loc_82102CA8:
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x82102d24
	goto loc_82102D24;
loc_82102CBC:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,-4044
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + -4044;
	// ldx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102d20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102D20;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-4044
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -4044;
	// li ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r7.s64 = 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// li ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r5.s64 = 16;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x823eda38
	sub_823EDA38(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-4044
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -4044;
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwzx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102ca8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102CA8;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x82102d28
	goto loc_82102D28;
loc_82102D20:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
loc_82102D24:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
loc_82102D28:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 - ctx_arrow(ctx)->r11.s64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 10, xer);
	// blt ctx_arrow(ctx)->r6,0x82102c08
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82102C08;
	// lwz ctx_arrow(ctx)->r11,-8092(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82102d64
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82102D64;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40388
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40388;
	// b 0x82102d68
	goto loc_82102D68;
loc_82102D64:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40041
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40041;
loc_82102D68:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,205
	ctx_arrow(ctx)->r7.s64 = 205;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// li ctx_arrow(ctx)->r5,115
	ctx_arrow(ctx)->r5.s64 = 115;
	// li ctx_arrow(ctx)->r4,240
	ctx_arrow(ctx)->r4.s64 = 240;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,25424
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 25424;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,25416
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 25416;
	// lis ctx_arrow(ctx)->r11,-4195
	ctx_arrow(ctx)->r11.s64 = -274923520;
	// ori ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,45613
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 | 45613;
	// lis ctx_arrow(ctx)->r11,-30584
	ctx_arrow(ctx)->r11.s64 = -2004353024;
	// ori ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,34953
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 | 34953;
loc_82102DAC:
	// lwz ctx_arrow(ctx)->r10,-14812(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82102dc4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82102DC4;
	// lwz ctx_arrow(ctx)->r11,-8088(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
loc_82102DC4:
	// lbz ctx_arrow(ctx)->r10,-8106(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102ee0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102EE0;
	// lwz ctx_arrow(ctx)->r10,-8092(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// bne ctx_arrow(ctx)->r6,0x82102e44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82102E44;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,-8084
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + -8084;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// ldx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102ee0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102EE0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,-8084
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + -8084;
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102e34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102E34;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,-8084
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + -8084;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 24;
	// ldx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x82102ee8
	goto loc_82102EE8;
loc_82102E34:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x82102ee4
	goto loc_82102EE4;
loc_82102E44:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,-4044
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + -4044;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// ldx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102ee0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102EE0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-4044
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -4044;
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82102e34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102E34;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-4044
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -4044;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 24;
	// ldx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// mulhw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = (int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r28.s32)) >> 32;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3F) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 6;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// mulhw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = (int64_t(ctx_arrow(ctx)->r10.s32) * int64_t(ctx_arrow(ctx)->r29.s32)) >> 32;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1F) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 5;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 * 60;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// mulhw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.s64 = (int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r29.s32)) >> 32;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1F) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 5;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,1,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,60
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 * 60;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// bl 0x820ea440
	sub_820EA440(ctx, base);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x82102ee8
	goto loc_82102EE8;
loc_82102EE0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
loc_82102EE4:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
loc_82102EE8:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r11.s64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 10, xer);
	// blt ctx_arrow(ctx)->r6,0x82102dac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82102DAC;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,200
	ctx_arrow(ctx)->r8.s64 = 200;
	// li ctx_arrow(ctx)->r7,205
	ctx_arrow(ctx)->r7.s64 = 205;
	// li ctx_arrow(ctx)->r6,40
	ctx_arrow(ctx)->r6.s64 = 40;
	// li ctx_arrow(ctx)->r5,135
	ctx_arrow(ctx)->r5.s64 = 135;
	// li ctx_arrow(ctx)->r4,320
	ctx_arrow(ctx)->r4.s64 = 320;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820eaac0
	sub_820EAAC0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-14812(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x82102f5c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82102F5C;
	// beq ctx_arrow(ctx)->r6,0x82102f50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82102F50;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bge ctx_arrow(ctx)->r6,0x82102f88
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82102F88;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40391
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40391;
	// b 0x82102f64
	goto loc_82102F64;
loc_82102F50:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40390
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40390;
	// b 0x82102f64
	goto loc_82102F64;
loc_82102F5C:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40389;
loc_82102F64:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
loc_82102F88:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28184
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 28184;
	// lfs f31,-14404(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,368
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 368;
	// lfs f30,-14408(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lfs f29,-14412(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// bl 0x821463f0
	sub_821463F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f7,f31
	ctx.fpscr.disableFlushMode();
	ctx.f7.f64 = f31.f64;
	// li ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 2;
	// fmr f6,f30
	ctx.f6.f64 = f30.f64;
	// fmr f5,f29
	ctx.f5.f64 = f29.f64;
	// lfs f11,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f10,f11
	ctx.f10.f64 = ctx.f11.f64;
	// stw ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// fmr f4,f11
	ctx.f4.f64 = ctx.f11.f64;
	// fmr f3,f11
	ctx.f3.f64 = ctx.f11.f64;
	// fmr f2,f11
	ctx.f2.f64 = ctx.f11.f64;
	// lfs f9,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// fmr f8,f9
	ctx.f8.f64 = ctx.f9.f64;
	// fmr f1,f11
	ctx.f1.f64 = ctx.f11.f64;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x82099388
	sub_82099388(&ctx);
	// lwz ctx_arrow(ctx)->r11,-8092(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,25412
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 25412;
	// bne ctx_arrow(ctx)->r6,0x82103100
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103100;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = -1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-19088
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -19088;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,6
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 6;
loc_82103020:
	// lwz ctx_arrow(ctx)->r8,14(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8210303c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210303C;
	// lhz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210303c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210303C;
	// lhz ctx_arrow(ctx)->r3,-2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -2);
loc_8210303C:
	// lwz ctx_arrow(ctx)->r8,42(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82103058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103058;
	// lhz ctx_arrow(ctx)->r3,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 28);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103058;
	// lhz ctx_arrow(ctx)->r3,26(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 26);
loc_82103058:
	// lwz ctx_arrow(ctx)->r8,70(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82103074
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103074;
	// lhz ctx_arrow(ctx)->r3,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 56);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103074
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103074;
	// lhz ctx_arrow(ctx)->r3,54(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 54);
loc_82103074:
	// lwz ctx_arrow(ctx)->r8,98(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82103090
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103090;
	// lhz ctx_arrow(ctx)->r3,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 84);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103090
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103090;
	// lhz ctx_arrow(ctx)->r3,82(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 82);
loc_82103090:
	// lwz ctx_arrow(ctx)->r8,126(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821030ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821030AC;
	// lhz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 112);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821030ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821030AC;
	// lhz ctx_arrow(ctx)->r3,110(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 110);
loc_821030AC:
	// lwz ctx_arrow(ctx)->r8,154(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821030c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821030C8;
	// lhz ctx_arrow(ctx)->r3,140(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 140);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821030c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821030C8;
	// lhz ctx_arrow(ctx)->r3,138(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 138);
loc_821030C8:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,168
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 168;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,846
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 846;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r8.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82103020
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82103020;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82103100
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82103100;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// b 0x8210310c
	goto loc_8210310C;
loc_82103100:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
loc_8210310C:
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8092(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82103178
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103178;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x82103150
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82103150;
	// beq ctx_arrow(ctx)->r6,0x82103144
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103144;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bge ctx_arrow(ctx)->r6,0x82103178
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82103178;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,39957
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 39957;
	// b 0x82103158
	goto loc_82103158;
loc_82103144:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,39956
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 39956;
	// b 0x82103158
	goto loc_82103158;
loc_82103150:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,39955
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 39955;
loc_82103158:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// b 0x82103184
	goto loc_82103184;
loc_82103178:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
loc_82103184:
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-14812(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103260
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103260;
	// lbz ctx_arrow(ctx)->r11,-8106(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821031b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821031B4;
	// lwz ctx_arrow(ctx)->r11,-8088(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bgt ctx_arrow(ctx)->r6,0x821031b8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821031B8;
loc_821031B4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821031B8:
	// clrlwi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -4, xer);
	// bne ctx_arrow(ctx)->r6,0x821031d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821031D8;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821031dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821031DC;
loc_821031D8:
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_821031DC:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,39942
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 39942;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
	// lbz ctx_arrow(ctx)->r11,-8106(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210321c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210321C;
	// bl 0x820f4750
	sub_820F4750(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8088(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 10;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, ctx_arrow(ctx)->r11.s32, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bgt ctx_arrow(ctx)->r6,0x82103220
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82103220;
loc_8210321C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82103220:
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -5, xer);
	// bne ctx_arrow(ctx)->r6,0x82103240
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103240;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0xFF;
	// li ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103244
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103244;
loc_82103240:
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
loc_82103244:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,39941
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 39941;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// bl 0x820f5558
	sub_820F5558(ctx, base);
loc_82103260:
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// lfd f29,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-88(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-80(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed178
	return;
}

alias(__imp__sub_82103278) PPC_WEAK_FUNC(sub_82103278);
PPC_FUNC_IMPL(__imp__sub_82103278) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82103294
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103294;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r8,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82103298
	goto loc_82103298;
loc_82103294:
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
loc_82103298:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-19116
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -19116;
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r7.s32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821032f4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821032F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x821032e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821032E0;
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1360
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1360;
	// lbz ctx_arrow(ctx)->r11,441(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821032e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821032E0;
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// b 0x821032e8
	goto loc_821032E8;
loc_821032E0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_821032E8:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r11.s32, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bge ctx_arrow(ctx)->r6,0x821032f8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821032F8;
loc_821032F4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821032F8:
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// blr 
	return;
}

alias(__imp__sub_82103300) PPC_WEAK_FUNC(sub_82103300);
PPC_FUNC_IMPL(__imp__sub_82103300) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x82184a38
	sub_82184A38(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82103330
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103330;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r30,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82103334
	goto loc_82103334;
loc_82103330:
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
loc_82103334:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821033ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821033EC;
	// li ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r4.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82183f28
	sub_82183F28(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821033ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821033EC;
	// bl 0x821581e8
	sub_821581E8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821033ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821033EC;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14756
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 14756;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = 1;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8216c178
	sub_8216C178(&ctx);
	// lwz ctx_arrow(ctx)->r3,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821033a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821033A4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x821033a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821033A8;
loc_821033A4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_821033A8:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821033dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821033DC;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x820caaa8
	sub_820CAAA8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821033d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821033D8;
	// bl 0x82139ab8
	sub_82139AB8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821033dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821033DC;
loc_821033D8:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r30.u64;
loc_821033DC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14748
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 14748;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// b 0x821033f0
	goto loc_821033F0;
loc_821033EC:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r30.u64;
loc_821033F0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x8210340c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210340C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19420(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19420);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed18c
	return;
loc_8210340C:
	// bne ctx_arrow(ctx)->r6,0x82103440
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103440;
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82183f28
	sub_82183F28(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,-19420(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19420);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed18c
	return;
loc_82103440:
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19420(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19420);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82103458) PPC_WEAK_FUNC(sub_82103458);
PPC_FUNC_IMPL(__imp__sub_82103458) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8209ea70
	sub_8209EA70(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// beq ctx_arrow(ctx)->r6,0x821034b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821034B4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-18152
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -18152;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 31, xer);
	// beq ctx_arrow(ctx)->r6,0x8210353c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210353C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,38
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 38, xer);
	// beq ctx_arrow(ctx)->r6,0x8210353c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210353C;
loc_821034AC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82103540
	goto loc_82103540;
loc_821034B4:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-18152
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -18152;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 16;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821034ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821034AC;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821034f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821034F0;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821034f4
	goto loc_821034F4;
loc_821034F0:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_821034F4:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 20;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821034ac
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821034AC;
	// li ctx_arrow(ctx)->r3,75
	ctx_arrow(ctx)->r3.s64 = 75;
	// bl 0x82136fa0
	sub_82136FA0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210353c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210353C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 12;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8210353c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210353C;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x820e98b8
	sub_820E98B8(ctx, base);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r3.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// b 0x82103540
	goto loc_82103540;
loc_8210353C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82103540:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82103558) PPC_WEAK_FUNC(sub_82103558);
PPC_FUNC_IMPL(__imp__sub_82103558) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,3988(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 3988);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r9,4131(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,3992(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 3992);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 3996);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4008);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4004);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4000);
	// bne ctx_arrow(ctx)->r6,0x82103600
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103600;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,-19496(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821035c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821035C0;
	// bl 0x820ea880
	sub_820EA880(ctx, base);
loc_821035C0:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stb ctx_arrow(ctx)->r11,4131(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 4131, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stw ctx_arrow(ctx)->r11,4220(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4220);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-19476(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x821035e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821035E8;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r10,-19476(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19476);
loc_821035E8:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-19444(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82103600
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103600;
	// li ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r10.s64 = 5;
	// stw ctx_arrow(ctx)->r10,-19444(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19444);
loc_82103600:
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19540(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210363c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210363C;
	// li ctx_arrow(ctx)->r4,32767
	ctx_arrow(ctx)->r4.s64 = 32767;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x823d22e0
	sub_823D22E0(ctx, base);
	// lis ctx_arrow(ctx)->r10,-31994
	ctx_arrow(ctx)->r10.s64 = -2096758784;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r11,26372(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 26372);
	// bl 0x82144ba8
	sub_82144BA8(&ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-19540(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -19540);
loc_8210363C:
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,-19428(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82103458
	sub_82103458(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103694
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103694;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -19428);
	// bl 0x82103458
	sub_82103458(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103694
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103694;
loc_82103668:
	// lwz ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,15
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 15, xer);
	// stw ctx_arrow(ctx)->r3,-19428(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -19428);
	// bge ctx_arrow(ctx)->r6,0x8210368c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210368C;
	// bl 0x82103458
	sub_82103458(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103668
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103668;
	// b 0x82103694
	goto loc_82103694;
loc_8210368C:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -19428);
loc_82103694:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3864
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3864;
	// stw ctx_arrow(ctx)->r10,44(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 44);
	// stw ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 40);
	// stw ctx_arrow(ctx)->r10,-20(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -20);
	// stw ctx_arrow(ctx)->r10,-620(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -620);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r10,-1016(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -1016);
	// stw ctx_arrow(ctx)->r10,-1072(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -1072);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,-19560(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19560);
	// bl 0x8209ea70
	sub_8209EA70(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210370c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210370C;
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r3.s64 = 4;
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// stb ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + -19523, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19424);
	// bl 0x820c9aa0
	sub_820C9AA0(&ctx);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,253
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 253;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stb ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + -19523, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_8210370C:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103744
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103744;
	// li ctx_arrow(ctx)->r3,278
	ctx_arrow(ctx)->r3.s64 = 278;
	// bl 0x820d03e8
	sub_820D03E8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32164
	ctx_arrow(ctx)->r11.s64 = -2107899904;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-3616
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -3616;
	// lwz ctx_arrow(ctx)->r3,4448(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821186e0
	sub_821186E0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stw ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4168);
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823ada90
	sub_823ADA90(ctx, base);
loc_82103744:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82103758) PPC_WEAK_FUNC(sub_82103758);
PPC_FUNC_IMPL(__imp__sub_82103758) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82160588
	sub_82160588(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,3864
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 3864;
	// bne ctx_arrow(ctx)->r6,0x821037bc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821037BC;
	// lbz ctx_arrow(ctx)->r11,376(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821037bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821037BC;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,-15660
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + -15660;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	// b 0x821037c8
	goto loc_821037C8;
loc_821037BC:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,-15660
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + -15660;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
loc_821037C8:
	// stw ctx_arrow(ctx)->r11,-1200(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -1200);
	// bl 0x8209ea70
	sub_8209EA70(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821037e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821037E8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,-1220(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -1220);
	// stw ctx_arrow(ctx)->r11,-1208(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -1208);
loc_821037E8:
	// bl 0x820eb5e8
	sub_820EB5E8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,-19416
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + -19416;
	// li ctx_arrow(ctx)->r26,-1
	ctx_arrow(ctx)->r26.s64 = -1;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r28.u64;
loc_82103800:
	// li ctx_arrow(ctx)->r4,4096
	ctx_arrow(ctx)->r4.s64 = 4096;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103828
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103828;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82103828
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103828;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820ea880
	sub_820EA880(ctx, base);
loc_82103828:
	// lwz ctx_arrow(ctx)->r11,-19496(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210385c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210385C;
	// lis ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 1048576;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210385c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210385C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8210385c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210385C;
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// bl 0x820ea758
	sub_820EA758(&ctx);
loc_8210385C:
	// bl 0x820ea6f8
	sub_820EA6F8(&ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x820f6290
	sub_820F6290(ctx, base);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r3.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82103878
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103878;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64;
	// bl 0x820ecc28
	sub_820ECC28(ctx, base);
loc_82103878:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 12;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r11.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82103800
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82103800;
	// lis ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// ori ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,40960
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64 | 40960;
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4224);
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r28,-32141
	ctx_arrow(ctx)->r28.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// bne ctx_arrow(ctx)->r6,0x82103a80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103A80;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lfs f0,-19588(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lfs f12,-19584(ctx_arrow(ctx)->r28)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4008);
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4004);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4000);
	// stw ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stw ctx_arrow(ctx)->r11,-20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -20);
	// stw ctx_arrow(ctx)->r11,-620(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -620);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r11,-1016(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -1016);
	// stw ctx_arrow(ctx)->r11,-1072(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -1072);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// ble ctx_arrow(ctx)->r6,0x82103934
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82103934;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f11,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x82103934
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82103934;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4008);
	// b 0x82103a80
	goto loc_82103A80;
loc_82103934:
	// bl 0x82103278
	sub_82103278(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103968
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103968;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82103968
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82103968;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,24804(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82103968
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82103968;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4000);
	// b 0x82103a80
	goto loc_82103A80;
loc_82103968:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f12
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f12.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f12.f64));
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,160
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 160;
	// stfiwx f0,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821039a0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821039A0;
	// lwz ctx_arrow(ctx)->r9,-1200(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821039a0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821039A0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x82103a80
	goto loc_82103A80;
loc_821039A0:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,140
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 140;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821039c4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821039C4;
	// lwz ctx_arrow(ctx)->r9,-1204(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821039c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821039C4;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,-1072(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -1072);
	// b 0x82103a80
	goto loc_82103A80;
loc_821039C4:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,120
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 120;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821039e8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821039E8;
	// lwz ctx_arrow(ctx)->r9,-1208(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821039e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821039E8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,-1016(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -1016);
	// b 0x82103a80
	goto loc_82103A80;
loc_821039E8:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,100
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 100;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82103a0c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82103A0C;
	// lwz ctx_arrow(ctx)->r9,-1216(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103a0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103A0C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,-620(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -620);
	// b 0x82103a80
	goto loc_82103A80;
loc_82103A0C:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 80;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82103a30
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82103A30;
	// lwz ctx_arrow(ctx)->r9,-1212(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103a30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103A30;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// b 0x82103a80
	goto loc_82103A80;
loc_82103A30:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82103a54
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82103A54;
	// lwz ctx_arrow(ctx)->r9,-1220(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103a54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103A54;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,-20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -20);
	// b 0x82103a80
	goto loc_82103A80;
loc_82103A54:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 40;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82103a78
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82103A78;
	// lwz ctx_arrow(ctx)->r11,-1224(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103a78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103A78;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// b 0x82103a80
	goto loc_82103A80;
loc_82103A78:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
loc_82103A80:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82103a9c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103A9C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r30,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82103aa0
	goto loc_82103AA0;
loc_82103A9C:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r21.u64;
loc_82103AA0:
	// bl 0x82103300
	sub_82103300(ctx, base);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -15652);
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103bb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103BB4;
	// lwz ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82103bb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103BB4;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19608(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82103bb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103BB4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82103bb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103BB4;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f0,-19584(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2776
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2776;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r21.u64;
	// stb ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0));
	// stb ctx_arrow(ctx)->r10,3(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 3));
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// stb ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 2));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24780
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 24780;
	// stb ctx_arrow(ctx)->r9,1(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 1));
	// lfs f13,-12(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82103bb4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82103BB4;
	// lfs f0,0(ctx_arrow(ctx)->r23)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// lfs f13,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 + ctx.f13.f64));
	// lfs f0,-19588(ctx_arrow(ctx)->r27)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bgt ctx_arrow(ctx)->r6,0x82103b38
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82103B38;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
loc_82103B38:
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -15652);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r11,-1072(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -1072);
	// stw ctx_arrow(ctx)->r11,-1016(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -1016);
	// stw ctx_arrow(ctx)->r11,-620(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -620);
	// bl 0x820a05b8
	sub_820A05B8(&ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103bb4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103BB4;
	// bl 0x82184a38
	sub_82184A38(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82103b8c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103B8C;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// b 0x82103ba8
	goto loc_82103BA8;
loc_82103B8C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82103bb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82103BB4;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
loc_82103BA8:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
loc_82103BB4:
	// li ctx_arrow(ctx)->r4,4096
	ctx_arrow(ctx)->r4.s64 = 4096;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r29,-32010
	ctx_arrow(ctx)->r29.s64 = -2097807360;
	// beq ctx_arrow(ctx)->r6,0x82103c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C08;
	// bl 0x82103278
	sub_82103278(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C08;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,6961
	ctx_arrow(ctx)->r8.s64 = 6961;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,3988(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 3988);
	// b 0x82103d3c
	goto loc_82103D3C;
loc_82103C08:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103d04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103D04;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103c30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C30;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 3996);
loc_82103C30:
	// lwz ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103c48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C48;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,3988(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 3988);
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103C48:
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103c5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C5C;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r21.u64;
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103C5C:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103c70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C70;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r21.u64;
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103C70:
	// lwz ctx_arrow(ctx)->r11,-20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103c84
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C84;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r21.u64;
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103C84:
	// lwz ctx_arrow(ctx)->r11,-620(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103c98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103C98;
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r21.u64;
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103C98:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103cac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103CAC;
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r21.u64;
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103CAC:
	// lwz ctx_arrow(ctx)->r11,-1016(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103cc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103CC0;
	// mr ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r21.u64;
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103CC0:
	// lwz ctx_arrow(ctx)->r11,-1072(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103cd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103CD4;
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r21.u64;
	// b 0x82103ce4
	goto loc_82103CE4;
loc_82103CD4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103ce4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103CE4;
	// stw ctx_arrow(ctx)->r21,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
loc_82103CE4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,7009
	ctx_arrow(ctx)->r8.s64 = 7009;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82103d3c
	goto loc_82103D3C;
loc_82103D04:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103d48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103D48;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,7014
	ctx_arrow(ctx)->r8.s64 = 7014;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 3996);
loc_82103D3C:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_82103D48:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103d7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103D7C;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r21,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82103D7C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103da0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103DA0;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r21,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82103DA0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103dc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103DC0;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r21,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82103DC0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// lwz ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103e04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103E04;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.s64 = 27;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,4131(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + 4131, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x82103300
	sub_82103300(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82103E04:
	// lwz ctx_arrow(ctx)->r11,3988(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103f50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103F50;
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r9,9362
	ctx_arrow(ctx)->r9.s64 = 613548032;
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,18725
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64 | 18725;
	// lbz ctx_arrow(ctx)->r10,-19523(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103e98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103E98;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18152
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18152;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r31.u32)) >> 32;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31,1,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 31) & 0x7FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 14;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r3,-19428(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19428);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-19600(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19600);
	// bl 0x82103458
	sub_82103458(&ctx);
	// lbz ctx_arrow(ctx)->r10,-19523(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// b 0x82103ec4
	goto loc_82103EC4;
loc_82103E98:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-18152
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -18152;
	// lwz ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-19600(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -19600);
loc_82103EC4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103f20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103F20;
loc_82103ED0:
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r31.u32)) >> 32;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31,1,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 31) & 0x7FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 14;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820c99d8
	sub_820C99D8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103ed0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103ED0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
loc_82103F20:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,-19596(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19596);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,4148(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4148);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = 12;
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19616);
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82103F50:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103f70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103F70;
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82103F70:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r19.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103f90
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103F90;
	// li ctx_arrow(ctx)->r11,19
	ctx_arrow(ctx)->r11.s64 = 19;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82103F90:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r18.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103fa8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103FA8;
	// bl 0x820ecbb8
	sub_820ECBB8(ctx, base);
	// bl 0x82103300
	sub_82103300(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82103FA8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r17.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103fc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103FC8;
	// li ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = 16;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82103FC8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r16.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82103fe8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82103FE8;
	// li ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = 32;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82103FE8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r15,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r15.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104008
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104008;
	// li ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r11.s64 = 17;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82104008:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r14.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104028
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104028;
	// li ctx_arrow(ctx)->r11,18
	ctx_arrow(ctx)->r11.s64 = 18;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_82104028:
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104040
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104040;
	// li ctx_arrow(ctx)->r11,43
	ctx_arrow(ctx)->r11.s64 = 43;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
loc_82104040:
	// bl 0x82103300
	sub_82103300(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
}

alias(__imp__sub_82104050) PPC_WEAK_FUNC(sub_82104050);
PPC_FUNC_IMPL(__imp__sub_82104050) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -88);
	// stwu ctx_arrow(ctx)->r1,-320(ctx_arrow(ctx)->r1)
	ea = -320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820f5978
	sub_820F5978(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40012
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40012;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// li ctx_arrow(ctx)->r11,55
	ctx_arrow(ctx)->r11.s64 = 55;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,95
	ctx_arrow(ctx)->r11.s64 = 95;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// lis ctx_arrow(ctx)->r28,-31994
	ctx_arrow(ctx)->r28.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r29,-31991
	ctx_arrow(ctx)->r29.s64 = -2096562176;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40014
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40014;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r26,57
	ctx_arrow(ctx)->r26.s64 = 57;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-15660
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -15660;
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 20;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,3864
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 3864;
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104154
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104154;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82104154:
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x820ec9c0
	sub_820EC9C0(&ctx);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40015
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40015;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 40;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// beq ctx_arrow(ctx)->r6,0x821041f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821041F8;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821041F8:
	// lwz ctx_arrow(ctx)->r11,-1224(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40016
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40016;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// lwz ctx_arrow(ctx)->r11,-20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// beq ctx_arrow(ctx)->r6,0x821042b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821042B0;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821042B0:
	// lwz ctx_arrow(ctx)->r11,-1220(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40017
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40017;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 80;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// beq ctx_arrow(ctx)->r6,0x82104368
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104368;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82104368:
	// lwz ctx_arrow(ctx)->r11,-1212(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40018
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40018;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,100
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 100;
	// lwz ctx_arrow(ctx)->r11,-620(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// beq ctx_arrow(ctx)->r6,0x82104420
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104420;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82104420:
	// lwz ctx_arrow(ctx)->r11,-1216(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40019
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40019;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,120
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 120;
	// lwz ctx_arrow(ctx)->r11,-1016(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// beq ctx_arrow(ctx)->r6,0x821044d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821044D8;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_821044D8:
	// lwz ctx_arrow(ctx)->r11,-1208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40222
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40222;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,140
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 140;
	// lwz ctx_arrow(ctx)->r11,-1072(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// beq ctx_arrow(ctx)->r6,0x82104590
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104590;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82104590:
	// lwz ctx_arrow(ctx)->r11,-1204(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// bl 0x820eee80
	sub_820EEE80(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r25.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82104618
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82104618;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40341
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40341;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x82104630
	goto loc_82104630;
loc_82104618:
	// bne ctx_arrow(ctx)->r6,0x82104624
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104624;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40342
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40342;
	// b 0x82104628
	goto loc_82104628;
loc_82104624:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40323
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40323;
loc_82104628:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
loc_82104630:
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,160
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 160;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// beq ctx_arrow(ctx)->r6,0x82104688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104688;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 14;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// li ctx_arrow(ctx)->r3,55
	ctx_arrow(ctx)->r3.s64 = 55;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
loc_82104688:
	// lwz ctx_arrow(ctx)->r11,-1200(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19116
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19116;
	// lwz ctx_arrow(ctx)->r10,4228(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r27,160
	ctx_arrow(ctx)->r27.s64 = 160;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 20;
	// stw ctx_arrow(ctx)->r27,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r8.s64 = 255;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r26,-32141
	ctx_arrow(ctx)->r26.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104768
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104768;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lhz ctx_arrow(ctx)->r3,-18152(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -18152);
	// b 0x82104788
	goto loc_82104788;
loc_82104768:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18152
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18152;
	// lwz ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
loc_82104788:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1224(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r27,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 40;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18248
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18248;
	// lwz ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1220(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r27,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,60
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 60;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// stw ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104894
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104894;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820c99b8
	sub_820C99B8(ctx, base);
	// b 0x82104898
	goto loc_82104898;
loc_82104894:
	// bl 0x820c9990
	sub_820C9990(ctx, base);
loc_82104898:
	// lhz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 0);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1212(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r27,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// lwz ctx_arrow(ctx)->r11,-1228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 80;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,143
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & 143;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x8210e198
	sub_8210E198(ctx, base);
	// extsh ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15124(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r31,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820ec9c0
	sub_820EC9C0(ctx, base);
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8210492c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210492C;
	// lwz ctx_arrow(ctx)->r11,4220(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8210492c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210492C;
	// lfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x820eec78
	sub_820EEC78(ctx, base);
loc_8210492C:
	// bl 0x820ec830
	sub_820EC830(ctx, base);
	// bl 0x82103278
	sub_82103278(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104954
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104954;
	// bl 0x820eacd8
	sub_820EACD8(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
loc_82104954:
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82104a1c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104A1C;
	// lwz ctx_arrow(ctx)->r11,4220(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82104a1c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82104A1C;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40255
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40255;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,148
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 148;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lfs f2,25480(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,24784(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lfs f1,25476(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209bbb8
	sub_8209BBB8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// li ctx_arrow(ctx)->r5,200
	ctx_arrow(ctx)->r5.s64 = 200;
	// li ctx_arrow(ctx)->r6,50
	ctx_arrow(ctx)->r6.s64 = 50;
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// bl 0x8209baa8
	sub_8209BAA8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// lfs f1,25472(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,148
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 148;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
loc_82104A1C:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40338
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40338;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// lfs f2,25480(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,24784(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lfs f1,25476(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209bbb8
	sub_8209BBB8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,148
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 148;
	// li ctx_arrow(ctx)->r5,200
	ctx_arrow(ctx)->r5.s64 = 200;
	// li ctx_arrow(ctx)->r6,50
	ctx_arrow(ctx)->r6.s64 = 50;
	// li ctx_arrow(ctx)->r7,50
	ctx_arrow(ctx)->r7.s64 = 50;
	// bl 0x8209baa8
	sub_8209BAA8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// lfs f1,25472(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,148
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 148;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// lfd f31,-88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed174
	return;
}

alias(__imp__sub_82104AD0) PPC_WEAK_FUNC(sub_82104AD0);
PPC_FUNC_IMPL(__imp__sub_82104AD0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r22.s64 = 0;
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104af0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104AF0;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_82104AF0:
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r23,1
	ctx_arrow(ctx)->r23.s64 = 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-16860
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -16860;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,4056
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 4056;
	// bne ctx_arrow(ctx)->r6,0x82104c80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104C80;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r28,-32141
	ctx_arrow(ctx)->r28.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4008);
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4004);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lfs f0,-19588(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4000);
	// ble ctx_arrow(ctx)->r6,0x82104b84
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82104B84;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19584(ctx_arrow(ctx)->r28)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82104b84
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82104B84;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4008);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,1212(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1212);
	// b 0x82104c80
	goto loc_82104C80;
loc_82104B84:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,1212(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1212);
	// bl 0x8209ea70
	sub_8209EA70(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82104c80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104C80;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
loc_82104BA0:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,39
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 39, xer);
	// beq ctx_arrow(ctx)->r6,0x82104bec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104BEC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,60
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r25.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82104ba0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82104BA0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82104BC0:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104bf4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104BF4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19584(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,15764(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x82104bf4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82104BF4;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,1212(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1212);
	// b 0x82104c80
	goto loc_82104C80;
loc_82104BEC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// b 0x82104bc0
	goto loc_82104BC0;
loc_82104BF4:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104c04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104C04;
	// bl 0x8215fde8
	sub_8215FDE8(ctx, base);
loc_82104C04:
	// li ctx_arrow(ctx)->r30,6
	ctx_arrow(ctx)->r30.s64 = 6;
loc_82104C08:
	// li ctx_arrow(ctx)->r3,39
	ctx_arrow(ctx)->r3.s64 = 39;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// bl 0x820ea4d0
	sub_820EA4D0(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82104c3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104C3C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x82104c3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104C3C;
	// bl 0x820ebbb0
	sub_820EBBB0(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104c3c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104C3C;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r23.u64;
loc_82104C3C:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,-19584(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,22
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 * 22;
	// stfiwx f0,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,131
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 131;
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82104c6c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82104C6C;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104c7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104C7C;
loc_82104C6C:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x82104c08
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82104C08;
	// b 0x82104c80
	goto loc_82104C80;
loc_82104C7C:
	// stw ctx_arrow(ctx)->r30,1212(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1212);
loc_82104C80:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// beq ctx_arrow(ctx)->r6,0x82104e90
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104E90;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82104e68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104E68;
	// lwz ctx_arrow(ctx)->r3,1212(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82104df8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104DF8;
	// lis ctx_arrow(ctx)->r29,-32010
	ctx_arrow(ctx)->r29.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r10,4240(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r28,4228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stb ctx_arrow(ctx)->r11,-19522(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -19522, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4228);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// stw ctx_arrow(ctx)->r11,-20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -20);
	// stw ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -16);
	// stw ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -12);
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// stw ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-19424(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 7, xer);
	// blt ctx_arrow(ctx)->r6,0x82104d18
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82104D18;
	// li ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 2;
	// stw ctx_arrow(ctx)->r10,-19424(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19424);
loc_82104D18:
	// bl 0x820c9ab0
	sub_820C9AB0(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 16, xer);
	// blt ctx_arrow(ctx)->r6,0x82104d2c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82104D2C;
	// li ctx_arrow(ctx)->r3,15
	ctx_arrow(ctx)->r3.s64 = 15;
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
loc_82104D2C:
	// lwz ctx_arrow(ctx)->r7,4228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x82104d6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104D6C;
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82104d54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104D54;
	// lbz ctx_arrow(ctx)->r11,4240(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// bne ctx_arrow(ctx)->r6,0x82104d58
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104D58;
loc_82104D54:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82104D58:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// lwz ctx_arrow(ctx)->r7,4228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// beq ctx_arrow(ctx)->r6,0x82104d70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104D70;
loc_82104D6C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82104D70:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r10,-19523(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// beq ctx_arrow(ctx)->r6,0x82104d8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104D8C;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 16;
	// b 0x82104d90
	goto loc_82104D90;
loc_82104D8C:
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,239
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 239;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
loc_82104D90:
	// stb ctx_arrow(ctx)->r10,-19523(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19523));
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 6, xer);
	// beq ctx_arrow(ctx)->r6,0x82104e68
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104E68;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19116
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19116;
	// lis ctx_arrow(ctx)->r8,-32010
	ctx_arrow(ctx)->r8.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4224(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r10.s32, xer);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x82104dd4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104DD4;
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 4224);
	// b 0x82104e68
	goto loc_82104E68;
loc_82104DD4:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r11.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82104de4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82104DE4;
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 4224);
	// b 0x82104e68
	goto loc_82104E68;
loc_82104DE4:
	// bl 0x820f6248
	sub_820F6248(&ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r3.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x82104e68
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82104E68;
	// stw ctx_arrow(ctx)->r3,4224(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 4224);
	// b 0x82104e68
	goto loc_82104E68;
loc_82104DF8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
loc_82104DFC:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,39
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 39, xer);
	// beq ctx_arrow(ctx)->r6,0x82104e50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104E50;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,60
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r25.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82104dfc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82104DFC;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82104E1C:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82104e58
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104E58;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x82104e38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104E38;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x82104e58
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82104E58;
loc_82104E38:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,-19522(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -19522, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x820f6680
	sub_820F6680(ctx, base);
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r23.u64;
	// b 0x82104e70
	goto loc_82104E70;
loc_82104E50:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// b 0x82104e1c
	goto loc_82104E1C;
loc_82104E58:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,-19522(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -19522, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x820f6680
	sub_820F6680(ctx, base);
loc_82104E68:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 3996);
loc_82104E70:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,7496
	ctx_arrow(ctx)->r8.s64 = 7496;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82104ec8
	goto loc_82104EC8;
loc_82104E90:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104ed4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104ED4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,7501
	ctx_arrow(ctx)->r8.s64 = 7501;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 3996);
loc_82104EC8:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_82104ED4:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104f08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104F08;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82104F08:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104f2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104F2C;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82104F2C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104f50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104F50;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82104F50:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104f70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104F70;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82104F70:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104f94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104F94;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,21
	ctx_arrow(ctx)->r11.s64 = 21;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
loc_82104F94:
	// lwz ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104fb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104FB8;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_82104FB8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_82104FC0) PPC_WEAK_FUNC(sub_82104FC0);
PPC_FUNC_IMPL(__imp__sub_82104FC0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x82160588
	sub_82160588(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82104fdc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82104FDC;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_82104FDC:
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// bne ctx_arrow(ctx)->r6,0x8210511c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210511C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r28,-32141
	ctx_arrow(ctx)->r28.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4008);
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4004);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lfs f0,-19588(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4000);
	// ble ctx_arrow(ctx)->r6,0x82105060
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82105060;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19584(ctx_arrow(ctx)->r28)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82105060
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82105060;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4008);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// b 0x82105118
	goto loc_82105118;
loc_82105060:
	// bl 0x8209ea70
	sub_8209EA70(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105078
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105078;
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// b 0x82105118
	goto loc_82105118;
loc_82105078:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19588(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r29.s64 = 8;
	// lfs f13,14216(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bgt ctx_arrow(ctx)->r6,0x82105094
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82105094;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
loc_82105094:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r29,-15644(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + -15644);
	// bl 0x820c99d8
	sub_820C99D8(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821050b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821050B8;
	// lwz ctx_arrow(ctx)->r11,-15644(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,-15644(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + -15644);
loc_821050B8:
	// li ctx_arrow(ctx)->r31,7
	ctx_arrow(ctx)->r31.s64 = 7;
	// li ctx_arrow(ctx)->r30,285
	ctx_arrow(ctx)->r30.s64 = 285;
loc_821050C0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,-19584(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82105100
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105100;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 16, xer);
	// bgt ctx_arrow(ctx)->r6,0x82105100
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82105100;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x820c99d8
	sub_820C99D8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82105114
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105114;
loc_82105100:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-22
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -22;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,131
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 131, xer);
	// bgt ctx_arrow(ctx)->r6,0x821050c0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821050C0;
	// b 0x8210511c
	goto loc_8210511C;
loc_82105114:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r29.u64;
loc_82105118:
	// stw ctx_arrow(ctx)->r11,-15644(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + -15644);
loc_8210511C:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// beq ctx_arrow(ctx)->r6,0x821051f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821051F0;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105150
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105150;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 3996);
	// b 0x821051c8
	goto loc_821051C8;
loc_82105150:
	// lwz ctx_arrow(ctx)->r3,-15644(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-15644(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19523
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19523;
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// beq ctx_arrow(ctx)->r6,0x82105178
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105178;
	// andi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,253
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 & 253;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
loc_82105178:
	// stb ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0));
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4056
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4056;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 3996);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
loc_82105190:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,39
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 39, xer);
	// beq ctx_arrow(ctx)->r6,0x821051e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821051E8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,60
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r8.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82105190
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105190;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821051B0:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821051c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821051C8;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,31,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 31) & 0x1;
	// stb ctx_arrow(ctx)->r11,-19521(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -19521, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_821051C8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,7705
	ctx_arrow(ctx)->r8.s64 = 7705;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82105228
	goto loc_82105228;
loc_821051E8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// b 0x821051b0
	goto loc_821051B0;
loc_821051F0:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105234
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105234;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,7710
	ctx_arrow(ctx)->r8.s64 = 7710;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 3996);
loc_82105228:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_82105234:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105268
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105268;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82105268:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210528c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210528C;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210528C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821052b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821052B0;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821052B0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821052d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821052D0;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_821052D0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// lwz ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821052fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821052FC;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_821052FC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_82105308) PPC_WEAK_FUNC(sub_82105308);
PPC_FUNC_IMPL(__imp__sub_82105308) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4056
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4056;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4004);
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4008);
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4000);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
loc_8210533C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r23,1
	ctx_arrow(ctx)->r23.s64 = 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 31, xer);
	// beq ctx_arrow(ctx)->r6,0x82105438
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105438;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,60
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210533c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210533C;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_82105360:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105370
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105370;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_82105370:
	// bl 0x8215fc88
	sub_8215FC88(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r25,-31994
	ctx_arrow(ctx)->r25.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r26,-31994
	ctx_arrow(ctx)->r26.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// bne ctx_arrow(ctx)->r6,0x821053f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821053F0;
	// bl 0x820eb5e8
	sub_820EB5E8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821053f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821053F0;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821053f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821053F0;
	// lwz ctx_arrow(ctx)->r11,-19608(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x821053f0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821053F0;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r11.s64 = 37;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,7854
	ctx_arrow(ctx)->r8.s64 = 7854;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82144920
	sub_82144920(&ctx);
loc_821053F0:
	// li ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r11.s64 = -2;
	// lis ctx_arrow(ctx)->r29,-32010
	ctx_arrow(ctx)->r29.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4288(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4288);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f0,-19588(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// lfs f0,-19584(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// ble ctx_arrow(ctx)->r6,0x82105440
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82105440;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82105440
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82105440;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4008);
	// b 0x8210556c
	goto loc_8210556C;
loc_82105438:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r23.u64;
	// b 0x82105360
	goto loc_82105360;
loc_82105440:
	// lwz ctx_arrow(ctx)->r11,-19608(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x8210556c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210556C;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210556c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210556C;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r6,-32256
	ctx_arrow(ctx)->r6.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r7,-32141
	ctx_arrow(ctx)->r7.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-16904
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -16904;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lfs f12,25072(ctx_arrow(ctx)->r6)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lfs f13,-14400(ctx_arrow(ctx)->r7)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64;
loc_82105480:
	// lhz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821054c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821054C0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x821054c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821054C0;
	// extsw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s32;
	// std ctx_arrow(ctx)->r7,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fadds f11,f11,f13
	ctx.f11.f64 = double(float(ctx.f11.f64 + ctx.f13.f64));
	// fadds f11,f11,f12
	ctx.f11.f64 = double(float(ctx.f11.f64 + ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x821054d8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821054D8;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,20
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 20;
loc_821054C0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 + 12;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r7.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82105480
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105480;
	// b 0x821054e4
	goto loc_821054E4;
loc_821054D8:
	// stw ctx_arrow(ctx)->r10,4288(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4288);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82105554
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105554;
loc_821054E4:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,4276(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8210554c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210554C;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
loc_82105504:
	// extsw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s32;
	// std ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fadds f11,f11,f13
	ctx.f11.f64 = double(float(ctx.f11.f64 + ctx.f13.f64));
	// fadds f11,f11,f12
	ctx.f11.f64 = double(float(ctx.f11.f64 + ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x8210553c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210553C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 20;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82105504
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105504;
	// b 0x8210554c
	goto loc_8210554C;
loc_8210553C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 6;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// stw ctx_arrow(ctx)->r11,4288(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4288);
	// bne ctx_arrow(ctx)->r6,0x82105554
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105554;
loc_8210554C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 5;
	// stw ctx_arrow(ctx)->r11,4288(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4288);
loc_82105554:
	// bl 0x8209ea70
	sub_8209EA70(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210556c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210556C;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,4288(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4288);
loc_8210556C:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// beq ctx_arrow(ctx)->r6,0x8210561c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210561C;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210559c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210559C;
	// li ctx_arrow(ctx)->r8,7923
	ctx_arrow(ctx)->r8.s64 = 7923;
	// b 0x82105634
	goto loc_82105634;
loc_8210559C:
	// lwz ctx_arrow(ctx)->r10,4288(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 6, xer);
	// blt ctx_arrow(ctx)->r6,0x821055d4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821055D4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-6
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -6;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2888
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 2888;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3544
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3544;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lbzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 1;
	ctx_arrow(ctx)->r9.s64 = 1 - ctx_arrow(ctx)->r9.s64;
	// stbx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32));
	// b 0x82105654
	goto loc_82105654;
loc_821055D4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82105654
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105654;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82105608
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105608;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r8,7946
	ctx_arrow(ctx)->r8.s64 = 7946;
	// li ctx_arrow(ctx)->r4,18
	ctx_arrow(ctx)->r4.s64 = 18;
	// stb ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r9)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r9.u32 + -19523, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x82105640
	goto loc_82105640;
loc_82105608:
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r8,7946
	ctx_arrow(ctx)->r8.s64 = 7946;
	// li ctx_arrow(ctx)->r4,18
	ctx_arrow(ctx)->r4.s64 = 18;
	// stb ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r9)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r9.u32 + -19523, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x82105640
	goto loc_82105640;
loc_8210561C:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105654
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105654;
	// li ctx_arrow(ctx)->r8,7952
	ctx_arrow(ctx)->r8.s64 = 7952;
loc_82105634:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 3996);
loc_82105640:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_82105654:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105688;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82105688:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821056ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821056AC;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821056AC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821056cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821056CC;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_821056CC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// lwz ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821056f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821056F8;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_821056F8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed174
	return;
}

alias(__imp__sub_82105700) PPC_WEAK_FUNC(sub_82105700);
PPC_FUNC_IMPL(__imp__sub_82105700) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,26214
	ctx_arrow(ctx)->r10.s64 = 1717960704;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,26215
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 26215;
	// lwz ctx_arrow(ctx)->r11,4292(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// mulhw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = (int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x7) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 3;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// stw ctx_arrow(ctx)->r11,4292(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4292);
	// bl 0x82160588
	sub_82160588(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105754
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105754;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_82105754:
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// li ctx_arrow(ctx)->r4,257
	ctx_arrow(ctx)->r4.s64 = 257;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r27,-31994
	ctx_arrow(ctx)->r27.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r28,-31994
	ctx_arrow(ctx)->r28.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// bne ctx_arrow(ctx)->r6,0x821058c0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821058C0;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x821058c0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821058C0;
	// li ctx_arrow(ctx)->r4,2056
	ctx_arrow(ctx)->r4.s64 = 2056;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82105880
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105880;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a06d8
	sub_820A06D8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x82105880
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82105880;
	// li ctx_arrow(ctx)->r4,514
	ctx_arrow(ctx)->r4.s64 = 514;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82105840
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105840;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// blt ctx_arrow(ctx)->r6,0x82105840
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105840;
	// li ctx_arrow(ctx)->r4,1028
	ctx_arrow(ctx)->r4.s64 = 1028;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82105824
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105824;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a06d8
	sub_820A06D8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// bge ctx_arrow(ctx)->r6,0x821058f4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821058F4;
loc_82105824:
	// lwz ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821058f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821058F4;
	// li ctx_arrow(ctx)->r8,8544
	ctx_arrow(ctx)->r8.s64 = 8544;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// b 0x821058d8
	goto loc_821058D8;
loc_82105840:
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 5, xer);
	// lwz ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x82105868
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105868;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821058f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821058F4;
	// li ctx_arrow(ctx)->r8,8517
	ctx_arrow(ctx)->r8.s64 = 8517;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// b 0x821058d8
	goto loc_821058D8;
loc_82105868:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821058f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821058F4;
	// li ctx_arrow(ctx)->r8,8525
	ctx_arrow(ctx)->r8.s64 = 8525;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// b 0x821058d8
	goto loc_821058D8;
loc_82105880:
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 5, xer);
	// lwz ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x821058a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821058A8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821058f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821058F4;
	// li ctx_arrow(ctx)->r8,8498
	ctx_arrow(ctx)->r8.s64 = 8498;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// b 0x821058d8
	goto loc_821058D8;
loc_821058A8:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821058f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821058F4;
	// li ctx_arrow(ctx)->r8,8506
	ctx_arrow(ctx)->r8.s64 = 8506;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// b 0x821058d8
	goto loc_821058D8;
loc_821058C0:
	// lwz ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821058f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821058F4;
	// li ctx_arrow(ctx)->r8,8487
	ctx_arrow(ctx)->r8.s64 = 8487;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
loc_821058D8:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,3528(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 3528);
	// bl 0x82144920
	sub_82144920(&ctx);
loc_821058F4:
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105928
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105928;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82105928:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,168(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105948
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105948;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82105948:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r8,3528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-1360
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -1360;
	// lwz ctx_arrow(ctx)->r7,4228(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,105
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 105;
loc_82105968:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 5, xer);
	// bne ctx_arrow(ctx)->r6,0x8210598c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210598C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105984
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105984;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r8.s32, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// bne ctx_arrow(ctx)->r6,0x82105998
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105998;
loc_82105984:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x82105998
	goto loc_82105998;
loc_8210598C:
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r9.s64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
loc_82105998:
	// stb ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,553
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 553;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82105968
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105968;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105a70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105A70;
	// lwz ctx_arrow(ctx)->r11,4228(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r6,441(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,-19116
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + -19116;
	// bne ctx_arrow(ctx)->r6,0x821059f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821059F4;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821059f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821059F4;
	// li ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = 4;
	// b 0x82105a00
	goto loc_82105A00;
loc_821059F4:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 + 2;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
loc_82105A00:
	// lis ctx_arrow(ctx)->r7,-32010
	ctx_arrow(ctx)->r7.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r9,4224(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x82105a3c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82105A3C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x82105a2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105A2C;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82105a2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105A2C;
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// b 0x82105a38
	goto loc_82105A38;
loc_82105A2C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 2;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_82105A38:
	// stw ctx_arrow(ctx)->r11,4224(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 4224);
loc_82105A3C:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,8575
	ctx_arrow(ctx)->r8.s64 = 8575;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.s64 = 29;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
	// bl 0x82144920
	sub_82144920(&ctx);
loc_82105A70:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_82105A78) PPC_WEAK_FUNC(sub_82105A78);
PPC_FUNC_IMPL(__imp__sub_82105A78) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x82160588
	sub_82160588(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105a94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105A94;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_82105A94:
	// lis ctx_arrow(ctx)->r29,-32010
	ctx_arrow(ctx)->r29.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-15624
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -15624;
	// bne ctx_arrow(ctx)->r6,0x82105cb0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105CB0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// stw ctx_arrow(ctx)->r11,4004(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4004);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lfs f0,-19588(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4000);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f13,-19584(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// ble ctx_arrow(ctx)->r6,0x82105b18
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82105B18;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x82105b18
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82105B18;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4008);
	// b 0x82105cb0
	goto loc_82105CB0;
loc_82105B18:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f13,f13
	ctx.fpscr.disableFlushMode();
	ctx.f13.s64 = (ctx.f13.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f13.f64));
	// stfiwx f13,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,240
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 240, xer);
	// blt ctx_arrow(ctx)->r6,0x82105b38
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105B38;
	// li ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = 2;
	// b 0x82105b48
	goto loc_82105B48;
loc_82105B38:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,170
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 170, xer);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r26.u64;
	// bge ctx_arrow(ctx)->r6,0x82105b48
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82105B48;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
loc_82105B48:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fctiwz f13,f0
	ctx.fpscr.disableFlushMode();
	ctx.f13.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,12468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfiwx f13,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// lfs f13,15348(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmadds f12,f0,f12,f13
	ctx.f12.f64 = double(float(f0.f64 * ctx.f12.f64 + ctx.f13.f64));
	// fctiwz f12,f12
	ctx.f12.s64 = (ctx.f12.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f12.f64));
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// stfiwx f12,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// lfd f12,88(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// frsp f11,f12
	ctx.f11.f64 = double(float(ctx.f12.f64));
	// lfs f12,-14396(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fadds f12,f11,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 + ctx.f12.f64));
	// lfd f11,88(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x82105bc4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105BC4;
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// b 0x82105c7c
	goto loc_82105C7C;
loc_82105BC4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f11,3908(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmadds f11,f0,f11,f13
	ctx.f11.f64 = double(float(f0.f64 * ctx.f11.f64 + ctx.f13.f64));
	// fctiwz f11,f11
	ctx.f11.s64 = (ctx.f11.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f11.f64));
	// stfiwx f11,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f11,88(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x82105c04
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105C04;
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// b 0x82105c7c
	goto loc_82105C7C;
loc_82105C04:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f11,3060(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmadds f11,f0,f11,f13
	ctx.f11.f64 = double(float(f0.f64 * ctx.f11.f64 + ctx.f13.f64));
	// fctiwz f11,f11
	ctx.f11.s64 = (ctx.f11.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f11.f64));
	// stfiwx f11,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f11,88(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x82105c44
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105C44;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// b 0x82105c7c
	goto loc_82105C7C;
loc_82105C44:
	// fadds f0,f0,f13
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// lfd f0,88(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x82105c7c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82105C7C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82105C7C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82103458
	sub_82103458(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82105cb0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105CB0;
loc_82105C98:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82103458
	sub_82103458(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105c98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105C98;
loc_82105CB0:
	// lis ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,40960
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 40960;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// beq ctx_arrow(ctx)->r6,0x82105d9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105D9C;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105ce8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105CE8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 3996);
	// b 0x82105d74
	goto loc_82105D74;
loc_82105CE8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82105d74
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105D74;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r10,3992(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 3992);
	// ble ctx_arrow(ctx)->r6,0x82105d1c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82105D1C;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r11,-19428(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19428);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19523
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19523;
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// b 0x82105d2c
	goto loc_82105D2C;
loc_82105D1C:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19523
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19523;
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1;
loc_82105D2C:
	// stb ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0));
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4056
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4056;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64;
loc_82105D3C:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,39
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 39, xer);
	// beq ctx_arrow(ctx)->r6,0x82105d94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105D94;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,60
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r8.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82105d3c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105D3C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82105D5C:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105d74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105D74;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	// stb ctx_arrow(ctx)->r11,-16892(ctx_arrow(ctx)->r9)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r9.u32 + -16892, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_82105D74:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,9334
	ctx_arrow(ctx)->r8.s64 = 9334;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82105dd4
	goto loc_82105DD4;
loc_82105D94:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// b 0x82105d5c
	goto loc_82105D5C;
loc_82105D9C:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105de0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105DE0;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,9339
	ctx_arrow(ctx)->r8.s64 = 9339;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 3996);
loc_82105DD4:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_82105DE0:
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105e14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105E14;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82105E14:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,168(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105e38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105E38;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82105E38:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105e58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105E58;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82105E58:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// lwz ctx_arrow(ctx)->r11,3992(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82105e78
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105E78;
	// lwz ctx_arrow(ctx)->r11,3996(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82105e90
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82105E90;
loc_82105E78:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = 15;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_82105E90:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed180
	return;
}

alias(__imp__sub_82105E98) PPC_WEAK_FUNC(sub_82105E98);
PPC_FUNC_IMPL(__imp__sub_82105E98) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stfd f30,-168(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -168);
	// stfd f31,-160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -160);
	// stwu ctx_arrow(ctx)->r1,-368(ctx_arrow(ctx)->r1)
	ea = -368 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// li ctx_arrow(ctx)->r31,108
	ctx_arrow(ctx)->r31.s64 = 108;
loc_82105EB4:
	// lis ctx_arrow(ctx)->r7,4112
	ctx_arrow(ctx)->r7.s64 = 269484032;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,52
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 52;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,4351
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 4351;
	// li ctx_arrow(ctx)->r5,389
	ctx_arrow(ctx)->r5.s64 = 389;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,37
	ctx_arrow(ctx)->r3.s64 = 37;
	// bl 0x8213e018
	sub_8213E018(ctx, base);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,70
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 70;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,318
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 318, xer);
	// blt ctx_arrow(ctx)->r6,0x82105eb4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82105EB4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// li ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r31.s64 = 3;
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// lfs f0,25500(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,184(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 184);
	// li ctx_arrow(ctx)->r29,255
	ctx_arrow(ctx)->r29.s64 = 255;
	// lfs f31,24780(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r26,83
	ctx_arrow(ctx)->r26.s64 = 83;
	// lfs f30,15732(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r27,103
	ctx_arrow(ctx)->r27.s64 = 103;
	// li ctx_arrow(ctx)->r28,107
	ctx_arrow(ctx)->r28.s64 = 107;
	// lfs f0,12468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,188(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 188);
	// lfs f0,25496(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,168(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// lfs f0,16016(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// stfs f0,172(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 172);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,28184
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 28184;
loc_82105F3C:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r23,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r29,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// stw ctx_arrow(ctx)->r26,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r7,18
	ctx_arrow(ctx)->r7.s64 = 18;
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r6,752
	ctx_arrow(ctx)->r6.s64 = 752;
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,184
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 184;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 80;
	// bl 0x8214ab68
	sub_8214AB68(ctx, base);
	// lfs f0,172(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// fadds f0,f0,f31
	f0.f64 = double(float(f0.f64 + f31.f64));
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stfs f0,172(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 172);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// stw ctx_arrow(ctx)->r23,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// li ctx_arrow(ctx)->r7,18
	ctx_arrow(ctx)->r7.s64 = 18;
	// stw ctx_arrow(ctx)->r29,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// li ctx_arrow(ctx)->r6,752
	ctx_arrow(ctx)->r6.s64 = 752;
	// stw ctx_arrow(ctx)->r26,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,184
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 184;
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 80;
	// bl 0x8214ab68
	sub_8214AB68(ctx, base);
	// lfs f0,172(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f31
	f0.f64 = double(float(f0.f64 - f31.f64));
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// fadds f0,f0,f30
	f0.f64 = double(float(f0.f64 + f30.f64));
	// stfs f0,172(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 172);
	// bne ctx_arrow(ctx)->r6,0x82105f3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82105F3C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r22,3
	ctx_arrow(ctx)->r22.s64 = 3;
	// lis ctx_arrow(ctx)->r24,-32141
	ctx_arrow(ctx)->r24.s64 = -2106392576;
	// lfs f0,25492(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,176(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 176);
	// lis ctx_arrow(ctx)->r25,-32141
	ctx_arrow(ctx)->r25.s64 = -2106392576;
	// lfs f31,15348(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r27,2
	ctx_arrow(ctx)->r27.s64 = 2;
	// lfs f0,25488(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,180(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 180);
	// lfs f0,25484(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// stfs f0,164(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 164);
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11,-15612
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r11.s64 + -15612;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,-18152
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + -18152;
	// stw ctx_arrow(ctx)->r21,148(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
loc_82106028:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 1) & 0xFFFFFFFE;
	// lfs f0,-8(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r21.s64 + 8;
	// fadds f0,f0,f31
	f0.f64 = double(float(f0.f64 + f31.f64));
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r11.u64;
	// stfs f0,160(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// li ctx_arrow(ctx)->r26,5
	ctx_arrow(ctx)->r26.s64 = 5;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
loc_8210604C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,15
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 15, xer);
	// bge ctx_arrow(ctx)->r6,0x82106110
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106110;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82115958
	sub_82115958(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821060a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821060A4;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r27,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r29,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// stw ctx_arrow(ctx)->r29,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r7,44
	ctx_arrow(ctx)->r7.s64 = 44;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r6,68
	ctx_arrow(ctx)->r6.s64 = 68;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// bl 0x8214ab68
	sub_8214AB68(ctx, base);
	// b 0x82106110
	goto loc_82106110;
loc_821060A4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82103458
	sub_82103458(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r7,44
	ctx_arrow(ctx)->r7.s64 = 44;
	// li ctx_arrow(ctx)->r6,68
	ctx_arrow(ctx)->r6.s64 = 68;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// beq ctx_arrow(ctx)->r6,0x821060f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821060F4;
	// lwz ctx_arrow(ctx)->r11,-14392(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r27,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r29,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// stw ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8214ab68
	sub_8214AB68(&ctx);
	// b 0x82106110
	goto loc_82106110;
loc_821060F4:
	// lwz ctx_arrow(ctx)->r11,-14388(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r27,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r29,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// stw ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8214ab68
	sub_8214AB68(&ctx);
loc_82106110:
	// lfs f13,160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,-1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	// lfs f0,-4(ctx_arrow(ctx)->r18)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// stfs f0,160(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210604c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210604C;
	// lfs f0,164(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,-1
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + -1;
	// fadds f0,f0,f30
	f0.f64 = double(float(f0.f64 + f30.f64));
	// stfs f0,164(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 164);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82106028
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106028;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lfs f0,0(ctx_arrow(ctx)->r18)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// lis ctx_arrow(ctx)->r10,-26986
	ctx_arrow(ctx)->r10.s64 = -1768554496;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r23.u64;
	// ori ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r10,38400
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r10.u64 | 38400;
	// lis ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// li ctx_arrow(ctx)->r16,3
	ctx_arrow(ctx)->r16.s64 = 3;
	// lis ctx_arrow(ctx)->r27,-31991
	ctx_arrow(ctx)->r27.s64 = -2096562176;
	// lis ctx_arrow(ctx)->r28,-31994
	ctx_arrow(ctx)->r28.s64 = -2096758784;
	// li ctx_arrow(ctx)->r14,-256
	ctx_arrow(ctx)->r14.s64 = -256;
	// ori ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r10,40317
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r10.u64 | 40317;
	// li ctx_arrow(ctx)->r20,-1
	ctx_arrow(ctx)->r20.s64 = -1;
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,152
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + 152;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,6580(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
loc_82106194:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lfs f0,-8(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// li ctx_arrow(ctx)->r19,5
	ctx_arrow(ctx)->r19.s64 = 5;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 37;
loc_821061B0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,15
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 15, xer);
	// bge ctx_arrow(ctx)->r6,0x82106308
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106308;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82103458
	sub_82103458(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106308
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106308;
	// lwz ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r17.u64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r26.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821061dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821061DC;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r14.u64;
loc_821061DC:
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r25,15120(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// lwz ctx_arrow(ctx)->r24,-31544(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r30.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r25.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// bl 0x8213e098
	sub_8213E098(ctx, base);
	// lhzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r30.u32);
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82106254
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106254;
	// li ctx_arrow(ctx)->r3,39
	ctx_arrow(ctx)->r3.s64 = 39;
	// bl 0x820ea4d0
	sub_820EA4D0(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106254
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106254;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r15.u64;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
loc_82106254:
	// lwz ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r22,-31
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r22.s64 + -31;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r21.s64 - ctx_arrow(ctx)->r11.s64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r4.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r4,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// stw ctx_arrow(ctx)->r3,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// bl 0x8213e018
	sub_8213E018(&ctx);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,255
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64 | 255;
	// lwz ctx_arrow(ctx)->r7,15120(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r6,-31544(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// stw ctx_arrow(ctx)->r23,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// stw ctx_arrow(ctx)->r23,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r20,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// bl 0x8213e0d8
	sub_8213E0D8(&ctx);
	// lwz ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r21.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lwz ctx_arrow(ctx)->r7,15120(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,100
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64 | 100;
	// lwz ctx_arrow(ctx)->r6,-31544(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r23,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// stw ctx_arrow(ctx)->r23,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// stw ctx_arrow(ctx)->r20,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8213e0d8
	sub_8213E0D8(ctx, base);
loc_82106308:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// lfs f0,-4(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r19,-1
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r19.s64 + -1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 0, xer);
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,140(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r22.u64;
	// bne ctx_arrow(ctx)->r6,0x821061b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821061B0;
	// addi ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r16,-1
	ctx_arrow(ctx)->r16.s64 = ctx_arrow(ctx)->r16.s64 + -1;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,70
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r21.s64 + 70;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r16.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82106194
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106194;
	// bl 0x820ec830
	sub_820EC830(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,368
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 368;
	// lfd f30,-168(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-160(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed150
	return;
}

alias(__imp__sub_82106358) PPC_WEAK_FUNC(sub_82106358);
PPC_FUNC_IMPL(__imp__sub_82106358) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// ori ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,40960
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 | 40960;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r3.u32);
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// xori ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r23,1
	ctx_arrow(ctx)->r23.s64 = 1;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821063dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821063DC;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821063DC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106400
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106400;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82106400:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106420
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106420;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82106420:
	// bl 0x82160588
	sub_82160588(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106430
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106430;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_82106430:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-14860
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -14860;
	// lwz ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x82106628
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106628;
	// li ctx_arrow(ctx)->r4,514
	ctx_arrow(ctx)->r4.s64 = 514;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106460
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106460;
	// lwz ctx_arrow(ctx)->r3,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82106500
	goto loc_82106500;
loc_82106460:
	// li ctx_arrow(ctx)->r4,257
	ctx_arrow(ctx)->r4.s64 = 257;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106494
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106494;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x82106510
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106510;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 1;
	// b 0x8210650c
	goto loc_8210650C;
loc_82106494:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821064d8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821064D8;
	// lwz ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82106510
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106510;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x82106510
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106510;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 1;
	// b 0x8210650c
	goto loc_8210650C;
loc_821064D8:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// lwz ctx_arrow(ctx)->r3,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bge ctx_arrow(ctx)->r6,0x82106510
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106510;
	// lwz ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82106510
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106510;
loc_82106500:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82106510
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106510;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + -1;
loc_8210650C:
	// stw ctx_arrow(ctx)->r3,-12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -12);
loc_82106510:
	// lwz ctx_arrow(ctx)->r9,-20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 * 84;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 * 84;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82106558
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106558;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,-14380(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -16);
	// bge ctx_arrow(ctx)->r6,0x82106588
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106588;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 84;
	// stw ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -16);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// b 0x82106584
	goto loc_82106584;
loc_82106558:
	// bge ctx_arrow(ctx)->r6,0x82106588
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106588;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,-14380(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,83
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 83, xer);
	// stw ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -16);
	// ble ctx_arrow(ctx)->r6,0x82106588
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106588;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -84;
	// stw ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -16);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 1;
loc_82106584:
	// stw ctx_arrow(ctx)->r11,-20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -20);
loc_82106588:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821065e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821065E4;
	// bl 0x820ef228
	sub_820EF228(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821065e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821065E4;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19460
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19460;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r11.u32);
	// bl 0x82159128
	sub_82159128(&ctx);
	// bl 0x82183908
	sub_82183908(&ctx);
	// li ctx_arrow(ctx)->r4,255
	ctx_arrow(ctx)->r4.s64 = 255;
	// bl 0x82184e78
	sub_82184E78(ctx, base);
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_821065E4:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106e08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106E08;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,12217
	ctx_arrow(ctx)->r8.s64 = 12217;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// bl 0x82144920
	sub_82144920(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106628:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 7, xer);
	// bne ctx_arrow(ctx)->r6,0x821066f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821066F0;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-19476
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -19476;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,-19460
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + -19460;
	// lwz ctx_arrow(ctx)->r10,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210664C:
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82106664
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106664;
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210667c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210667C;
loc_82106664:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 16, xer);
	// blt ctx_arrow(ctx)->r6,0x8210664c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210664C;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_8210667C:
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r3.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821066e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821066E0;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,-12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x82183908
	sub_82183908(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82184e78
	sub_82184E78(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,12235
	ctx_arrow(ctx)->r8.s64 = 12235;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// bl 0x82144920
	sub_82144920(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_821066E0:
	// li ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = 6;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_821066F0:
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x821068a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821068A8;
	// li ctx_arrow(ctx)->r4,514
	ctx_arrow(ctx)->r4.s64 = 514;
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// bne ctx_arrow(ctx)->r6,0x821067a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821067A8;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// bge ctx_arrow(ctx)->r6,0x82106734
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106734;
	// lwz ctx_arrow(ctx)->r11,3936(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821067a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821067A8;
loc_82106734:
	// li ctx_arrow(ctx)->r4,257
	ctx_arrow(ctx)->r4.s64 = 257;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210676c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210676C;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821067e4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821067E4;
	// lwz ctx_arrow(ctx)->r11,3936(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821067e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821067E4;
loc_8210676C:
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-19444
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -19444;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 5, xer);
	// bge ctx_arrow(ctx)->r6,0x821067e4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821067E4;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// b 0x821067e0
	goto loc_821067E0;
loc_821067A8:
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-19444
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -19444;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821067e4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821067E4;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
loc_821067E0:
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r29.u32);
loc_821067E4:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x82106818
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106818;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,-2
	ctx_arrow(ctx)->r4.s64 = -2;
	// bl 0x820a0648
	sub_820A0648(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8210681c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210681C;
loc_82106818:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8210681C:
	// stw ctx_arrow(ctx)->r11,3936(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 3936);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106864
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106864;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,12278
	ctx_arrow(ctx)->r8.s64 = 12278;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// bl 0x82144920
	sub_82144920(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106864:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106e08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106E08;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r8,12283
	ctx_arrow(ctx)->r8.s64 = 12283;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// bl 0x82144920
	sub_82144920(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_821068A8:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r25,-31994
	ctx_arrow(ctx)->r25.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r26,-31994
	ctx_arrow(ctx)->r26.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// bne ctx_arrow(ctx)->r6,0x82106924
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106924;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4008);
	// bl 0x820eb5e8
	sub_820EB5E8(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106974
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106974;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106924
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106924;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r11.s64 = 37;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,12299
	ctx_arrow(ctx)->r8.s64 = 12299;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19612);
	// bl 0x82144920
	sub_82144920(&ctx);
loc_82106924:
	// lwz ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82106928:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r21.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82106dc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106DC8;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106DFC;
	// lwz ctx_arrow(ctx)->r10,4008(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82106dc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106DC8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106DFC;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,-19608(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82106bb4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82106BB4;
	// bl 0x820ca3e8
	sub_820CA3E8(ctx, base);
	// stw ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4300);
	// li ctx_arrow(ctx)->r8,12375
	ctx_arrow(ctx)->r8.s64 = 12375;
	// b 0x82106de4
	goto loc_82106DE4;
loc_82106974:
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r30,-32141
	ctx_arrow(ctx)->r30.s64 = -2106392576;
	// lfs f0,-19588(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x821069b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821069B4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19584(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x821069b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821069B4;
	// stw ctx_arrow(ctx)->r23,4008(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4008);
loc_821069A8:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_821069B4:
	// lwz ctx_arrow(ctx)->r11,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821069a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821069A8;
	// rotlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// bl 0x8216c140
	sub_8216C140(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106b28
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106B28;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f12,-19584(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106A4C;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s32;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x82106a4c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106A4C;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// addze ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	temp.s64 = ctx_arrow(ctx)->r10.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r10.u32;
	ctx_arrow(ctx)->r9.s64 = temp.s64;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,-19588(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82106a4c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106A4C;
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106A4C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-14384(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x82106ab0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106AB0;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r8.u64;
	// extsw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s32;
	// lfs f0,15436(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s32;
	// std ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// lfd f11,88(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fmadds f0,f13,f0,f11
	f0.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x82106ab0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106AB0;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106AB0:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r8.u64;
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s32;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f11,14132(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmadds f11,f0,f11,f13
	ctx.f11.f64 = double(float(f0.f64 * ctx.f11.f64 + ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x82106afc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106AFC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106AFC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f11,12896(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmadds f0,f0,f11,f13
	f0.f64 = double(float(f0.f64 * ctx.f11.f64 + ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x82106b1c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106B1C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106B1C:
	// li ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = 5;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106B28:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfs f12,14132(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-14384(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmadds f11,f0,f12,f13
	ctx.f11.f64 = double(float(f0.f64 * ctx.f12.f64 + ctx.f13.f64));
	// lfs f12,-19584(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x82106b88
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106B88;
	// li ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r11.s64 = 10;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106B88:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f11,12896(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmadds f0,f0,f11,f13
	f0.f64 = double(float(f0.f64 * ctx.f11.f64 + ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x82106ba8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82106BA8;
	// li ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r11.s64 = 9;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106BA8:
	// li ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = 8;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// b 0x82106928
	goto loc_82106928;
loc_82106BB4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106DFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 9, xer);
	// bgt ctx_arrow(ctx)->r6,0x82106dfc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82106DFC;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,27612
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 27612;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_82106C7C;
	case 1:
		goto loc_82106D58;
	case 2:
		goto loc_82106D04;
	case 3:
		goto loc_82106D3C;
	case 4:
		goto loc_82106DFC;
	case 5:
		goto loc_82106C04;
	case 6:
		goto loc_82106DFC;
	case 7:
		goto loc_82106DFC;
	case 8:
		goto loc_82106DFC;
	case 9:
		goto loc_82106D90;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,27772(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,27992(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,27908(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,27964(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,28156(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,27652(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,28156(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,28156(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,28156(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,28048(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_82106C04:
	// li ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = 6;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// bl 0x82159128
	sub_82159128(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19476
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19476;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,3888
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r10.s64 + 3888;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// stw ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -12);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// stw ctx_arrow(ctx)->r11,-20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -20);
	// bl 0x82159128
	sub_82159128(&ctx);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,33
	ctx_arrow(ctx)->r11.s64 = 33;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r11,-19480(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19480);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r30.u32);
	// bl 0x82103300
	sub_82103300(&ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106C7C:
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106c98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106C98;
	// bl 0x820e9148
	sub_820E9148(ctx, base);
	// b 0x82106c9c
	goto loc_82106C9C;
loc_82106C98:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82106C9C:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r3.s64 + 1;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 4, xer);
	// bge ctx_arrow(ctx)->r6,0x82106cd8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82106CD8;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106DFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
	// bl 0x82103300
	sub_82103300(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106CD8:
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106DFC;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x820ea2d8
	sub_820EA2D8(ctx, base);
	// bl 0x82103300
	sub_82103300(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106D04:
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x820c2cc0
	sub_820C2CC0(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,1
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 1;
	ctx_arrow(ctx)->r31.s64 = 1 - ctx_arrow(ctx)->r11.s64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820c2d18
	sub_820C2D18(ctx, base);
	// bl 0x82103300
	sub_82103300(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106D3C:
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// stw ctx_arrow(ctx)->r11,-24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -24);
	// bl 0x82103300
	sub_82103300(&ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106D58:
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x820c2c28
	sub_820C2C28(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,1
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 1;
	ctx_arrow(ctx)->r31.s64 = 1 - ctx_arrow(ctx)->r11.s64;
	// bl 0x82159128
	sub_82159128(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820c2c80
	sub_820C2C80(ctx, base);
	// bl 0x82103300
	sub_82103300(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106D90:
	// lwz ctx_arrow(ctx)->r3,4300(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x820ca3e8
	sub_820CA3E8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106DFC;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ld ctx_arrow(ctx)->r4,784(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x8235d790
	sub_8235D790(ctx, base);
	// bl 0x82103300
	sub_82103300(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
loc_82106DC8:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r8,12370
	ctx_arrow(ctx)->r8.s64 = 12370;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_82106DE4:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// bl 0x82144920
	sub_82144920(ctx, base);
loc_82106DFC:
	// bl 0x82103300
	sub_82103300(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
loc_82106E08:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_82106E10) PPC_WEAK_FUNC(sub_82106E10);
PPC_FUNC_IMPL(__imp__sub_82106E10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,4128(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + 4128, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x823b3600
	sub_823B3600(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r30,-32141
	ctx_arrow(ctx)->r30.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r3,4316(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4316);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// stb ctx_arrow(ctx)->r10,4130(ctx_arrow(ctx)->r9)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4130));
	// lis ctx_arrow(ctx)->r10,9362
	ctx_arrow(ctx)->r10.s64 = 613548032;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,18725
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 | 18725;
	// beq ctx_arrow(ctx)->r6,0x82106ec8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106EC8;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-18152
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -18152;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r31.u32)) >> 32;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31,1,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 31) & 0x7FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 14;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r3,-19428(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19428);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-19600(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19600);
	// bl 0x82103458
	sub_82103458(&ctx);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// b 0x82106ef4
	goto loc_82106EF4;
loc_82106EC8:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-18152
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -18152;
	// lwz ctx_arrow(ctx)->r10,-19428(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// lis ctx_arrow(ctx)->r9,-32141
	ctx_arrow(ctx)->r9.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,-19600(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -19600);
loc_82106EF4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106f38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106F38;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r31.u32)) >> 32;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31,1,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 31) & 0x7FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 14;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
loc_82106F38:
	// bl 0x82103300
	sub_82103300(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -15652);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82106F50) PPC_WEAK_FUNC(sub_82106F50);
PPC_FUNC_IMPL(__imp__sub_82106F50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stwu ctx_arrow(ctx)->r1,-272(ctx_arrow(ctx)->r1)
	ea = -272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820ec448
	sub_820EC448(ctx, base);
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r16,-32010
	ctx_arrow(ctx)->r16.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r14,-32010
	ctx_arrow(ctx)->r14.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 4008);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r14)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r14.u32 + 4000);
	// bne ctx_arrow(ctx)->r6,0x82106fb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82106FB4;
	// li ctx_arrow(ctx)->r3,278
	ctx_arrow(ctx)->r3.s64 = 278;
	// bl 0x820d03e8
	sub_820D03E8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32164
	ctx_arrow(ctx)->r11.s64 = -2107899904;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-3616
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -3616;
	// lwz ctx_arrow(ctx)->r3,4448(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821186e0
	sub_821186E0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stw ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4168);
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823ada90
	sub_823ADA90(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82106FB4:
	// bl 0x820ec288
	sub_820EC288(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r15,1
	ctx_arrow(ctx)->r15.s64 = 1;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82106fe4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82106FE4;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r15,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82106FE4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107008
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107008;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r15,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,4168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82107008:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107028
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107028;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r15,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82107028:
	// bl 0x82160588
	sub_82160588(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107038
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107038;
	// bl 0x820ffc30
	sub_820FFC30(ctx, base);
loc_82107038:
	// bl 0x8215fc88
	sub_8215FC88(ctx, base);
	// lis ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// ori ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r11,40960
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r11.u64 | 40960;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r20,-32141
	ctx_arrow(ctx)->r20.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,24996
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 24996;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r18,-32141
	ctx_arrow(ctx)->r18.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r22,-32010
	ctx_arrow(ctx)->r22.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r23,-32141
	ctx_arrow(ctx)->r23.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r24,-31994
	ctx_arrow(ctx)->r24.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r25,-31994
	ctx_arrow(ctx)->r25.s64 = -2096758784;
	// lis ctx_arrow(ctx)->r21,-32141
	ctx_arrow(ctx)->r21.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,24776
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r11.s64 + 24776;
	// bne ctx_arrow(ctx)->r6,0x8210737c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210737C;
	// bl 0x8215fca8
	sub_8215FCA8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821072d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821072D8;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821070e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821070E4;
	// bl 0x820c9ab0
	sub_820C9AB0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821070e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821070E4;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// lis ctx_arrow(ctx)->r10,9362
	ctx_arrow(ctx)->r10.s64 = 613548032;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18725
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 18725;
	// mulhwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = (uint64_t(ctx_arrow(ctx)->r11.u32) * uint64_t(ctx_arrow(ctx)->r10.u32)) >> 32;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31,1,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 31) & 0x7FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 14;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// bl 0x820c9aa0
	sub_820C9AA0(ctx, base);
loc_821070E4:
	// bl 0x820eb5e8
	sub_820EB5E8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210713c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210713C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210737c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210737C;
	// lwz ctx_arrow(ctx)->r11,-19608(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x8210737c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210737C;
	// li ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r11.s64 = 37;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,14508
	ctx_arrow(ctx)->r8.s64 = 14508;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19612);
	// bl 0x82144920
	sub_82144920(&ctx);
	// b 0x8210737c
	goto loc_8210737C;
loc_8210713C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19588(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,-19584(ctx_arrow(ctx)->r20)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x82107164
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107164;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,24804(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x82107210
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107210;
loc_82107164:
	// lfs f12,-8(ctx_arrow(ctx)->r19)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x82107180
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107180;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,3032(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// blt ctx_arrow(ctx)->r6,0x82107210
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82107210;
loc_82107180:
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821071d8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821071D8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x821071d8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821071D8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r15.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 4008);
	// bl 0x820a05b8
	sub_820A05B8(&ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210737c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210737C;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r15.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.s64 = 29;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4124(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4124);
	// b 0x8210737c
	goto loc_8210737C;
loc_821071D8:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210737c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210737C;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r15.u64;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.s64 = 29;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4124(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4124);
	// b 0x8210737c
	goto loc_8210737C;
loc_82107210:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r15.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14756
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 14756;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stw ctx_arrow(ctx)->r10,4000(ctx_arrow(ctx)->r14)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r14.u32 + 4000);
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// bl 0x8216c178
	sub_8216C178(ctx, base);
loc_8210723C:
	// lwz ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82107258
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107258;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8210725c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210725C;
loc_82107258:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r15.u64;
loc_8210725C:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107278
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107278;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// bl 0x8216c2a8
	sub_8216C2A8(ctx, base);
	// b 0x8210723c
	goto loc_8210723C;
loc_82107278:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821072c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821072C8;
	// bl 0x82103278
	sub_82103278(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821072c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821072C8;
	// bl 0x820f3640
	sub_820F3640(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821072c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821072C8;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r10,4220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r31.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x821072c0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821072C0;
	// stw ctx_arrow(ctx)->r31,4220(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4220);
loc_821072C0:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x8217d900
	sub_8217D900(ctx, base);
loc_821072C8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14748
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 14748;
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// b 0x8210737c
	goto loc_8210737C;
loc_821072D8:
	// bl 0x820eb5e8
	sub_820EB5E8(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210757c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210757C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210732c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210732C;
	// lwz ctx_arrow(ctx)->r11,-19608(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x8210732c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210732C;
	// li ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r11.s64 = 37;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,14559
	ctx_arrow(ctx)->r8.s64 = 14559;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19612);
	// bl 0x82144920
	sub_82144920(&ctx);
loc_8210732C:
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210734c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210734C;
loc_82107338:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107360
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107360;
loc_8210734C:
	// li ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 16384;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210737c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210737C;
loc_82107360:
	// bl 0x82160de0
	sub_82160DE0(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4116);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.s64 = 27;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4120);
loc_8210737C:
	// bl 0x821581e8
	sub_821581E8(&ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821581f8
	sub_821581F8(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r15.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 2, xer);
	// bgt ctx_arrow(ctx)->r6,0x8210739c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210739C;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_8210739C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + -2;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r28.s64 + -1;
	// cntlzw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,2776
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 2776;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 27) & 0x1;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// stb ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// stb ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 3, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r10,2(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 2));
	// stb ctx_arrow(ctx)->r10,1(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1));
	// beq ctx_arrow(ctx)->r6,0x821073e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821073E4;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r15.u64;
loc_821073E4:
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821073f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821073F4;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
loc_821073F4:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107404
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107404;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
loc_82107404:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107414
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107414;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
loc_82107414:
	// bl 0x82103300
	sub_82103300(ctx, base);
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// lwz ctx_arrow(ctx)->r10,4008(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -15652);
	// bne ctx_arrow(ctx)->r6,0x82107684
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107684;
	// lwz ctx_arrow(ctx)->r10,4000(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107684
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107684;
	// lwz ctx_arrow(ctx)->r10,-19608(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82107684
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107684;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82107640
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107640;
	// lfs f0,-19584(ctx_arrow(ctx)->r20)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,-8(ctx_arrow(ctx)->r19)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82107640
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107640;
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210747c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210747C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r15.u64;
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -15652);
loc_8210747C:
	// lbz ctx_arrow(ctx)->r10,1(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lfs f0,-19588(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r19)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r19)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821074c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821074C8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821074bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821074BC;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s32;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fmadds f11,f11,f13,f12
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821074c4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821074C4;
loc_821074BC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r15.u64;
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -15652);
loc_821074C4:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
loc_821074C8:
	// lbz ctx_arrow(ctx)->r10,2(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107508
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107508;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821074fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821074FC;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s32;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fmadds f11,f11,f13,f12
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x82107504
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107504;
loc_821074FC:
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -15652);
loc_82107504:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
loc_82107508:
	// lbz ctx_arrow(ctx)->r10,3(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107544
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107544;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8210753c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210753C;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s32;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fmadds f13,f11,f13,f12
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82107544
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107544;
loc_8210753C:
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// stw ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -15652);
loc_82107544:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107684
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107684;
	// bl 0x82184a38
	sub_82184A38(ctx, base);
	// lwz ctx_arrow(ctx)->r10,-15652(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x821075b8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821075B8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x821075b0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821075B0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r15.u64;
	// b 0x821075bc
	goto loc_821075BC;
loc_8210757C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19588(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24800(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x8210732c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210732C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-19584(ctx_arrow(ctx)->r20)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24796(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x8210732c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210732C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r15.u64;
	// stw ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 4008);
	// b 0x82107338
	goto loc_82107338;
loc_821075B0:
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// b 0x821075bc
	goto loc_821075BC;
loc_821075B8:
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
loc_821075BC:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r27.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x821075e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821075E0;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r11.s64;
	// li ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r4.s64 = 14;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
	// lwz ctx_arrow(ctx)->r10,-15652(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_821075E0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82107610
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107610;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// b 0x823ed150
	return;
loc_82107610:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82107684
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107684;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82184f98
	sub_82184F98(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// b 0x823ed150
	return;
loc_82107640:
	// bl 0x820eee80
	sub_820EEE80(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// blt ctx_arrow(ctx)->r6,0x82107684
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82107684;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a05b8
	sub_820A05B8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107684
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107684;
	// li ctx_arrow(ctx)->r11,43
	ctx_arrow(ctx)->r11.s64 = 43;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,14672
	ctx_arrow(ctx)->r8.s64 = 14672;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,199
	ctx_arrow(ctx)->r4.s64 = 199;
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19612);
	// bl 0x82144920
	sub_82144920(&ctx);
loc_82107684:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// b 0x823ed150
	return;
}

alias(__imp__sub_82107690) PPC_WEAK_FUNC(sub_82107690);
PPC_FUNC_IMPL(__imp__sub_82107690) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stfd f30,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stfd f31,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// stwu ctx_arrow(ctx)->r1,-448(ctx_arrow(ctx)->r1)
	ea = -448 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820f5898
	sub_820F5898(&ctx);
	// bl 0x820f5978
	sub_820F5978(&ctx);
	// bl 0x820ec830
	sub_820EC830(&ctx);
	// bl 0x8215fca8
	sub_8215FCA8(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821076e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821076E4;
	// bl 0x82103278
	sub_82103278(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107710
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107710;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40256
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40256;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x820eacd8
	sub_820EACD8(ctx, base);
	// b 0x8210777c
	goto loc_8210777C;
loc_821076E4:
	// bl 0x8215fd60
	sub_8215FD60(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-19116
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -19116;
	// lwz ctx_arrow(ctx)->r10,4228(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x82107718
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82107718;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82107710:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40255
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40255;
	// b 0x82107774
	goto loc_82107774;
loc_82107718:
	// bl 0x82151c30
	sub_82151C30(ctx, base);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210776c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210776C;
	// li ctx_arrow(ctx)->r7,17
	ctx_arrow(ctx)->r7.s64 = 17;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,768
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 768;
	// li ctx_arrow(ctx)->r5,17
	ctx_arrow(ctx)->r5.s64 = 17;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x823eda38
	sub_823EDA38(ctx, base);
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40305
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40305;
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,100
	ctx_arrow(ctx)->r4.s64 = 100;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823eda88
	sub_823EDA88(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x8210777c
	goto loc_8210777C;
loc_8210776C:
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,40257
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 40257;
loc_82107774:
	// bl 0x82136ad8
	sub_82136AD8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
loc_8210777C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r29,-31991
	ctx_arrow(ctx)->r29.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f1,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209bd50
	sub_8209BD50(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r27,-32256
	ctx_arrow(ctx)->r27.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// lfs f2,15776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f1,24776(ctx_arrow(ctx)->r27)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// lis ctx_arrow(ctx)->r30,-32141
	ctx_arrow(ctx)->r30.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lfs f31,-14372(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lfs f1,-14376(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8209bbb8
	sub_8209BBB8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lwz ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,-31556(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// addze ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	temp.s64 = ctx_arrow(ctx)->r11.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = temp.s64;
	// subfic ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,96
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 96;
	ctx_arrow(ctx)->r29.s64 = 96 - ctx_arrow(ctx)->r11.s64;
	// bl 0x8209bcd8
	sub_8209BCD8(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s32;
	// lfs f1,24776(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// std ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lfd f0,112(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// bl 0x8209ba00
	sub_8209BA00(ctx, base);
	// lis ctx_arrow(ctx)->r5,-14286
	ctx_arrow(ctx)->r5.s64 = -936247296;
	// lfs f31,-14372(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lfs f30,-14376(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,13055
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | 13055;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8209bb58
	sub_8209BB58(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// bl 0x8209bbb8
	sub_8209BBB8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x8209bc18
	sub_8209BC18(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x8209b890
	sub_8209B890(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2776
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2776;
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821078cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821078CC;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_821078CC:
	// lbz ctx_arrow(ctx)->r9,1(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821078dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821078DC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
loc_821078DC:
	// lbz ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821078ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821078EC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
loc_821078EC:
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821078fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821078FC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
loc_821078FC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x8210790c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210790C;
	// lfs f1,24776(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x820eec78
	sub_820EEC78(ctx, base);
loc_8210790C:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-15652(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82107950
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82107950;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4000(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107950
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107950;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4008(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107950
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107950;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r3,6
	ctx_arrow(ctx)->r3.s64 = 6;
	// lwz ctx_arrow(ctx)->r11,-19608(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82107954
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82107954;
loc_82107950:
	// li ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = -1;
loc_82107954:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82100e00
	sub_82100E00(ctx, base);
	// bl 0x820ec700
	sub_820EC700(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,448
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 448;
	// lfd f30,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-56(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed184
	return;
}

alias(__imp__sub_82107970) PPC_WEAK_FUNC(sub_82107970);
PPC_FUNC_IMPL(__imp__sub_82107970) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820c32b8
	sub_820C32B8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f1,f0
	ctx.f1.f64 = double(float(ctx.f1.f64 * f0.f64));
	// bl 0x8210e350
	sub_8210E350(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x8210e170
	sub_8210E170(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x8210e158
	sub_8210E158(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x820c9c00
	sub_820C9C00(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x8210e1a8
	sub_8210E1A8(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820c9c18
	sub_820C9C18(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8210e228
	sub_8210E228(ctx, base);
	// bl 0x8209c700
	sub_8209C700(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821086b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821086B4;
	// bl 0x820f4610
	sub_820F4610(ctx, base);
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82107a08
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107A08;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// stw ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4212);
loc_82107A08:
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// li ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r30.s64 = -1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// li ctx_arrow(ctx)->r17,0
	ctx_arrow(ctx)->r17.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107a54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107A54;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820f4500
	sub_820F4500(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107a54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107A54;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,-19492
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + -19492;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
	// b 0x82107a60
	goto loc_82107A60;
loc_82107A54:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,-19492
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + -19492;
	// stw ctx_arrow(ctx)->r17,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
loc_82107A60:
	// lis ctx_arrow(ctx)->r23,-32141
	ctx_arrow(ctx)->r23.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820f45a0
	sub_820F45A0(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11,3868
	ctx_arrow(ctx)->r16.s64 = ctx_arrow(ctx)->r11.s64 + 3868;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,-15400
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + -15400;
	// beq ctx_arrow(ctx)->r6,0x82107c6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107C6C;
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 37, xer);
	// bne ctx_arrow(ctx)->r6,0x82107ab0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107AB0;
	// lwz ctx_arrow(ctx)->r3,432(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82159128
	sub_82159128(ctx, base);
	// bl 0x82183908
	sub_82183908(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107ab0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107AB0;
	// lwz ctx_arrow(ctx)->r31,1368(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_82107AB0:
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,-19496(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82107b08
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82107B08;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r17.u64;
loc_82107AC4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820f4500
	sub_820F4500(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107afc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107AFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820a0548
	sub_820A0548(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107afc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107AFC;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 3, xer);
	// ble ctx_arrow(ctx)->r6,0x82107ac4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107AC4;
	// b 0x82107c6c
	goto loc_82107C6C;
loc_82107AFC:
	// stw ctx_arrow(ctx)->r31,-19496(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + -19496);
	// stw ctx_arrow(ctx)->r31,4208(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4208);
	// b 0x82107c6c
	goto loc_82107C6C;
loc_82107B08:
	// lwz ctx_arrow(ctx)->r11,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r31.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82107b48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107B48;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x82107b48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107B48;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820f4500
	sub_820F4500(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107b40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107B40;
	// lwz ctx_arrow(ctx)->r11,-4088(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,4208(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4208);
	// stw ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4212);
	// b 0x82107c6c
	goto loc_82107C6C;
loc_82107B40:
	// lwz ctx_arrow(ctx)->r11,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,-19496(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82107B48:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82107b94
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82107B94;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r3.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82107b94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107B94;
	// bl 0x820f4500
	sub_820F4500(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107b94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107B94;
	// lwz ctx_arrow(ctx)->r11,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r31.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82107b80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107B80;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,120
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 120, xer);
	// ble ctx_arrow(ctx)->r6,0x82107b94
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107B94;
loc_82107B80:
	// lwz ctx_arrow(ctx)->r11,-19496(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4208(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4208);
	// lwz ctx_arrow(ctx)->r11,-4088(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4212);
	// b 0x82107c6c
	goto loc_82107C6C;
loc_82107B94:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,540
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 540, xer);
	// beq ctx_arrow(ctx)->r6,0x82107bac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107BAC;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,600
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 600, xer);
	// ble ctx_arrow(ctx)->r6,0x82107c6c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107C6C;
loc_82107BAC:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r17.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-19416
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -19416;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u64;
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lfs f31,14396(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
loc_82107BC8:
	// lbz ctx_arrow(ctx)->r11,4131(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107be0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107BE0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x82107c58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107C58;
loc_82107BE0:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82107bfc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107BFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82158690
	sub_82158690(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107c58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107C58;
loc_82107BFC:
	// bl 0x82160588
	sub_82160588(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82107c18
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107C18;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82158690
	sub_82158690(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107c58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107C58;
loc_82107C18:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820f4500
	sub_820F4500(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107c58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107C58;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,540
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 540, xer);
	// bne ctx_arrow(ctx)->r6,0x82107c48
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107C48;
	// lwz ctx_arrow(ctx)->r3,4208(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x820a0768
	sub_820A0768(ctx, base);
	// b 0x82107c58
	goto loc_82107C58;
loc_82107C48:
	// lwz ctx_arrow(ctx)->r11,-4088(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,4208(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4208);
	// stw ctx_arrow(ctx)->r31,-19496(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + -19496);
	// stw ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4212);
loc_82107C58:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + 12;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82107bc8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82107BC8;
loc_82107C6C:
	// lis ctx_arrow(ctx)->r19,-32141
	ctx_arrow(ctx)->r19.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r25,-32141
	ctx_arrow(ctx)->r25.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r28,-32141
	ctx_arrow(ctx)->r28.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r18,-32010
	ctx_arrow(ctx)->r18.s64 = -2097807360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,4056
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 4056;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,3256
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + 3256;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,3656
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + 3656;
	// bge ctx_arrow(ctx)->r6,0x82107cc0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82107CC0;
	// lwz ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82107cc0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82107CC0;
	// lwz ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107eac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107EAC;
loc_82107CC0:
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 24, xer);
	// beq ctx_arrow(ctx)->r6,0x82107eac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107EAC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_82107CD0:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107cec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107CEC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82107cd0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82107CD0;
loc_82107CEC:
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,-19588(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f13,-19584(ctx_arrow(ctx)->r28)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,44
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 44, xer);
	// stfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r20.u32);
	// stfsx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r21.u32);
	// bgt ctx_arrow(ctx)->r6,0x82107e94
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82107E94;
	// lis ctx_arrow(ctx)->r12,-32240
	ctx_arrow(ctx)->r12.s64 = -2112880640;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,32044
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 32044;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r10.u64) {
	case 0:
		goto loc_82107DE0;
	case 1:
		goto loc_82107E94;
	case 2:
		goto loc_82107E94;
	case 3:
		goto loc_82107DFC;
	case 4:
		goto loc_82107E04;
	case 5:
		goto loc_82107E20;
	case 6:
		goto loc_82107E94;
	case 7:
		goto loc_82107E94;
	case 8:
		goto loc_82107E94;
	case 9:
		goto loc_82107E94;
	case 10:
		goto loc_82107E28;
	case 11:
		goto loc_82107E94;
	case 12:
		goto loc_82107E94;
	case 13:
		goto loc_82107E94;
	case 14:
		goto loc_82107E94;
	case 15:
		goto loc_82107E94;
	case 16:
		goto loc_82107E94;
	case 17:
		goto loc_82107E94;
	case 18:
		goto loc_82107E94;
	case 19:
		goto loc_82107E94;
	case 20:
		goto loc_82107E94;
	case 21:
		goto loc_82107E30;
	case 22:
		goto loc_82107E94;
	case 23:
		goto loc_82107E94;
	case 24:
		goto loc_82107E38;
	case 25:
		goto loc_82107E94;
	case 26:
		goto loc_82107E94;
	case 27:
		goto loc_82107E94;
	case 28:
		goto loc_82107E94;
	case 29:
		goto loc_82107E40;
	case 30:
		goto loc_82107E94;
	case 31:
		goto loc_82107E94;
	case 32:
		goto loc_82107E94;
	case 33:
		goto loc_82107E50;
	case 34:
		goto loc_82107E50;
	case 35:
		goto loc_82107E94;
	case 36:
		goto loc_82107E50;
	case 37:
		goto loc_82107E94;
	case 38:
		goto loc_82107E94;
	case 39:
		goto loc_82107E58;
	case 40:
		goto loc_82107E78;
	case 41:
		goto loc_82107E94;
	case 42:
		goto loc_82107E30;
	case 43:
		goto loc_82107E94;
	case 44:
		goto loc_82107E94;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,32224(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32252(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32260(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32288(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32296(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32304(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32312(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32320(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32336(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32336(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32336(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32344(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32376(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32304(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_82107DE0:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,4164(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,-19548(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19548);
	// bl 0x821188f8
	sub_821188F8(&ctx);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107DFC:
	// bl 0x8210a3b8
	sub_8210A3B8(&ctx);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E04:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,4164(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,-19544(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19544);
	// bl 0x821188f8
	sub_821188F8(&ctx);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E20:
	// bl 0x820ed810
	sub_820ED810(&ctx);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E28:
	// bl 0x820eea20
	sub_820EEA20(&ctx);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E30:
	// bl 0x820eb0c0
	sub_820EB0C0(&ctx);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E38:
	// bl 0x820eff48
	sub_820EFF48(ctx, base);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E40:
	// bl 0x8215e558
	sub_8215E558(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,440(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 440);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E50:
	// bl 0x820e91a8
	sub_820E91A8(&ctx);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E58:
	// bl 0x8215fa00
	sub_8215FA00(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,464(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 464);
	// b 0x82107e94
	goto loc_82107E94;
loc_82107E78:
	// bl 0x8215fa00
	sub_8215FA00(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,468(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 468);
loc_82107E94:
	// lwz ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82107eac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82107EAC;
	// li ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.s64 = 24;
	// stw ctx_arrow(ctx)->r17,3984(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 3984);
	// stw ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19620);
loc_82107EAC:
	// lwz ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r24,-32141
	ctx_arrow(ctx)->r24.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82107ecc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82107ECC;
	// lwz ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210837c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210837C;
loc_82107ECC:
	// lwz ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r17.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107fb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107FB8;
	// lis ctx_arrow(ctx)->r7,-32010
	ctx_arrow(ctx)->r7.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r6,4120(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,4124(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
loc_82107EE8:
	// bl 0x820ea5f8
	sub_820EA5F8(ctx, base);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,-1
	xer.ca = ctx_arrow(ctx)->r3.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bgt 0x82107f24
	if (ctx_arrow(ctx)->r0.gt()) goto loc_82107F24;
	// beq ctx_arrow(ctx)->r6,0x82107f10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107F10;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0);
	// stw ctx_arrow(ctx)->r8,-19620(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19620);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x82107f9c
	goto loc_82107F9C;
loc_82107F10:
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 0);
	// stw ctx_arrow(ctx)->r6,-19620(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19620);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x82107f9c
	goto loc_82107F9C;
loc_82107F24:
	// beq ctx_arrow(ctx)->r6,0x82107f80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107F80;
	// lwz ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x82107f80
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82107F80;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + -2;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r8.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82107f68
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107F68;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,-4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4);
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r8,4124(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 4124);
	// b 0x82107f98
	goto loc_82107F98;
loc_82107F68:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r17.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,4124(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 4124);
	// stw ctx_arrow(ctx)->r17,-4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -4);
	// b 0x82107f98
	goto loc_82107F98;
loc_82107F80:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + -2;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r17,-4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82107F98:
	// stw ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19620);
loc_82107F9C:
	// lwz ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4116);
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82107ee8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82107EE8;
	// stw ctx_arrow(ctx)->r8,4124(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 4124);
loc_82107FB8:
	// lwz ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82108008
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82108008;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_82107FCC:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82107ff0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82107FF0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82107fcc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82107FCC;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u64;
loc_82107FF0:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r10,-19612(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// stw ctx_arrow(ctx)->r9,-19620(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + -19620);
loc_82108008:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,44
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 44, xer);
	// stw ctx_arrow(ctx)->r10,4116(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4116);
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// stw ctx_arrow(ctx)->r10,-19612(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19612);
	// bgt ctx_arrow(ctx)->r6,0x821082f8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821082F8;
	// lis ctx_arrow(ctx)->r12,-32239
	ctx_arrow(ctx)->r12.s64 = -2112815104;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-32704
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -32704;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_821080F4;
	case 1:
		goto loc_821080FC;
	case 2:
		goto loc_82108124;
	case 3:
		goto loc_8210812C;
	case 4:
		goto loc_8210814C;
	case 5:
		goto loc_82108154;
	case 6:
		goto loc_8210815C;
	case 7:
		goto loc_82108164;
	case 8:
		goto loc_8210816C;
	case 9:
		goto loc_82108174;
	case 10:
		goto loc_8210817C;
	case 11:
		goto loc_82108184;
	case 12:
		goto loc_8210818C;
	case 13:
		goto loc_82108194;
	case 14:
		goto loc_8210819C;
	case 15:
		goto loc_821081AC;
	case 16:
		goto loc_821081CC;
	case 17:
		goto loc_821081D4;
	case 18:
		goto loc_821081DC;
	case 19:
		goto loc_821081A4;
	case 20:
		goto loc_821081B4;
	case 21:
		goto loc_821081E4;
	case 22:
		goto loc_821082F8;
	case 23:
		goto loc_821082F8;
	case 24:
		goto loc_821081EC;
	case 25:
		goto loc_821082F8;
	case 26:
		goto loc_821081F4;
	case 27:
		goto loc_821081FC;
	case 28:
		goto loc_82108208;
	case 29:
		goto loc_8210821C;
	case 30:
		goto loc_8210822C;
	case 31:
		goto loc_821081BC;
	case 32:
		goto loc_82108234;
	case 33:
		goto loc_82108270;
	case 34:
		goto loc_8210823C;
	case 35:
		goto loc_821082A4;
	case 36:
		goto loc_821082B4;
	case 37:
		goto loc_821081FC;
	case 38:
		goto loc_821082F8;
	case 39:
		goto loc_821082BC;
	case 40:
		goto loc_821082C8;
	case 41:
		goto loc_821082D4;
	case 42:
		goto loc_821081C4;
	case 43:
		goto loc_821082F4;
	case 44:
		goto loc_821082EC;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,-32524(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32516(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32476(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32468(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32436(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32428(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32420(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32412(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32396(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32388(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32380(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32372(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32364(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32356(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32340(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32308(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32300(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32292(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32348(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32332(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32284(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32008(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32008(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32276(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32008(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32268(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32260(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32248(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32228(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32212(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32324(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32204(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32144(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32196(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32092(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32076(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32260(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32008(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32068(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32056(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32044(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32316(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32012(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-32020(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_821080F4:
	// bl 0x820ed1c8
	sub_820ED1C8(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821080FC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stw ctx_arrow(ctx)->r17,3984(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 3984);
	// lfs f0,24812(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// stfs f0,2800(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 2800);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,24808(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// stfs f0,3532(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 3532);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108124:
	// bl 0x820ed438
	sub_820ED438(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210812C:
	// bl 0x82109fb8
	sub_82109FB8(&ctx);
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82144ba8
	sub_82144BA8(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,-19540(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19540);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210814C:
	// bl 0x820ed490
	sub_820ED490(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108154:
	// bl 0x820ed6f8
	sub_820ED6F8(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210815C:
	// bl 0x820ee1f0
	sub_820EE1F0(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108164:
	// bl 0x820f0cb0
	sub_820F0CB0(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210816C:
	// bl 0x820ee368
	sub_820EE368(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108174:
	// bl 0x820ee438
	sub_820EE438(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210817C:
	// bl 0x820ee960
	sub_820EE960(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108184:
	// bl 0x820f0b88
	sub_820F0B88(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210818C:
	// bl 0x820eea98
	sub_820EEA98(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108194:
	// bl 0x820eeb98
	sub_820EEB98(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210819C:
	// bl 0x82103558
	sub_82103558(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081A4:
	// bl 0x820eefc8
	sub_820EEFC8(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081AC:
	// bl 0x820ef2e0
	sub_820EF2E0(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081B4:
	// bl 0x820ef488
	sub_820EF488(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081BC:
	// bl 0x820eefc8
	sub_820EEFC8(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081C4:
	// bl 0x820ef058
	sub_820EF058(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081CC:
	// bl 0x820ef548
	sub_820EF548(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081D4:
	// bl 0x820ef610
	sub_820EF610(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081DC:
	// bl 0x820ef6f8
	sub_820EF6F8(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081E4:
	// bl 0x820ef798
	sub_820EF798(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081EC:
	// bl 0x820ef8c8
	sub_820EF8C8(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081F4:
	// bl 0x820ffad8
	sub_820FFAD8(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821081FC:
	// li ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.s64 = 31;
	// stw ctx_arrow(ctx)->r11,-19560(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + -19560);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108208:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// stb ctx_arrow(ctx)->r11,4128(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + 4128, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210821C:
	// bl 0x8215e558
	sub_8215E558(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,440(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 440);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210822C:
	// bl 0x82106e10
	sub_82106E10(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108234:
	// bl 0x820f11a8
	sub_820F11A8(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_8210823C:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// lfs f0,424(ctx_arrow(ctx)->r22)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r11,292(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 292);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2948(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f0,f0,f13
	f0.f64 = double(float(f0.f64 - ctx.f13.f64));
	// stfs f0,-19588(ctx_arrow(ctx)->r29)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -19588);
	// lfs f0,432(ctx_arrow(ctx)->r22)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,2952(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,-19584(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + -19584);
	// b 0x821082f8
	goto loc_821082F8;
loc_82108270:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// lfs f0,-8(ctx_arrow(ctx)->r22)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r11,-12(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + -12);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2948(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f0,f0,f13
	f0.f64 = double(float(f0.f64 - ctx.f13.f64));
	// stfs f0,-19588(ctx_arrow(ctx)->r29)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -19588);
	// lfs f0,0(ctx_arrow(ctx)->r22)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,2952(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,-19584(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + -19584);
	// b 0x821082f8
	goto loc_821082F8;
loc_821082A4:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,4296(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4296);
	// b 0x821082f8
	goto loc_821082F8;
loc_821082B4:
	// bl 0x820f25e0
	sub_820F25E0(&ctx);
	// b 0x821082f8
	goto loc_821082F8;
loc_821082BC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,464(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 464);
	// b 0x821082f8
	goto loc_821082F8;
loc_821082C8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,468(ctx_arrow(ctx)->r16)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 468);
	// b 0x821082f8
	goto loc_821082F8;
loc_821082D4:
	// lis ctx_arrow(ctx)->r11,-31993
	ctx_arrow(ctx)->r11.s64 = -2096693248;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,29100(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,988
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 988;
	// bl 0x82176c80
	sub_82176C80(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821082EC:
	// bl 0x820f4960
	sub_820F4960(ctx, base);
	// b 0x821082f8
	goto loc_821082F8;
loc_821082F4:
	// bl 0x820f4b78
	sub_820F4B78(ctx, base);
loc_821082F8:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210833c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210833C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_82108308:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82108324
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82108324;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82108308
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82108308;
loc_82108324:
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,-19588(ctx_arrow(ctx)->r29)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -19588);
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,-19584(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + -19584);
loc_8210833C:
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f13,2688(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f0,-19568(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// lfs f12,6580(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// blt ctx_arrow(ctx)->r6,0x82108364
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82108364;
	// stfs f0,-19588(ctx_arrow(ctx)->r29)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -19588);
	// stfs f12,-19568(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19568);
loc_82108364:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f0,-19564(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x8210837c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210837C;
	// stfs f0,-19584(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + -19584);
	// stfs f12,-19564(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19564);
loc_8210837C:
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,44
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 44, xer);
	// bgt ctx_arrow(ctx)->r6,0x82108674
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82108674;
	// lis ctx_arrow(ctx)->r12,-32239
	ctx_arrow(ctx)->r12.s64 = -2112815104;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-31836
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -31836;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_82108458;
	case 1:
		goto loc_82108484;
	case 2:
		goto loc_8210848C;
	case 3:
		goto loc_82108494;
	case 4:
		goto loc_8210849C;
	case 5:
		goto loc_821084A4;
	case 6:
		goto loc_821084AC;
	case 7:
		goto loc_821084B4;
	case 8:
		goto loc_821084BC;
	case 9:
		goto loc_821084C4;
	case 10:
		goto loc_821084CC;
	case 11:
		goto loc_821085C4;
	case 12:
		goto loc_821084D4;
	case 13:
		goto loc_821084DC;
	case 14:
		goto loc_821084E4;
	case 15:
		goto loc_821084F4;
	case 16:
		goto loc_82108504;
	case 17:
		goto loc_8210850C;
	case 18:
		goto loc_82108514;
	case 19:
		goto loc_821084EC;
	case 20:
		goto loc_821084FC;
	case 21:
		goto loc_8210851C;
	case 22:
		goto loc_82108674;
	case 23:
		goto loc_82108460;
	case 24:
		goto loc_82108524;
	case 25:
		goto loc_82108674;
	case 26:
		goto loc_8210852C;
	case 27:
		goto loc_82108534;
	case 28:
		goto loc_8210853C;
	case 29:
		goto loc_82108544;
	case 30:
		goto loc_8210854C;
	case 31:
		goto loc_82108554;
	case 32:
		goto loc_82108564;
	case 33:
		goto loc_82108574;
	case 34:
		goto loc_8210856C;
	case 35:
		goto loc_8210857C;
	case 36:
		goto loc_82108584;
	case 37:
		goto loc_8210858C;
	case 38:
		goto loc_82108594;
	case 39:
		goto loc_8210859C;
	case 40:
		goto loc_821085A4;
	case 41:
		goto loc_821085AC;
	case 42:
		goto loc_8210855C;
	case 43:
		goto loc_821085BC;
	case 44:
		goto loc_821085B4;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,-31656(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31612(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31604(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31596(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31588(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31580(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31572(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31564(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31556(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31548(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31540(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31292(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31532(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31524(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31516(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31500(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31484(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31476(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31468(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31508(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31492(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31460(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31116(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31648(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31452(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31116(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31444(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31436(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31428(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31420(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31412(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31404(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31388(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31372(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31380(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31364(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31356(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31348(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31340(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31332(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31324(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31316(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31396(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31300(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-31308(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_82108458:
	// bl 0x820f68d0
	sub_820F68D0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108460:
	// lwz ctx_arrow(ctx)->r11,3984(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// stw ctx_arrow(ctx)->r11,3984(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 3984);
	// blt ctx_arrow(ctx)->r6,0x82108674
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82108674;
	// lwz ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-19612(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + -19612);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// b 0x82108670
	goto loc_82108670;
loc_82108484:
	// bl 0x820f69e8
	sub_820F69E8(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210848C:
	// bl 0x820f6ab8
	sub_820F6AB8(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108494:
	// bl 0x820f6b98
	sub_820F6B98(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210849C:
	// bl 0x820f6c60
	sub_820F6C60(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084A4:
	// bl 0x820f6db0
	sub_820F6DB0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084AC:
	// bl 0x820f73f8
	sub_820F73F8(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084B4:
	// bl 0x820f0d68
	sub_820F0D68(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084BC:
	// bl 0x820f7d20
	sub_820F7D20(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084C4:
	// bl 0x820ee4e8
	sub_820EE4E8(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084CC:
	// bl 0x820f8c28
	sub_820F8C28(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084D4:
	// bl 0x820f9200
	sub_820F9200(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084DC:
	// bl 0x820f9648
	sub_820F9648(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084E4:
	// bl 0x82103758
	sub_82103758(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084EC:
	// bl 0x82104ad0
	sub_82104AD0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084F4:
	// bl 0x820fae88
	sub_820FAE88(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821084FC:
	// bl 0x82105700
	sub_82105700(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108504:
	// bl 0x820fbab0
	sub_820FBAB0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210850C:
	// bl 0x820fc018
	sub_820FC018(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108514:
	// bl 0x82105a78
	sub_82105A78(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210851C:
	// bl 0x820fcb38
	sub_820FCB38(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108524:
	// bl 0x820fd530
	sub_820FD530(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210852C:
	// bl 0x820f2680
	sub_820F2680(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108534:
	// bl 0x820f2a50
	sub_820F2A50(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210853C:
	// bl 0x82100738
	sub_82100738(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108544:
	// bl 0x820f3310
	sub_820F3310(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210854C:
	// bl 0x82106f50
	sub_82106F50(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108554:
	// bl 0x82104fc0
	sub_82104FC0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210855C:
	// bl 0x82105308
	sub_82105308(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108564:
	// bl 0x820f1248
	sub_820F1248(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210856C:
	// bl 0x820f1da8
	sub_820F1DA8(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108574:
	// bl 0x820f15b8
	sub_820F15B8(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210857C:
	// bl 0x820f2318
	sub_820F2318(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108584:
	// bl 0x82106358
	sub_82106358(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210858C:
	// bl 0x820f36a0
	sub_820F36A0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_82108594:
	// bl 0x820f38a0
	sub_820F38A0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_8210859C:
	// bl 0x820f3d18
	sub_820F3D18(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821085A4:
	// bl 0x820f40f0
	sub_820F40F0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821085AC:
	// bl 0x820f4388
	sub_820F4388(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821085B4:
	// bl 0x820f49c0
	sub_820F49C0(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821085BC:
	// bl 0x820f4e70
	sub_820F4E70(ctx, base);
	// b 0x82108674
	goto loc_82108674;
loc_821085C4:
	// bl 0x8213d730
	sub_8213D730(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821085d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821085D8;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x82108670
	goto loc_82108670;
loc_821085D8:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8210862c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210862C;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r10,-19556(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82108604
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108604;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stb ctx_arrow(ctx)->r10,-19556(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -19556));
	// b 0x82108674
	goto loc_82108674;
loc_82108604:
	// lwz ctx_arrow(ctx)->r9,-19560(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x82108618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82108618;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,26
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 26, xer);
	// bne ctx_arrow(ctx)->r6,0x82108624
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108624;
loc_82108618:
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4148(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4148);
loc_82108624:
	// stw ctx_arrow(ctx)->r9,-19616(ctx_arrow(ctx)->r19)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r19.u32 + -19616);
	// b 0x82108674
	goto loc_82108674;
loc_8210862C:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19600(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,54
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 54, xer);
	// bne ctx_arrow(ctx)->r6,0x8210866c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210866C;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4200(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4200);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,4176(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4176);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,4116(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4116);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r11,4120(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4120);
	// li ctx_arrow(ctx)->r11,25
	ctx_arrow(ctx)->r11.s64 = 25;
	// b 0x82108670
	goto loc_82108670;
loc_8210866C:
	// li ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.s64 = 13;
loc_82108670:
	// stw ctx_arrow(ctx)->r11,-19616(ctx_arrow(ctx)->r19)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r19.u32 + -19616);
loc_82108674:
	// bl 0x8209ea70
	sub_8209EA70(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821086b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821086B4;
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// li ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r3.s64 = 4;
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// stb ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + -19523, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r11,-19424(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -19424);
	// bl 0x820c9aa0
	sub_820C9AA0(&ctx);
	// lbz ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,253
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 253;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stb ctx_arrow(ctx)->r11,-19523(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + -19523, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_821086B4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_821086C0) PPC_WEAK_FUNC(sub_821086C0);
PPC_FUNC_IMPL(__imp__sub_821086C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820c32b8
	sub_820C32B8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f1,f0
	ctx.f1.f64 = double(float(ctx.f1.f64 * f0.f64));
	// bl 0x8210e350
	sub_8210E350(ctx, base);
	// lis ctx_arrow(ctx)->r31,-32141
	ctx_arrow(ctx)->r31.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,25
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 25, xer);
	// bne ctx_arrow(ctx)->r6,0x82108700
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108700;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,16060(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x82108708
	goto loc_82108708;
loc_82108700:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,24780(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
loc_82108708:
	// bl 0x8210e310
	sub_8210E310(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,14056(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,13964(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8210e3a0
	sub_8210E3A0(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8210e300
	sub_8210E300(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x8210e170
	sub_8210E170(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x8210e158
	sub_8210E158(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x820c9c00
	sub_820C9C00(ctx, base);
	// li ctx_arrow(ctx)->r4,330
	ctx_arrow(ctx)->r4.s64 = 330;
	// li ctx_arrow(ctx)->r3,440
	ctx_arrow(ctx)->r3.s64 = 440;
	// bl 0x8210e1a8
	sub_8210E1A8(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x820c9c18
	sub_820C9C18(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8210e228
	sub_8210E228(ctx, base);
	// bl 0x8210df98
	sub_8210DF98(ctx, base);
	// bl 0x82096180
	sub_82096180(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-19620(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,44
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 44, xer);
	// bgt ctx_arrow(ctx)->r6,0x82108c18
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82108C18;
	// lis ctx_arrow(ctx)->r12,-32239
	ctx_arrow(ctx)->r12.s64 = -2112815104;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-30816
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -30816;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_82108854;
	case 1:
		goto loc_8210886C;
	case 2:
		goto loc_82108884;
	case 3:
		goto loc_8210889C;
	case 4:
		goto loc_821088B4;
	case 5:
		goto loc_821088CC;
	case 6:
		goto loc_821088E4;
	case 7:
		goto loc_821088FC;
	case 8:
		goto loc_82108914;
	case 9:
		goto loc_8210892C;
	case 10:
		goto loc_82108944;
	case 11:
		goto loc_82108C18;
	case 12:
		goto loc_8210895C;
	case 13:
		goto loc_82108974;
	case 14:
		goto loc_8210898C;
	case 15:
		goto loc_821089BC;
	case 16:
		goto loc_821089EC;
	case 17:
		goto loc_82108A04;
	case 18:
		goto loc_82108A1C;
	case 19:
		goto loc_821089A4;
	case 20:
		goto loc_821089D4;
	case 21:
		goto loc_82108A34;
	case 22:
		goto loc_82108C18;
	case 23:
		goto loc_82108C18;
	case 24:
		goto loc_82108A4C;
	case 25:
		goto loc_82108C18;
	case 26:
		goto loc_82108A64;
	case 27:
		goto loc_82108A7C;
	case 28:
		goto loc_82108A94;
	case 29:
		goto loc_82108AAC;
	case 30:
		goto loc_82108AC4;
	case 31:
		goto loc_82108ADC;
	case 32:
		goto loc_82108B0C;
	case 33:
		goto loc_82108B3C;
	case 34:
		goto loc_82108B24;
	case 35:
		goto loc_82108B54;
	case 36:
		goto loc_82108B6C;
	case 37:
		goto loc_82108B84;
	case 38:
		goto loc_82108B9C;
	case 39:
		goto loc_82108BB4;
	case 40:
		goto loc_82108BCC;
	case 41:
		goto loc_82108BE4;
	case 42:
		goto loc_82108AF4;
	case 43:
		goto loc_82108C14;
	case 44:
		goto loc_82108BFC;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,-30636(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30612(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30588(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30564(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30540(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30516(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30492(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30468(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30444(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30420(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30396(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29672(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30372(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30348(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30324(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30276(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30228(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30204(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30180(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30300(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30252(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30156(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29672(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29672(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30132(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29672(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30108(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30084(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30060(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30036(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-30012(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29988(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29940(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29892(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29916(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29868(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29844(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29820(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29796(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29772(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29748(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29724(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29964(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29676(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-29700(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_82108854:
	// bl 0x820ed288
	sub_820ED288(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_8210886C:
	// bl 0x820ed378
	sub_820ED378(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108884:
	// bl 0x82109e68
	sub_82109E68(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_8210889C:
	// bl 0x8210a438
	sub_8210A438(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821088B4:
	// bl 0x820ed520
	sub_820ED520(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821088CC:
	// bl 0x820ed870
	sub_820ED870(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821088E4:
	// bl 0x820f7968
	sub_820F7968(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821088FC:
	// bl 0x820fd910
	sub_820FD910(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108914:
	// bl 0x820f8028
	sub_820F8028(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_8210892C:
	// bl 0x820f8570
	sub_820F8570(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108944:
	// bl 0x820f8fd0
	sub_820F8FD0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_8210895C:
	// bl 0x820f9450
	sub_820F9450(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108974:
	// bl 0x820f9a60
	sub_820F9A60(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_8210898C:
	// bl 0x82104050
	sub_82104050(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821089A4:
	// bl 0x820fa7f0
	sub_820FA7F0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821089BC:
	// bl 0x820fb2d0
	sub_820FB2D0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821089D4:
	// bl 0x820fb7c0
	sub_820FB7C0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821089EC:
	// bl 0x820fbd68
	sub_820FBD68(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108A04:
	// bl 0x820fc648
	sub_820FC648(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108A1C:
	// bl 0x82105e98
	sub_82105E98(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108A34:
	// bl 0x820fcff8
	sub_820FCFF8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108A4C:
	// bl 0x820eff90
	sub_820EFF90(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108A64:
	// bl 0x820ffb40
	sub_820FFB40(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108A7C:
	// bl 0x82100528
	sub_82100528(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108A94:
	// bl 0x82101800
	sub_82101800(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108AAC:
	// bl 0x821019f8
	sub_821019F8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108AC4:
	// bl 0x82107690
	sub_82107690(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108ADC:
	// bl 0x820fab80
	sub_820FAB80(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108AF4:
	// bl 0x820fad98
	sub_820FAD98(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108B0C:
	// bl 0x820fdd50
	sub_820FDD50(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108B24:
	// bl 0x820fe1b8
	sub_820FE1B8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108B3C:
	// bl 0x820fdeb8
	sub_820FDEB8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108B54:
	// bl 0x820fe770
	sub_820FE770(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108B6C:
	// bl 0x820fe9e8
	sub_820FE9E8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108B84:
	// bl 0x82102008
	sub_82102008(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108B9C:
	// bl 0x821020f8
	sub_821020F8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108BB4:
	// bl 0x82102328
	sub_82102328(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108BCC:
	// bl 0x82102718
	sub_82102718(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108BE4:
	// bl 0x82102a18
	sub_82102A18(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108BFC:
	// bl 0x82102ad0
	sub_82102AD0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82108C14:
	// bl 0x82102b98
	sub_82102B98(ctx, base);
loc_82108C18:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82108C30) PPC_WEAK_FUNC(sub_82108C30);
PPC_FUNC_IMPL(__imp__sub_82108C30) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x8209f598
	sub_8209F598(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82108c60
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108C60;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f1,4172(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_82108C60:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82108C78) PPC_WEAK_FUNC(sub_82108C78);
PPC_FUNC_IMPL(__imp__sub_82108C78) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x8209f598
	sub_8209F598(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82108ca8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108CA8;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f1,-19536(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_82108CA8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82108CC0) PPC_WEAK_FUNC(sub_82108CC0);
PPC_FUNC_IMPL(__imp__sub_82108CC0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x8209f598
	sub_8209F598(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82108cf0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108CF0;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f1,-19532(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_82108CF0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82108D08) PPC_WEAK_FUNC(sub_82108D08);
PPC_FUNC_IMPL(__imp__sub_82108D08) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x8209f598
	sub_8209F598(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82108d38
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108D38;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f1,-19528(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_82108D38:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82108D50) PPC_WEAK_FUNC(sub_82108D50);
PPC_FUNC_IMPL(__imp__sub_82108D50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r10,-19596(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82108e74
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82108E74;
	// lis ctx_arrow(ctx)->r28,-32141
	ctx_arrow(ctx)->r28.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r8,-19592(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x82108e74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82108E74;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,4024(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82108e74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108E74;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 * 28;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-19088
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -19088;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-16856
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -16856;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 20;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// lhzx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x820b57f8
	sub_820B57F8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-30584
	ctx_arrow(ctx)->r11.s64 = -2004353024;
	// lwz ctx_arrow(ctx)->r28,-19592(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 20;
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,34953
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 | 34953;
	// lwz ctx_arrow(ctx)->r11,-19596(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 28;
	// lwzx ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// mulhw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = (int64_t(ctx_arrow(ctx)->r3.s32) * int64_t(ctx_arrow(ctx)->r31.s32)) >> 32;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1F) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 5;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// bl 0x820ea630
	sub_820EA630(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x820e9910
	sub_820E9910(ctx, base);
	// bl 0x820b57f8
	sub_820B57F8(ctx, base);
	// mulhw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = (int64_t(ctx_arrow(ctx)->r3.s32) * int64_t(ctx_arrow(ctx)->r31.s32)) >> 32;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.s64 = PPCRegister_s16(ctx_arrow(ctx)->r29);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1F) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 5;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bgt ctx_arrow(ctx)->r6,0x82108e74
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82108E74;
	// lwz ctx_arrow(ctx)->r11,-19596(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 20;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 28;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ea630
	sub_820EA630(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820e9630
	sub_820E9630(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82108e74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82108E74;
	// lwz ctx_arrow(ctx)->r11,-19596(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 20;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 28;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820ea630
	sub_820EA630(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x820e9990
	sub_820E9990(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,2796(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 2796);
loc_82108E74:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82108E80) PPC_WEAK_FUNC(sub_82108E80);
PPC_FUNC_IMPL(__imp__sub_82108E80) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820e9130
	sub_820E9130(&ctx);
	// bl 0x820e9158
	sub_820E9158(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82108EA8) PPC_WEAK_FUNC(sub_82108EA8);
PPC_FUNC_IMPL(__imp__sub_82108EA8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820e9130
	sub_820E9130(&ctx);
	// bl 0x820e91a0
	sub_820E91A0(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82108ED0) PPC_WEAK_FUNC(sub_82108ED0);
PPC_FUNC_IMPL(__imp__sub_82108ED0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x820c9b80
	sub_820C9B80(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3952
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3952;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r9.u32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82108F20) PPC_WEAK_FUNC(sub_82108F20);
PPC_FUNC_IMPL(__imp__sub_82108F20) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,12480
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 12480;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,12464
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r10.s64 + 12464;
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// lfs f2,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f3,-13856(ctx_arrow(ctx)->r27)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f1,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8238b0d0
	sub_8238B0D0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f3,-13856(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,14368
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 14368;
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,3844(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// bl 0x8238b0d0
	sub_8238B0D0(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,60
	ctx_arrow(ctx)->r6.s64 = 60;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,14624
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r10.s64 + 14624;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10,14288
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r10.s64 + 14288;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x820987e8
	sub_820987E8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,60
	ctx_arrow(ctx)->r6.s64 = 60;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// bl 0x820987e8
	sub_820987E8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82108FD8) PPC_WEAK_FUNC(sub_82108FD8);
PPC_FUNC_IMPL(__imp__sub_82108FD8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32015
	ctx_arrow(ctx)->r11.s64 = -2098135040;
	// lbz ctx_arrow(ctx)->r11,-8431(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12464
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12464;
	// beq ctx_arrow(ctx)->r6,0x82109008
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109008;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f12,2688(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// b 0x8210900c
	goto loc_8210900C;
loc_82109008:
	// lfs f12,4184(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
loc_8210900C:
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lfs f13,0(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// lfs f0,-13852(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// fadds f11,f0,f13
	ctx.f11.f64 = double(float(f0.f64 + ctx.f13.f64));
	// lfs f0,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f3,15392(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,12480
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r10.s64 + 12480;
	// lwz ctx_arrow(ctx)->r10,16640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,6,0,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 6) & 0xFFFFFFC0;
	// lfs f13,25512(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fadds f1,f0,f13
	ctx.f1.f64 = double(float(f0.f64 + ctx.f13.f64));
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r30.u64;
	// fadds f13,f11,f12
	ctx.f13.f64 = double(float(ctx.f11.f64 + ctx.f12.f64));
	// lfs f0,2956(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f2,f13,f0
	ctx.f2.f64 = double(float(ctx.f13.f64 - f0.f64));
	// bl 0x8238b0d0
	sub_8238B0D0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,14368
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 14368;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,25508(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f3,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// lfs f1,25504(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x8238b078
	sub_8238B078(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// bl 0x8238bc28
	sub_8238BC28(ctx, base);
	// lis ctx_arrow(ctx)->r31,-31991
	ctx_arrow(ctx)->r31.s64 = -2096562176;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193748
	sub_82193748(ctx, base);
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193860
	sub_82193860(ctx, base);
	// li ctx_arrow(ctx)->r4,70
	ctx_arrow(ctx)->r4.s64 = 70;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193960
	sub_82193960(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r6,60
	ctx_arrow(ctx)->r6.s64 = 60;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,12608
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 12608;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,14288
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 14288;
	// bl 0x820987e8
	sub_820987E8(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193748
	sub_82193748(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193860
	sub_82193860(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193960
	sub_82193960(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82109118) PPC_WEAK_FUNC(sub_82109118);
PPC_FUNC_IMPL(__imp__sub_82109118) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-32
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -32;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-31994
	ctx_arrow(ctx)->r11.s64 = -2096758784;
	// fmr f30,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f1.f64;
	// fmr f28,f2
	f28.f64 = ctx.f2.f64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28184
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 28184;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 112;
	// bl 0x821463f0
	sub_821463F0(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = 2;
	// bl 0x82096fb0
	sub_82096FB0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -65536;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,7(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,8,16,23
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r10,7(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,8,16,23
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 8) & 0xFF00) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFF00FF);
	// lbz ctx_arrow(ctx)->r6,11(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r7.u64;
	// lbz ctx_arrow(ctx)->r9,11(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,8,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 8) & 0xFFFFFF00;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 8) & 0xFFFFFF00;
	// or ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// or ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r6.u64;
	// bl 0x82096160
	sub_82096160(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32015
	ctx_arrow(ctx)->r11.s64 = -2098135040;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lbz ctx_arrow(ctx)->r11,-8431(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// beq ctx_arrow(ctx)->r6,0x821091c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821091C4;
	// fmr f28,f31
	f28.f64 = f31.f64;
loc_821091C4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f0,25520(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fadds f29,f28,f0
	f29.f64 = double(float(f28.f64 + f0.f64));
	// lfs f0,25516(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f28,f28,f0
	f28.f64 = double(float(f28.f64 + f0.f64));
	// bl 0x8239bf98
	sub_8239BF98(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f30,0(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// stfs f29,4(ctx_arrow(ctx)->r10)
	temp.f32 = float(f29.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,-13848(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fadds f13,f0,f30
	ctx.f13.f64 = double(float(f0.f64 + f30.f64));
	// stfs f31,8(ctx_arrow(ctx)->r10)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f31,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f13,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f29,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f29.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,8(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f0,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f13,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f28,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f28.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,8(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f0,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f0,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f30,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f29,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f29.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,8(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f31,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stfs f31,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f13,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f28,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f28.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,8(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f0,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f0,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f30,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f28,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f28.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,8(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f31,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f0,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x8239c170
	sub_8239C170(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-32
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -32;
	// bl 0x823ed594
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821093D0) PPC_WEAK_FUNC(sub_821093D0);
PPC_FUNC_IMPL(__imp__sub_821093D0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stfd f31,-40(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -40);
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// stw ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stw ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// li ctx_arrow(ctx)->r11,255
	ctx_arrow(ctx)->r11.s64 = 255;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// bl 0x8210e198
	sub_8210E198(&ctx);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,12472
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 12472;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,4176(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f0,25528(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f31,f13,f0
	f31.f64 = double(float(ctx.f13.f64 * f0.f64));
	// bl 0x8210e188
	sub_8210E188(ctx, base);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f0,25524(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// bl 0x82109118
	sub_82109118(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lfd f31,-40(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82109488) PPC_WEAK_FUNC(sub_82109488);
PPC_FUNC_IMPL(__imp__sub_82109488) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s32;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f3,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f2,f3
	ctx.f2.f64 = ctx.f3.f64;
	// fmr f1,f3
	ctx.f1.f64 = ctx.f3.f64;
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,6592(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f4,f13,f0
	ctx.f4.f64 = double(float(ctx.f13.f64 * f0.f64));
	// bl 0x82098290
	sub_82098290(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821094D8) PPC_WEAK_FUNC(sub_821094D8);
PPC_FUNC_IMPL(__imp__sub_821094D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r3.s64 = 12;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x82136fa0
	sub_82136FA0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82109544
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109544;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109518
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109518;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,12468(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x8210953c
	goto loc_8210953C;
loc_82109518:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x82109534
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109534;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x82109534
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109534;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,14064(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x8210953c
	goto loc_8210953C;
loc_82109534:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,3060(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
loc_8210953C:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8210bcc8
	sub_8210BCC8(ctx, base);
loc_82109544:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82109560) PPC_WEAK_FUNC(sub_82109560);
PPC_FUNC_IMPL(__imp__sub_82109560) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f23{};
	PPCRegister f24{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed104
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-144
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -144;
	// bl 0x823ed534
	// stwu ctx_arrow(ctx)->r1,-384(ctx_arrow(ctx)->r1)
	ea = -384 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r21.s64 = 0;
	// li ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.s64 = 3;
	// li ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.s64 = 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,156
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 156;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r21,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// mr ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r4.u64;
	// stw ctx_arrow(ctx)->r10,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r20,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r21,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stw ctx_arrow(ctx)->r21,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// stw ctx_arrow(ctx)->r21,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// stw ctx_arrow(ctx)->r21,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// stw ctx_arrow(ctx)->r21,140(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// stw ctx_arrow(ctx)->r21,144(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// stw ctx_arrow(ctx)->r21,148(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// stw ctx_arrow(ctx)->r21,152(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// stw ctx_arrow(ctx)->r21,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// bl 0x820ae310
	sub_820AE310(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,16656
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 16656;
	// bne ctx_arrow(ctx)->r6,0x821098ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821098AC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821098ac
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821098AC;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-14328
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -14328;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r30,-32256
	ctx_arrow(ctx)->r30.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r3,-32256
	ctx_arrow(ctx)->r3.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r4,-32256
	ctx_arrow(ctx)->r4.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r5,-32256
	ctx_arrow(ctx)->r5.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r6,-32256
	ctx_arrow(ctx)->r6.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r7,-32256
	ctx_arrow(ctx)->r7.s64 = -2113929216;
	// lfs f23,25044(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f23.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// lfs f24,12272(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f24.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// lfs f25,15680(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f25.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f29,14220(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,25540
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 25540;
	// lfs f30,25536(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32056
	ctx_arrow(ctx)->r11.s64 = -2100822016;
	// lfs f28,3060(ctx_arrow(ctx)->r7)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lfs f31,2688(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r22,-31994
	ctx_arrow(ctx)->r22.s64 = -2096758784;
	// lfs f26,2692(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f26.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r23,-31994
	ctx_arrow(ctx)->r23.s64 = -2096758784;
	// lfs f27,25532(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r19,-32141
	ctx_arrow(ctx)->r19.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-16208
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -16208;
	// li ctx_arrow(ctx)->r18,137
	ctx_arrow(ctx)->r18.s64 = 137;
loc_82109660:
	// lwz ctx_arrow(ctx)->r11,-2304(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82109728
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82109728;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,-2304(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -2304);
	// bl 0x82119108
	sub_82119108(&ctx);
	// lfs f0,-28(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f27
	f0.f64 = double(float(f0.f64 - f27.f64));
	// lfs f13,96(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82109728
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82109728;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823dc210
	sub_823DC210(ctx, base);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r25.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210970c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210970C;
	// lbz ctx_arrow(ctx)->r11,5(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210970c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210970C;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,25
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 25;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821096e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821096E4;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// fmr f1,f26
	ctx.f1.f64 = f26.f64;
	// bl 0x8211b240
	sub_8211B240(ctx, base);
loc_821096E4:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f3,f29
	ctx.fpscr.disableFlushMode();
	ctx.f3.f64 = f29.f64;
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// fmr f1,f28
	ctx.f1.f64 = f28.f64;
	// bl 0x8211d710
	sub_8211D710(ctx, base);
	// stb ctx_arrow(ctx)->r20,4(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 4, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r20), 0);
	// stw ctx_arrow(ctx)->r18,-2304(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -2304);
	// b 0x82109728
	goto loc_82109728;
loc_8210970C:
	// lwz ctx_arrow(ctx)->r11,-2304(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,212
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 212, xer);
	// bne ctx_arrow(ctx)->r6,0x82109728
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109728;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f2,f24
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f24.f64;
	// fmr f1,f25
	ctx.f1.f64 = f25.f64;
	// bl 0x8211b240
	sub_8211B240(ctx, base);
loc_82109728:
	// lbz ctx_arrow(ctx)->r11,5(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821097a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821097A8;
	// lwz ctx_arrow(ctx)->r10,16696(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109768
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109768;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 12;
	// stw ctx_arrow(ctx)->r10,16696(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 16696);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,16700(ctx_arrow(ctx)->r27)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 16700);
loc_82109768:
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82119128
	sub_82119128(ctx, base);
	// lfs f0,16700(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,-13844(ctx_arrow(ctx)->r19)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x82109790
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82109790;
	// fadds f1,f13,f1
	ctx.f1.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f1
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f1.f64);
	// bge ctx_arrow(ctx)->r6,0x821097a0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821097A0;
	// b 0x8210979c
	goto loc_8210979C;
loc_82109790:
	// fsubs f1,f1,f13
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64 - ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f1
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f1.f64);
	// ble ctx_arrow(ctx)->r6,0x821097a0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821097A0;
loc_8210979C:
	// fmr f1,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f0.f64;
loc_821097A0:
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82119178
	sub_82119178(ctx, base);
loc_821097A8:
	// lbz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82109890
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109890;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lfsx f0,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// bne ctx_arrow(ctx)->r6,0x821097d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821097D8;
	// fmr f0,f23
	f0.f64 = f23.f64;
loc_821097D8:
	// lwz ctx_arrow(ctx)->r9,-2304(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32;
	// std ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x82109890
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109890;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 8;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210984c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210984C;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f3,f29
	ctx.f3.f64 = f29.f64;
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8211d710
	sub_8211D710(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,20
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 20;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lfsx f1,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8211b338
	sub_8211B338(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u64;
	// stb ctx_arrow(ctx)->r11,5(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 5, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210984C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 24;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82109888
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109888;
	// li ctx_arrow(ctx)->r8,437
	ctx_arrow(ctx)->r8.s64 = 437;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,111
	ctx_arrow(ctx)->r4.s64 = 111;
	// bl 0x82144920
	sub_82144920(ctx, base);
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r20.u64;
loc_82109888:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// stb ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 4, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_82109890:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x8211d7c0
	sub_8211D7C0(ctx, base);
	// addi ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r16,-1
	ctx_arrow(ctx)->r16.s64 = ctx_arrow(ctx)->r16.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r16.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109660
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109660;
loc_821098AC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x82118aa8
	sub_82118AA8(ctx, base);
	// li ctx_arrow(ctx)->r3,80
	ctx_arrow(ctx)->r3.s64 = 80;
	// bl 0x8211c320
	sub_8211C320(ctx, base);
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82119948
	sub_82119948(ctx, base);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821098ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821098EC;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// sth ctx_arrow(ctx)->r17,0(ctx_arrow(ctx)->r3)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r3.u32 + 0, ctx_arrow(ctx)->r17, 0);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821098EC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210990c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210990C;
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// bl 0x82118d48
	sub_82118D48(ctx, base);
	// stw ctx_arrow(ctx)->r17,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_8210990C:
	// lis ctx_arrow(ctx)->r11,-32239
	ctx_arrow(ctx)->r11.s64 = -2112815104;
	// stw ctx_arrow(ctx)->r15,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lis ctx_arrow(ctx)->r30,-31994
	ctx_arrow(ctx)->r30.s64 = -2096758784;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-27432
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -27432;
	// stw ctx_arrow(ctx)->r11,4812(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4812);
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,14(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 14);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// bl 0x8209cd50
	sub_8209CD50(ctx, base);
	// stw ctx_arrow(ctx)->r3,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r4,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8211d328
	sub_8211D328(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4812(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4812);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82118bc8
	sub_82118BC8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,14(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 14);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// bl 0x8209cd50
	sub_8209CD50(ctx, base);
	// stw ctx_arrow(ctx)->r3,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8211d300
	sub_8211D300(ctx, base);
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193748
	sub_82193748(ctx, base);
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821937c0
	sub_821937C0(ctx, base);
	// li ctx_arrow(ctx)->r4,70
	ctx_arrow(ctx)->r4.s64 = 70;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193960
	sub_82193960(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x8209ab98
	sub_8209AB98(ctx, base);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x8209b200
	sub_8209B200(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8211c460
	sub_8211C460(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193748
	sub_82193748(ctx, base);
	// li ctx_arrow(ctx)->r4,7
	ctx_arrow(ctx)->r4.s64 = 7;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821937c0
	sub_821937C0(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82193960
	sub_82193960(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,384
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 384;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-144
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -144;
	// bl 0x823ed580
	// b 0x823ed154
	return;
}

alias(__imp__sub_82109A30) PPC_WEAK_FUNC(sub_82109A30);
PPC_FUNC_IMPL(__imp__sub_82109A30) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stfd f30,-48(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// stfd f31,-40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -40);
	// stwu ctx_arrow(ctx)->r1,-352(ctx_arrow(ctx)->r1)
	ea = -352 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820c32b8
	sub_820C32B8(&ctx);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16512;
	// lfs f3,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,16640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f2,f3
	ctx.f2.f64 = ctx.f3.f64;
	// fmr f1,f3
	ctx.f1.f64 = ctx.f3.f64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,6,0,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 6) & 0xFFFFFFC0;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fmuls f30,f0,f31
	f30.f64 = double(float(f0.f64 * f31.f64));
	// bl 0x8238b0d0
	sub_8238B0D0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// fmr f2,f30
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f30.f64;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,14496
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 14496;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f3,2952(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f4,14056(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// lfs f1,16060(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x8238b530
	sub_8238B530(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r3,16652(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82119108
	sub_82119108(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f6,104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f5,100(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lfs f4,96(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f0,-13840(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// fsubs f13,f31,f0
	ctx.f13.f64 = double(float(f31.f64 - f0.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14352
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14352;
	// lfs f12,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f3,-4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fadds f11,f12,f3
	ctx.f11.f64 = double(float(ctx.f12.f64 + ctx.f3.f64));
	// lfs f12,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f2,-8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// fadds f10,f12,f2
	ctx.f10.f64 = double(float(ctx.f12.f64 + ctx.f2.f64));
	// lfs f1,-12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f6,f13,f6
	ctx.f6.f64 = double(float(ctx.f13.f64 * ctx.f6.f64));
	// fmuls f5,f13,f5
	ctx.f5.f64 = double(float(ctx.f13.f64 * ctx.f5.f64));
	// lfs f9,20(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fadds f12,f12,f1
	ctx.f12.f64 = double(float(ctx.f12.f64 + ctx.f1.f64));
	// lfs f8,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmuls f13,f13,f4
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f4.f64));
	// lfs f7,12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmadds f6,f11,f0,f6
	ctx.f6.f64 = double(float(ctx.f11.f64 * f0.f64 + ctx.f6.f64));
	// fmadds f5,f10,f0,f5
	ctx.f5.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f5.f64));
	// fmadds f4,f12,f0,f13
	ctx.f4.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// bl 0x8210bf20
	sub_8210BF20(ctx, base);
	// bl 0x8210d790
	sub_8210D790(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82109b6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109B6C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// li ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = 8;
	// mtctr ctx_arrow(ctx)->r10
	ctr.u64 = ctx_arrow(ctx)->r10.u64;
loc_82109B54:
	// ld ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// std ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// bdnz 0x82109b54
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_82109B54;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 176;
loc_82109B6C:
	// bl 0x8210d7d0
	sub_8210D7D0(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// li ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r9.s64 = 8;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_82109B80:
	// ld ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// std ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// bdnz 0x82109b80
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_82109B80;
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x8210d7c0
	sub_8210D7C0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8210d780
	sub_8210D780(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x82109560
	sub_82109560(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8210d780
	sub_8210D780(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// bl 0x8210d7c0
	sub_8210D7C0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// lfd f30,-48(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-40(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82109BD8) PPC_WEAK_FUNC(sub_82109BD8);
PPC_FUNC_IMPL(__imp__sub_82109BD8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// bl 0x820c32b8
	sub_820C32B8(ctx, base);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s32;
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,16448
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 16448;
	// std ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// lfs f4,17848(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f3,2944(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f31,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// fmuls f2,f0,f31
	ctx.f2.f64 = double(float(f0.f64 * f31.f64));
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-13868
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -13868;
	// lfs f1,13960(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfs f0,-16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -16);
	// bl 0x8238b530
	sub_8238B530(&ctx);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f13,-24(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,-24
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + -24;
	// lfs f0,-12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,16320
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 16320;
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lfs f13,-20(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// lfs f0,-8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// lfs f0,-4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// lfs f13,-16(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// bl 0x8238c2e8
	sub_8238C2E8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,12480
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 12480;
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,16680
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r10.s64 + 16680;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// li ctx_arrow(ctx)->r4,121
	ctx_arrow(ctx)->r4.s64 = 121;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lfs f0,-8(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,13980(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f1,f0,f13
	ctx.f1.f64 = double(float(f0.f64 * ctx.f13.f64));
	// bl 0x8238c110
	sub_8238C110(ctx, base);
	// bl 0x820ae0d8
	sub_820AE0D8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109d04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109D04;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,-8(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,-8(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + -8);
loc_82109D04:
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x8238bc28
	sub_8238BC28(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32015
	ctx_arrow(ctx)->r11.s64 = -2098135040;
	// lbz ctx_arrow(ctx)->r11,-8431(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82109d34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109D34;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82109d38
	goto loc_82109D38;
loc_82109D34:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82109D38:
	// lwz ctx_arrow(ctx)->r11,16640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x8209d250
	sub_8209D250(ctx, base);
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r26.s32;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f0,6592(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f3,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fmr f2,f3
	ctx.f2.f64 = ctx.f3.f64;
	// fmr f1,f3
	ctx.f1.f64 = ctx.f3.f64;
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fnmsubs f4,f13,f0,f31
	ctx.f4.f64 = double(float(-(ctx.f13.f64 * f0.f64 - f31.f64)));
	// bl 0x82098290
	sub_82098290(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// lfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed180
	return;
}

alias(__imp__sub_82109D98) PPC_WEAK_FUNC(sub_82109D98);
PPC_FUNC_IMPL(__imp__sub_82109D98) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,16684
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 16684;
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109dec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109DEC;
	// li ctx_arrow(ctx)->r3,272
	ctx_arrow(ctx)->r3.s64 = 272;
	// bl 0x8209d088
	sub_8209D088(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82109de4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109DE4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25616
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 25616;
	// bl 0x8209d168
	sub_8209D168(ctx, base);
	// stw ctx_arrow(ctx)->r3,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// b 0x82109dec
	goto loc_82109DEC;
loc_82109DE4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
loc_82109DEC:
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109e28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109E28;
	// li ctx_arrow(ctx)->r3,272
	ctx_arrow(ctx)->r3.s64 = 272;
	// bl 0x8209d088
	sub_8209D088(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82109e20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82109E20;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25560
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 25560;
	// bl 0x8209d168
	sub_8209D168(ctx, base);
	// stw ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4);
	// b 0x82109e28
	goto loc_82109E28;
loc_82109E20:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4);
loc_82109E28:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stb ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -14368, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,15328(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,-4212(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4212);
	// lfs f0,15104(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stfs f0,-12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -12);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82109E68) PPC_WEAK_FUNC(sub_82109E68);
PPC_FUNC_IMPL(__imp__sub_82109E68) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r9,16640(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 1;
	ctx_arrow(ctx)->r9.s64 = 1 - ctx_arrow(ctx)->r9.s64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2, xer);
	// stw ctx_arrow(ctx)->r9,16640(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 16640);
	// bge ctx_arrow(ctx)->r6,0x82109f98
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82109F98;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-5618
	ctx_arrow(ctx)->r10.s64 = -368181248;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,12472
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 12472;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,41195
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 41195;
	// lwz ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 8) & 0xFFFFFF00;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// mulhw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = (int64_t(ctx_arrow(ctx)->r9.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r9.u64;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,6
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x3F) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32 >> 6;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,1,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,255
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 255, xer);
	// ble ctx_arrow(ctx)->r6,0x82109ed4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82109ED4;
	// li ctx_arrow(ctx)->r9,255
	ctx_arrow(ctx)->r9.s64 = 255;
	// b 0x82109ee0
	goto loc_82109EE0;
loc_82109ED4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82109ee0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82109EE0;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
loc_82109EE0:
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,160
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 160;
	ctx_arrow(ctx)->r11.s64 = 160 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 8) & 0xFFFFFF00;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r11.s64;
	// mulhw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = (int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3F) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 6;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,255
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 255;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,255
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 255, xer);
	// ble ctx_arrow(ctx)->r6,0x82109f14
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82109F14;
	// li ctx_arrow(ctx)->r31,255
	ctx_arrow(ctx)->r31.s64 = 255;
	// b 0x82109f20
	goto loc_82109F20;
loc_82109F14:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82109f20
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82109F20;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
loc_82109F20:
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r31.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// lfs f0,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// lis ctx_arrow(ctx)->r10,-32640
	ctx_arrow(ctx)->r10.s64 = -2139095040;
	// li ctx_arrow(ctx)->r4,488
	ctx_arrow(ctx)->r4.s64 = 488;
	// li ctx_arrow(ctx)->r3,403
	ctx_arrow(ctx)->r3.s64 = 403;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32897
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 32897;
	// mulhw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = (int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// stfiwx f0,0,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x7F) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 7;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82109bd8
	sub_82109BD8(ctx, base);
	// bl 0x820ae310
	sub_820AE310(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109f7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109F7C;
	// lwz ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4212);
loc_82109F7C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82109f98
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82109F98;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lbz ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4212(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4212);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// stb ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r29)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r29.u32 + -14368, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_82109F98:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82109FA0) PPC_WEAK_FUNC(sub_82109FA0);
PPC_FUNC_IMPL(__imp__sub_82109FA0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// blr 
	return;
}

alias(__imp__sub_82109FB8) PPC_WEAK_FUNC(sub_82109FB8);
PPC_FUNC_IMPL(__imp__sub_82109FB8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stfd f29,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stfd f30,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// stfd f31,-48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-14368
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -14368;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stb ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r29.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x820c31d0
	sub_820C31D0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8210a030
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A030;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,14288
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 14288;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f6,25712(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2776
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2776;
	// lfs f30,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f4,25708(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f3,25704(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,25700(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2688
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2688;
	// lfs f31,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// b 0x8210a0a0
	goto loc_8210A0A0;
loc_8210A030:
	// bl 0x820c31d0
	sub_820C31D0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,14288
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 14288;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f6,25712(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2776
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2776;
	// lfs f30,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// bne ctx_arrow(ctx)->r6,0x8210a080
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A080;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f4,25696(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f3,-20184(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,25700(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2688
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2688;
	// lfs f31,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// b 0x8210a0a0
	goto loc_8210A0A0;
loc_8210A080:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f4,25688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2688
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2688;
	// lfs f31,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// lfs f2,25700(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
loc_8210A0A0:
	// fmr f5,f30
	ctx.fpscr.disableFlushMode();
	ctx.f5.f64 = f30.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8238b608
	sub_8238B608(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r5,230
	ctx_arrow(ctx)->r5.s64 = 230;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,14624
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 14624;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r4,60
	ctx_arrow(ctx)->r4.s64 = 60;
	// lfs f0,25684(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,12464
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 12464;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lfs f0,25680(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lfs f13,3452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,66
	ctx_arrow(ctx)->r11.s64 = 66;
	// stfs f13,3844(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 3844);
	// sth ctx_arrow(ctx)->r11,1896(ctx_arrow(ctx)->r31)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r31.u32 + 1896, ctx_arrow(ctx)->r11, 0);
	// bl 0x820e8cd0
	sub_820E8CD0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r5,-1
	ctx_arrow(ctx)->r5.s64 = -1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,12608
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 12608;
	// li ctx_arrow(ctx)->r4,60
	ctx_arrow(ctx)->r4.s64 = 60;
	// bl 0x820e8cd0
	sub_820E8CD0(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r9,4200(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stfs f31,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stfs f31,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// lfs f0,15100(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// stw ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16668);
	// ble ctx_arrow(ctx)->r6,0x8210a1b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210A1B4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 3, xer);
	// bgt ctx_arrow(ctx)->r6,0x8210a168
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210A168;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// lis ctx_arrow(ctx)->r11,21845
	ctx_arrow(ctx)->r11.s64 = 1431633920;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,21846
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 21846;
	// mulhw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = (int64_t(ctx_arrow(ctx)->r3.s32) * int64_t(ctx_arrow(ctx)->r11.s32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r11.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8210a1ac
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8210A1AC;
loc_8210A168:
	// bl 0x820ea1b8
	sub_820EA1B8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210a1ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210A1AC;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// lwz ctx_arrow(ctx)->r11,472(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r3.u32, 1);
	// divw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s32 = ctx_arrow(ctx)->r3.s32 / ctx_arrow(ctx)->r10.s32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mullw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s64 = int64_t(ctx_arrow(ctx)->r9.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// twllei ctx_arrow(ctx)->r10,0
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ~ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r9.s64;
	// twlgei ctx_arrow(ctx)->r10,-1
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16668);
	// b 0x8210a1b0
	goto loc_8210A1B0;
loc_8210A1AC:
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210A1B0:
	// lwz ctx_arrow(ctx)->r9,4200(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210A1B4:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// stw ctx_arrow(ctx)->r9,4200(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4200);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-28640
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -28640;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r4.u64 + ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821360e8
	sub_821360E8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stw ctx_arrow(ctx)->r3,4188(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4188);
	// lfs f29,25676(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// stb ctx_arrow(ctx)->r11,4196(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 4196, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r11,4197(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 4197, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x823ada90
	sub_823ADA90(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4188(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// bl 0x82119210
	sub_82119210(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lwz ctx_arrow(ctx)->r3,4188(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82119118
	sub_82119118(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,25
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 25;
	// lwz ctx_arrow(ctx)->r3,4188(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210a284
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210A284;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,14032(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x82119178
	sub_82119178(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,6584(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x8210a294
	goto loc_8210A294;
loc_8210A284:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x82119178
	sub_82119178(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2692(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
loc_8210A294:
	// lwz ctx_arrow(ctx)->r3,4188(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// bl 0x8211b2f8
	sub_8211B2F8(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 28;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210a2c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210A2C8;
	// bl 0x82136fe8
	sub_82136FE8(ctx, base);
loc_8210A2C8:
	// lis ctx_arrow(ctx)->r11,-32056
	ctx_arrow(ctx)->r11.s64 = -2100822016;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16548
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16548;
	// lhz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 4);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-68
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -68;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8210a2ec
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210A2EC;
loc_8210A2E0:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x8210a2e0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210A2E0;
loc_8210A2EC:
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32;
	// lwz ctx_arrow(ctx)->r3,4188(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f3,f31
	ctx.fpscr.disableFlushMode();
	ctx.f3.f64 = f31.f64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f2,25536(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f1,f0
	ctx.f1.f64 = double(float(f0.f64));
	// bl 0x8211d710
	sub_8211D710(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x820d03e8
	sub_820D03E8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32164
	ctx_arrow(ctx)->r11.s64 = -2107899904;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,-3616
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + -3616;
	// lwz ctx_arrow(ctx)->r3,3056(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8211c6c8
	sub_8211C6C8(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82118550
	sub_82118550(ctx, base);
	// stw ctx_arrow(ctx)->r3,4192(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4192);
	// fmr f1,f29
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f29.f64;
	// bl 0x823ada90
	sub_823ADA90(ctx, base);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,4188(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,1888(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1888);
	// lwz ctx_arrow(ctx)->r10,4192(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 24);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 28);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfd f29,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-56(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-48(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed188
	return;
}

alias(__imp__sub_8210A3B8) PPC_WEAK_FUNC(sub_8210A3B8);
PPC_FUNC_IMPL(__imp__sub_8210A3B8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,16656
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 16656;
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210a3e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210A3E0;
	// bl 0x821188f8
	sub_821188F8(ctx, base);
loc_8210A3E0:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210a3f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210A3F0;
	// bl 0x821188f8
	sub_821188F8(ctx, base);
loc_8210A3F0:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-14328
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -14328;
	// lwz ctx_arrow(ctx)->r11,16668(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 28;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210a420
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210A420;
	// bl 0x82137968
	sub_82137968(ctx, base);
loc_8210A420:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210A438) PPC_WEAK_FUNC(sub_8210A438);
PPC_FUNC_IMPL(__imp__sub_8210A438) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r16{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r30,-32141
	ctx_arrow(ctx)->r30.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r9,16640(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 1;
	ctx_arrow(ctx)->r9.s64 = 1 - ctx_arrow(ctx)->r9.s64;
	// stw ctx_arrow(ctx)->r9,16640(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 16640);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 6, xer);
	// bgt ctx_arrow(ctx)->r6,0x8210a82c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210A82C;
	// lis ctx_arrow(ctx)->r12,-32239
	ctx_arrow(ctx)->r12.s64 = -2112815104;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-23416
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -23416;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r0
	ctr.u64 = ctx_arrow(ctx)->r0.u64;
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_8210A4A4;
	case 1:
		goto loc_8210A53C;
	case 2:
		goto loc_8210A59C;
	case 3:
		goto loc_8210A5FC;
	case 4:
		goto loc_8210A690;
	case 5:
		goto loc_8210A73C;
	case 6:
		goto loc_8210A800;
	default:
		__builtin_unreachable();
	}
	// lwz ctx_arrow(ctx)->r16,-23388(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-23236(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-23140(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-23044(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-22896(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-22724(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,-22528(ctx_arrow(ctx)->r16)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210A4A4:
	// bl 0x82108f20
	sub_82108F20(ctx, base);
	// bl 0x820ae310
	sub_820AE310(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210a82c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A82C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16692
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16692;
	// lfs f13,2772(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lhz ctx_arrow(ctx)->r10,-2332(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -2332);
	// lfs f0,-4220(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,-4220(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4220);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8210a500
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210A500;
	// li ctx_arrow(ctx)->r10,200
	ctx_arrow(ctx)->r10.s64 = 200;
	// sth ctx_arrow(ctx)->r10,-2332(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + -2332, ctx_arrow(ctx)->r10.u16);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f13,14492(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 - ctx.f13.f64));
	// stfs f13,-384(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -384);
	// b 0x8210a508
	goto loc_8210A508;
loc_8210A500:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-6
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -6;
	// sth ctx_arrow(ctx)->r10,-2332(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + -2332, ctx_arrow(ctx)->r10.u16);
loc_8210A508:
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f13,25724(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x8210a82c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210A82C;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// lbz ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lfs f0,25720(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// stfs f0,-4220(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4220);
	// lfs f0,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,-44(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -44);
	// b 0x8210a828
	goto loc_8210A828;
loc_8210A53C:
	// bl 0x821093d0
	sub_821093D0(&ctx);
	// bl 0x82108fd8
	sub_82108FD8(&ctx);
	// bl 0x82109a30
	sub_82109A30(&ctx);
	// bl 0x820ae310
	sub_820AE310(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210a82c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A82C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16692
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16692;
	// lfs f13,25716(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f0,-4220(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f13
	f0.f64 = double(float(f0.f64 - ctx.f13.f64));
	// stfs f0,-4220(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4220);
	// lfs f13,14096(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210a82c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210A82C;
	// li ctx_arrow(ctx)->r10,20
	ctx_arrow(ctx)->r10.s64 = 20;
	// lbz ctx_arrow(ctx)->r9,-14368(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// stb ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + -14368, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x8210a82c
	goto loc_8210A82C;
loc_8210A59C:
	// bl 0x821093d0
	sub_821093D0(ctx, base);
	// bl 0x82108fd8
	sub_82108FD8(ctx, base);
	// bl 0x82109a30
	sub_82109A30(ctx, base);
	// bl 0x820ae310
	sub_820AE310(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210a82c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A82C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,16692
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 16692;
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// bge ctx_arrow(ctx)->r6,0x8210a82c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210A82C;
	// lbz ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stb ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + -14368, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x8210a860
	sub_8210A860(ctx, base);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// b 0x8210a82c
	goto loc_8210A82C;
loc_8210A5FC:
	// bl 0x820ae310
	sub_820AE310(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,16692
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 16692;
	// bne ctx_arrow(ctx)->r6,0x8210a63c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A63C;
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// bne ctx_arrow(ctx)->r6,0x8210a63c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A63C;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x8210a860
	sub_8210A860(ctx, base);
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4);
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
loc_8210A63C:
	// bl 0x821093d0
	sub_821093D0(&ctx);
	// bl 0x82108fd8
	sub_82108FD8(&ctx);
	// bl 0x82109a30
	sub_82109A30(&ctx);
	// bl 0x8210a8d0
	sub_8210A8D0(&ctx);
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210a82c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210A82C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lbz ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lfs f0,-4220(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,-384(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -384);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// sth ctx_arrow(ctx)->r11,-2332(ctx_arrow(ctx)->r31)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r31.u32 + -2332, ctx_arrow(ctx)->r11, 0);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stb ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r30)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -14368));
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stfs f0,-388(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -388);
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// b 0x8210a82c
	goto loc_8210A82C;
loc_8210A690:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f0,-13832(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,16692
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 16692;
	// lfs f13,-388(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,-388(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -388);
	// bl 0x820ae310
	sub_820AE310(&ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210a708
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A708;
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,-388(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// bl 0x823edbe0
	sub_823EDBE0(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,-44(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fadds f12,f0,f12
	ctx.f12.f64 = double(float(f0.f64 + ctx.f12.f64));
	// stfs f12,-44(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -44);
	// lfs f13,15940(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f12,-13836(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fadds f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// frsp f0,f1
	f0.f64 = double(float(ctx.f1.f64));
	// lfs f12,-384(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f0,f0,f13,f12
	f0.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
	// stfs f0,-4220(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4220);
loc_8210A708:
	// bl 0x821093d0
	sub_821093D0(&ctx);
	// bl 0x82108fd8
	sub_82108FD8(&ctx);
	// bl 0x82109a30
	sub_82109A30(&ctx);
	// bl 0x8210a970
	sub_8210A970(&ctx);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,108
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 108, xer);
	// blt ctx_arrow(ctx)->r6,0x8210a82c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210A82C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lbz ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// stb ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + -14368, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x8210a82c
	goto loc_8210A82C;
loc_8210A73C:
	// bl 0x820ae310
	sub_820AE310(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,16692
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 16692;
	// bne ctx_arrow(ctx)->r6,0x8210a7a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A7A4;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f13,-388(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,-13832(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f1,f0,f13
	ctx.f1.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f1,-388(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -388);
	// bl 0x823edbe0
	sub_823EDBE0(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,-44(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fadds f12,f0,f12
	ctx.f12.f64 = double(float(f0.f64 + ctx.f12.f64));
	// stfs f12,-44(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -44);
	// lfs f13,15940(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f12,-13836(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fadds f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// frsp f0,f1
	f0.f64 = double(float(ctx.f1.f64));
	// lfs f12,-384(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f0,f0,f13,f12
	f0.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
	// stfs f0,-4220(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4220);
loc_8210A7A4:
	// bl 0x821093d0
	sub_821093D0(&ctx);
	// bl 0x82108fd8
	sub_82108FD8(&ctx);
	// bl 0x82109a30
	sub_82109A30(&ctx);
	// bl 0x8210a970
	sub_8210A970(&ctx);
	// bl 0x820ae310
	sub_820AE310(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210a7d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A7D4;
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r3,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// b 0x8210a7d8
	goto loc_8210A7D8;
loc_8210A7D4:
	// lwz ctx_arrow(ctx)->r3,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210A7D8:
	// bl 0x82109488
	sub_82109488(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,247
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 247, xer);
	// blt ctx_arrow(ctx)->r6,0x8210a82c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210A82C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lbz ctx_arrow(ctx)->r10,-14368(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// stb ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + -14368, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x8210a82c
	goto loc_8210A82C;
loc_8210A800:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16692
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16692;
	// lwz ctx_arrow(ctx)->r9,-8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 30, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// stw ctx_arrow(ctx)->r9,-8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -8);
	// blt ctx_arrow(ctx)->r6,0x8210a82c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210A82C;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -8);
loc_8210A828:
	// stb ctx_arrow(ctx)->r9,-14368(ctx_arrow(ctx)->r30)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -14368));
loc_8210A82C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210A848) PPC_WEAK_FUNC(sub_8210A848);
PPC_FUNC_IMPL(__imp__sub_8210A848) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lbz ctx_arrow(ctx)->r11,-14368(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -9;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// blr 
	return;
}

alias(__imp__sub_8210A860) PPC_WEAK_FUNC(sub_8210A860);
PPC_FUNC_IMPL(__imp__sub_8210A860) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister temp{};
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// bne ctx_arrow(ctx)->r6,0x8210a878
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210A878;
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r9,4700(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4700);
loc_8210A878:
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16704
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 16704;
	// lwz ctx_arrow(ctx)->r8,4700(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	xer.ca = (ctx_arrow(ctx)->r8.s32 < 0) & ((ctx_arrow(ctx)->r8.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s32 >> 1;
	// addze ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	temp.s64 = ctx_arrow(ctx)->r8.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r8.u32;
	ctx_arrow(ctx)->r8.s64 = temp.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4,0,27
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 4) & 0xFFFFFFF0;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r9,4704(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4704);
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4700(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// stw ctx_arrow(ctx)->r9,4700(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4700);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4700(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// addze ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	temp.s64 = ctx_arrow(ctx)->r11.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = temp.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 40, xer);
	// bgelr ctx_arrow(ctx)->r6
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) return;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_8210A8D0) PPC_WEAK_FUNC(sub_8210A8D0);
PPC_FUNC_IMPL(__imp__sub_8210A8D0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,63,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 63) & 0xFFFFFFFFFFFFFFFF;
	// lfs f0,2688(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lwz ctx_arrow(ctx)->r11,13356(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfs f0,15616(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// stfs f0,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// lfs f0,25728(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stfs f0,6016(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 6016);
	// lfs f0,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,6020(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 6020);
	// lfs f0,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,6024(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 6024);
	// lfs f0,92(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,6028(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 6028);
	// ld ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4704(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821463f0
	sub_821463F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32015
	ctx_arrow(ctx)->r11.s64 = -2098135040;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,-8852(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82099270
	sub_82099270(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210A970) PPC_WEAK_FUNC(sub_8210A970);
PPC_FUNC_IMPL(__imp__sub_8210A970) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f4,15616(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f3,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f2,f3
	ctx.f2.f64 = ctx.f3.f64;
	// lfs f1,25728(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x82098290
	sub_82098290(ctx, base);
	return;
}

alias(__imp__sub_8210A990) PPC_WEAK_FUNC(sub_8210A990);
PPC_FUNC_IMPL(__imp__sub_8210A990) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,4(ctx_arrow(ctx)->r5)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f10,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f8,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fsubs f10,f0,f10
	ctx.f10.f64 = double(float(f0.f64 - ctx.f10.f64));
	// fsubs f8,f8,f12
	ctx.f8.f64 = double(float(ctx.f8.f64 - ctx.f12.f64));
	// lfs f13,0(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f9,0(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f11,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fsubs f9,f9,f13
	ctx.f9.f64 = double(float(ctx.f9.f64 - ctx.f13.f64));
	// lfs f7,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fsubs f7,f7,f11
	ctx.f7.f64 = double(float(ctx.f7.f64 - ctx.f11.f64));
	// fmuls f8,f8,f10
	ctx.f8.f64 = double(float(ctx.f8.f64 * ctx.f10.f64));
	// fmadds f8,f7,f9,f8
	ctx.f8.f64 = double(float(ctx.f7.f64 * ctx.f9.f64 + ctx.f8.f64));
	// lfs f7,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f8,f7
	ctx_arrow(ctx)->r6.compare(ctx.f8.f64, ctx.f7.f64);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// fsubs f0,f0,f11
	f0.f64 = double(float(f0.f64 - ctx.f11.f64));
	// fsubs f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 - ctx.f12.f64));
	// fmuls f0,f0,f9
	f0.f64 = double(float(f0.f64 * ctx.f9.f64));
	// fmadds f0,f13,f10,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f10.f64 + f0.f64));
	// fdivs f0,f0,f8
	f0.f64 = double(float(f0.f64 / ctx.f8.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f7
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f7.f64);
	// bltlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.lt()) return;
	// fcmpu ctx_arrow(ctx)->r6,f0,f1
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f1.f64);
	// bgtlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.gt()) return;
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// blr 
	return;
}

alias(__imp__sub_8210AA10) PPC_WEAK_FUNC(sub_8210AA10);
PPC_FUNC_IMPL(__imp__sub_8210AA10) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f13,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,0(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f13
	f0.f64 = double(float(f0.f64 - ctx.f13.f64));
	// lfs f11,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f12,4(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fsubs f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 - ctx.f11.f64));
	// lfs f11,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f13,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f10,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f1,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// fmuls f9,f11,f0
	ctx.f9.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fmsubs f9,f13,f12,f9
	ctx.f9.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 - ctx.f9.f64));
	// fsubs f8,f10,f9
	ctx.f8.f64 = double(float(ctx.f10.f64 - ctx.f9.f64));
	// fadds f7,f10,f9
	ctx.f7.f64 = double(float(ctx.f10.f64 + ctx.f9.f64));
	// fmuls f8,f8,f7
	ctx.f8.f64 = double(float(ctx.f8.f64 * ctx.f7.f64));
	// fcmpu ctx_arrow(ctx)->r6,f8,f1
	ctx_arrow(ctx)->r6.compare(ctx.f8.f64, ctx.f1.f64);
	// blt ctx_arrow(ctx)->r6,0x8210aa84
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210AA84;
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fsqrts f13,f8
	ctx.f13.f64 = double(float(sqrt(ctx.f8.f64)));
	// fmadds f0,f11,f12,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f12.f64 + f0.f64));
	// fsubs f0,f0,f13
	f0.f64 = double(float(f0.f64 - ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f1
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f1.f64);
	// bge ctx_arrow(ctx)->r6,0x8210aa90
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AA90;
	// fmuls f13,f9,f9
	ctx.f13.f64 = double(float(ctx.f9.f64 * ctx.f9.f64));
	// fmuls f12,f10,f10
	ctx.f12.f64 = double(float(ctx.f10.f64 * ctx.f10.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// blelr ctx_arrow(ctx)->r6
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) return;
loc_8210AA84:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,25732(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
loc_8210AA90:
	// fmr f1,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f0.f64;
	// blr 
	return;
}

alias(__imp__sub_8210AA98) PPC_WEAK_FUNC(sub_8210AA98);
PPC_FUNC_IMPL(__imp__sub_8210AA98) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed540
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lfs f0,4(ctx_arrow(ctx)->r6)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// lfs f11,0(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64;
	// lfs f31,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmadds f0,f11,f11,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f11.f64 + f0.f64));
	// fsqrts f28,f0
	f28.f64 = double(float(sqrt(f0.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f28,f31
	ctx_arrow(ctx)->r6.compare(f28.f64, f31.f64);
	// bne ctx_arrow(ctx)->r6,0x8210aae0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210AAE0;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x8210aca0
	goto loc_8210ACA0;
loc_8210AAE0:
	// lfs f30,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fdivs f29,f30,f28
	f29.f64 = double(float(f30.f64 / f28.f64));
	// lfs f4,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f10,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f1,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// lfs f3,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f9,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fsubs f13,f3,f9
	ctx.f13.f64 = double(float(ctx.f3.f64 - ctx.f9.f64));
	// fmuls f0,f11,f29
	f0.f64 = double(float(ctx.f11.f64 * f29.f64));
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// fsubs f0,f4,f10
	f0.f64 = double(float(ctx.f4.f64 - ctx.f10.f64));
	// fmuls f12,f1,f29
	ctx.f12.f64 = double(float(ctx.f1.f64 * f29.f64));
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fmuls f12,f0,f0
	ctx.f12.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f12,f13,f13,f12
	ctx.f12.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f12,f31
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x8210abfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210ABFC;
	// fdivs f12,f30,f12
	ctx.f12.f64 = double(float(f30.f64 / ctx.f12.f64));
	// lfs f2,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f8,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fsubs f27,f8,f10
	f27.f64 = double(float(ctx.f8.f64 - ctx.f10.f64));
	// lfs f7,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fsubs f26,f7,f9
	f26.f64 = double(float(ctx.f7.f64 - ctx.f9.f64));
	// fmuls f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f6,f12,f13
	ctx.f6.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fneg f5,f0
	ctx.f5.u64 = f0.u64 ^ 0x8000000000000000;
	// fmuls f13,f2,f6
	ctx.f13.f64 = double(float(ctx.f2.f64 * ctx.f6.f64));
	// fmuls f12,f2,f5
	ctx.f12.f64 = double(float(ctx.f2.f64 * ctx.f5.f64));
	// fmuls f0,f27,f13
	f0.f64 = double(float(f27.f64 * ctx.f13.f64));
	// fmadds f0,f26,f12,f0
	f0.f64 = double(float(f26.f64 * ctx.f12.f64 + f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ab6c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AB6C;
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// fneg f12,f12
	ctx.f12.u64 = ctx.f12.u64 ^ 0x8000000000000000;
loc_8210AB6C:
	// fadds f9,f9,f12
	ctx.fpscr.disableFlushMode();
	ctx.f9.f64 = double(float(ctx.f9.f64 + ctx.f12.f64));
	// lfs f0,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f12,f3,f12
	ctx.f12.f64 = double(float(ctx.f3.f64 + ctx.f12.f64));
	// fadds f10,f10,f13
	ctx.f10.f64 = double(float(ctx.f10.f64 + ctx.f13.f64));
	// fadds f13,f4,f13
	ctx.f13.f64 = double(float(ctx.f4.f64 + ctx.f13.f64));
	// fmuls f7,f7,f11
	ctx.f7.f64 = double(float(ctx.f7.f64 * ctx.f11.f64));
	// fmuls f9,f11,f9
	ctx.f9.f64 = double(float(ctx.f11.f64 * ctx.f9.f64));
	// fmuls f4,f11,f12
	ctx.f4.f64 = double(float(ctx.f11.f64 * ctx.f12.f64));
	// fmsubs f12,f0,f10,f9
	ctx.f12.f64 = double(float(f0.f64 * ctx.f10.f64 - ctx.f9.f64));
	// fmsubs f13,f0,f13,f4
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64 - ctx.f4.f64));
	// fmsubs f0,f0,f8,f7
	f0.f64 = double(float(f0.f64 * ctx.f8.f64 - ctx.f7.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// bge ctx_arrow(ctx)->r6,0x8210abc0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210ABC0;
	// fmr f10,f13
	ctx.f10.f64 = ctx.f13.f64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// fmr f13,f12
	ctx.f13.f64 = ctx.f12.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64;
	// fneg f6,f6
	ctx.f6.u64 = ctx.f6.u64 ^ 0x8000000000000000;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// fneg f5,f5
	ctx.f5.u64 = ctx.f5.u64 ^ 0x8000000000000000;
	// fmr f12,f10
	ctx.f12.f64 = ctx.f10.f64;
loc_8210ABC0:
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// bne ctx_arrow(ctx)->r6,0x8210abf4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210ABF4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8210aa10
	sub_8210AA10(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fmr f6,f1
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = ctx.f1.f64;
	// bl 0x8210aa10
	sub_8210AA10(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f1,f6
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, ctx.f6.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ac84
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AC84;
	// fmr f6,f1
	ctx.f6.f64 = ctx.f1.f64;
	// b 0x8210ac84
	goto loc_8210AC84;
loc_8210ABF4:
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x8210ac10
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210AC10;
loc_8210ABFC:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8210aa10
	sub_8210AA10(ctx, base);
	// fmr f6,f1
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = ctx.f1.f64;
	// b 0x8210ac84
	goto loc_8210AC84;
loc_8210AC10:
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ac2c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AC2C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8210aa10
	sub_8210AA10(ctx, base);
	// fmr f6,f1
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = ctx.f1.f64;
	// b 0x8210ac84
	goto loc_8210AC84;
loc_8210AC2C:
	// lfs f0,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f11,f0,f11
	ctx.f11.f64 = double(float(f0.f64 + ctx.f11.f64));
	// lfs f13,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fadds f9,f13,f1
	ctx.f9.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// lfs f10,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fsubs f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 - ctx.f12.f64));
	// fsubs f0,f0,f10
	f0.f64 = double(float(f0.f64 - ctx.f10.f64));
	// fsubs f11,f11,f10
	ctx.f11.f64 = double(float(ctx.f11.f64 - ctx.f10.f64));
	// fsubs f12,f9,f12
	ctx.f12.f64 = double(float(ctx.f9.f64 - ctx.f12.f64));
	// fmuls f13,f13,f5
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f5.f64));
	// fmuls f11,f11,f6
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f6.f64));
	// fmadds f0,f0,f6,f13
	f0.f64 = double(float(f0.f64 * ctx.f6.f64 + ctx.f13.f64));
	// fmadds f13,f12,f5,f11
	ctx.f13.f64 = double(float(ctx.f12.f64 * ctx.f5.f64 + ctx.f11.f64));
	// fsubs f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 - ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// bne ctx_arrow(ctx)->r6,0x8210ac78
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210AC78;
loc_8210AC70:
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// b 0x8210aca0
	goto loc_8210ACA0;
loc_8210AC78:
	// fsubs f0,f0,f2
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f0.f64 - ctx.f2.f64));
	// fmuls f0,f0,f28
	f0.f64 = double(float(f0.f64 * f28.f64));
	// fdivs f6,f0,f13
	ctx.f6.f64 = double(float(f0.f64 / ctx.f13.f64));
loc_8210AC84:
	// fcmpu ctx_arrow(ctx)->r6,f6,f28
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f6.f64, f28.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210ac70
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210AC70;
	// fcmpu ctx_arrow(ctx)->r6,f6,f31
	ctx_arrow(ctx)->r6.compare(ctx.f6.f64, f31.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ac9c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AC9C;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// b 0x8210aca0
	goto loc_8210ACA0;
loc_8210AC9C:
	// fmuls f1,f6,f29
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f6.f64 * f29.f64));
loc_8210ACA0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed58c
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210ACB8) PPC_WEAK_FUNC(sub_8210ACB8);
PPC_FUNC_IMPL(__imp__sub_8210ACB8) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x8210acdc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210ACDC;
	// li ctx_arrow(ctx)->r3,32767
	ctx_arrow(ctx)->r3.s64 = 32767;
	// b 0x8210ad0c
	goto loc_8210AD0C;
loc_8210ACDC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,6580(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210acf4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210ACF4;
	// li ctx_arrow(ctx)->r3,-32767
	ctx_arrow(ctx)->r3.s64 = -32767;
	// b 0x8210ad0c
	goto loc_8210AD0C;
loc_8210ACF4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2696(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfd f0,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lhz ctx_arrow(ctx)->r3,86(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 86);
loc_8210AD0C:
	// bl 0x8210adc0
	sub_8210ADC0(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFFFF;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,25736(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210AD40) PPC_WEAK_FUNC(sub_8210AD40);
PPC_FUNC_IMPL(__imp__sub_8210AD40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister temp{};
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,32736
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 32736, xer);
	// blt ctx_arrow(ctx)->r6,0x8210ad60
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210AD60;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = 7;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-11040
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -11040;
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,-32736
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + -32736;
	// b 0x8210ad90
	goto loc_8210AD90;
loc_8210AD60:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,30720
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 30720, xer);
	// blt ctx_arrow(ctx)->r6,0x8210ad80
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210AD80;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.s64 = 31;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-11168
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -11168;
	// li ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = 5;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,-30720
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + -30720;
	// b 0x8210ad90
	goto loc_8210AD90;
loc_8210AD80:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r10,511
	ctx_arrow(ctx)->r10.s64 = 511;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-11296
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -11296;
	// li ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r11.s64 = 9;
loc_8210AD90:
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r3.u64;
	// sraw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r11.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r3.s32 < 0) & (((ctx_arrow(ctx)->r3.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r3.s32);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s32 >> temp.u32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// lhz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 0);
	// lhz ctx_arrow(ctx)->r10,2(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 2);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r10.s32) * int64_t(ctx_arrow(ctx)->r8.s32);
	// sraw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r11.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & (((ctx_arrow(ctx)->r10.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r10.s32);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s32 >> temp.u32;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// blr 
	return;
}

alias(__imp__sub_8210ADC0) PPC_WEAK_FUNC(sub_8210ADC0);
PPC_FUNC_IMPL(__imp__sub_8210ADC0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r7.u64;
	// bge ctx_arrow(ctx)->r6,0x8210ade0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210ADE0;
	// neg ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r3.s64 = -ctx_arrow(ctx)->r7.s64;
loc_8210ADE0:
	// bl 0x8210ad40
	sub_8210AD40(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8210ae0c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AE0C;
	// lis ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r3.s64;
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_8210AE0C:
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u32 & 0xFFFF;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210AE20) PPC_WEAK_FUNC(sub_8210AE20);
PPC_FUNC_IMPL(__imp__sub_8210AE20) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f29,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stfd f30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f30,f1
	f30.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f31,f2
	f31.f64 = ctx.f2.f64;
	// lfs f29,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f30,f29
	ctx_arrow(ctx)->r6.compare(f30.f64, f29.f64);
	// bne ctx_arrow(ctx)->r6,0x8210ae60
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210AE60;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,14032(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsel f1,f31,f29,f0
	ctx.f1.f64 = f31.f64 >= 0.0 ? f29.f64 : f0.f64;
	// b 0x8210aef8
	goto loc_8210AEF8;
loc_8210AE60:
	// fcmpu ctx_arrow(ctx)->r6,f31,f29
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, f29.f64);
	// bne ctx_arrow(ctx)->r6,0x8210ae88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210AE88;
	// fcmpu ctx_arrow(ctx)->r6,f30,f29
	ctx_arrow(ctx)->r6.compare(f30.f64, f29.f64);
	// ble ctx_arrow(ctx)->r6,0x8210ae7c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210AE7C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,11980(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x8210aef8
	goto loc_8210AEF8;
loc_8210AE7C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,14036(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x8210aef8
	goto loc_8210AEF8;
loc_8210AE88:
	// fmuls f0,f31,f31
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f31.f64 * f31.f64));
	// fcmpu ctx_arrow(ctx)->r6,f30,f31
	ctx_arrow(ctx)->r6.compare(f30.f64, f31.f64);
	// fmadds f0,f30,f30,f0
	f0.f64 = double(float(f30.f64 * f30.f64 + f0.f64));
	// fsqrts f0,f0
	f0.f64 = double(float(sqrt(f0.f64)));
	// ble ctx_arrow(ctx)->r6,0x8210aebc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210AEBC;
	// fdivs f1,f31,f0
	ctx.f1.f64 = double(float(f31.f64 / f0.f64));
	// bl 0x8210acb8
	sub_8210ACB8(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f30,f29
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f30.f64, f29.f64);
	// bge ctx_arrow(ctx)->r6,0x8210aef8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AEF8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,6588(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f1,f0,f1
	ctx.f1.f64 = double(float(f0.f64 - ctx.f1.f64));
	// b 0x8210aef8
	goto loc_8210AEF8;
loc_8210AEBC:
	// fdivs f1,f30,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(f30.f64 / f0.f64));
	// bl 0x8210acb8
	sub_8210ACB8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fcmpu ctx_arrow(ctx)->r6,f31,f29
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, f29.f64);
	// lfs f0,11980(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f1,f0,f1
	ctx.f1.f64 = double(float(f0.f64 - ctx.f1.f64));
	// bge ctx_arrow(ctx)->r6,0x8210aee4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AEE4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,14032(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f1,f0,f1
	ctx.f1.f64 = double(float(f0.f64 - ctx.f1.f64));
loc_8210AEE4:
	// fcmpu ctx_arrow(ctx)->r6,f1,f29
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f29.f64);
	// bge ctx_arrow(ctx)->r6,0x8210aef8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210AEF8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,6588(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f1,f1,f0
	ctx.f1.f64 = double(float(ctx.f1.f64 + f0.f64));
loc_8210AEF8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f29,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-24(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210AF18) PPC_WEAK_FUNC(sub_8210AF18);
PPC_FUNC_IMPL(__imp__sub_8210AF18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,0(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 - f0.f64));
	// fmadds f0,f13,f1,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f1.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// lfs f0,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 - f0.f64));
	// fmadds f0,f13,f1,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f1.f64 + f0.f64));
	// stfs f0,4(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 4);
	// lfs f0,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 - f0.f64));
	// fmadds f0,f13,f1,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f1.f64 + f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210AF58) PPC_WEAK_FUNC(sub_8210AF58);
PPC_FUNC_IMPL(__imp__sub_8210AF58) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f1,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64 * ctx.f1.f64));
	// lfs f7,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f6,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f5,0(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,0(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f9,14132(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f12,f0,f1
	ctx.f12.f64 = double(float(f0.f64 * ctx.f1.f64));
	// lfs f8,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f11,12896(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f10,f12,f11
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f11.f64));
	// fadds f11,f12,f1
	ctx.f11.f64 = double(float(ctx.f12.f64 + ctx.f1.f64));
	// fsubs f3,f12,f0
	ctx.f3.f64 = double(float(ctx.f12.f64 - f0.f64));
	// fnmsubs f9,f0,f9,f10
	ctx.f9.f64 = double(float(-(f0.f64 * ctx.f9.f64 - ctx.f10.f64)));
	// fmsubs f10,f0,f8,f10
	ctx.f10.f64 = double(float(f0.f64 * ctx.f8.f64 - ctx.f10.f64));
	// fnmsubs f12,f11,f13,f0
	ctx.f12.f64 = double(float(-(ctx.f11.f64 * ctx.f13.f64 - f0.f64)));
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f11,f3,f13
	ctx.f11.f64 = double(float(ctx.f3.f64 * ctx.f13.f64));
	// fadds f0,f9,f0
	f0.f64 = double(float(ctx.f9.f64 + f0.f64));
	// fmadds f13,f1,f13,f10
	ctx.f13.f64 = double(float(ctx.f1.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmuls f10,f7,f0
	ctx.f10.f64 = double(float(ctx.f7.f64 * f0.f64));
	// fmadds f10,f6,f12,f10
	ctx.f10.f64 = double(float(ctx.f6.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f10,f5,f13,f10
	ctx.f10.f64 = double(float(ctx.f5.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f10,f4,f11,f10
	ctx.f10.f64 = double(float(ctx.f4.f64 * ctx.f11.f64 + ctx.f10.f64));
	// stfs f10,0(ctx_arrow(ctx)->r8)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// lfs f10,4(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f13
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// lfs f9,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmadds f10,f9,f11,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f11.f64 + ctx.f10.f64));
	// fmadds f10,f8,f0,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * f0.f64 + ctx.f10.f64));
	// fmadds f10,f7,f12,f10
	ctx.f10.f64 = double(float(ctx.f7.f64 * ctx.f12.f64 + ctx.f10.f64));
	// stfs f10,4(ctx_arrow(ctx)->r8)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 4);
	// lfs f10,8(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f13,f10,f13
	ctx.f13.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// lfs f10,8(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f13,f10,f11,f13
	ctx.f13.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + ctx.f13.f64));
	// fmadds f0,f9,f0,f13
	f0.f64 = double(float(ctx.f9.f64 * f0.f64 + ctx.f13.f64));
	// fmadds f0,f8,f12,f0
	f0.f64 = double(float(ctx.f8.f64 * ctx.f12.f64 + f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210B020) PPC_WEAK_FUNC(sub_8210B020);
PPC_FUNC_IMPL(__imp__sub_8210B020) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	// stfd f31,-8(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f1,f1
	f0.f64 = double(float(ctx.f1.f64 * ctx.f1.f64));
	// lfs f10,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,0(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f6,0(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f12,3908(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f11,f2,f12
	ctx.f11.f64 = double(float(ctx.f2.f64 - ctx.f12.f64));
	// lfs f13,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fnmsubs f4,f2,f13,f12
	ctx.f4.f64 = double(float(-(ctx.f2.f64 * ctx.f13.f64 - ctx.f12.f64)));
	// fmuls f12,f0,f1
	ctx.f12.f64 = double(float(f0.f64 * ctx.f1.f64));
	// fsubs f7,f13,f2
	ctx.f7.f64 = double(float(ctx.f13.f64 - ctx.f2.f64));
	// fsubs f5,f2,f13
	ctx.f5.f64 = double(float(ctx.f2.f64 - ctx.f13.f64));
	// fmuls f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fadds f3,f12,f1
	ctx.f3.f64 = double(float(ctx.f12.f64 + ctx.f1.f64));
	// fsubs f31,f12,f0
	f31.f64 = double(float(ctx.f12.f64 - f0.f64));
	// fmuls f5,f5,f12
	ctx.f5.f64 = double(float(ctx.f5.f64 * ctx.f12.f64));
	// fmadds f11,f7,f12,f11
	ctx.f11.f64 = double(float(ctx.f7.f64 * ctx.f12.f64 + ctx.f11.f64));
	// lfs f12,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmsubs f13,f0,f13,f3
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64 - ctx.f3.f64));
	// fmadds f7,f4,f0,f5
	ctx.f7.f64 = double(float(ctx.f4.f64 * f0.f64 + ctx.f5.f64));
	// fmuls f0,f31,f2
	f0.f64 = double(float(f31.f64 * ctx.f2.f64));
	// fadds f12,f11,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 + ctx.f12.f64));
	// fmuls f13,f13,f2
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f2.f64));
	// fmadds f11,f1,f2,f7
	ctx.f11.f64 = double(float(ctx.f1.f64 * ctx.f2.f64 + ctx.f7.f64));
	// fmuls f10,f10,f12
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f12.f64));
	// fmadds f10,f9,f13,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f10,f8,f11,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f11.f64 + ctx.f10.f64));
	// fmadds f10,f6,f0,f10
	ctx.f10.f64 = double(float(ctx.f6.f64 * f0.f64 + ctx.f10.f64));
	// stfs f10,0(ctx_arrow(ctx)->r9)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// lfs f10,4(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f11
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f11.f64));
	// lfs f9,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmadds f10,f9,f0,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * f0.f64 + ctx.f10.f64));
	// fmadds f10,f8,f12,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f10,f7,f13,f10
	ctx.f10.f64 = double(float(ctx.f7.f64 * ctx.f13.f64 + ctx.f10.f64));
	// stfs f10,4(ctx_arrow(ctx)->r9)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4);
	// lfs f10,8(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f11,f10,f11
	ctx.f11.f64 = double(float(ctx.f10.f64 * ctx.f11.f64));
	// lfs f10,8(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f10,f0,f11
	f0.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f11.f64));
	// fmadds f0,f9,f12,f0
	f0.f64 = double(float(ctx.f9.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f8,f13,f0
	f0.f64 = double(float(ctx.f8.f64 * ctx.f13.f64 + f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r9)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 8);
	// lfd f31,-8(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210B0F8) PPC_WEAK_FUNC(sub_8210B0F8);
PPC_FUNC_IMPL(__imp__sub_8210B0F8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x823ee958
	sub_823EE958(&ctx);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210B130) PPC_WEAK_FUNC(sub_8210B130);
PPC_FUNC_IMPL(__imp__sub_8210B130) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x823ed4c8
	sub_823ED4C8(&ctx);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210B168) PPC_WEAK_FUNC(sub_8210B168);
PPC_FUNC_IMPL(__imp__sub_8210B168) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r3.s64;
	// li ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.s64 = 3;
loc_8210B178:
	// lfs f0,-12(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// lfs f13,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// lfs f11,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lfs f0,12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f13,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,16(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// stfsx f0,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r11.u32);
	// lfs f0,12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,32(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,28(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lfs f10,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// stfs f0,24(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 24);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bne ctx_arrow(ctx)->r6,0x8210b178
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210B178;
	// blr 
	return;
}

alias(__imp__sub_8210B208) PPC_WEAK_FUNC(sub_8210B208);
PPC_FUNC_IMPL(__imp__sub_8210B208) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// li ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.s64 = 3;
loc_8210B214:
	// lfs f0,-8(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// stfs f0,-8(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -8);
	// lfs f0,-4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// stfs f0,-4(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -4);
	// lfs f0,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// stfs f0,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// bne ctx_arrow(ctx)->r6,0x8210b214
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210B214;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stfs f0,28(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 28);
	// stfs f0,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// stfs f0,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f0,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// stfs f0,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// stfs f13,60(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 60);
	// blr 
	return;
}

alias(__imp__sub_8210B270) PPC_WEAK_FUNC(sub_8210B270);
PPC_FUNC_IMPL(__imp__sub_8210B270) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// li ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.s64 = 3;
loc_8210B27C:
	// lfs f0,-8(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// stfs f0,-8(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -8);
	// lfs f0,-4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// stfs f0,-4(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -4);
	// lfs f0,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// stfs f0,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 12;
	// bne ctx_arrow(ctx)->r6,0x8210b27c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210B27C;
	// blr 
	return;
}

alias(__imp__sub_8210B2B0) PPC_WEAK_FUNC(sub_8210B2B0);
PPC_FUNC_IMPL(__imp__sub_8210B2B0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f13,0(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stfs f13,20(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 20);
	// stfs f13,40(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 40);
	// stfs f13,60(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 60);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,4(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stfs f0,8(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stfs f0,12(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stfs f0,16(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stfs f0,24(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 24);
	// stfs f0,28(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 28);
	// stfs f0,32(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 32);
	// stfs f0,36(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 36);
	// stfs f0,44(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 44);
	// stfs f0,48(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 48);
	// stfs f0,52(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 52);
	// stfs f0,56(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8210B308) PPC_WEAK_FUNC(sub_8210B308);
PPC_FUNC_IMPL(__imp__sub_8210B308) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + 4;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r4.s64;
	// li ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = 4;
loc_8210B318:
	// lfs f0,-12(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// stfs f0,-4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4);
	// lfsx f0,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// stfs f0,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lfs f0,-4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,4(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// stfs f0,8(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// bne ctx_arrow(ctx)->r6,0x8210b318
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210B318;
	// blr 
	return;
}

alias(__imp__sub_8210B350) PPC_WEAK_FUNC(sub_8210B350);
PPC_FUNC_IMPL(__imp__sub_8210B350) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 32;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r3.s64;
	// li ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = 4;
loc_8210B360:
	// lfs f0,16(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r11.u64;
	// lfs f13,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f13,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// lfs f11,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// fmadds f0,f9,f8,f0
	f0.f64 = double(float(ctx.f9.f64 * ctx.f8.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lfs f0,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f13,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,28(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,16(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// fmadds f0,f9,f8,f0
	f0.f64 = double(float(ctx.f9.f64 * ctx.f8.f64 + f0.f64));
	// stfs f0,-16(ctx_arrow(ctx)->r7)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + -16);
	// lfs f0,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,44(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f13,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,32(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// fmadds f0,f8,f9,f0
	f0.f64 = double(float(ctx.f8.f64 * ctx.f9.f64 + f0.f64));
	// stfsx f0,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r11.u32);
	// lfs f0,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,52(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,60(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,48(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lfs f8,56(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// fmadds f0,f8,f9,f0
	f0.f64 = double(float(ctx.f8.f64 * ctx.f9.f64 + f0.f64));
	// stfs f0,48(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 48);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bne ctx_arrow(ctx)->r6,0x8210b360
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210B360;
	// blr 
	return;
}

alias(__imp__sub_8210B450) PPC_WEAK_FUNC(sub_8210B450);
PPC_FUNC_IMPL(__imp__sub_8210B450) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,48
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 48;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 32;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r3.s64;
	// li ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.s64 = 3;
loc_8210B460:
	// lfs f0,0(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r11.u64;
	// lfs f13,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// lfs f11,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// stfs f0,-48(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -48);
	// lfs f0,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,16(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,-16(ctx_arrow(ctx)->r7)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + -16);
	// lfs f0,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f13,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,32(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// stfsx f0,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r11.u32);
	// lfs f0,-32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,48(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f13,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,56(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,-16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,52(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lfs f13,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bne ctx_arrow(ctx)->r6,0x8210b460
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210B460;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,12(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 12);
	// stfs f0,28(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 28);
	// stfs f0,44(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 44);
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,60(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 60);
	// blr 
	return;
}

alias(__imp__sub_8210B548) PPC_WEAK_FUNC(sub_8210B548);
PPC_FUNC_IMPL(__imp__sub_8210B548) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f13,8(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lfs f13,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lfs f13,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210B5C8) PPC_WEAK_FUNC(sub_8210B5C8);
PPC_FUNC_IMPL(__imp__sub_8210B5C8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,8(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f11,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64));
	// lfs f10,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f10,f10,f13
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// fmuls f9,f9,f13
	ctx.f9.f64 = double(float(ctx.f9.f64 * ctx.f13.f64));
	// lfs f8,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f7,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f6,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f5,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f3,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fmadds f13,f8,f13,f11
	ctx.f13.f64 = double(float(ctx.f8.f64 * ctx.f13.f64 + ctx.f11.f64));
	// fmadds f11,f7,f12,f10
	ctx.f11.f64 = double(float(ctx.f7.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f10,f6,f12,f9
	ctx.f10.f64 = double(float(ctx.f6.f64 * ctx.f12.f64 + ctx.f9.f64));
	// fmadds f13,f12,f5,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * ctx.f5.f64 + ctx.f13.f64));
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// fmadds f13,f4,f0,f11
	ctx.f13.f64 = double(float(ctx.f4.f64 * f0.f64 + ctx.f11.f64));
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// fmadds f0,f3,f0,f10
	f0.f64 = double(float(ctx.f3.f64 * f0.f64 + ctx.f10.f64));
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210B630) PPC_WEAK_FUNC(sub_8210B630);
PPC_FUNC_IMPL(__imp__sub_8210B630) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f13,8(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lfs f13,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lfs f13,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f13,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// lfs f0,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,0(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lfs f0,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lfs f0,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,8(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210B6E0) PPC_WEAK_FUNC(sub_8210B6E0);
PPC_FUNC_IMPL(__imp__sub_8210B6E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f11,32(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f0,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64));
	// lfs f10,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f10,f10,f13
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// lfs f9,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f9,f9,f13
	ctx.f9.f64 = double(float(ctx.f9.f64 * ctx.f13.f64));
	// lfs f8,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmr f2,f12
	ctx.f2.f64 = ctx.f12.f64;
	// lfs f7,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f6,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f5,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f3,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fmadds f13,f8,f13,f11
	ctx.f13.f64 = double(float(ctx.f8.f64 * ctx.f13.f64 + ctx.f11.f64));
	// fmadds f11,f7,f12,f10
	ctx.f11.f64 = double(float(ctx.f7.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f10,f6,f12,f9
	ctx.f10.f64 = double(float(ctx.f6.f64 * ctx.f12.f64 + ctx.f9.f64));
	// fmadds f13,f5,f2,f13
	ctx.f13.f64 = double(float(ctx.f5.f64 * ctx.f2.f64 + ctx.f13.f64));
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// fmadds f12,f4,f0,f11
	ctx.f12.f64 = double(float(ctx.f4.f64 * f0.f64 + ctx.f11.f64));
	// stfs f12,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// fmadds f0,f3,f0,f10
	f0.f64 = double(float(ctx.f3.f64 * f0.f64 + ctx.f10.f64));
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// lfs f11,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fadds f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 + ctx.f13.f64));
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lfs f13,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 + ctx.f12.f64));
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfs f13,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210B770) PPC_WEAK_FUNC(sub_8210B770);
PPC_FUNC_IMPL(__imp__sub_8210B770) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f12,f1
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f1.f64));
	// stfs f31,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f31,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stfs f12,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stfs f0,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// stfs f0,24(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stfs f0,28(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stfs f0,36(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// stfs f0,44(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// fneg f0,f12
	f0.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lfs f0,0(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// lfs f0,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// lfs f0,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// stfs f13,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-32(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210B828) PPC_WEAK_FUNC(sub_8210B828);
PPC_FUNC_IMPL(__imp__sub_8210B828) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f12,f1
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f1.f64));
	// stfs f31,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stfs f31,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stfs f12,24(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f13,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f13,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stfs f0,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// stfs f0,28(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stfs f0,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// stfs f0,44(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// fneg f0,f12
	f0.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfs f0,36(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-24(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210B8C8) PPC_WEAK_FUNC(sub_8210B8C8);
PPC_FUNC_IMPL(__imp__sub_8210B8C8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f12,f1
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f1.f64));
	// stfs f31,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f31,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stfs f12,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stfs f0,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// stfs f0,24(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stfs f0,28(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stfs f0,36(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// stfs f0,44(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// fneg f0,f12
	f0.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stfs f13,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-24(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210B968) PPC_WEAK_FUNC(sub_8210B968);
PPC_FUNC_IMPL(__imp__sub_8210B968) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f12,f1
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f1.f64));
	// stfs f31,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f31,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stfs f12,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stfs f0,24(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stfs f0,28(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stfs f0,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// stfs f0,36(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// stfs f0,44(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// fneg f0,f12
	f0.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stfs f13,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// stfs f0,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-24(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210BA08) PPC_WEAK_FUNC(sub_8210BA08);
PPC_FUNC_IMPL(__imp__sub_8210BA08) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// bl 0x823ed544
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// lfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// lfs f0,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f29,f1
	f29.f64 = double(float(ctx.f1.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lfs f0,4(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f28,f1
	f28.f64 = double(float(ctx.f1.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// lfs f0,4(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f30,f1
	f30.f64 = double(float(ctx.f1.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lfs f0,8(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f31,f1
	f31.f64 = double(float(ctx.f1.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// lfs f0,8(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f27,f1
	f27.f64 = double(float(ctx.f1.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f13,f1
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(ctx.f1.f64));
	// fmuls f0,f27,f30
	f0.f64 = double(float(f27.f64 * f30.f64));
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// fneg f0,f31
	f0.u64 = f31.u64 ^ 0x8000000000000000;
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// fmuls f10,f30,f28
	ctx.f10.f64 = double(float(f30.f64 * f28.f64));
	// stfs f10,24(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// fmuls f10,f30,f29
	ctx.f10.f64 = double(float(f30.f64 * f29.f64));
	// stfs f10,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// fmuls f12,f27,f28
	ctx.f12.f64 = double(float(f27.f64 * f28.f64));
	// stfs f0,28(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// fmuls f11,f27,f29
	ctx.f11.f64 = double(float(f27.f64 * f29.f64));
	// stfs f0,44(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// fmuls f10,f13,f29
	ctx.f10.f64 = double(float(ctx.f13.f64 * f29.f64));
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// fmuls f0,f13,f28
	f0.f64 = double(float(ctx.f13.f64 * f28.f64));
	// fmuls f13,f13,f30
	ctx.f13.f64 = double(float(ctx.f13.f64 * f30.f64));
	// stfs f13,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// fmsubs f13,f12,f31,f10
	ctx.f13.f64 = double(float(ctx.f12.f64 * f31.f64 - ctx.f10.f64));
	// stfs f13,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// fmadds f13,f11,f31,f0
	ctx.f13.f64 = double(float(ctx.f11.f64 * f31.f64 + f0.f64));
	// stfs f13,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// fmadds f0,f0,f31,f11
	f0.f64 = double(float(f0.f64 * f31.f64 + ctx.f11.f64));
	// stfs f0,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// fmsubs f0,f10,f31,f12
	f0.f64 = double(float(ctx.f10.f64 * f31.f64 - ctx.f12.f64));
	// stfs f0,36(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// bl 0x823ed590
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210BB30) PPC_WEAK_FUNC(sub_8210BB30);
PPC_FUNC_IMPL(__imp__sub_8210BB30) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lfs f13,40(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// lfs f0,24(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f31,f0
	f31.f64 = double(float(sqrt(f0.f64)));
	// lfs f0,25740(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x8210bba4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210BBA4;
	// lfs f2,40(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f1,24(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8210ae20
	sub_8210AE20(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// lfs f0,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fneg f1,f0
	ctx.f1.u64 = f0.u64 ^ 0x8000000000000000;
	// bl 0x8210ae20
	sub_8210AE20(ctx, base);
	// stfs f1,4(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// lfs f2,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f1,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x8210bbd0
	goto loc_8210BBD0;
loc_8210BBA4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f2,f31
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f31.f64;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lfs f0,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fneg f1,f0
	ctx.f1.u64 = f0.u64 ^ 0x8000000000000000;
	// bl 0x8210ae20
	sub_8210AE20(ctx, base);
	// stfs f1,4(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// lfs f0,16(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f2,20(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// fneg f1,f0
	ctx.f1.u64 = f0.u64 ^ 0x8000000000000000;
loc_8210BBD0:
	// bl 0x8210ae20
	sub_8210AE20(ctx, base);
	// stfs f1,8(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-32(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210BBF8) PPC_WEAK_FUNC(sub_8210BBF8);
PPC_FUNC_IMPL(__imp__sub_8210BBF8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,0(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// lfs f0,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// lfs f0,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8210BC18) PPC_WEAK_FUNC(sub_8210BC18);
PPC_FUNC_IMPL(__imp__sub_8210BC18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,0(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f1
	f0.f64 = double(float(f0.f64 * ctx.f1.f64));
	// lfs f12,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f13,f1
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f1.f64));
	// fmuls f12,f12,f1
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f1.f64));
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// stfs f12,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210BC40) PPC_WEAK_FUNC(sub_8210BC40);
PPC_FUNC_IMPL(__imp__sub_8210BC40) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,16(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// lfs f12,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f1,f13
	ctx.f13.f64 = double(float(ctx.f1.f64 * ctx.f13.f64));
	// fmuls f12,f1,f12
	ctx.f12.f64 = double(float(ctx.f1.f64 * ctx.f12.f64));
	// stfs f0,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// stfs f13,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// stfs f12,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// blr 
	return;
}

alias(__imp__sub_8210BC68) PPC_WEAK_FUNC(sub_8210BC68);
PPC_FUNC_IMPL(__imp__sub_8210BC68) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,32(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// lfs f12,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f1,f13
	ctx.f13.f64 = double(float(ctx.f1.f64 * ctx.f13.f64));
	// lfs f11,44(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f12,f1,f12
	ctx.f12.f64 = double(float(ctx.f1.f64 * ctx.f12.f64));
	// fmuls f11,f1,f11
	ctx.f11.f64 = double(float(ctx.f1.f64 * ctx.f11.f64));
	// stfs f0,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// stfs f13,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// stfs f12,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// stfs f11,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// blr 
	return;
}

alias(__imp__sub_8210BCA0) PPC_WEAK_FUNC(sub_8210BCA0);
PPC_FUNC_IMPL(__imp__sub_8210BCA0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,32(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// lfs f12,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f1,f13
	ctx.f13.f64 = double(float(ctx.f1.f64 * ctx.f13.f64));
	// fmuls f12,f1,f12
	ctx.f12.f64 = double(float(ctx.f1.f64 * ctx.f12.f64));
	// stfs f0,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// stfs f13,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// stfs f12,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// blr 
	return;
}

alias(__imp__sub_8210BCC8) PPC_WEAK_FUNC(sub_8210BCC8);
PPC_FUNC_IMPL(__imp__sub_8210BCC8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,0(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f1
	f0.f64 = double(float(f0.f64 * ctx.f1.f64));
	// lfs f12,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f13,f1
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f1.f64));
	// lfs f11,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f12,f12,f1
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f1.f64));
	// lfs f10,16(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f11,f11,f1
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f1.f64));
	// lfs f9,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f10,f10,f1
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f1.f64));
	// lfs f8,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmuls f9,f9,f1
	ctx.f9.f64 = double(float(ctx.f9.f64 * ctx.f1.f64));
	// lfs f7,28(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmuls f8,f8,f1
	ctx.f8.f64 = double(float(ctx.f8.f64 * ctx.f1.f64));
	// lfs f6,32(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// fmuls f7,f7,f1
	ctx.f7.f64 = double(float(ctx.f7.f64 * ctx.f1.f64));
	// lfs f5,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// fmuls f6,f6,f1
	ctx.f6.f64 = double(float(ctx.f6.f64 * ctx.f1.f64));
	// lfs f4,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// fmuls f5,f5,f1
	ctx.f5.f64 = double(float(ctx.f5.f64 * ctx.f1.f64));
	// lfs f3,44(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fmuls f4,f4,f1
	ctx.f4.f64 = double(float(ctx.f4.f64 * ctx.f1.f64));
	// fmuls f3,f3,f1
	ctx.f3.f64 = double(float(ctx.f3.f64 * ctx.f1.f64));
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// stfs f12,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// stfs f11,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stfs f10,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// stfs f9,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// stfs f8,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f8.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// stfs f7,28(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f7.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 28);
	// stfs f6,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f6.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// stfs f5,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f5.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// stfs f4,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f4.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// stfs f3,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// blr 
	return;
}

alias(__imp__sub_8210BD60) PPC_WEAK_FUNC(sub_8210BD60);
PPC_FUNC_IMPL(__imp__sub_8210BD60) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,0(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f1
	f0.f64 = double(float(f0.f64 * ctx.f1.f64));
	// lfs f12,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f13,f1
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f1.f64));
	// lfs f11,16(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f12,f12,f1
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f1.f64));
	// lfs f10,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f11,f11,f1
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f1.f64));
	// lfs f9,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f10,f10,f1
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f1.f64));
	// lfs f8,32(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmuls f9,f9,f1
	ctx.f9.f64 = double(float(ctx.f9.f64 * ctx.f1.f64));
	// lfs f7,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmuls f8,f8,f1
	ctx.f8.f64 = double(float(ctx.f8.f64 * ctx.f1.f64));
	// lfs f6,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// fmuls f7,f7,f1
	ctx.f7.f64 = double(float(ctx.f7.f64 * ctx.f1.f64));
	// fmuls f6,f6,f1
	ctx.f6.f64 = double(float(ctx.f6.f64 * ctx.f1.f64));
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// stfs f12,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// stfs f11,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// stfs f10,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// stfs f9,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// stfs f8,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f8.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// stfs f7,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f7.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// stfs f6,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f6.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// blr 
	return;
}

alias(__imp__sub_8210BDD0) PPC_WEAK_FUNC(sub_8210BDD0);
PPC_FUNC_IMPL(__imp__sub_8210BDD0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,8(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// lfs f12,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f1,f13
	ctx.f13.f64 = double(float(ctx.f1.f64 * ctx.f13.f64));
	// lfs f11,56(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f12,f1,f12
	ctx.f12.f64 = double(float(ctx.f1.f64 * ctx.f12.f64));
	// fmuls f11,f1,f11
	ctx.f11.f64 = double(float(ctx.f1.f64 * ctx.f11.f64));
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// stfs f13,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// stfs f12,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// stfs f11,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8210BE08) PPC_WEAK_FUNC(sub_8210BE08);
PPC_FUNC_IMPL(__imp__sub_8210BE08) {
	PPC_FUNC_PROLOGUE();
	// b 0x8238add8
	sub_8238ADD8(&ctx);
	return;
}

alias(__imp__sub_8210BE10) PPC_WEAK_FUNC(sub_8210BE10);
PPC_FUNC_IMPL(__imp__sub_8210BE10) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// fmuls f0,f5,f5
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f5.f64 * ctx.f5.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmadds f0,f4,f4,f0
	f0.f64 = double(float(ctx.f4.f64 * ctx.f4.f64 + f0.f64));
	// fmadds f0,f6,f6,f0
	f0.f64 = double(float(ctx.f6.f64 * ctx.f6.f64 + f0.f64));
	// fsqrts f13,f0
	ctx.f13.f64 = double(float(sqrt(f0.f64)));
	// lfs f0,6580(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fdivs f12,f0,f13
	ctx.f12.f64 = double(float(f0.f64 / ctx.f13.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f12,f4
	f0.f64 = double(float(ctx.f12.f64 * ctx.f4.f64));
	// stfs f0,8(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// fmuls f13,f12,f5
	ctx.f13.f64 = double(float(ctx.f12.f64 * ctx.f5.f64));
	// stfs f13,24(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 24);
	// fmuls f12,f12,f6
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f6.f64));
	// stfs f12,40(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 40);
	// fmuls f11,f0,f8
	ctx.f11.f64 = double(float(f0.f64 * ctx.f8.f64));
	// fmuls f6,f13,f9
	ctx.f6.f64 = double(float(ctx.f13.f64 * ctx.f9.f64));
	// fmuls f10,f12,f7
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f7.f64));
	// fmsubs f10,f0,f9,f10
	ctx.f10.f64 = double(float(f0.f64 * ctx.f9.f64 - ctx.f10.f64));
	// fmsubs f9,f13,f7,f11
	ctx.f9.f64 = double(float(ctx.f13.f64 * ctx.f7.f64 - ctx.f11.f64));
	// fmsubs f11,f12,f8,f6
	ctx.f11.f64 = double(float(ctx.f12.f64 * ctx.f8.f64 - ctx.f6.f64));
	// fmuls f8,f10,f10
	ctx.f8.f64 = double(float(ctx.f10.f64 * ctx.f10.f64));
	// fmadds f8,f9,f9,f8
	ctx.f8.f64 = double(float(ctx.f9.f64 * ctx.f9.f64 + ctx.f8.f64));
	// fmadds f8,f11,f11,f8
	ctx.f8.f64 = double(float(ctx.f11.f64 * ctx.f11.f64 + ctx.f8.f64));
	// fsqrts f7,f8
	ctx.f7.f64 = double(float(sqrt(ctx.f8.f64)));
	// lfs f8,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fdivs f7,f8,f7
	ctx.f7.f64 = double(float(ctx.f8.f64 / ctx.f7.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f8,60(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f8.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 60);
	// fmuls f9,f9,f7
	ctx.f9.f64 = double(float(ctx.f9.f64 * ctx.f7.f64));
	// stfs f9,32(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 32);
	// fmuls f10,f10,f7
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f7.f64));
	// stfs f10,16(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// fmuls f11,f11,f7
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f7.f64));
	// stfs f11,0(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// fmuls f6,f9,f0
	ctx.f6.f64 = double(float(ctx.f9.f64 * f0.f64));
	// fmuls f4,f10,f2
	ctx.f4.f64 = double(float(ctx.f10.f64 * ctx.f2.f64));
	// fmuls f5,f11,f13
	ctx.f5.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fmuls f7,f10,f12
	ctx.f7.f64 = double(float(ctx.f10.f64 * ctx.f12.f64));
	// fmsubs f6,f11,f12,f6
	ctx.f6.f64 = double(float(ctx.f11.f64 * ctx.f12.f64 - ctx.f6.f64));
	// fmadds f11,f11,f1,f4
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f1.f64 + ctx.f4.f64));
	// fmsubs f10,f10,f0,f5
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64 - ctx.f5.f64));
	// fmsubs f7,f9,f13,f7
	ctx.f7.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 - ctx.f7.f64));
	// fnmadds f11,f9,f3,f11
	ctx.f11.f64 = double(float(-(ctx.f9.f64 * ctx.f3.f64 + ctx.f11.f64)));
	// stfs f11,48(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 48);
	// fmuls f11,f6,f6
	ctx.f11.f64 = double(float(ctx.f6.f64 * ctx.f6.f64));
	// fmadds f11,f7,f7,f11
	ctx.f11.f64 = double(float(ctx.f7.f64 * ctx.f7.f64 + ctx.f11.f64));
	// fmadds f11,f10,f10,f11
	ctx.f11.f64 = double(float(ctx.f10.f64 * ctx.f10.f64 + ctx.f11.f64));
	// fsqrts f11,f11
	ctx.f11.f64 = double(float(sqrt(ctx.f11.f64)));
	// fdivs f11,f8,f11
	ctx.f11.f64 = double(float(ctx.f8.f64 / ctx.f11.f64));
	// fmuls f9,f11,f7
	ctx.f9.f64 = double(float(ctx.f11.f64 * ctx.f7.f64));
	// stfs f9,4(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// fmuls f7,f11,f6
	ctx.f7.f64 = double(float(ctx.f11.f64 * ctx.f6.f64));
	// stfs f7,20(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f7.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 20);
	// fmuls f11,f11,f10
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f10.f64));
	// stfs f11,36(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 36);
	// fmuls f10,f2,f7
	ctx.f10.f64 = double(float(ctx.f2.f64 * ctx.f7.f64));
	// fmuls f7,f2,f13
	ctx.f7.f64 = double(float(ctx.f2.f64 * ctx.f13.f64));
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,12(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stfs f13,28(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 28);
	// stfs f13,44(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 44);
	// fmadds f10,f1,f9,f10
	ctx.f10.f64 = double(float(ctx.f1.f64 * ctx.f9.f64 + ctx.f10.f64));
	// fmadds f0,f1,f0,f7
	f0.f64 = double(float(ctx.f1.f64 * f0.f64 + ctx.f7.f64));
	// fnmadds f13,f3,f11,f10
	ctx.f13.f64 = double(float(-(ctx.f3.f64 * ctx.f11.f64 + ctx.f10.f64)));
	// stfs f13,52(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 52);
	// fnmadds f0,f3,f12,f0
	f0.f64 = double(float(-(ctx.f3.f64 * ctx.f12.f64 + f0.f64)));
	// stfs f0,56(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8210BF20) PPC_WEAK_FUNC(sub_8210BF20);
PPC_FUNC_IMPL(__imp__sub_8210BF20) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fsubs f6,f6,f3
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = double(float(ctx.f6.f64 - ctx.f3.f64));
	// fsubs f5,f5,f2
	ctx.f5.f64 = double(float(ctx.f5.f64 - ctx.f2.f64));
	// fsubs f4,f4,f1
	ctx.f4.f64 = double(float(ctx.f4.f64 - ctx.f1.f64));
	// bl 0x8210be10
	sub_8210BE10(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210BF50) PPC_WEAK_FUNC(sub_8210BF50);
PPC_FUNC_IMPL(__imp__sub_8210BF50) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// fmuls f0,f5,f5
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f5.f64 * ctx.f5.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f1,48(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 48);
	// stfs f2,52(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 52);
	// stfs f3,56(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 56);
	// fmadds f0,f4,f4,f0
	f0.f64 = double(float(ctx.f4.f64 * ctx.f4.f64 + f0.f64));
	// fmadds f0,f6,f6,f0
	f0.f64 = double(float(ctx.f6.f64 * ctx.f6.f64 + f0.f64));
	// fsqrts f13,f0
	ctx.f13.f64 = double(float(sqrt(f0.f64)));
	// lfs f0,6580(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fdivs f12,f0,f13
	ctx.f12.f64 = double(float(f0.f64 / ctx.f13.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f12,f4
	f0.f64 = double(float(ctx.f12.f64 * ctx.f4.f64));
	// stfs f0,32(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 32);
	// fmuls f13,f12,f5
	ctx.f13.f64 = double(float(ctx.f12.f64 * ctx.f5.f64));
	// stfs f13,36(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 36);
	// fmuls f12,f12,f6
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f6.f64));
	// stfs f12,40(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 40);
	// fmuls f10,f0,f8
	ctx.f10.f64 = double(float(f0.f64 * ctx.f8.f64));
	// fmuls f6,f13,f9
	ctx.f6.f64 = double(float(ctx.f13.f64 * ctx.f9.f64));
	// fmuls f11,f12,f7
	ctx.f11.f64 = double(float(ctx.f12.f64 * ctx.f7.f64));
	// fmsubs f10,f13,f7,f10
	ctx.f10.f64 = double(float(ctx.f13.f64 * ctx.f7.f64 - ctx.f10.f64));
	// fmsubs f11,f0,f9,f11
	ctx.f11.f64 = double(float(f0.f64 * ctx.f9.f64 - ctx.f11.f64));
	// fmsubs f9,f12,f8,f6
	ctx.f9.f64 = double(float(ctx.f12.f64 * ctx.f8.f64 - ctx.f6.f64));
	// fmuls f8,f11,f11
	ctx.f8.f64 = double(float(ctx.f11.f64 * ctx.f11.f64));
	// fmadds f8,f10,f10,f8
	ctx.f8.f64 = double(float(ctx.f10.f64 * ctx.f10.f64 + ctx.f8.f64));
	// fmadds f8,f9,f9,f8
	ctx.f8.f64 = double(float(ctx.f9.f64 * ctx.f9.f64 + ctx.f8.f64));
	// fsqrts f7,f8
	ctx.f7.f64 = double(float(sqrt(ctx.f8.f64)));
	// lfs f8,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fdivs f7,f8,f7
	ctx.f7.f64 = double(float(ctx.f8.f64 / ctx.f7.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f8,60(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f8.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 60);
	// fmuls f10,f10,f7
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f7.f64));
	// stfs f10,8(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// fmuls f11,f11,f7
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f7.f64));
	// stfs f11,4(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// fmuls f9,f9,f7
	ctx.f9.f64 = double(float(ctx.f9.f64 * ctx.f7.f64));
	// stfs f9,0(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// fmuls f6,f10,f0
	ctx.f6.f64 = double(float(ctx.f10.f64 * f0.f64));
	// fmuls f7,f11,f12
	ctx.f7.f64 = double(float(ctx.f11.f64 * ctx.f12.f64));
	// fmuls f5,f9,f13
	ctx.f5.f64 = double(float(ctx.f9.f64 * ctx.f13.f64));
	// fmsubs f12,f9,f12,f6
	ctx.f12.f64 = double(float(ctx.f9.f64 * ctx.f12.f64 - ctx.f6.f64));
	// fmsubs f13,f10,f13,f7
	ctx.f13.f64 = double(float(ctx.f10.f64 * ctx.f13.f64 - ctx.f7.f64));
	// fmsubs f0,f11,f0,f5
	f0.f64 = double(float(ctx.f11.f64 * f0.f64 - ctx.f5.f64));
	// fmuls f11,f12,f12
	ctx.f11.f64 = double(float(ctx.f12.f64 * ctx.f12.f64));
	// fmadds f11,f13,f13,f11
	ctx.f11.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f11.f64));
	// fmadds f11,f0,f0,f11
	ctx.f11.f64 = double(float(f0.f64 * f0.f64 + ctx.f11.f64));
	// fsqrts f11,f11
	ctx.f11.f64 = double(float(sqrt(ctx.f11.f64)));
	// fdivs f11,f8,f11
	ctx.f11.f64 = double(float(ctx.f8.f64 / ctx.f11.f64));
	// fmuls f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// stfs f13,16(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// fmuls f0,f11,f0
	f0.f64 = double(float(ctx.f11.f64 * f0.f64));
	// stfs f0,24(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 24);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f11,f12
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f12.f64));
	// stfs f13,20(ctx_arrow(ctx)->r3)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 20);
	// stfs f0,12(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stfs f0,28(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 28);
	// stfs f0,44(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 44);
	// blr 
	return;
}

alias(__imp__sub_8210C040) PPC_WEAK_FUNC(sub_8210C040);
PPC_FUNC_IMPL(__imp__sub_8210C040) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fsubs f6,f6,f3
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = double(float(ctx.f6.f64 - ctx.f3.f64));
	// fsubs f5,f5,f2
	ctx.f5.f64 = double(float(ctx.f5.f64 - ctx.f2.f64));
	// fsubs f4,f4,f1
	ctx.f4.f64 = double(float(ctx.f4.f64 - ctx.f1.f64));
	// bl 0x8210bf50
	sub_8210BF50(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210C070) PPC_WEAK_FUNC(sub_8210C070);
PPC_FUNC_IMPL(__imp__sub_8210C070) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-16
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -16;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// stfs f2,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stfs f3,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stfs f4,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f4.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// fmr f28,f1
	f28.f64 = ctx.f1.f64;
	// bl 0x8238c750
	sub_8238C750(ctx, base);
	// lfs f30,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// lfs f31,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fmr f1,f28
	ctx.f1.f64 = f28.f64;
	// lfs f29,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f28
	ctx.f1.f64 = f28.f64;
	// frsp f28,f0
	f28.f64 = double(float(f0.f64));
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// fmuls f0,f29,f29
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f29.f64 * f29.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f11,f1
	ctx.f11.f64 = double(float(ctx.f1.f64));
	// fmadds f0,f30,f30,f0
	f0.f64 = double(float(f30.f64 * f30.f64 + f0.f64));
	// fsqrts f12,f0
	ctx.f12.f64 = double(float(sqrt(f0.f64)));
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stfs f0,28(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stfs f0,44(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// beq ctx_arrow(ctx)->r6,0x8210c184
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210C184;
	// fmuls f8,f11,f29
	ctx.f8.f64 = double(float(ctx.f11.f64 * f29.f64));
	// lfs f6,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// fmuls f9,f28,f30
	ctx.f9.f64 = double(float(f28.f64 * f30.f64));
	// stfs f6,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f6.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// fdivs f13,f6,f12
	ctx.f13.f64 = double(float(ctx.f6.f64 / ctx.f12.f64));
	// fmuls f5,f12,f28
	ctx.f5.f64 = double(float(ctx.f12.f64 * f28.f64));
	// stfs f5,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f5.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// fmuls f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f11.f64));
	// stfs f12,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// fneg f12,f30
	ctx.f12.u64 = f30.u64 ^ 0x8000000000000000;
	// stfs f12,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// fneg f12,f31
	ctx.f12.u64 = f31.u64 ^ 0x8000000000000000;
	// stfs f12,24(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// fmuls f10,f11,f30
	ctx.f10.f64 = double(float(ctx.f11.f64 * f30.f64));
	// fmuls f7,f28,f29
	ctx.f7.f64 = double(float(f28.f64 * f29.f64));
	// fneg f12,f29
	ctx.f12.u64 = f29.u64 ^ 0x8000000000000000;
	// stfs f12,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// fneg f0,f8
	f0.u64 = ctx.f8.u64 ^ 0x8000000000000000;
	// fneg f12,f9
	ctx.f12.u64 = ctx.f9.u64 ^ 0x8000000000000000;
	// fnmsubs f11,f10,f31,f7
	ctx.f11.f64 = double(float(-(ctx.f10.f64 * f31.f64 - ctx.f7.f64)));
	// fnmsubs f10,f7,f31,f10
	ctx.f10.f64 = double(float(-(ctx.f7.f64 * f31.f64 - ctx.f10.f64)));
	// fnmsubs f0,f9,f31,f0
	f0.f64 = double(float(-(ctx.f9.f64 * f31.f64 - f0.f64)));
	// fnmsubs f12,f8,f31,f12
	ctx.f12.f64 = double(float(-(ctx.f8.f64 * f31.f64 - ctx.f12.f64)));
	// fmuls f11,f11,f13
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// stfs f11,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// fmuls f0,f10,f13
	f0.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// stfs f0,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// fmuls f0,f12,f13
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// b 0x8210c1ac
	goto loc_8210C1AC;
loc_8210C184:
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stfs f0,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// stfs f13,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stfs f0,24(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stfs f0,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// stfs f13,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stfs f13,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
loc_8210C1AC:
	// stfs f0,36(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-16
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -16;
	// bl 0x823ed594
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210C1D0) PPC_WEAK_FUNC(sub_8210C1D0);
PPC_FUNC_IMPL(__imp__sub_8210C1D0) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// stfs f2,148(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,164
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 164;
	// stfs f3,156(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 156);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,156
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 156;
	// stfs f4,164(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f4.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 164);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,148
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 148;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// bl 0x820d3710
	sub_820D3710(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f0,-11020(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f31,f0,f31
	f31.f64 = double(float(f0.f64 * f31.f64));
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// lfs f13,164(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f13,f13
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// lfs f9,148(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// frsp f10,f1
	ctx.f10.f64 = double(float(ctx.f1.f64));
	// fmadds f0,f9,f9,f0
	f0.f64 = double(float(ctx.f9.f64 * ctx.f9.f64 + f0.f64));
	// fsqrts f8,f0
	ctx.f8.f64 = double(float(sqrt(f0.f64)));
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// fcmpu ctx_arrow(ctx)->r6,f8,f0
	ctx_arrow(ctx)->r6.compare(ctx.f8.f64, f0.f64);
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stfs f0,28(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stfs f0,44(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// beq ctx_arrow(ctx)->r6,0x8210c2f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210C2F8;
	// fmuls f6,f10,f9
	ctx.f6.f64 = double(float(ctx.f10.f64 * ctx.f9.f64));
	// lfs f11,156(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f4,f10,f13
	ctx.f4.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// lfs f5,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// fmuls f7,f31,f9
	ctx.f7.f64 = double(float(f31.f64 * ctx.f9.f64));
	// stfs f5,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f5.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// fmuls f2,f10,f11
	ctx.f2.f64 = double(float(ctx.f10.f64 * ctx.f11.f64));
	// fmuls f10,f8,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f10.f64));
	// stfs f10,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// fneg f10,f11
	ctx.f10.u64 = ctx.f11.u64 ^ 0x8000000000000000;
	// stfs f10,36(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// fneg f9,f9
	ctx.f9.u64 = ctx.f9.u64 ^ 0x8000000000000000;
	// stfs f9,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// fneg f10,f13
	ctx.f10.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// stfs f10,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// fmuls f3,f31,f11
	ctx.f3.f64 = double(float(f31.f64 * ctx.f11.f64));
	// fdivs f12,f5,f8
	ctx.f12.f64 = double(float(ctx.f5.f64 / ctx.f8.f64));
	// fmuls f0,f6,f11
	f0.f64 = double(float(ctx.f6.f64 * ctx.f11.f64));
	// fneg f9,f4
	ctx.f9.u64 = ctx.f4.u64 ^ 0x8000000000000000;
	// fneg f10,f7
	ctx.f10.u64 = ctx.f7.u64 ^ 0x8000000000000000;
	// fmuls f4,f8,f31
	ctx.f4.f64 = double(float(ctx.f8.f64 * f31.f64));
	// stfs f4,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f4.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// fnmsubs f8,f3,f13,f6
	ctx.f8.f64 = double(float(-(ctx.f3.f64 * ctx.f13.f64 - ctx.f6.f64)));
	// fmsubs f0,f31,f13,f0
	f0.f64 = double(float(f31.f64 * ctx.f13.f64 - f0.f64));
	// fnmsubs f11,f7,f11,f9
	ctx.f11.f64 = double(float(-(ctx.f7.f64 * ctx.f11.f64 - ctx.f9.f64)));
	// fnmsubs f13,f2,f13,f10
	ctx.f13.f64 = double(float(-(ctx.f2.f64 * ctx.f13.f64 - ctx.f10.f64)));
	// fmuls f10,f8,f12
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f12.f64));
	// stfs f10,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// fmuls f0,f0,f12
	f0.f64 = double(float(f0.f64 * ctx.f12.f64));
	// stfs f0,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// fmuls f11,f11,f12
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f12.f64));
	// stfs f11,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// fmuls f0,f13,f12
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// b 0x8210c320
	goto loc_8210C320;
loc_8210C2F8:
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stfs f0,16(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// stfs f13,20(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stfs f0,32(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// stfs f0,36(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// stfs f13,40(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stfs f13,60(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
loc_8210C320:
	// stfs f0,24(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-24(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210C340) PPC_WEAK_FUNC(sub_8210C340);
PPC_FUNC_IMPL(__imp__sub_8210C340) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,14308(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f1,f0
	ctx.f1.f64 = double(float(ctx.f1.f64 * f0.f64));
	// b 0x8210c1d0
	sub_8210C1D0(ctx, base);
	return;
}

alias(__imp__sub_8210C350) PPC_WEAK_FUNC(sub_8210C350);
PPC_FUNC_IMPL(__imp__sub_8210C350) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f13,0(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lfs f13,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfs f13,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// lfs f12,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stfs f12,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// lfs f12,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// lfs f12,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stfs f12,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// lfs f12,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stfs f12,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// lfs f12,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stfs f12,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// lfs f12,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f12,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// stfs f0,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// stfs f0,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// stfs f0,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// stfs f0,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stfs f0,28(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 28);
	// stfs f0,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// stfs f13,60(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 60);
	// blr 
	return;
}

alias(__imp__sub_8210C3C8) PPC_WEAK_FUNC(sub_8210C3C8);
PPC_FUNC_IMPL(__imp__sub_8210C3C8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,16(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// lfs f13,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f12,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmadds f0,f13,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f11,f11,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f11.f64 + f0.f64));
	// lfs f11,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fdivs f0,f11,f0
	f0.f64 = double(float(ctx.f11.f64 / f0.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lfs f13,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfs f13,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f13,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// lfs f13,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// lfs f13,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// lfs f13,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// lfs f13,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// lfs f13,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// lfs f13,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// lfs f0,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,16(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f10,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,32(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f6,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f5,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f3,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// fmadds f0,f13,f10,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f10.f64 + f0.f64));
	// fnmadds f0,f9,f8,f0
	f0.f64 = double(float(-(ctx.f9.f64 * ctx.f8.f64 + f0.f64)));
	// stfs f0,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// lfs f0,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f7,f0
	f0.f64 = double(float(ctx.f7.f64 * f0.f64));
	// lfs f13,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f10,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f13,f6,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f6.f64 + f0.f64));
	// fnmadds f0,f10,f5,f0
	f0.f64 = double(float(-(ctx.f10.f64 * ctx.f5.f64 + f0.f64)));
	// stfs f0,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// lfs f0,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f4
	f0.f64 = double(float(f0.f64 * ctx.f4.f64));
	// lfs f13,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f10,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// stfs f12,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stfs f12,28(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 28);
	// stfs f12,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// stfs f11,60(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 60);
	// fmadds f0,f3,f13,f0
	f0.f64 = double(float(ctx.f3.f64 * ctx.f13.f64 + f0.f64));
	// fnmadds f0,f10,f2,f0
	f0.f64 = double(float(-(ctx.f10.f64 * ctx.f2.f64 + f0.f64)));
	// stfs f0,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8210C4E8) PPC_WEAK_FUNC(sub_8210C4E8);
PPC_FUNC_IMPL(__imp__sub_8210C4E8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,40(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f5,f13,f0
	ctx.f5.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f11,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f7,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f6,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// fmuls f0,f7,f0
	f0.f64 = double(float(ctx.f7.f64 * f0.f64));
	// lfs f12,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f3,f6,f7
	ctx.f3.f64 = double(float(ctx.f6.f64 * ctx.f7.f64));
	// lfs f9,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f4,f11,f12
	ctx.f4.f64 = double(float(ctx.f11.f64 * ctx.f12.f64));
	// lfs f8,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmuls f12,f9,f12
	ctx.f12.f64 = double(float(ctx.f9.f64 * ctx.f12.f64));
	// lfs f10,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f13,f6,f13
	ctx.f13.f64 = double(float(ctx.f6.f64 * ctx.f13.f64));
	// fmuls f7,f8,f5
	ctx.f7.f64 = double(float(ctx.f8.f64 * ctx.f5.f64));
	// fsubs f6,f5,f4
	ctx.f6.f64 = double(float(ctx.f5.f64 - ctx.f4.f64));
	// fmadds f12,f12,f10,f7
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f10.f64 + ctx.f7.f64));
	// fmadds f12,f3,f11,f12
	ctx.f12.f64 = double(float(ctx.f3.f64 * ctx.f11.f64 + ctx.f12.f64));
	// fnmsubs f13,f13,f10,f12
	ctx.f13.f64 = double(float(-(ctx.f13.f64 * ctx.f10.f64 - ctx.f12.f64)));
	// lfs f12,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fnmsubs f0,f0,f9,f13
	f0.f64 = double(float(-(f0.f64 * ctx.f9.f64 - ctx.f13.f64)));
	// fnmsubs f0,f4,f8,f0
	f0.f64 = double(float(-(ctx.f4.f64 * ctx.f8.f64 - f0.f64)));
	// fdivs f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 / f0.f64));
	// fmuls f13,f6,f0
	ctx.f13.f64 = double(float(ctx.f6.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lfs f11,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f13,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f11.f64));
	// lfs f10,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f11,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmsubs f13,f11,f10,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 - ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// lfs f11,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f13,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f11.f64));
	// lfs f10,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f11,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f8,16(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmsubs f13,f11,f10,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 - ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// lfs f11,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f13,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f11.f64));
	// lfs f10,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f11,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f9,32(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmsubs f13,f11,f10,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 - ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfs f11,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f13,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f11.f64));
	// lfs f10,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f11,40(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f7,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmsubs f13,f11,f10,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 - ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// lfs f11,36(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f13,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f11.f64));
	// lfs f10,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f11,32(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f6,20(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// fmsubs f11,f10,f11,f13
	ctx.f11.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 - ctx.f13.f64));
	// lfs f10,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64));
	// stfs f11,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// lfs f5,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f11,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f11,f11,f5
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f5.f64));
	// lfs f4,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f5,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f3,36(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fmsubs f11,f5,f4,f11
	ctx.f11.f64 = double(float(ctx.f5.f64 * ctx.f4.f64 - ctx.f11.f64));
	// fmuls f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64));
	// stfs f11,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// lfs f5,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f11,24(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f11,f11,f5
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f5.f64));
	// lfs f4,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f5,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f2,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// fmsubs f11,f5,f4,f11
	ctx.f11.f64 = double(float(ctx.f5.f64 * ctx.f4.f64 - ctx.f11.f64));
	// fmuls f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64));
	// stfs f11,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// lfs f5,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f11,16(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f11,f11,f5
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f5.f64));
	// lfs f5,20(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f1,24(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// fmsubs f11,f5,f4,f11
	ctx.f11.f64 = double(float(ctx.f5.f64 * ctx.f4.f64 - ctx.f11.f64));
	// fmuls f0,f11,f0
	f0.f64 = double(float(ctx.f11.f64 * f0.f64));
	// stfs f0,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// lfs f0,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f10
	f0.f64 = double(float(f0.f64 * ctx.f10.f64));
	// lfs f11,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f5,40(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// fmadds f0,f11,f9,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f9.f64 + f0.f64));
	// fnmadds f0,f10,f8,f0
	f0.f64 = double(float(-(ctx.f10.f64 * ctx.f8.f64 + f0.f64)));
	// stfs f0,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// lfs f0,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f7
	f0.f64 = double(float(f0.f64 * ctx.f7.f64));
	// lfs f11,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f11,f6,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f6.f64 + f0.f64));
	// fnmadds f0,f3,f10,f0
	f0.f64 = double(float(-(ctx.f3.f64 * ctx.f10.f64 + f0.f64)));
	// stfs f0,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// lfs f0,52(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f1
	f0.f64 = double(float(f0.f64 * ctx.f1.f64));
	// lfs f11,56(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,48(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// stfs f13,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stfs f13,28(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 28);
	// stfs f13,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// stfs f12,60(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 60);
	// fmadds f0,f11,f5,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f5.f64 + f0.f64));
	// fnmadds f0,f2,f10,f0
	f0.f64 = double(float(-(ctx.f2.f64 * ctx.f10.f64 + f0.f64)));
	// stfs f0,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8210C6E8) PPC_WEAK_FUNC(sub_8210C6E8);
PPC_FUNC_IMPL(__imp__sub_8210C6E8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8210b168
	sub_8210B168(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r9,9
	ctx_arrow(ctx)->r9.s64 = 9;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_8210C70C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x8210c70c
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8210C70C;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210C730) PPC_WEAK_FUNC(sub_8210C730);
PPC_FUNC_IMPL(__imp__sub_8210C730) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8210b350
	sub_8210B350(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.s64 = 16;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_8210C754:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x8210c754
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8210C754;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210C778) PPC_WEAK_FUNC(sub_8210C778);
PPC_FUNC_IMPL(__imp__sub_8210C778) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8210b450
	sub_8210B450(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.s64 = 16;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_8210C79C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x8210c79c
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8210C79C;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210C7C0) PPC_WEAK_FUNC(sub_8210C7C0);
PPC_FUNC_IMPL(__imp__sub_8210C7C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8210ba08
	sub_8210BA08(ctx, base);
	// lfs f0,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// lfs f0,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,52(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// lfs f0,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,56(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210C818) PPC_WEAK_FUNC(sub_8210C818);
PPC_FUNC_IMPL(__imp__sub_8210C818) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// stfs f13,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// stfs f13,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// stfs f13,60(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 60);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// stfs f0,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// stfs f0,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// stfs f0,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// stfs f0,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stfs f0,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// stfs f0,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// stfs f0,28(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 28);
	// stfs f0,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// stfs f0,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// stfs f0,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// lfs f0,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// lfs f0,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// lfs f0,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8210C888) PPC_WEAK_FUNC(sub_8210C888);
PPC_FUNC_IMPL(__imp__sub_8210C888) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// bl 0x823ed544
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lfs f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f31,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fmuls f1,f0,f31
	ctx.f1.f64 = double(float(f0.f64 * f31.f64));
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// lfs f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f30,f1
	f30.f64 = double(float(ctx.f1.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lfs f0,4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f29,f1
	f29.f64 = double(float(ctx.f1.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// lfs f0,4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f28,f1
	f28.f64 = double(float(ctx.f1.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lfs f0,8(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f27,f1
	f27.f64 = double(float(ctx.f1.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// lfs f0,8(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// frsp f31,f1
	f31.f64 = double(float(ctx.f1.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fmuls f12,f27,f30
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(f27.f64 * f30.f64));
	// frsp f0,f1
	f0.f64 = double(float(ctx.f1.f64));
	// fmuls f13,f28,f30
	ctx.f13.f64 = double(float(f28.f64 * f30.f64));
	// fmuls f10,f27,f29
	ctx.f10.f64 = double(float(f27.f64 * f29.f64));
	// fmuls f11,f28,f29
	ctx.f11.f64 = double(float(f28.f64 * f29.f64));
	// fmuls f8,f12,f31
	ctx.f8.f64 = double(float(ctx.f12.f64 * f31.f64));
	// fmuls f12,f12,f0
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f9,f13,f31
	ctx.f9.f64 = double(float(ctx.f13.f64 * f31.f64));
	// fmuls f7,f10,f31
	ctx.f7.f64 = double(float(ctx.f10.f64 * f31.f64));
	// fmsubs f12,f11,f31,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 * f31.f64 - ctx.f12.f64));
	// stfs f12,4(ctx_arrow(ctx)->r30)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// fmadds f10,f10,f0,f9
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f9.f64));
	// stfs f10,0(ctx_arrow(ctx)->r30)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// fmadds f12,f11,f0,f8
	ctx.f12.f64 = double(float(ctx.f11.f64 * f0.f64 + ctx.f8.f64));
	// stfs f12,8(ctx_arrow(ctx)->r30)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// fmsubs f0,f13,f0,f7
	f0.f64 = double(float(ctx.f13.f64 * f0.f64 - ctx.f7.f64));
	// stfs f0,12(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// bl 0x823ed590
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210C988) PPC_WEAK_FUNC(sub_8210C988);
PPC_FUNC_IMPL(__imp__sub_8210C988) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f11,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f10,12(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f13,48(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 48);
	// stfs f13,52(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 52);
	// stfs f13,56(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 56);
	// stfs f13,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stfs f13,28(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 28);
	// stfs f13,44(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 44);
	// fmuls f13,f0,f0
	ctx.f13.f64 = double(float(f0.f64 * f0.f64));
	// lfs f9,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f9,60(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 60);
	// fmadds f13,f12,f12,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + ctx.f13.f64));
	// fmadds f13,f11,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f11.f64 + ctx.f13.f64));
	// fmadds f8,f10,f10,f13
	ctx.f8.f64 = double(float(ctx.f10.f64 * ctx.f10.f64 + ctx.f13.f64));
	// lfs f13,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fdivs f8,f13,f8
	ctx.f8.f64 = double(float(ctx.f13.f64 / ctx.f8.f64));
	// fmuls f13,f10,f8
	ctx.f13.f64 = double(float(ctx.f10.f64 * ctx.f8.f64));
	// fmuls f7,f11,f8
	ctx.f7.f64 = double(float(ctx.f11.f64 * ctx.f8.f64));
	// fmuls f8,f0,f8
	ctx.f8.f64 = double(float(f0.f64 * ctx.f8.f64));
	// fmuls f10,f10,f13
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// fmuls f6,f11,f7
	ctx.f6.f64 = double(float(ctx.f11.f64 * ctx.f7.f64));
	// fmuls f5,f0,f8
	ctx.f5.f64 = double(float(f0.f64 * ctx.f8.f64));
	// fmuls f4,f12,f7
	ctx.f4.f64 = double(float(ctx.f12.f64 * ctx.f7.f64));
	// fmuls f8,f12,f8
	ctx.f8.f64 = double(float(ctx.f12.f64 * ctx.f8.f64));
	// fmuls f7,f0,f7
	ctx.f7.f64 = double(float(f0.f64 * ctx.f7.f64));
	// fmuls f12,f12,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// fmuls f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fadds f11,f10,f6
	ctx.f11.f64 = double(float(ctx.f10.f64 + ctx.f6.f64));
	// fadds f10,f10,f5
	ctx.f10.f64 = double(float(ctx.f10.f64 + ctx.f5.f64));
	// fadds f6,f6,f5
	ctx.f6.f64 = double(float(ctx.f6.f64 + ctx.f5.f64));
	// fadds f5,f7,f12
	ctx.f5.f64 = double(float(ctx.f7.f64 + ctx.f12.f64));
	// stfs f5,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f5.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// fsubs f5,f0,f4
	ctx.f5.f64 = double(float(f0.f64 - ctx.f4.f64));
	// stfs f5,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f5.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// fadds f0,f0,f4
	f0.f64 = double(float(f0.f64 + ctx.f4.f64));
	// stfs f0,32(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 32);
	// fsubs f12,f7,f12
	ctx.f12.f64 = double(float(ctx.f7.f64 - ctx.f12.f64));
	// stfs f12,16(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 16);
	// fadds f12,f13,f8
	ctx.f12.f64 = double(float(ctx.f13.f64 + ctx.f8.f64));
	// stfs f12,24(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 24);
	// fsubs f0,f9,f11
	f0.f64 = double(float(ctx.f9.f64 - ctx.f11.f64));
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// fsubs f0,f9,f10
	f0.f64 = double(float(ctx.f9.f64 - ctx.f10.f64));
	// stfs f0,20(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// fsubs f0,f13,f8
	f0.f64 = double(float(ctx.f13.f64 - ctx.f8.f64));
	// stfs f0,36(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 36);
	// fsubs f0,f9,f6
	f0.f64 = double(float(ctx.f9.f64 - ctx.f6.f64));
	// stfs f0,40(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 40);
	// blr 
	return;
}

alias(__imp__sub_8210CA68) PPC_WEAK_FUNC(sub_8210CA68);
PPC_FUNC_IMPL(__imp__sub_8210CA68) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x8210c988
	sub_8210C988(ctx, base);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,48(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 48);
	// lfs f0,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,52(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 52);
	// lfs f0,8(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,56(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 56);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210CAB0) PPC_WEAK_FUNC(sub_8210CAB0);
PPC_FUNC_IMPL(__imp__sub_8210CAB0) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stfd f29,-56(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// stfd f30,-48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// stfd f31,-40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -40);
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// lfs f0,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f11,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f0,f0,f11
	f0.f64 = double(float(f0.f64 * ctx.f11.f64));
	// lfs f13,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// fmadds f1,f9,f8,f0
	ctx.f1.f64 = double(float(ctx.f9.f64 * ctx.f8.f64 + f0.f64));
	// lfs f0,25752(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8210cb6c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210CB6C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f12,f12,f31
	ctx.f12.f64 = double(float(ctx.f12.f64 * f31.f64));
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f31
	f0.f64 = double(float(f0.f64 - f31.f64));
	// fmsubs f13,f0,f13,f12
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64 - ctx.f12.f64));
	// stfs f13,0(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lfs f13,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f31,f13
	ctx.f13.f64 = double(float(f31.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmsubs f13,f12,f0,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f0.f64 - ctx.f13.f64));
	// stfs f13,4(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4);
	// lfs f13,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f31,f13
	ctx.f13.f64 = double(float(f31.f64 * ctx.f13.f64));
	// lfs f12,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmsubs f13,f12,f0,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f0.f64 - ctx.f13.f64));
	// stfs f13,8(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// lfs f13,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f31
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64));
	// lfs f12,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmsubs f0,f0,f12,f13
	f0.f64 = double(float(f0.f64 * ctx.f12.f64 - ctx.f13.f64));
	// b 0x8210cc60
	goto loc_8210CC60;
loc_8210CB6C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,25748(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210cc10
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210CC10;
	// bl 0x8210acb8
	sub_8210ACB8(ctx, base);
	// fmr f30,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f1.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f13,f1
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(ctx.f1.f64));
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f12,f0,f31
	ctx.f12.f64 = double(float(f0.f64 - f31.f64));
	// fdivs f29,f0,f13
	f29.f64 = double(float(f0.f64 / ctx.f13.f64));
	// fmuls f1,f12,f30
	ctx.f1.f64 = double(float(ctx.f12.f64 * f30.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmuls f1,f30,f31
	ctx.f1.f64 = double(float(f30.f64 * f31.f64));
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f31,f0,f29
	f31.f64 = double(float(f0.f64 * f29.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// lfs f13,0(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f0,f0,f29
	f0.f64 = double(float(f0.f64 * f29.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fmadds f13,f12,f31,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f31.f64 + ctx.f13.f64));
	// stfs f13,0(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lfs f13,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f13,f12,f31,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f31.f64 + ctx.f13.f64));
	// stfs f13,4(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4);
	// lfs f13,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f13,f12,f31,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f31.f64 + ctx.f13.f64));
	// stfs f13,8(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// lfs f13,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f31,f13
	ctx.f13.f64 = double(float(f31.f64 * ctx.f13.f64));
	// lfs f12,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f0,f12,f0,f13
	f0.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// b 0x8210cc60
	goto loc_8210CC60;
loc_8210CC10:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f12,f12,f31
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f12.f64 * f31.f64));
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f31
	f0.f64 = double(float(f0.f64 - f31.f64));
	// fmadds f13,f0,f13,f12
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
	// stfs f13,0(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lfs f13,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f31,f13
	ctx.f13.f64 = double(float(f31.f64 * ctx.f13.f64));
	// lfs f12,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f13,f12,f0,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// stfs f13,4(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4);
	// lfs f13,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f31,f13
	ctx.f13.f64 = double(float(f31.f64 * ctx.f13.f64));
	// lfs f12,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f13,f12,f0,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// stfs f13,8(ctx_arrow(ctx)->r29)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// lfs f13,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f31
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64));
	// lfs f12,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f0,f0,f12,f13
	f0.f64 = double(float(f0.f64 * ctx.f12.f64 + ctx.f13.f64));
loc_8210CC60:
	// stfs f0,12(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 12);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lfd f29,-56(ctx_arrow(ctx)->r1)
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-48(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-40(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8210CC78) PPC_WEAK_FUNC(sub_8210CC78);
PPC_FUNC_IMPL(__imp__sub_8210CC78) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// bl 0x823ed544
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// lfs f0,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// lfs f29,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f27,f29
	f27.f64 = f29.f64;
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f13
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ccd0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210CCD0;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fneg f1,f1
	ctx.f1.u64 = ctx.f1.u64 ^ 0x8000000000000000;
	// lfs f27,6580(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
loc_8210CCD0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,25752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f13
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ccf0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210CCF0;
	// fsubs f13,f29,f31
	ctx.f13.f64 = double(float(f29.f64 - f31.f64));
	// fmuls f13,f13,f27
	ctx.f13.f64 = double(float(ctx.f13.f64 * f27.f64));
	// fmsubs f0,f0,f31,f13
	f0.f64 = double(float(f0.f64 * f31.f64 - ctx.f13.f64));
	// b 0x8210cd58
	goto loc_8210CD58;
loc_8210CCF0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,25748(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f13
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, ctx.f13.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210cd4c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210CD4C;
	// bl 0x8210acb8
	sub_8210ACB8(ctx, base);
	// fmr f30,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f1.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmuls f1,f30,f31
	ctx.f1.f64 = double(float(f30.f64 * f31.f64));
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fdivs f28,f29,f0
	f28.f64 = double(float(f29.f64 / f0.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fsubs f0,f29,f31
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f29.f64 - f31.f64));
	// frsp f13,f1
	ctx.f13.f64 = double(float(ctx.f1.f64));
	// fmuls f1,f0,f30
	ctx.f1.f64 = double(float(f0.f64 * f30.f64));
	// fmuls f31,f13,f28
	f31.f64 = double(float(ctx.f13.f64 * f28.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// lfs f13,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f0,f28
	f0.f64 = double(float(f0.f64 * f28.f64));
	// fmuls f0,f0,f27
	f0.f64 = double(float(f0.f64 * f27.f64));
	// fmadds f0,f13,f31,f0
	f0.f64 = double(float(ctx.f13.f64 * f31.f64 + f0.f64));
	// b 0x8210cd58
	goto loc_8210CD58;
loc_8210CD4C:
	// fsubs f13,f29,f31
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(f29.f64 - f31.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fmadds f0,f13,f27,f0
	f0.f64 = double(float(ctx.f13.f64 * f27.f64 + f0.f64));
loc_8210CD58:
	// stfs f0,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lfs f0,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// stfs f0,4(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// lfs f0,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// stfs f0,8(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// lfs f0,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// stfs f0,12(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// bl 0x823ed590
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210CDA0) PPC_WEAK_FUNC(sub_8210CDA0);
PPC_FUNC_IMPL(__imp__sub_8210CDA0) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f0,8(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f10,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f0
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64));
	// lfs f9,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f8,12(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f11,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f7,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmadds f10,f9,f13,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f10,f8,f12,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f9,f7,f11,f10
	ctx.f9.f64 = double(float(ctx.f7.f64 * ctx.f11.f64 + ctx.f10.f64));
	// lfs f10,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f9,f10
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f10.f64);
	// bgelr ctx_arrow(ctx)->r6
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) return;
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// fneg f11,f11
	ctx.f11.u64 = ctx.f11.u64 ^ 0x8000000000000000;
	// stfs f11,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// fneg f13,f12
	ctx.f13.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfs f13,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// blr 
	return;
}

alias(__imp__sub_8210CE08) PPC_WEAK_FUNC(sub_8210CE08);
PPC_FUNC_IMPL(__imp__sub_8210CE08) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	PPCRegister temp{};
	// lfs f13,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,12(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmsubs f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 - f0.f64));
	// fnmsubs f0,f11,f10,f0
	f0.f64 = double(float(-(ctx.f11.f64 * ctx.f10.f64 - f0.f64)));
	// fnmsubs f0,f9,f8,f0
	f0.f64 = double(float(-(ctx.f9.f64 * ctx.f8.f64 - f0.f64)));
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lfs f13,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,12(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// fnmsubs f0,f9,f8,f0
	f0.f64 = double(float(-(ctx.f9.f64 * ctx.f8.f64 - f0.f64)));
	// stfs f0,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lfs f13,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,12(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// fnmsubs f0,f9,f8,f0
	f0.f64 = double(float(-(ctx.f9.f64 * ctx.f8.f64 - f0.f64)));
	// stfs f0,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// lfs f13,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,12(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// fnmsubs f0,f9,f8,f0
	f0.f64 = double(float(-(ctx.f9.f64 * ctx.f8.f64 - f0.f64)));
	// stfs f0,12(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 12);
	// blr 
	return;
}

alias(__imp__sub_8210CEE0) PPC_WEAK_FUNC(sub_8210CEE0);
PPC_FUNC_IMPL(__imp__sub_8210CEE0) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// lfs f1,0(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8210acb8
	sub_8210ACB8(ctx, base);
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bne ctx_arrow(ctx)->r6,0x8210cf38
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210CF38;
	// stfs f13,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stfs f13,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stfs f13,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// b 0x8210cf60
	goto loc_8210CF60;
loc_8210CF38:
	// fdivs f0,f31,f0
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f31.f64 / f0.f64));
	// lfs f13,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lfs f13,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lfs f13,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
loc_8210CF60:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210CF80) PPC_WEAK_FUNC(sub_8210CF80);
PPC_FUNC_IMPL(__imp__sub_8210CF80) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// lfs f13,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// lfs f0,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fmadds f0,f12,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + f0.f64));
	// fsqrts f31,f0
	f31.f64 = double(float(sqrt(f0.f64)));
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x8210cfe4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210CFE4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x8210d028
	goto loc_8210D028;
loc_8210CFE4:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fdivs f31,f0,f31
	f31.f64 = double(float(f0.f64 / f31.f64));
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lfs f0,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lfs f0,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f31,f0
	f0.f64 = double(float(f31.f64 * f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lfs f0,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f31,f0
	f0.f64 = double(float(f31.f64 * f0.f64));
loc_8210D028:
	// stfs f0,12(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-32(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D048) PPC_WEAK_FUNC(sub_8210D048);
PPC_FUNC_IMPL(__imp__sub_8210D048) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// lfs f13,8(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fneg f0,f13
	f0.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// lfs f12,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// fneg f0,f12
	f0.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// lfs f11,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// stfs f11,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stfs f0,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x8210ce08
	sub_8210CE08(&ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8210ce08
	sub_8210CE08(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8210cee0
	sub_8210CEE0(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// bl 0x8210cee0
	sub_8210CEE0(ctx, base);
	// lfs f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,96(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fadds f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 + f0.f64));
	// lfs f0,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,100(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// fadds f12,f12,f0
	ctx.f12.f64 = double(float(ctx.f12.f64 + f0.f64));
	// lfs f0,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f11,104(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fadds f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 + f0.f64));
	// lfs f0,92(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f10,108(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fadds f10,f10,f0
	ctx.f10.f64 = double(float(ctx.f10.f64 + f0.f64));
	// lfs f0,25756(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// fmuls f13,f12,f0
	ctx.f13.f64 = double(float(ctx.f12.f64 * f0.f64));
	// stfs f13,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fmuls f13,f11,f0
	ctx.f13.f64 = double(float(ctx.f11.f64 * f0.f64));
	// stfs f13,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// fmuls f0,f10,f0
	f0.f64 = double(float(ctx.f10.f64 * f0.f64));
	// stfs f0,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x8210cf80
	sub_8210CF80(&ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8210ce08
	sub_8210CE08(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D158) PPC_WEAK_FUNC(sub_8210D158);
PPC_FUNC_IMPL(__imp__sub_8210D158) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stfd f29,-56(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// stfd f30,-48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// stfd f31,-40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -40);
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lfs f9,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r6.u64;
	// lfs f8,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,12(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// lfs f6,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r8.u64;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,8(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,12(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,0(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fsubs f10,f13,f31
	ctx.f10.f64 = double(float(ctx.f13.f64 - f31.f64));
	// lfs f13,4(ctx_arrow(ctx)->r4)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f5,f10,f31
	ctx.f5.f64 = double(float(ctx.f10.f64 * f31.f64));
	// lfs f10,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f30,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fmuls f29,f5,f10
	f29.f64 = double(float(ctx.f5.f64 * ctx.f10.f64));
	// fmuls f10,f9,f0
	ctx.f10.f64 = double(float(ctx.f9.f64 * f0.f64));
	// fmadds f10,f8,f13,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f10,f7,f12,f10
	ctx.f10.f64 = double(float(ctx.f7.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f10,f6,f11,f10
	ctx.f10.f64 = double(float(ctx.f6.f64 * ctx.f11.f64 + ctx.f10.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f30
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f30.f64);
	// bge ctx_arrow(ctx)->r6,0x8210d200
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210D200;
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// fneg f11,f11
	ctx.f11.u64 = ctx.f11.u64 ^ 0x8000000000000000;
	// stfs f11,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// fneg f13,f12
	ctx.f13.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfs f13,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
loc_8210D200:
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x8210cab0
	sub_8210CAB0(ctx, base);
	// lfs f0,8(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f0
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64));
	// lfs f13,4(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f9,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f12,12(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f8,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f11,0(ctx_arrow(ctx)->r31)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f7,0(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmadds f10,f9,f13,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f10,f8,f12,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f10,f7,f11,f10
	ctx.f10.f64 = double(float(ctx.f7.f64 * ctx.f11.f64 + ctx.f10.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f30
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f30.f64);
	// bge ctx_arrow(ctx)->r6,0x8210d264
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210D264;
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// stfs f13,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// fneg f11,f11
	ctx.f11.u64 = ctx.f11.u64 ^ 0x8000000000000000;
	// stfs f11,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfs f0,8(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// fneg f13,f12
	ctx.f13.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfs f13,12(ctx_arrow(ctx)->r31)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
loc_8210D264:
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8210cab0
	sub_8210CAB0(ctx, base);
	// lfs f12,104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f9,f13,f12
	ctx.f9.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// lfs f0,92(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f10,108(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f12,80(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f8,96(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f11,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f7,100(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmadds f10,f0,f10,f9
	ctx.f10.f64 = double(float(f0.f64 * ctx.f10.f64 + ctx.f9.f64));
	// fmadds f10,f12,f8,f10
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f8.f64 + ctx.f10.f64));
	// fmadds f10,f11,f7,f10
	ctx.f10.f64 = double(float(ctx.f11.f64 * ctx.f7.f64 + ctx.f10.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f30
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f30.f64);
	// bge ctx_arrow(ctx)->r6,0x8210d2d0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210D2D0;
	// fneg f12,f12
	ctx.f12.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// fneg f12,f11
	ctx.f12.u64 = ctx.f11.u64 ^ 0x8000000000000000;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// stfs f13,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfs f0,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
loc_8210D2D0:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// fmr f1,f29
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f29.f64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8210cab0
	sub_8210CAB0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfd f29,-56(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-48(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-40(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8210D2F8) PPC_WEAK_FUNC(sub_8210D2F8);
PPC_FUNC_IMPL(__imp__sub_8210D2F8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stfd f31,-48(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r8.u64;
	// bl 0x8210d048
	sub_8210D048(ctx, base);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8210d048
	sub_8210D048(ctx, base);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8210d158
	sub_8210D158(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lfd f31,-48(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed188
	return;
}

alias(__imp__sub_8210D360) PPC_WEAK_FUNC(sub_8210D360);
PPC_FUNC_IMPL(__imp__sub_8210D360) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fdivs f13,f31,f0
	ctx.f13.f64 = double(float(f31.f64 / f0.f64));
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// fsqrts f1,f0
	ctx.f1.f64 = double(float(sqrt(f0.f64)));
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D3B8) PPC_WEAK_FUNC(sub_8210D3B8);
PPC_FUNC_IMPL(__imp__sub_8210D3B8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f1,4424(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4424);
	// stfs f2,4428(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4428);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f0,2692(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fmuls f13,f1,f0
	ctx.f13.f64 = double(float(ctx.f1.f64 * f0.f64));
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// fmuls f0,f2,f0
	f0.f64 = double(float(ctx.f2.f64 * f0.f64));
	// stfs f13,4452(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4452);
	// stfs f0,4456(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4456);
	// blr 
	return;
}

alias(__imp__sub_8210D3F0) PPC_WEAK_FUNC(sub_8210D3F0);
PPC_FUNC_IMPL(__imp__sub_8210D3F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// stfs f1,4432(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4432);
	// stfs f2,4436(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4436);
	// blr 
	return;
}

alias(__imp__sub_8210D408) PPC_WEAK_FUNC(sub_8210D408);
PPC_FUNC_IMPL(__imp__sub_8210D408) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// stfs f1,4440(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4440);
	// stfs f2,4444(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4444);
	// stfs f3,4448(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4448);
	// blr 
	return;
}

alias(__imp__sub_8210D428) PPC_WEAK_FUNC(sub_8210D428);
PPC_FUNC_IMPL(__imp__sub_8210D428) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f30,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stfd f31,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r31,-32014
	ctx_arrow(ctx)->r31.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,4444(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,25768(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fmuls f1,f0,f31
	ctx.f1.f64 = double(float(f0.f64 * f31.f64));
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,4444(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// frsp f31,f1
	f31.f64 = double(float(ctx.f1.f64));
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4456
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4456;
	// lfs f13,4456(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfd f30,25760(ctx_arrow(ctx)->r10)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4464
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4464;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fdivs f0,f31,f0
	f0.f64 = double(float(f31.f64 / f0.f64));
	// stfs f0,4464(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4464);
	// lfs f12,4452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,4448(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fdivs f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 / ctx.f12.f64));
	// lfs f12,0(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,4460(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4460);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fdivs f0,f31,f0
	f0.f64 = double(float(f31.f64 / f0.f64));
	// stfs f0,4468(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4468);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fdivs f0,f31,f0
	f0.f64 = double(float(f31.f64 / f0.f64));
	// stfs f0,4472(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4472);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,4520(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4520);
	// bl 0x823edbe0
	sub_823EDBE0(&ctx);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// frsp f30,f0
	f30.f64 = double(float(f0.f64));
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f13,12464(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// fdivs f0,f30,f0
	f0.f64 = double(float(f30.f64 / f0.f64));
	// stfs f0,4516(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4516);
	// lfs f13,4520(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fdivs f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 / f0.f64));
	// lfs f13,16156(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f0,4524(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4524);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f0,16148(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x8210d550
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210D550;
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// stw ctx_arrow(ctx)->r10,4528(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4528);
	// b 0x8210d55c
	goto loc_8210D55C;
loc_8210D550:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4528
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4528;
	// fctidz f0,f13
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f13.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f13.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
loc_8210D55C:
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f12,4456(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f0,4464(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f12
	f0.f64 = double(float(f0.f64 * ctx.f12.f64));
	// lfs f13,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,4532(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4532);
	// fmadds f12,f0,f0,f31
	ctx.f12.f64 = double(float(f0.f64 * f0.f64 + f31.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fdivs f12,f31,f12
	ctx.f12.f64 = double(float(f31.f64 / ctx.f12.f64));
	// stfs f12,4536(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4536);
	// fmuls f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * f0.f64));
	// stfs f0,4540(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4540);
	// lfs f12,4452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f0,4460(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f12
	f0.f64 = double(float(f0.f64 * ctx.f12.f64));
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// fmadds f12,f0,f0,f31
	ctx.f12.f64 = double(float(f0.f64 * f0.f64 + f31.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fdivs f12,f31,f12
	ctx.f12.f64 = double(float(f31.f64 / ctx.f12.f64));
	// fmuls f0,f0,f12
	f0.f64 = double(float(f0.f64 * ctx.f12.f64));
	// fneg f12,f12
	ctx.f12.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfs f12,4544(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4544);
	// stfs f13,4548(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4548);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfs f0,4552(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4552);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f30,-32(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-24(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D5E0) PPC_WEAK_FUNC(sub_8210D5E0);
PPC_FUNC_IMPL(__imp__sub_8210D5E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lfs f0,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f13,4436(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f0,f0,f13
	f0.f64 = double(float(f0.f64 - ctx.f13.f64));
	// lfs f13,4432(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f13,f12,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 - ctx.f13.f64));
	// lfs f12,4456(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,4452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,4464(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,4460(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 - f0.f64));
	// fsubs f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 - ctx.f11.f64));
	// fmuls f0,f0,f10
	f0.f64 = double(float(f0.f64 * ctx.f10.f64));
	// fmuls f13,f13,f9
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f9.f64));
	// fmuls f12,f0,f0
	ctx.f12.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f11,f13,f13,f12
	ctx.f11.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f12.f64));
	// lfs f12,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fadds f12,f11,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 + ctx.f12.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fdivs f12,f1,f12
	ctx.f12.f64 = double(float(ctx.f1.f64 / ctx.f12.f64));
	// fmuls f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * f0.f64));
	// stfs f0,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfs f0,6580(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f12,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fmuls f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210D660) PPC_WEAK_FUNC(sub_8210D660);
PPC_FUNC_IMPL(__imp__sub_8210D660) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,8(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// lfs f12,4(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fdivs f0,f0,f13
	f0.f64 = double(float(f0.f64 / ctx.f13.f64));
	// lfs f13,4472(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// lfs f12,4456(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,4436(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmadds f13,f13,f0,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f12.f64));
	// fadds f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 + ctx.f11.f64));
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfs f12,4432(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,4452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 + ctx.f12.f64));
	// lfs f11,4468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f12,f11,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 * ctx.f12.f64));
	// fnmsubs f0,f12,f0,f13
	f0.f64 = double(float(-(ctx.f12.f64 * f0.f64 - ctx.f13.f64)));
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8210D6C0) PPC_WEAK_FUNC(sub_8210D6C0);
PPC_FUNC_IMPL(__imp__sub_8210D6C0) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,8(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bne ctx_arrow(ctx)->r6,0x8210d6e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210D6E0;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,25772(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x8210d6ec
	goto loc_8210D6EC;
loc_8210D6E0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fdivs f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 / f0.f64));
loc_8210D6EC:
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// lfs f12,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f13,4472(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// lfs f12,4456(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,4436(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmadds f13,f13,f0,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f12.f64));
	// fadds f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 + ctx.f11.f64));
	// stfs f13,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfs f12,4432(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,4452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 + ctx.f12.f64));
	// lfs f11,4468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f12,f11,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 * ctx.f12.f64));
	// fnmsubs f0,f12,f0,f13
	f0.f64 = double(float(-(ctx.f12.f64 * f0.f64 - ctx.f13.f64)));
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8210D738) PPC_WEAK_FUNC(sub_8210D738);
PPC_FUNC_IMPL(__imp__sub_8210D738) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// fdivs f0,f0,f1
	f0.f64 = double(float(f0.f64 / ctx.f1.f64));
	// lwz ctx_arrow(ctx)->r10,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// lfs f13,4472(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lfs f13,4468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8210D780) PPC_WEAK_FUNC(sub_8210D780);
PPC_FUNC_IMPL(__imp__sub_8210D780) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,4476(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4476);
	// blr 
	return;
}

alias(__imp__sub_8210D790) PPC_WEAK_FUNC(sub_8210D790);
PPC_FUNC_IMPL(__imp__sub_8210D790) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4476(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D7A0) PPC_WEAK_FUNC(sub_8210D7A0);
PPC_FUNC_IMPL(__imp__sub_8210D7A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,4480(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4480);
	// blr 
	return;
}

alias(__imp__sub_8210D7B0) PPC_WEAK_FUNC(sub_8210D7B0);
PPC_FUNC_IMPL(__imp__sub_8210D7B0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4480(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D7C0) PPC_WEAK_FUNC(sub_8210D7C0);
PPC_FUNC_IMPL(__imp__sub_8210D7C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,4496(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4496);
	// blr 
	return;
}

alias(__imp__sub_8210D7D0) PPC_WEAK_FUNC(sub_8210D7D0);
PPC_FUNC_IMPL(__imp__sub_8210D7D0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4496(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D7E0) PPC_WEAK_FUNC(sub_8210D7E0);
PPC_FUNC_IMPL(__imp__sub_8210D7E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,4504(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4504);
	// blr 
	return;
}

alias(__imp__sub_8210D7F0) PPC_WEAK_FUNC(sub_8210D7F0);
PPC_FUNC_IMPL(__imp__sub_8210D7F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4504(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D800) PPC_WEAK_FUNC(sub_8210D800);
PPC_FUNC_IMPL(__imp__sub_8210D800) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,4508(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4508);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,4484(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4484);
	// blr 
	return;
}

alias(__imp__sub_8210D820) PPC_WEAK_FUNC(sub_8210D820);
PPC_FUNC_IMPL(__imp__sub_8210D820) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D830) PPC_WEAK_FUNC(sub_8210D830);
PPC_FUNC_IMPL(__imp__sub_8210D830) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,4500(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4500);
	// blr 
	return;
}

alias(__imp__sub_8210D840) PPC_WEAK_FUNC(sub_8210D840);
PPC_FUNC_IMPL(__imp__sub_8210D840) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4500(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D850) PPC_WEAK_FUNC(sub_8210D850);
PPC_FUNC_IMPL(__imp__sub_8210D850) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,4512(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4512);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,4492(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4492);
	// blr 
	return;
}

alias(__imp__sub_8210D870) PPC_WEAK_FUNC(sub_8210D870);
PPC_FUNC_IMPL(__imp__sub_8210D870) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D880) PPC_WEAK_FUNC(sub_8210D880);
PPC_FUNC_IMPL(__imp__sub_8210D880) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4512(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210D890) PPC_WEAK_FUNC(sub_8210D890);
PPC_FUNC_IMPL(__imp__sub_8210D890) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,4524(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_8210D8A0) PPC_WEAK_FUNC(sub_8210D8A0);
PPC_FUNC_IMPL(__imp__sub_8210D8A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,4424(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_8210D8B0) PPC_WEAK_FUNC(sub_8210D8B0);
PPC_FUNC_IMPL(__imp__sub_8210D8B0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,4428(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_8210D8C0) PPC_WEAK_FUNC(sub_8210D8C0);
PPC_FUNC_IMPL(__imp__sub_8210D8C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,4432(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_8210D8D0) PPC_WEAK_FUNC(sub_8210D8D0);
PPC_FUNC_IMPL(__imp__sub_8210D8D0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,4436(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_8210D8E0) PPC_WEAK_FUNC(sub_8210D8E0);
PPC_FUNC_IMPL(__imp__sub_8210D8E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,4448(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_8210D8F0) PPC_WEAK_FUNC(sub_8210D8F0);
PPC_FUNC_IMPL(__imp__sub_8210D8F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,4464(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,4456(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f10,16(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f12,2776(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// fmadds f0,f13,f13,f12
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f12.f64));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17380
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 17380;
	// fsqrts f0,f0
	f0.f64 = double(float(sqrt(f0.f64)));
	// fdivs f11,f12,f0
	ctx.f11.f64 = double(float(ctx.f12.f64 / f0.f64));
	// fneg f0,f11
	f0.u64 = ctx.f11.u64 ^ 0x8000000000000000;
	// fmuls f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fmuls f11,f10,f0
	ctx.f11.f64 = double(float(ctx.f10.f64 * f0.f64));
	// fmsubs f11,f9,f13,f11
	ctx.f11.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 - ctx.f11.f64));
	// stfs f11,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f10,20(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f0
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64));
	// lfs f9,36(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmsubs f10,f9,f13,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 - ctx.f10.f64));
	// stfs f10,4(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f9,24(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f9,f9,f0
	ctx.f9.f64 = double(float(ctx.f9.f64 * f0.f64));
	// lfs f8,40(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// fmsubs f9,f8,f13,f9
	ctx.f9.f64 = double(float(ctx.f8.f64 * ctx.f13.f64 - ctx.f9.f64));
	// stfs f9,8(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f8,52(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmuls f10,f8,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f10.f64));
	// lfs f8,56(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,48(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// fmadds f10,f8,f9,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f9.f64 + ctx.f10.f64));
	// fmadds f11,f7,f11,f10
	ctx.f11.f64 = double(float(ctx.f7.f64 * ctx.f11.f64 + ctx.f10.f64));
	// stfs f11,17360(ctx_arrow(ctx)->r9)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 17360);
	// lfs f11,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f11,f11,f13
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// lfs f10,16(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17348
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 17348;
	// fmadds f11,f10,f0,f11
	ctx.f11.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f11.f64));
	// stfs f11,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f10,36(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f13
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// lfs f9,20(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmadds f10,f9,f0,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * f0.f64 + ctx.f10.f64));
	// stfs f10,4(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f9,40(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f13,f9,f13
	ctx.f13.f64 = double(float(ctx.f9.f64 * ctx.f13.f64));
	// lfs f9,24(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmadds f0,f9,f0,f13
	f0.f64 = double(float(ctx.f9.f64 * f0.f64 + ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f13,52(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f10
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f10.f64));
	// lfs f10,56(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,48(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// fmadds f0,f10,f0,f13
	f0.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f13.f64));
	// fmadds f0,f9,f11,f0
	f0.f64 = double(float(ctx.f9.f64 * ctx.f11.f64 + f0.f64));
	// stfs f0,17412(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 17412);
	// lfs f13,4452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,4460(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f11,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// fmadds f13,f0,f0,f12
	ctx.f13.f64 = double(float(f0.f64 * f0.f64 + ctx.f12.f64));
	// fsqrts f13,f13
	ctx.f13.f64 = double(float(sqrt(ctx.f13.f64)));
	// fdivs f13,f12,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 / ctx.f13.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// fmuls f12,f11,f0
	ctx.f12.f64 = double(float(ctx.f11.f64 * f0.f64));
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17400
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 17400;
	// fmsubs f12,f10,f13,f12
	ctx.f12.f64 = double(float(ctx.f10.f64 * ctx.f13.f64 - ctx.f12.f64));
	// stfs f12,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f11,36(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f11,f11,f0
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64));
	// lfs f10,4(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmsubs f11,f10,f13,f11
	ctx.f11.f64 = double(float(ctx.f10.f64 * ctx.f13.f64 - ctx.f11.f64));
	// stfs f11,4(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f10,40(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f0
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64));
	// lfs f9,8(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// fmsubs f10,f9,f13,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 - ctx.f10.f64));
	// stfs f10,8(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f9,52(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fmuls f11,f9,f11
	ctx.f11.f64 = double(float(ctx.f9.f64 * ctx.f11.f64));
	// lfs f9,56(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,48(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f11,f9,f10,f11
	ctx.f11.f64 = double(float(ctx.f9.f64 * ctx.f10.f64 + ctx.f11.f64));
	// fmadds f12,f8,f12,f11
	ctx.f12.f64 = double(float(ctx.f8.f64 * ctx.f12.f64 + ctx.f11.f64));
	// stfs f12,17392(ctx_arrow(ctx)->r9)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 17392);
	// lfs f12,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmuls f12,f12,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// lfs f11,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17368
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 17368;
	// fneg f12,f12
	ctx.f12.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// fnmsubs f12,f11,f0,f12
	ctx.f12.f64 = double(float(-(ctx.f11.f64 * f0.f64 - ctx.f12.f64)));
	// stfs f12,0(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f11,4(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f11,f11,f13
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// lfs f10,36(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fneg f11,f11
	ctx.f11.u64 = ctx.f11.u64 ^ 0x8000000000000000;
	// fnmsubs f11,f10,f0,f11
	ctx.f11.f64 = double(float(-(ctx.f10.f64 * f0.f64 - ctx.f11.f64)));
	// stfs f11,4(ctx_arrow(ctx)->r10)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r9,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f10,8(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f13,f10,f13
	ctx.f13.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// lfs f10,40(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// fnmsubs f0,f10,f0,f13
	f0.f64 = double(float(-(ctx.f10.f64 * f0.f64 - ctx.f13.f64)));
	// stfs f0,8(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lfs f13,56(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f10,52(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,48(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f10,f11,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + f0.f64));
	// stfs f0,17396(ctx_arrow(ctx)->r10)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 17396);
	// lfs f13,56(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,40(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// lfs f12,48(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f13,32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f11,36(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,52(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// fmadds f0,f13,f12,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f12.f64 + f0.f64));
	// fmadds f0,f11,f10,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f10.f64 + f0.f64));
	// stfs f0,17364(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 17364);
	// blr 
	return;
}

alias(__imp__sub_8210DB48) PPC_WEAK_FUNC(sub_8210DB48);
PPC_FUNC_IMPL(__imp__sub_8210DB48) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lfs f0,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f12,17364(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fadds f11,f12,f1
	ctx.f11.f64 = double(float(ctx.f12.f64 + ctx.f1.f64));
	// lfs f12,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f10,36(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f0
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64));
	// lfs f9,32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,40(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f10,f9,f13,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f10,f8,f12,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f11
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x8210db94
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210DB94;
loc_8210DB8C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
loc_8210DB94:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17400
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 17400;
	// lfs f10,4(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f8,f0,f10
	ctx.f8.f64 = double(float(f0.f64 * ctx.f10.f64));
	// lfs f11,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f9,17392(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fadds f9,f9,f1
	ctx.f9.f64 = double(float(ctx.f9.f64 + ctx.f1.f64));
	// fmadds f11,f13,f11,f8
	ctx.f11.f64 = double(float(ctx.f13.f64 * ctx.f11.f64 + ctx.f8.f64));
	// fmadds f11,f12,f10,f11
	ctx.f11.f64 = double(float(ctx.f12.f64 * ctx.f10.f64 + ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f11,f9
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f9.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210db8c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DB8C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17368
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 17368;
	// lfs f10,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f8,f0,f10
	ctx.f8.f64 = double(float(f0.f64 * ctx.f10.f64));
	// lfs f11,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f9,17396(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fadds f9,f9,f1
	ctx.f9.f64 = double(float(ctx.f9.f64 + ctx.f1.f64));
	// fmadds f11,f13,f11,f8
	ctx.f11.f64 = double(float(ctx.f13.f64 * ctx.f11.f64 + ctx.f8.f64));
	// fmadds f11,f12,f10,f11
	ctx.f11.f64 = double(float(ctx.f12.f64 * ctx.f10.f64 + ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f11,f9
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f9.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210db8c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DB8C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17380
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 17380;
	// lfs f10,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f8,f0,f10
	ctx.f8.f64 = double(float(f0.f64 * ctx.f10.f64));
	// lfs f11,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f10,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f9,17360(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fadds f9,f9,f1
	ctx.f9.f64 = double(float(ctx.f9.f64 + ctx.f1.f64));
	// fmadds f11,f13,f11,f8
	ctx.f11.f64 = double(float(ctx.f13.f64 * ctx.f11.f64 + ctx.f8.f64));
	// fmadds f11,f12,f10,f11
	ctx.f11.f64 = double(float(ctx.f12.f64 * ctx.f10.f64 + ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f11,f9
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f9.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210db8c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DB8C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17348
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 17348;
	// lfs f10,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f9,f0,f10
	ctx.f9.f64 = double(float(f0.f64 * ctx.f10.f64));
	// lfs f11,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f0,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f10,17412(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fadds f10,f10,f1
	ctx.f10.f64 = double(float(ctx.f10.f64 + ctx.f1.f64));
	// fmadds f13,f13,f11,f9
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f11.f64 + ctx.f9.f64));
	// fmadds f0,f12,f0,f13
	f0.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f10
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f10.f64);
	// bgtlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.gt()) return;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
}

alias(__imp__sub_8210DC70) PPC_WEAK_FUNC(sub_8210DC70);
PPC_FUNC_IMPL(__imp__sub_8210DC70) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed544
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lfs f13,4(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f12,0(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// lfs f11,8(ctx_arrow(ctx)->r3)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,17364(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f0,f0,f1
	f0.f64 = double(float(f0.f64 + ctx.f1.f64));
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f10,36(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmuls f10,f10,f13
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f13.f64));
	// lfs f9,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,40(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmadds f10,f9,f12,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f12.f64 + ctx.f10.f64));
	// fmadds f10,f8,f11,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f11.f64 + ctx.f10.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f0
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x8210dcdc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210DCDC;
loc_8210DCC4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed590
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_8210DCDC:
	// lfs f8,4432(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,0(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f8
	f0.f64 = double(float(f0.f64 - ctx.f8.f64));
	// lfs f7,4452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f6,4460(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f5,36(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,40(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f3,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f31,8(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lfs f30,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// lfs f29,52(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// fsubs f0,f0,f7
	f0.f64 = double(float(f0.f64 - ctx.f7.f64));
	// lfs f28,56(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lfs f27,48(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// fmuls f10,f0,f6
	ctx.f10.f64 = double(float(f0.f64 * ctx.f6.f64));
	// lfs f0,2776(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmadds f9,f10,f10,f0
	ctx.f9.f64 = double(float(ctx.f10.f64 * ctx.f10.f64 + f0.f64));
	// fsqrts f9,f9
	ctx.f9.f64 = double(float(sqrt(ctx.f9.f64)));
	// fdivs f9,f0,f9
	ctx.f9.f64 = double(float(f0.f64 / ctx.f9.f64));
	// fmuls f10,f9,f10
	ctx.f10.f64 = double(float(ctx.f9.f64 * ctx.f10.f64));
	// fneg f9,f9
	ctx.f9.u64 = ctx.f9.u64 ^ 0x8000000000000000;
	// fmuls f5,f5,f10
	ctx.f5.f64 = double(float(ctx.f5.f64 * ctx.f10.f64));
	// fmuls f4,f4,f10
	ctx.f4.f64 = double(float(ctx.f4.f64 * ctx.f10.f64));
	// fmuls f3,f3,f10
	ctx.f3.f64 = double(float(ctx.f3.f64 * ctx.f10.f64));
	// fmsubs f10,f2,f9,f5
	ctx.f10.f64 = double(float(ctx.f2.f64 * ctx.f9.f64 - ctx.f5.f64));
	// fmsubs f5,f31,f9,f4
	ctx.f5.f64 = double(float(f31.f64 * ctx.f9.f64 - ctx.f4.f64));
	// fmsubs f9,f9,f30,f3
	ctx.f9.f64 = double(float(ctx.f9.f64 * f30.f64 - ctx.f3.f64));
	// fmuls f4,f29,f10
	ctx.f4.f64 = double(float(f29.f64 * ctx.f10.f64));
	// fmuls f10,f13,f10
	ctx.f10.f64 = double(float(ctx.f13.f64 * ctx.f10.f64));
	// fmadds f4,f28,f5,f4
	ctx.f4.f64 = double(float(f28.f64 * ctx.f5.f64 + ctx.f4.f64));
	// fmadds f10,f12,f9,f10
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f9.f64 + ctx.f10.f64));
	// fmadds f9,f27,f9,f4
	ctx.f9.f64 = double(float(f27.f64 * ctx.f9.f64 + ctx.f4.f64));
	// fmadds f10,f11,f5,f10
	ctx.f10.f64 = double(float(ctx.f11.f64 * ctx.f5.f64 + ctx.f10.f64));
	// fadds f9,f9,f1
	ctx.f9.f64 = double(float(ctx.f9.f64 + ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f9
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f9.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210dcc4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DCC4;
	// lfs f10,8(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f10,f10,f8
	ctx.f10.f64 = double(float(ctx.f10.f64 - ctx.f8.f64));
	// lfs f5,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,36(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f3,40(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f31,52(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lfs f2,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f30,56(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fsubs f10,f10,f7
	ctx.f10.f64 = double(float(ctx.f10.f64 - ctx.f7.f64));
	// lfs f7,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f29,48(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// fmuls f10,f10,f6
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f6.f64));
	// lfs f6,8(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// fneg f10,f10
	ctx.f10.u64 = ctx.f10.u64 ^ 0x8000000000000000;
	// fmadds f9,f10,f10,f0
	ctx.f9.f64 = double(float(ctx.f10.f64 * ctx.f10.f64 + f0.f64));
	// fsqrts f9,f9
	ctx.f9.f64 = double(float(sqrt(ctx.f9.f64)));
	// fdivs f8,f0,f9
	ctx.f8.f64 = double(float(f0.f64 / ctx.f9.f64));
	// fneg f9,f8
	ctx.f9.u64 = ctx.f8.u64 ^ 0x8000000000000000;
	// fmuls f10,f8,f10
	ctx.f10.f64 = double(float(ctx.f8.f64 * ctx.f10.f64));
	// fmuls f8,f7,f9
	ctx.f8.f64 = double(float(ctx.f7.f64 * ctx.f9.f64));
	// fmuls f7,f6,f9
	ctx.f7.f64 = double(float(ctx.f6.f64 * ctx.f9.f64));
	// fmuls f9,f5,f9
	ctx.f9.f64 = double(float(ctx.f5.f64 * ctx.f9.f64));
	// fneg f8,f8
	ctx.f8.u64 = ctx.f8.u64 ^ 0x8000000000000000;
	// fneg f7,f7
	ctx.f7.u64 = ctx.f7.u64 ^ 0x8000000000000000;
	// fneg f6,f9
	ctx.f6.u64 = ctx.f9.u64 ^ 0x8000000000000000;
	// fnmsubs f9,f4,f10,f8
	ctx.f9.f64 = double(float(-(ctx.f4.f64 * ctx.f10.f64 - ctx.f8.f64)));
	// fnmsubs f8,f3,f10,f7
	ctx.f8.f64 = double(float(-(ctx.f3.f64 * ctx.f10.f64 - ctx.f7.f64)));
	// fnmsubs f10,f2,f10,f6
	ctx.f10.f64 = double(float(-(ctx.f2.f64 * ctx.f10.f64 - ctx.f6.f64)));
	// fmuls f7,f31,f9
	ctx.f7.f64 = double(float(f31.f64 * ctx.f9.f64));
	// fmuls f9,f13,f9
	ctx.f9.f64 = double(float(ctx.f13.f64 * ctx.f9.f64));
	// fmadds f7,f30,f8,f7
	ctx.f7.f64 = double(float(f30.f64 * ctx.f8.f64 + ctx.f7.f64));
	// fmadds f9,f12,f10,f9
	ctx.f9.f64 = double(float(ctx.f12.f64 * ctx.f10.f64 + ctx.f9.f64));
	// fmadds f10,f29,f10,f7
	ctx.f10.f64 = double(float(f29.f64 * ctx.f10.f64 + ctx.f7.f64));
	// fmadds f9,f11,f8,f9
	ctx.f9.f64 = double(float(ctx.f11.f64 * ctx.f8.f64 + ctx.f9.f64));
	// fadds f10,f10,f1
	ctx.f10.f64 = double(float(ctx.f10.f64 + ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f9,f10
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210dcc4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DCC4;
	// lfs f8,4436(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// lfs f10,4(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fsubs f10,f10,f8
	ctx.f10.f64 = double(float(ctx.f10.f64 - ctx.f8.f64));
	// lfs f7,4456(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f6,4464(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// lfs f5,20(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,24(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f3,16(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,36(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f31,40(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lfs f29,52(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// lfs f30,32(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fsubs f10,f7,f10
	ctx.f10.f64 = double(float(ctx.f7.f64 - ctx.f10.f64));
	// lfs f28,56(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lfs f27,48(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// fmuls f10,f10,f6
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f6.f64));
	// fmadds f9,f10,f10,f0
	ctx.f9.f64 = double(float(ctx.f10.f64 * ctx.f10.f64 + f0.f64));
	// fsqrts f9,f9
	ctx.f9.f64 = double(float(sqrt(ctx.f9.f64)));
	// fdivs f9,f0,f9
	ctx.f9.f64 = double(float(f0.f64 / ctx.f9.f64));
	// fmuls f10,f10,f9
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f9.f64));
	// fneg f9,f9
	ctx.f9.u64 = ctx.f9.u64 ^ 0x8000000000000000;
	// fmuls f5,f5,f9
	ctx.f5.f64 = double(float(ctx.f5.f64 * ctx.f9.f64));
	// fmuls f4,f4,f9
	ctx.f4.f64 = double(float(ctx.f4.f64 * ctx.f9.f64));
	// fmuls f3,f3,f9
	ctx.f3.f64 = double(float(ctx.f3.f64 * ctx.f9.f64));
	// fmsubs f9,f2,f10,f5
	ctx.f9.f64 = double(float(ctx.f2.f64 * ctx.f10.f64 - ctx.f5.f64));
	// fmsubs f5,f31,f10,f4
	ctx.f5.f64 = double(float(f31.f64 * ctx.f10.f64 - ctx.f4.f64));
	// fmsubs f10,f30,f10,f3
	ctx.f10.f64 = double(float(f30.f64 * ctx.f10.f64 - ctx.f3.f64));
	// fmuls f4,f29,f9
	ctx.f4.f64 = double(float(f29.f64 * ctx.f9.f64));
	// fmuls f9,f13,f9
	ctx.f9.f64 = double(float(ctx.f13.f64 * ctx.f9.f64));
	// fmadds f4,f28,f5,f4
	ctx.f4.f64 = double(float(f28.f64 * ctx.f5.f64 + ctx.f4.f64));
	// fmadds f9,f12,f10,f9
	ctx.f9.f64 = double(float(ctx.f12.f64 * ctx.f10.f64 + ctx.f9.f64));
	// fmadds f10,f27,f10,f4
	ctx.f10.f64 = double(float(f27.f64 * ctx.f10.f64 + ctx.f4.f64));
	// fmadds f9,f11,f5,f9
	ctx.f9.f64 = double(float(ctx.f11.f64 * ctx.f5.f64 + ctx.f9.f64));
	// fadds f10,f10,f1
	ctx.f10.f64 = double(float(ctx.f10.f64 + ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f9,f10
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210dcc4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DCC4;
	// lfs f10,12(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,4492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f10,f10,f8
	ctx.f10.f64 = double(float(ctx.f10.f64 - ctx.f8.f64));
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lfs f8,20(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f5,36(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// lfs f4,40(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f2,52(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f3,32(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f31,56(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fsubs f10,f7,f10
	ctx.f10.f64 = double(float(ctx.f7.f64 - ctx.f10.f64));
	// lfs f7,24(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f30,48(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fmuls f10,f10,f6
	ctx.f10.f64 = double(float(ctx.f10.f64 * ctx.f6.f64));
	// lfs f6,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// fneg f10,f10
	ctx.f10.u64 = ctx.f10.u64 ^ 0x8000000000000000;
	// fmadds f9,f10,f10,f0
	ctx.f9.f64 = double(float(ctx.f10.f64 * ctx.f10.f64 + f0.f64));
	// fsqrts f9,f9
	ctx.f9.f64 = double(float(sqrt(ctx.f9.f64)));
	// fdivs f9,f0,f9
	ctx.f9.f64 = double(float(f0.f64 / ctx.f9.f64));
	// fmuls f0,f10,f9
	f0.f64 = double(float(ctx.f10.f64 * ctx.f9.f64));
	// fneg f10,f9
	ctx.f10.u64 = ctx.f9.u64 ^ 0x8000000000000000;
	// fmuls f9,f8,f10
	ctx.f9.f64 = double(float(ctx.f8.f64 * ctx.f10.f64));
	// fmuls f8,f7,f10
	ctx.f8.f64 = double(float(ctx.f7.f64 * ctx.f10.f64));
	// fmuls f7,f6,f10
	ctx.f7.f64 = double(float(ctx.f6.f64 * ctx.f10.f64));
	// fmadds f10,f5,f0,f9
	ctx.f10.f64 = double(float(ctx.f5.f64 * f0.f64 + ctx.f9.f64));
	// fmadds f9,f4,f0,f8
	ctx.f9.f64 = double(float(ctx.f4.f64 * f0.f64 + ctx.f8.f64));
	// fmadds f0,f3,f0,f7
	f0.f64 = double(float(ctx.f3.f64 * f0.f64 + ctx.f7.f64));
	// fmuls f8,f2,f10
	ctx.f8.f64 = double(float(ctx.f2.f64 * ctx.f10.f64));
	// fmuls f13,f13,f10
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f10.f64));
	// fmadds f10,f31,f9,f8
	ctx.f10.f64 = double(float(f31.f64 * ctx.f9.f64 + ctx.f8.f64));
	// fmadds f13,f12,f0,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// fmadds f0,f30,f0,f10
	f0.f64 = double(float(f30.f64 * f0.f64 + ctx.f10.f64));
	// fmadds f13,f11,f9,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f9.f64 + ctx.f13.f64));
	// fadds f0,f0,f1
	f0.f64 = double(float(f0.f64 + ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210df38
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DF38;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_8210DF38:
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed590
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210DF50) PPC_WEAK_FUNC(sub_8210DF50);
PPC_FUNC_IMPL(__imp__sub_8210DF50) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,25792(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210df70
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210DF70;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8210df74
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210DF74;
loc_8210DF70:
	// fmr f1,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f0.f64;
loc_8210DF74:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// fctiwz f0,f1
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f1.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f1.f64));
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17592
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 17592;
	// li ctx_arrow(ctx)->r10,10
	ctx_arrow(ctx)->r10.s64 = 10;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// stw ctx_arrow(ctx)->r10,17596(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 17596);
	// blr 
	return;
}

alias(__imp__sub_8210DF98) PPC_WEAK_FUNC(sub_8210DF98);
PPC_FUNC_IMPL(__imp__sub_8210DF98) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f30,-40(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -40);
	// stfd f31,-32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8238d718
	sub_8238D718(ctx, base);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r31,-31991
	ctx_arrow(ctx)->r31.s64 = -2096562176;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,96(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f12,f0
	ctx.f12.f64 = double(float(f0.f64));
	// lfs f0,12012(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f31,f12,f0
	f31.f64 = double(float(ctx.f12.f64 * f0.f64));
	// lfs f0,12008(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f30,f13,f0
	f30.f64 = double(float(ctx.f13.f64 * f0.f64));
	// bl 0x82195388
	sub_82195388(ctx, base);
	// lis ctx_arrow(ctx)->r30,-32141
	ctx_arrow(ctx)->r30.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r3,13356(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lhz ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 32);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// lhz ctx_arrow(ctx)->r10,34(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 34);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f30
	f0.f64 = double(float(f0.f64 * f30.f64));
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32);
	// lhz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 28);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r7
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32);
	// lhz ctx_arrow(ctx)->r11,30(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 30);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f30
	f0.f64 = double(float(f0.f64 * f30.f64));
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r6
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32);
	// bl 0x82195ac8
	sub_82195AC8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32122
	ctx_arrow(ctx)->r11.s64 = -2105147392;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-30736
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -30736;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f3,20(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s32;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,17456
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 + 17456;
	// lfs f2,12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r3,17424(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 17424);
	// std ctx_arrow(ctx)->r9,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfs f1,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f4,f0
	ctx.f4.f64 = double(float(f0.f64));
	// bl 0x8238b530
	sub_8238B530(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r3,17424(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,17520
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 17520;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8238add8
	sub_8238ADD8(ctx, base);
	// lwz ctx_arrow(ctx)->r3,17424(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8210d7c0
	sub_8210D7C0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8210d830
	sub_8210D830(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f30,-40(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-32(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210E158) PPC_WEAK_FUNC(sub_8210E158);
PPC_FUNC_IMPL(__imp__sub_8210E158) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// sth ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 24, ctx_arrow(ctx)->r3.u16);
	// sth ctx_arrow(ctx)->r4,26(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 26, ctx_arrow(ctx)->r4.u16);
	// blr 
	return;
}

alias(__imp__sub_8210E170) PPC_WEAK_FUNC(sub_8210E170);
PPC_FUNC_IMPL(__imp__sub_8210E170) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// sth ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 4, ctx_arrow(ctx)->r3.u16);
	// sth ctx_arrow(ctx)->r4,6(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 6, ctx_arrow(ctx)->r4.u16);
	// blr 
	return;
}

alias(__imp__sub_8210E188) PPC_WEAK_FUNC(sub_8210E188);
PPC_FUNC_IMPL(__imp__sub_8210E188) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 4);
	// blr 
	return;
}

alias(__imp__sub_8210E198) PPC_WEAK_FUNC(sub_8210E198);
PPC_FUNC_IMPL(__imp__sub_8210E198) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r3,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// blr 
	return;
}

alias(__imp__sub_8210E1A8) PPC_WEAK_FUNC(sub_8210E1A8);
PPC_FUNC_IMPL(__imp__sub_8210E1A8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r4);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// sth ctx_arrow(ctx)->r3,28(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 28, ctx_arrow(ctx)->r3.u16);
	// sth ctx_arrow(ctx)->r4,30(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 30, ctx_arrow(ctx)->r4.u16);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// frsp f1,f13
	ctx.f1.f64 = double(float(ctx.f13.f64));
	// bl 0x8210d3b8
	sub_8210D3B8(ctx, base);
	// bl 0x8210d428
	sub_8210D428(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E208) PPC_WEAK_FUNC(sub_8210E208);
PPC_FUNC_IMPL(__imp__sub_8210E208) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r3,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 28);
	// blr 
	return;
}

alias(__imp__sub_8210E218) PPC_WEAK_FUNC(sub_8210E218);
PPC_FUNC_IMPL(__imp__sub_8210E218) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r3,30(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 30);
	// blr 
	return;
}

alias(__imp__sub_8210E228) PPC_WEAK_FUNC(sub_8210E228);
PPC_FUNC_IMPL(__imp__sub_8210E228) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r4);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// sth ctx_arrow(ctx)->r3,32(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 32, ctx_arrow(ctx)->r3.u16);
	// sth ctx_arrow(ctx)->r4,34(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 34, ctx_arrow(ctx)->r4.u16);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f2,f0
	ctx.f2.f64 = double(float(f0.f64));
	// frsp f1,f13
	ctx.f1.f64 = double(float(ctx.f13.f64));
	// bl 0x8210d3f0
	sub_8210D3F0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E280) PPC_WEAK_FUNC(sub_8210E280);
PPC_FUNC_IMPL(__imp__sub_8210E280) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r3,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 32);
	// blr 
	return;
}

alias(__imp__sub_8210E290) PPC_WEAK_FUNC(sub_8210E290);
PPC_FUNC_IMPL(__imp__sub_8210E290) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820c32b8
	sub_820C32B8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 28);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,12888(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfd f0,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lhz ctx_arrow(ctx)->r3,86(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 86);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E2F0) PPC_WEAK_FUNC(sub_8210E2F0);
PPC_FUNC_IMPL(__imp__sub_8210E2F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r3,34(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 34);
	// blr 
	return;
}

alias(__imp__sub_8210E300) PPC_WEAK_FUNC(sub_8210E300);
PPC_FUNC_IMPL(__imp__sub_8210E300) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,36(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 36);
	// blr 
	return;
}

alias(__imp__sub_8210E310) PPC_WEAK_FUNC(sub_8210E310);
PPC_FUNC_IMPL(__imp__sub_8210E310) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// fmr f2,f1
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = ctx.f1.f64;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f3,12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f1,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// stfs f2,8(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// bl 0x8210d408
	sub_8210D408(&ctx);
	// bl 0x8210d428
	sub_8210D428(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E350) PPC_WEAK_FUNC(sub_8210E350);
PPC_FUNC_IMPL(__imp__sub_8210E350) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// fmr f3,f1
	ctx.fpscr.disableFlushMode();
	ctx.f3.f64 = ctx.f1.f64;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f2,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f1,16(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// stfs f3,12(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// bl 0x8210d408
	sub_8210D408(&ctx);
	// bl 0x8210d428
	sub_8210D428(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E390) PPC_WEAK_FUNC(sub_8210E390);
PPC_FUNC_IMPL(__imp__sub_8210E390) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f1,8(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_8210E3A0) PPC_WEAK_FUNC(sub_8210E3A0);
PPC_FUNC_IMPL(__imp__sub_8210E3A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// fmr f0,f2
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f2.f64;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f3,12(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,8(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// stfs f1,16(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 16);
	// stfs f0,20(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 20);
	// bl 0x8210d408
	sub_8210D408(&ctx);
	// bl 0x8210d428
	sub_8210D428(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E3E0) PPC_WEAK_FUNC(sub_8210E3E0);
PPC_FUNC_IMPL(__imp__sub_8210E3E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,16(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lfs f0,20(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,4(ctx_arrow(ctx)->r3)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// blr 
	return;
}

alias(__imp__sub_8210E400) PPC_WEAK_FUNC(sub_8210E400);
PPC_FUNC_IMPL(__imp__sub_8210E400) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x820c32b8
	sub_820C32B8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,-10932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 28);
	// lhz ctx_arrow(ctx)->r9,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 32);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r10);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f0,12888(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32;
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfd f0,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lhz ctx_arrow(ctx)->r10,86(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 86);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// addze ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	temp.s64 = ctx_arrow(ctx)->r11.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = temp.s64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// extsh ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E480) PPC_WEAK_FUNC(sub_8210E480);
PPC_FUNC_IMPL(__imp__sub_8210E480) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r8,-32010
	ctx_arrow(ctx)->r8.s64 = -2097807360;
	// lbz ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r7,-32010
	ctx_arrow(ctx)->r7.s64 = -2097807360;
	// lhz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 0);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,21312
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r7.s64 + 21312;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,17,15,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 17) & 0x1FFFF;
	// lwz ctx_arrow(ctx)->r10,21384(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x7;
	// stw ctx_arrow(ctx)->r7,21384(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 21384);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r7.u64;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,17
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0x7FFF;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// beq ctx_arrow(ctx)->r6,0x8210e4e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210E4E0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,48
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 + 48;
loc_8210E4E0:
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,112
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r4.s64 + 112;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,25796
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + 25796;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,97
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 97;
	// li ctx_arrow(ctx)->r4,9
	ctx_arrow(ctx)->r4.s64 = 9;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823eea88
	sub_823EEA88(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210E518) PPC_WEAK_FUNC(sub_8210E518);
PPC_FUNC_IMPL(__imp__sub_8210E518) {
	PPC_FUNC_PROLOGUE();
	// b 0x8210e480
	sub_8210E480(ctx, base);
	return;
}

alias(__imp__sub_8210E520) PPC_WEAK_FUNC(sub_8210E520);
PPC_FUNC_IMPL(__imp__sub_8210E520) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r23,-32010
	ctx_arrow(ctx)->r23.s64 = -2097807360;
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,17616
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 17616;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r10,139
	ctx_arrow(ctx)->r10.s64 = 139;
	// stw ctx_arrow(ctx)->r25,17608(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 17608);
	// mtctr ctx_arrow(ctx)->r10
	ctr.u64 = ctx_arrow(ctx)->r10.u64;
loc_8210E54C:
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bdnz 0x8210e54c
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8210E54C;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210e708
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210E708;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r7,255
	ctx_arrow(ctx)->r7.s64 = 255;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,-10892
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + -10892;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r27,32767
	ctx_arrow(ctx)->r27.s64 = 32767;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,19600
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 19600;
	// li ctx_arrow(ctx)->r28,-32768
	ctx_arrow(ctx)->r28.s64 = -32768;
loc_8210E58C:
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r7.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210e5f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210E5F0;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r25.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210e5b0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210E5B0;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// stw ctx_arrow(ctx)->r25,17608(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 17608);
loc_8210E5B0:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// stwx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r26.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s64 + 10;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9,6
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r9.s64 + 6;
	// sthx ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r27, 0);
	// sthx ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r5.u32, ctx_arrow(ctx)->r27, 0);
	// sthx ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r27, 0);
	// sthx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r28, 0);
	// sthx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r28, 0);
	// sthx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r28, 0);
loc_8210E5F0:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r6.u32 + 6);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFF000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210e6e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210E6E8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,6
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r9.s64 + 6;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,10
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 10;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 + 10;
loc_8210E628:
	// lhz ctx_arrow(ctx)->r8,-2(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + -2);
	// lhzx ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r22.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// extsh ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r22.s64 = PPCRegister_s16(ctx_arrow(ctx)->r22);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r21.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8210e644
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210E644;
	// sthx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r8.u16);
loc_8210E644:
	// lhz ctx_arrow(ctx)->r8,-2(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + -2);
	// lhzx ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r22.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32);
	// extsh ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r22.s64 = PPCRegister_s16(ctx_arrow(ctx)->r22);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r21.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x8210e660
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210E660;
	// sthx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r8.u16);
loc_8210E660:
	// lhz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 0);
	// lhzx ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r22.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// extsh ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r22.s64 = PPCRegister_s16(ctx_arrow(ctx)->r22);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r21.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8210e67c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210E67C;
	// sthx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r8.u16);
loc_8210E67C:
	// lhz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 0);
	// lhzx ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r22.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
	// extsh ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r22.s64 = PPCRegister_s16(ctx_arrow(ctx)->r22);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r21.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x8210e698
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210E698;
	// sthx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r8.u16);
loc_8210E698:
	// lhz ctx_arrow(ctx)->r8,2(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 2);
	// lhzx ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r22.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r4.u32);
	// extsh ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r22.s64 = PPCRegister_s16(ctx_arrow(ctx)->r22);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r21.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8210e6b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210E6B4;
	// sthx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r8.u16);
loc_8210E6B4:
	// lhz ctx_arrow(ctx)->r8,2(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 2);
	// lhzx ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r22.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r5.u32);
	// extsh ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r22.s64 = PPCRegister_s16(ctx_arrow(ctx)->r22);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r21.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x8210e6d0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210E6D0;
	// sthx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r5.u32, ctx_arrow(ctx)->r8.u16);
loc_8210E6D0:
	// lhz ctx_arrow(ctx)->r8,6(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r6.u32 + 6);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,20,12,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 20) & 0xFFFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r8.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210e628
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210E628;
loc_8210E6E8:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r6.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210e58c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210E58C;
loc_8210E708:
	// b 0x823ed16c
	return;
}

alias(__imp__sub_8210E710) PPC_WEAK_FUNC(sub_8210E710);
PPC_FUNC_IMPL(__imp__sub_8210E710) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 8;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32 >> 4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,3,25,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,25,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// lhz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 8);
	// std ctx_arrow(ctx)->r8,-32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// std ctx_arrow(ctx)->r7,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r8,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// lfd f0,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,-24(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// lfd f12,-16(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// fadds f0,f0,f13
	f0.f64 = double(float(f0.f64 + ctx.f13.f64));
	// fadds f13,f0,f12
	ctx.f13.f64 = double(float(f0.f64 + ctx.f12.f64));
	// lfs f0,25808(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r8,-32141
	ctx_arrow(ctx)->r8.s64 = -2106392576;
	// fmuls f12,f13,f0
	ctx.f12.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f13,-10896(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f12,f12,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// stfs f12,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lhz ctx_arrow(ctx)->r8,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// lhz ctx_arrow(ctx)->r7,10(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 10);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// lhz ctx_arrow(ctx)->r6,10(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 10);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// std ctx_arrow(ctx)->r8,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// std ctx_arrow(ctx)->r7,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r6,-32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// lfd f12,-16(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f11,-24(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f10,-32(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// fadds f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 + ctx.f11.f64));
	// fadds f12,f12,f10
	ctx.f12.f64 = double(float(ctx.f12.f64 + ctx.f10.f64));
	// fmuls f12,f12,f0
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f12,f12,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// stfs f12,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// lfd f12,-16(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lfd f10,-24(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// lfd f11,-16(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fadds f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 + ctx.f11.f64));
	// fadds f12,f12,f10
	ctx.f12.f64 = double(float(ctx.f12.f64 + ctx.f10.f64));
	// fmuls f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210E868) PPC_WEAK_FUNC(sub_8210E868);
PPC_FUNC_IMPL(__imp__sub_8210E868) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 2) & 0xFFFFFFFC;
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 8;
	ctx_arrow(ctx)->r11.s64 = 8 - ctx_arrow(ctx)->r11.s64;
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// sraw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r11.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & (((ctx_arrow(ctx)->r10.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r10.s32);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s32 >> temp.u32;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,-10896(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lhz ctx_arrow(ctx)->r10,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// bl 0x8210e710
	sub_8210E710(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f9,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f7,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f11,0(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f0,14064(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f10,4(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f8,8(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f13,13964(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f12,f12,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fmuls f9,f9,f13
	ctx.f9.f64 = double(float(ctx.f9.f64 * ctx.f13.f64));
	// fmuls f13,f7,f13
	ctx.f13.f64 = double(float(ctx.f7.f64 * ctx.f13.f64));
	// fmadds f12,f11,f0,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 * f0.f64 + ctx.f12.f64));
	// stfs f12,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// fmadds f12,f10,f0,f9
	ctx.f12.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f9.f64));
	// stfs f12,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// fmadds f0,f8,f0,f13
	f0.f64 = double(float(ctx.f8.f64 * f0.f64 + ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210E960) PPC_WEAK_FUNC(sub_8210E960);
PPC_FUNC_IMPL(__imp__sub_8210E960) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,20,12,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 20) & 0xFFFFF;
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 1);
	// divw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s32 = ctx_arrow(ctx)->r8.s32 / ctx_arrow(ctx)->r7.s32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r10.s32) * int64_t(ctx_arrow(ctx)->r7.s32);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u64 & ~ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// twlgei ctx_arrow(ctx)->r9,-1
	// twllei ctx_arrow(ctx)->r7,0
	// lhz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lhz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// lhz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r9.s64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r8.s64;
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32;
	// extsw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s32;
	// std ctx_arrow(ctx)->r9,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// std ctx_arrow(ctx)->r8,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// lfs f11,2688(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfd f0,-16(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,-8(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f12,f0,f0
	ctx.f12.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f12,f13,f13,f12
	ctx.f12.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// bne ctx_arrow(ctx)->r6,0x8210ea50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210EA50;
	// lhz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f0,-8(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fsubs f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 - f0.f64));
	// fsubs f13,f2,f13
	ctx.f13.f64 = double(float(ctx.f2.f64 - ctx.f13.f64));
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f0,f13,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + f0.f64));
	// fsqrts f1,f0
	ctx.f1.f64 = double(float(sqrt(f0.f64)));
	// blr 
	return;
loc_8210EA50:
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// fneg f0,f0
	ctx.fpscr.disableFlushMode();
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f11,-8(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f10,-16(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// fsubs f11,f1,f11
	ctx.f11.f64 = double(float(ctx.f1.f64 - ctx.f11.f64));
	// fsubs f10,f2,f10
	ctx.f10.f64 = double(float(ctx.f2.f64 - ctx.f10.f64));
	// fmuls f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fmadds f0,f10,f0,f13
	f0.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f13.f64));
	// fdivs f1,f0,f12
	ctx.f1.f64 = double(float(f0.f64 / ctx.f12.f64));
	// blr 
	return;
}

alias(__imp__sub_8210EAA0) PPC_WEAK_FUNC(sub_8210EAA0);
PPC_FUNC_IMPL(__imp__sub_8210EAA0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 2, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// bne ctx_arrow(ctx)->r6,0x8210eab0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210EAB0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8210EAB0:
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r10);
	// subfic ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,8
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 8;
	ctx_arrow(ctx)->r10.s64 = 8 - ctx_arrow(ctx)->r9.s64;
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// sraw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & (((ctx_arrow(ctx)->r11.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r11.s32);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> temp.u32;
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,8
	xer.ca = ctx_arrow(ctx)->r8.u32 <= 8;
	ctx_arrow(ctx)->r9.s64 = 8 - ctx_arrow(ctx)->r8.s64;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// sraw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & (((ctx_arrow(ctx)->r11.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r11.s32);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32 >> temp.u32;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,3,25,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lhz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// lhz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r9.s64;
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r8.s64;
	// extsw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s32;
	// std ctx_arrow(ctx)->r9,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// std ctx_arrow(ctx)->r8,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// lfs f11,2688(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfd f0,-16(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,-8(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f12,f0,f0
	ctx.f12.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f12,f13,f13,f12
	ctx.f12.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// bne ctx_arrow(ctx)->r6,0x8210eb9c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210EB9C;
	// lhz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f0,-8(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fsubs f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 - f0.f64));
	// fsubs f13,f2,f13
	ctx.f13.f64 = double(float(ctx.f2.f64 - ctx.f13.f64));
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f0,f13,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + f0.f64));
	// fsqrts f1,f0
	ctx.f1.f64 = double(float(sqrt(f0.f64)));
	// blr 
	return;
loc_8210EB9C:
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// fneg f0,f0
	ctx.fpscr.disableFlushMode();
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f11,-8(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f10,-16(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// fsubs f11,f1,f11
	ctx.f11.f64 = double(float(ctx.f1.f64 - ctx.f11.f64));
	// fsubs f10,f2,f10
	ctx.f10.f64 = double(float(ctx.f2.f64 - ctx.f10.f64));
	// fmuls f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fmadds f0,f10,f0,f13
	f0.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f13.f64));
	// fdivs f1,f0,f12
	ctx.f1.f64 = double(float(f0.f64 / ctx.f12.f64));
	// blr 
	return;
}

alias(__imp__sub_8210EBE8) PPC_WEAK_FUNC(sub_8210EBE8);
PPC_FUNC_IMPL(__imp__sub_8210EBE8) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 1);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,20,12,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 20) & 0xFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u64 & ~ctx_arrow(ctx)->r9.u64;
	// divw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s32 = ctx_arrow(ctx)->r8.s32 / ctx_arrow(ctx)->r7.s32;
	// twlgei ctx_arrow(ctx)->r9,-1
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r10.s32) * int64_t(ctx_arrow(ctx)->r7.s32);
	// lhz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// twllei ctx_arrow(ctx)->r7,0
	// std ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// std ctx_arrow(ctx)->r9,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// lfd f13,-8(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// lfd f0,-16(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fsubs f12,f1,f0
	ctx.f12.f64 = double(float(ctx.f1.f64 - f0.f64));
	// fsubs f11,f2,f13
	ctx.f11.f64 = double(float(ctx.f2.f64 - ctx.f13.f64));
	// lfd f10,-8(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// lfd f9,-16(ctx_arrow(ctx)->r1)
	ctx.f9.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f9,f9
	ctx.f9.f64 = double(ctx.f9.s64);
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// frsp f9,f9
	ctx.f9.f64 = double(float(ctx.f9.f64));
	// fsubs f0,f10,f0
	f0.f64 = double(float(ctx.f10.f64 - f0.f64));
	// fsubs f13,f9,f13
	ctx.f13.f64 = double(float(ctx.f9.f64 - ctx.f13.f64));
	// fmuls f12,f12,f0
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f10,f0,f0
	ctx.f10.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f0,f11,f13,f12
	f0.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + ctx.f12.f64));
	// lfs f12,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f13,f13,f13,f10
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ecbc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210ECBC;
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// blt ctx_arrow(ctx)->r6,0x8210eccc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210ECCC;
loc_8210ECBC:
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x8210ecd4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210ECD4;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ecd4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210ECD4;
loc_8210ECCC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
loc_8210ECD4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_8210ECE0) PPC_WEAK_FUNC(sub_8210ECE0);
PPC_FUNC_IMPL(__imp__sub_8210ECE0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10896
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10896;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lfs f7,2688(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lfs f0,-4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f8,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fmuls f2,f0,f2
	ctx.f2.f64 = double(float(f0.f64 * ctx.f2.f64));
	// fmuls f9,f0,f1
	ctx.f9.f64 = double(float(f0.f64 * ctx.f1.f64));
loc_8210ED10:
	// fmr f1,f9
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f9.f64;
	// bl 0x8210eaa0
	sub_8210EAA0(ctx, base);
	// fmuls f0,f1,f8
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64 * ctx.f8.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f7
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f7.f64);
	// blt ctx_arrow(ctx)->r6,0x8210ed44
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210ED44;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8210ed10
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210ED10;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_8210ED44:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210ED58) PPC_WEAK_FUNC(sub_8210ED58);
PPC_FUNC_IMPL(__imp__sub_8210ED58) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 2, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// bne ctx_arrow(ctx)->r6,0x8210ed68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210ED68;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8210ED68:
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r10);
	// subfic ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,8
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 8;
	ctx_arrow(ctx)->r10.s64 = 8 - ctx_arrow(ctx)->r9.s64;
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// sraw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & (((ctx_arrow(ctx)->r11.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r11.s32);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> temp.u32;
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,8
	xer.ca = ctx_arrow(ctx)->r8.u32 <= 8;
	ctx_arrow(ctx)->r9.s64 = 8 - ctx_arrow(ctx)->r8.s64;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// sraw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & (((ctx_arrow(ctx)->r11.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r11.s32);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32 >> temp.u32;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,3,25,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// lhz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r9.s64;
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r8.s64;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// std ctx_arrow(ctx)->r9,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// std ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f11,2688(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfd f0,-16(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,-8(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f12,f0,f0
	ctx.f12.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f12,f13,f13,f12
	ctx.f12.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// bne ctx_arrow(ctx)->r6,0x8210ee14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210EE14;
	// fmr f1,f11
	ctx.f1.f64 = ctx.f11.f64;
	// blr 
	return;
loc_8210EE14:
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// fneg f0,f0
	ctx.fpscr.disableFlushMode();
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f11,-8(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f10,-16(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// fsubs f11,f1,f11
	ctx.f11.f64 = double(float(ctx.f1.f64 - ctx.f11.f64));
	// fsubs f10,f2,f10
	ctx.f10.f64 = double(float(ctx.f2.f64 - ctx.f10.f64));
	// fmuls f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fmadds f0,f10,f0,f13
	f0.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f13.f64));
	// fdivs f1,f0,f12
	ctx.f1.f64 = double(float(f0.f64 / ctx.f12.f64));
	// blr 
	return;
}

alias(__imp__sub_8210EE60) PPC_WEAK_FUNC(sub_8210EE60);
PPC_FUNC_IMPL(__imp__sub_8210EE60) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lfs f0,-10900(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f9,f0,f1
	ctx.f9.f64 = double(float(f0.f64 * ctx.f1.f64));
	// fmuls f2,f0,f2
	ctx.f2.f64 = double(float(f0.f64 * ctx.f2.f64));
	// lfs f8,14264(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
loc_8210EE88:
	// fmr f1,f9
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f9.f64;
	// bl 0x8210ed58
	sub_8210ED58(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f1,f8
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, ctx.f8.f64);
	// blt ctx_arrow(ctx)->r6,0x8210eeb8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EEB8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8210ee88
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EE88;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_8210EEB8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210EED0) PPC_WEAK_FUNC(sub_8210EED0);
PPC_FUNC_IMPL(__imp__sub_8210EED0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed544
	// fsubs f31,f1,f5
	ctx.fpscr.disableFlushMode();
	f31.f64 = double(float(ctx.f1.f64 - ctx.f5.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f30,f2,f6
	f30.f64 = double(float(ctx.f2.f64 - ctx.f6.f64));
	// fsubs f0,f3,f1
	f0.f64 = double(float(ctx.f3.f64 - ctx.f1.f64));
	// fsubs f13,f4,f2
	ctx.f13.f64 = double(float(ctx.f4.f64 - ctx.f2.f64));
	// fsubs f29,f7,f5
	f29.f64 = double(float(ctx.f7.f64 - ctx.f5.f64));
	// lfs f27,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// fsubs f28,f8,f6
	f28.f64 = double(float(ctx.f8.f64 - ctx.f6.f64));
	// fneg f12,f31
	ctx.f12.u64 = f31.u64 ^ 0x8000000000000000;
	// fneg f11,f30
	ctx.f11.u64 = f30.u64 ^ 0x8000000000000000;
	// fmuls f10,f12,f13
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fmuls f9,f11,f0
	ctx.f9.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f9,f10
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f10.f64);
	// ble ctx_arrow(ctx)->r6,0x8210ef20
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210EF20;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210ef6c
	goto loc_8210EF6C;
loc_8210EF20:
	// fcmpu ctx_arrow(ctx)->r6,f9,f10
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f10.f64);
	// blt ctx_arrow(ctx)->r6,0x8210ef68
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EF68;
	// fmuls f10,f12,f0
	ctx.f10.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210ef68
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EF68;
	// fmuls f10,f11,f13
	ctx.f10.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210ef68
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EF68;
	// fmuls f10,f0,f0
	ctx.f10.f64 = double(float(f0.f64 * f0.f64));
	// fmuls f11,f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f11.f64));
	// fmadds f10,f13,f13,f10
	ctx.f10.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f12,f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f12
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f12.f64);
	// bge ctx_arrow(ctx)->r6,0x8210ef60
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210EF60;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210ef6c
	goto loc_8210EF6C;
loc_8210EF60:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8210ef6c
	goto loc_8210EF6C;
loc_8210EF68:
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
loc_8210EF6C:
	// fsubs f12,f8,f2
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f8.f64 - ctx.f2.f64));
	// fsubs f11,f7,f1
	ctx.f11.f64 = double(float(ctx.f7.f64 - ctx.f1.f64));
	// fmuls f10,f12,f0
	ctx.f10.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f9,f11,f13
	ctx.f9.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f9
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f9.f64);
	// ble ctx_arrow(ctx)->r6,0x8210ef8c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210EF8C;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210efd8
	goto loc_8210EFD8;
loc_8210EF8C:
	// fcmpu ctx_arrow(ctx)->r6,f10,f9
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f9.f64);
	// blt ctx_arrow(ctx)->r6,0x8210efd4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EFD4;
	// fmuls f10,f11,f0
	ctx.f10.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210efd4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EFD4;
	// fmuls f10,f12,f13
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210efd4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210EFD4;
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmuls f12,f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f12.f64));
	// fmadds f0,f13,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f13,f11,f11,f12
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f11.f64 + ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210efcc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210EFCC;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210efd8
	goto loc_8210EFD8;
loc_8210EFCC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8210efd8
	goto loc_8210EFD8;
loc_8210EFD4:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
loc_8210EFD8:
	// mullw. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bgt 0x8210f0bc
	if (ctx_arrow(ctx)->r0.gt()) goto loc_8210F0BC;
	// fmuls f0,f29,f30
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f29.f64 * f30.f64));
	// fmuls f13,f28,f31
	ctx.f13.f64 = double(float(f28.f64 * f31.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x8210eff8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210EFF8;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210f044
	goto loc_8210F044;
loc_8210EFF8:
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f040
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F040;
	// fmuls f0,f29,f31
	f0.f64 = double(float(f29.f64 * f31.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f27
	ctx_arrow(ctx)->r6.compare(f0.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f040
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F040;
	// fmuls f0,f28,f30
	f0.f64 = double(float(f28.f64 * f30.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f27
	ctx_arrow(ctx)->r6.compare(f0.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f040
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F040;
	// fmuls f0,f29,f29
	f0.f64 = double(float(f29.f64 * f29.f64));
	// fmuls f13,f31,f31
	ctx.f13.f64 = double(float(f31.f64 * f31.f64));
	// fmadds f0,f28,f28,f0
	f0.f64 = double(float(f28.f64 * f28.f64 + f0.f64));
	// fmadds f13,f30,f30,f13
	ctx.f13.f64 = double(float(f30.f64 * f30.f64 + ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f038
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F038;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210f044
	goto loc_8210F044;
loc_8210F038:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8210f044
	goto loc_8210F044;
loc_8210F040:
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
loc_8210F044:
	// fsubs f0,f4,f6
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f4.f64 - ctx.f6.f64));
	// fsubs f13,f3,f5
	ctx.f13.f64 = double(float(ctx.f3.f64 - ctx.f5.f64));
	// fmuls f12,f0,f29
	ctx.f12.f64 = double(float(f0.f64 * f29.f64));
	// fmuls f11,f13,f28
	ctx.f11.f64 = double(float(ctx.f13.f64 * f28.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x8210f064
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F064;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210f0b0
	goto loc_8210F0B0;
loc_8210F064:
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f0ac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F0AC;
	// fmuls f12,f13,f29
	ctx.f12.f64 = double(float(ctx.f13.f64 * f29.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f27
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f0ac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F0AC;
	// fmuls f12,f0,f28
	ctx.f12.f64 = double(float(f0.f64 * f28.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f27
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f0ac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F0AC;
	// fmuls f12,f29,f29
	ctx.f12.f64 = double(float(f29.f64 * f29.f64));
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f12,f28,f28,f12
	ctx.f12.f64 = double(float(f28.f64 * f28.f64 + ctx.f12.f64));
	// fmadds f0,f13,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f0a4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F0A4;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210f0b0
	goto loc_8210F0B0;
loc_8210F0A4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8210f0b0
	goto loc_8210F0B0;
loc_8210F0AC:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
loc_8210F0B0:
	// mullw. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// ble 0x8210f0c0
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_8210F0C0;
loc_8210F0BC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8210F0C0:
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed590
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210F0D8) PPC_WEAK_FUNC(sub_8210F0D8);
PPC_FUNC_IMPL(__imp__sub_8210F0D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed544
	// fsubs f31,f1,f5
	ctx.fpscr.disableFlushMode();
	f31.f64 = double(float(ctx.f1.f64 - ctx.f5.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f30,f2,f6
	f30.f64 = double(float(ctx.f2.f64 - ctx.f6.f64));
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// fsubs f0,f3,f1
	f0.f64 = double(float(ctx.f3.f64 - ctx.f1.f64));
	// fsubs f13,f4,f2
	ctx.f13.f64 = double(float(ctx.f4.f64 - ctx.f2.f64));
	// fsubs f29,f7,f5
	f29.f64 = double(float(ctx.f7.f64 - ctx.f5.f64));
	// lfs f27,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// fsubs f28,f8,f6
	f28.f64 = double(float(ctx.f8.f64 - ctx.f6.f64));
	// fneg f12,f31
	ctx.f12.u64 = f31.u64 ^ 0x8000000000000000;
	// fneg f11,f30
	ctx.f11.u64 = f30.u64 ^ 0x8000000000000000;
	// fmuls f10,f12,f13
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fmuls f9,f11,f0
	ctx.f9.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f9,f10
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f10.f64);
	// ble ctx_arrow(ctx)->r6,0x8210f12c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F12C;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210f178
	goto loc_8210F178;
loc_8210F12C:
	// fcmpu ctx_arrow(ctx)->r6,f9,f10
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f10.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f174
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F174;
	// fmuls f10,f12,f0
	ctx.f10.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f174
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F174;
	// fmuls f10,f11,f13
	ctx.f10.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f174
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F174;
	// fmuls f10,f0,f0
	ctx.f10.f64 = double(float(f0.f64 * f0.f64));
	// fmuls f11,f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f11.f64));
	// fmadds f10,f13,f13,f10
	ctx.f10.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f10.f64));
	// fmadds f12,f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + ctx.f11.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f12
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f12.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f16c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F16C;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210f178
	goto loc_8210F178;
loc_8210F16C:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8210f178
	goto loc_8210F178;
loc_8210F174:
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
loc_8210F178:
	// fsubs f12,f8,f2
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f8.f64 - ctx.f2.f64));
	// fsubs f11,f7,f1
	ctx.f11.f64 = double(float(ctx.f7.f64 - ctx.f1.f64));
	// fmuls f10,f12,f0
	ctx.f10.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f9,f11,f13
	ctx.f9.f64 = double(float(ctx.f11.f64 * ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f9
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f9.f64);
	// ble ctx_arrow(ctx)->r6,0x8210f198
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F198;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210f1e4
	goto loc_8210F1E4;
loc_8210F198:
	// fcmpu ctx_arrow(ctx)->r6,f10,f9
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f9.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f1e0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F1E0;
	// fmuls f10,f11,f0
	ctx.f10.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f1e0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F1E0;
	// fmuls f10,f12,f13
	ctx.f10.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f27
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f1e0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F1E0;
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmuls f12,f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f12.f64));
	// fmadds f0,f13,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f13,f11,f11,f12
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f11.f64 + ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f1d8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F1D8;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210f1e4
	goto loc_8210F1E4;
loc_8210F1D8:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8210f1e4
	goto loc_8210F1E4;
loc_8210F1E0:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
loc_8210F1E4:
	// fmuls f0,f29,f30
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f29.f64 * f30.f64));
	// mullw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// fmuls f13,f28,f31
	ctx.f13.f64 = double(float(f28.f64 * f31.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x8210f200
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F200;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210f24c
	goto loc_8210F24C;
loc_8210F200:
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f248
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F248;
	// fmuls f0,f29,f31
	f0.f64 = double(float(f29.f64 * f31.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f27
	ctx_arrow(ctx)->r6.compare(f0.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f248
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F248;
	// fmuls f0,f28,f30
	f0.f64 = double(float(f28.f64 * f30.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f27
	ctx_arrow(ctx)->r6.compare(f0.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f248
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F248;
	// fmuls f0,f29,f29
	f0.f64 = double(float(f29.f64 * f29.f64));
	// fmuls f13,f31,f31
	ctx.f13.f64 = double(float(f31.f64 * f31.f64));
	// fmadds f0,f28,f28,f0
	f0.f64 = double(float(f28.f64 * f28.f64 + f0.f64));
	// fmadds f13,f30,f30,f13
	ctx.f13.f64 = double(float(f30.f64 * f30.f64 + ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f240
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F240;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x8210f24c
	goto loc_8210F24C;
loc_8210F240:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8210f24c
	goto loc_8210F24C;
loc_8210F248:
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
loc_8210F24C:
	// fsubs f0,f4,f6
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f4.f64 - ctx.f6.f64));
	// fsubs f13,f3,f5
	ctx.f13.f64 = double(float(ctx.f3.f64 - ctx.f5.f64));
	// fmuls f12,f0,f29
	ctx.f12.f64 = double(float(f0.f64 * f29.f64));
	// fmuls f11,f13,f28
	ctx.f11.f64 = double(float(ctx.f13.f64 * f28.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x8210f26c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F26C;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210f2b8
	goto loc_8210F2B8;
loc_8210F26C:
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f2b4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F2B4;
	// fmuls f12,f13,f29
	ctx.f12.f64 = double(float(ctx.f13.f64 * f29.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f27
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f2b4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F2B4;
	// fmuls f12,f0,f28
	ctx.f12.f64 = double(float(f0.f64 * f28.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f27
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f27.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f2b4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F2B4;
	// fmuls f12,f29,f29
	ctx.f12.f64 = double(float(f29.f64 * f29.f64));
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f12,f28,f28,f12
	ctx.f12.f64 = double(float(f28.f64 * f28.f64 + ctx.f12.f64));
	// fmadds f0,f13,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f2ac
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F2AC;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8210f2b8
	goto loc_8210F2B8;
loc_8210F2AC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8210f2b8
	goto loc_8210F2B8;
loc_8210F2B4:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
loc_8210F2B8:
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// lwz ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210f2cc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F2CC;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8210F2CC:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210f2d8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F2D8;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8210F2D8:
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed590
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8210F2F0) PPC_WEAK_FUNC(sub_8210F2F0);
PPC_FUNC_IMPL(__imp__sub_8210F2F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-152
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -152;
	// bl 0x823ed53c
	// stwu ctx_arrow(ctx)->r1,-352(ctx_arrow(ctx)->r1)
	ea = -352 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f29,f1
	ctx.fpscr.disableFlushMode();
	f29.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// fmr f31,f2
	f31.f64 = ctx.f2.f64;
	// fmr f28,f3
	f28.f64 = ctx.f3.f64;
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r8.u64;
	// fmr f30,f4
	f30.f64 = ctx.f4.f64;
	// mr ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r21.s64 = 0;
	// lwz ctx_arrow(ctx)->r10,21292(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r14,0
	ctx_arrow(ctx)->r14.s64 = 0;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// beq ctx_arrow(ctx)->r6,0x8210f3b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F3B0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// stfs f29,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(f29.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// stfs f31,104(ctx_arrow(ctx)->r1)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stfs f28,112(ctx_arrow(ctx)->r1)
	temp.f32 = float(f28.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// stfs f30,120(ctx_arrow(ctx)->r1)
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// bl 0x8210e480
	sub_8210E480(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f1,f29
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f29.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25904
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 25904;
	// stfd f1,64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 64);
	// stfd f2,72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 72);
	// fmr f3,f28
	ctx.f3.f64 = f28.f64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// fmr f4,f30
	ctx.f4.f64 = f30.f64;
	// lwz ctx_arrow(ctx)->r5,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// stfd f3,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwz ctx_arrow(ctx)->r6,104(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// stfd f4,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r7,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r10,72(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_8210F3B0:
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r17,-32010
	ctx_arrow(ctx)->r17.s64 = -2097807360;
	// lfs f0,-10900(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f31,f0,f31
	f31.f64 = double(float(f0.f64 * f31.f64));
	// lfs f25,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f25.f64 = double(temp.f32);
	// fmuls f30,f0,f30
	f30.f64 = double(float(f0.f64 * f30.f64));
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,25796
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 25796;
	// fmuls f29,f0,f29
	f29.f64 = double(float(f0.f64 * f29.f64));
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// fmuls f28,f0,f28
	f28.f64 = double(float(f0.f64 * f28.f64));
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,21312
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 21312;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,25844
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r11.s64 + 25844;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,25840
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + 25840;
	// fsubs f0,f30,f31
	f0.f64 = double(float(f30.f64 - f31.f64));
	// fsubs f27,f28,f29
	f27.f64 = double(float(f28.f64 - f29.f64));
	// fneg f26,f0
	f26.u64 = f0.u64 ^ 0x8000000000000000;
loc_8210F404:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r16.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f420
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F420;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r15.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// mtctr ctx_arrow(ctx)->r16
	ctr.u64 = ctx_arrow(ctx)->r16.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8210F420:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r25.u32 + 6);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8210f5a4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F5A4;
	// lwz ctx_arrow(ctx)->r30,21276(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25,14
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r25.s64 + 14;
loc_8210F440:
	// lhz ctx_arrow(ctx)->r11,-6(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r8.u32 + -6);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// lhz ctx_arrow(ctx)->r9,-2(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r8.u32 + -2);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,-6
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + -6;
	// extsh ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// divw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.s32 = ctx_arrow(ctx)->r7.s32 / ctx_arrow(ctx)->r6.s32;
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r6.s32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r11.s64;
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 1);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r25.u64;
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 & ~ctx_arrow(ctx)->r9.u64;
	// twllei ctx_arrow(ctx)->r6,0
	// twlgei ctx_arrow(ctx)->r9,-1
	// lhz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// extsh ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r5.s64;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r4.s64;
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32;
	// extsw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s32;
	// std ctx_arrow(ctx)->r9,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// std ctx_arrow(ctx)->r5,112(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,112(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f0,f26
	f0.f64 = double(float(f0.f64 * f26.f64));
	// fmadds f0,f13,f27,f0
	f0.f64 = double(float(ctx.f13.f64 * f27.f64 + f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f25
	ctx_arrow(ctx)->r6.compare(f0.f64, f25.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210f594
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210F594;
	// lhz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// fmr f4,f30
	ctx.f4.f64 = f30.f64;
	// lhz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r4.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 4);
	// fmr f3,f28
	ctx.f3.f64 = f28.f64;
	// lhz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 0);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r4, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// lhz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r8.u32 + 0);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// std ctx_arrow(ctx)->r9,104(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// std ctx_arrow(ctx)->r4,128(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,28,4,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 28) & 0xFFFFFFF;
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r10,136(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r4.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lfd f0,104(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f12,128(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,96(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lfd f11,136(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f8,f0
	ctx.f8.f64 = double(float(f0.f64));
	// frsp f6,f12
	ctx.f6.f64 = double(float(ctx.f12.f64));
	// frsp f7,f13
	ctx.f7.f64 = double(float(ctx.f13.f64));
	// frsp f5,f11
	ctx.f5.f64 = double(float(ctx.f11.f64));
	// bl 0x8210f0d8
	sub_8210F0D8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f594
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F594;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f590
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F590;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r23.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f590
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F590;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// bne ctx_arrow(ctx)->r6,0x8210f58c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210F58C;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
loc_8210F58C:
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r31.u64;
loc_8210F590:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
loc_8210F594:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r7.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 8;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, ctx_arrow(ctx)->r6.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210f440
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F440;
loc_8210F5A4:
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, ctx_arrow(ctx)->r24.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8210f5b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210F5B8;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
loc_8210F5B8:
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r24.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f77c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F77C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x8210f760
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210F760;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f638
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F638;
	// lwz ctx_arrow(ctx)->r10,21384(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// lhz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r24.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x7;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,17,15,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 17) & 0x1FFFF;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,17
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0x7FFF;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r8,21384(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21384);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// beq ctx_arrow(ctx)->r6,0x8210f618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F618;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,48
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 + 48;
loc_8210F618:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,97
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 97;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,112
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 112;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r22.u64;
	// li ctx_arrow(ctx)->r4,9
	ctx_arrow(ctx)->r4.s64 = 9;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823eea88
	sub_823EEA88(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
	// b 0x8210f63c
	goto loc_8210F63C;
loc_8210F638:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r20.u64;
loc_8210F63C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f6a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F6A8;
	// lwz ctx_arrow(ctx)->r10,21384(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// lhz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r26.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x7;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,17,15,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 17) & 0x1FFFF;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,17
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0x7FFF;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r8,21384(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21384);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// beq ctx_arrow(ctx)->r6,0x8210f688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F688;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,48
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 + 48;
loc_8210F688:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,97
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 97;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,112
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 112;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r22.u64;
	// li ctx_arrow(ctx)->r4,9
	ctx_arrow(ctx)->r4.s64 = 9;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823eea88
	sub_823EEA88(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r31.u64;
	// b 0x8210f6ac
	goto loc_8210F6AC;
loc_8210F6A8:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r20.u64;
loc_8210F6AC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f718
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F718;
	// lwz ctx_arrow(ctx)->r10,21384(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// lhz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r23.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x7;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,17,15,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 17) & 0x1FFFF;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,17
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0x7FFF;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r8,21384(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21384);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// beq ctx_arrow(ctx)->r6,0x8210f6f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F6F8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,48
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 + 48;
loc_8210F6F8:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,97
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 97;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,112
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 112;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r22.u64;
	// li ctx_arrow(ctx)->r4,9
	ctx_arrow(ctx)->r4.s64 = 9;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823eea88
	sub_823EEA88(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r31.u64;
	// b 0x8210f71c
	goto loc_8210F71C;
loc_8210F718:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r20.u64;
loc_8210F71C:
	// fmr f4,f30
	ctx.fpscr.disableFlushMode();
	ctx.f4.f64 = f30.f64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f3,f28
	ctx.f3.f64 = f28.f64;
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r19.u64;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// stfd f4,56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 56);
	// stfd f3,48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 48);
	// ld ctx_arrow(ctx)->r8,56(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f2,40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 40);
	// ld ctx_arrow(ctx)->r7,48(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f1,32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 32);
	// ld ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U64(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x823ed380
	sub_823ED380(&ctx);
loc_8210F760:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14,500
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r14.s32, 500, xer);
	// addi ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r14,1
	ctx_arrow(ctx)->r14.s64 = ctx_arrow(ctx)->r14.s64 + 1;
	// bgt ctx_arrow(ctx)->r6,0x8210f790
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210F790;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210f790
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210F790;
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 0);
	// b 0x8210f404
	goto loc_8210F404;
loc_8210F77C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-152
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -152;
	// bl 0x823ed588
	// b 0x823ed150
	return;
loc_8210F790:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14,500
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r14.s32, 500, xer);
	// stw ctx_arrow(ctx)->r26,17612(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 17612);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r21,17604(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 17604);
	// ble ctx_arrow(ctx)->r6,0x8210f7b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F7B4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,25812
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 25812;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_8210F7B4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-152
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -152;
	// bl 0x823ed588
	// b 0x823ed150
	return;
}

alias(__imp__sub_8210F7C8) PPC_WEAK_FUNC(sub_8210F7C8);
PPC_FUNC_IMPL(__imp__sub_8210F7C8) {
	PPC_FUNC_PROLOGUE();
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// b 0x8210f2f0
	sub_8210F2F0(ctx, base);
	return;
}

alias(__imp__sub_8210F7D8) PPC_WEAK_FUNC(sub_8210F7D8);
PPC_FUNC_IMPL(__imp__sub_8210F7D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bgelr ctx_arrow(ctx)->r6
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) return;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// stw ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 12);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8210F828) PPC_WEAK_FUNC(sub_8210F828);
PPC_FUNC_IMPL(__imp__sub_8210F828) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// fsubs f13,f3,f1
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(ctx.f3.f64 - ctx.f1.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f0,f4,f2
	f0.f64 = double(float(ctx.f4.f64 - ctx.f2.f64));
	// lfs f11,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f12,f13,f13
	ctx.f12.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f12,f0,f0,f12
	ctx.f12.f64 = double(float(f0.f64 * f0.f64 + ctx.f12.f64));
	// fsqrts f12,f12
	ctx.f12.f64 = double(float(sqrt(ctx.f12.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f12,f11
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f11.f64);
	// bne ctx_arrow(ctx)->r6,0x8210f864
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210F864;
	// fsubs f13,f5,f3
	ctx.f13.f64 = double(float(ctx.f5.f64 - ctx.f3.f64));
	// fsubs f0,f6,f4
	f0.f64 = double(float(ctx.f6.f64 - ctx.f4.f64));
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f1,f0
	ctx.f1.f64 = double(float(sqrt(f0.f64)));
	// blr 
	return;
loc_8210F864:
	// fsubs f11,f5,f1
	ctx.fpscr.disableFlushMode();
	ctx.f11.f64 = double(float(ctx.f5.f64 - ctx.f1.f64));
	// fsubs f10,f6,f2
	ctx.f10.f64 = double(float(ctx.f6.f64 - ctx.f2.f64));
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// fmuls f0,f11,f0
	f0.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fmadds f0,f10,f13,f0
	f0.f64 = double(float(ctx.f10.f64 * ctx.f13.f64 + f0.f64));
	// fdivs f1,f0,f12
	ctx.f1.f64 = double(float(f0.f64 / ctx.f12.f64));
	// blr 
	return;
}

alias(__imp__sub_8210F880) PPC_WEAK_FUNC(sub_8210F880);
PPC_FUNC_IMPL(__imp__sub_8210F880) {
	PPC_FUNC_PROLOGUE();
	PPCRegister f0{};
	// fsubs f13,f4,f2
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(ctx.f4.f64 - ctx.f2.f64));
	// fsubs f0,f3,f1
	f0.f64 = double(float(ctx.f3.f64 - ctx.f1.f64));
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f1,f0
	ctx.f1.f64 = double(float(sqrt(f0.f64)));
	// blr 
	return;
}

alias(__imp__sub_8210F898) PPC_WEAK_FUNC(sub_8210F898);
PPC_FUNC_IMPL(__imp__sub_8210F898) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// fsubs f0,f4,f2
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f4.f64 - ctx.f2.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fsubs f13,f3,f1
	ctx.f13.f64 = double(float(ctx.f3.f64 - ctx.f1.f64));
	// fsubs f12,f6,f2
	ctx.f12.f64 = double(float(ctx.f6.f64 - ctx.f2.f64));
	// fsubs f11,f5,f1
	ctx.f11.f64 = double(float(ctx.f5.f64 - ctx.f1.f64));
	// fmuls f10,f13,f13
	ctx.f10.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmuls f12,f12,f0
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmadds f0,f0,f0,f10
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f10.f64));
	// fmadds f13,f11,f13,f12
	ctx.f13.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + ctx.f12.f64));
	// lfs f12,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f8d0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F8D0;
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// blt ctx_arrow(ctx)->r6,0x8210f8e0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210F8E0;
loc_8210F8D0:
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x8210f8e8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210F8E8;
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8210f8e8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210F8E8;
loc_8210F8E0:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
loc_8210F8E8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_8210F8F0) PPC_WEAK_FUNC(sub_8210F8F0);
PPC_FUNC_IMPL(__imp__sub_8210F8F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,17612(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 17612);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,17604(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 17604);
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r11,21296(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 21296);
	// blr 
	return;
}

alias(__imp__sub_8210F910) PPC_WEAK_FUNC(sub_8210F910);
PPC_FUNC_IMPL(__imp__sub_8210F910) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 1);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lfd f0,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,-10896(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lhz ctx_arrow(ctx)->r10,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// divw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s32 = ctx_arrow(ctx)->r9.s32 / ctx_arrow(ctx)->r11.s32;
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r8.u64;
	// twllei ctx_arrow(ctx)->r11,0
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r10.s32) * int64_t(ctx_arrow(ctx)->r11.s32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// twlgei ctx_arrow(ctx)->r8,-1
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r6)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// lhz ctx_arrow(ctx)->r10,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,4(ctx_arrow(ctx)->r6)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 4);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,8(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_8210FA18) PPC_WEAK_FUNC(sub_8210FA18);
PPC_FUNC_IMPL(__imp__sub_8210FA18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f29,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -160);
	// stfd f30,-152(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -152);
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-3472(ctx_arrow(ctx)->r1)
	ea = -3472 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r19.s64 = 0;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lis ctx_arrow(ctx)->r20,-32010
	ctx_arrow(ctx)->r20.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r21,-32010
	ctx_arrow(ctx)->r21.s64 = -2097807360;
	// lfs f0,-10900(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f31,f0,f1
	f31.f64 = double(float(f0.f64 * ctx.f1.f64));
	// lis ctx_arrow(ctx)->r23,-32010
	ctx_arrow(ctx)->r23.s64 = -2097807360;
	// fmuls f30,f0,f2
	f30.f64 = double(float(f0.f64 * ctx.f2.f64));
	// addi ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11,25972
	ctx_arrow(ctx)->r16.s64 = ctx_arrow(ctx)->r11.s64 + 25972;
	// fmuls f29,f0,f3
	f29.f64 = double(float(f0.f64 * ctx.f3.f64));
loc_8210FA7C:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r19,1
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r19.s64 + 1;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r18,4
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r18.s64 + 4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r17.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210faa0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FAA0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mtctr ctx_arrow(ctx)->r17
	ctr.u64 = ctx_arrow(ctx)->r17.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8210FAA0:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 6);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8210fc88
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210FC88;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,14
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r30.s64 + 14;
	// add ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
loc_8210FAC4:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// fmr f2,f30
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f30.f64;
	// twllei ctx_arrow(ctx)->r11,0
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r29.u32, 1);
	// divw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s32 = ctx_arrow(ctx)->r29.s32 / ctx_arrow(ctx)->r11.s32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// mullw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = int64_t(ctx_arrow(ctx)->r9.s32) * int64_t(ctx_arrow(ctx)->r11.s32);
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r29.s64 - ctx_arrow(ctx)->r9.s64;
	// twlgei ctx_arrow(ctx)->r11,-1
	// bl 0x8210e960
	sub_8210E960(ctx, base);
	// lhz ctx_arrow(ctx)->r9,-2(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r28.u32 + -2);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 3) & 0xFFFFFFF8;
	// lhz ctx_arrow(ctx)->r10,-6(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r28.u32 + -6);
	// fmr f8,f1
	ctx.fpscr.disableFlushMode();
	ctx.f8.f64 = ctx.f1.f64;
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// std ctx_arrow(ctx)->r9,104(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// fcmpu ctx_arrow(ctx)->r6,f8,f29
	ctx_arrow(ctx)->r6.compare(ctx.f8.f64, f29.f64);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f13,104(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f12,80(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f11,96(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// fsubs f13,f30,f13
	ctx.f13.f64 = double(float(f30.f64 - ctx.f13.f64));
	// fsubs f0,f31,f0
	f0.f64 = double(float(f31.f64 - f0.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fsubs f12,f31,f12
	ctx.f12.f64 = double(float(f31.f64 - ctx.f12.f64));
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fsubs f11,f30,f11
	ctx.f11.f64 = double(float(f30.f64 - ctx.f11.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f7,f0
	ctx.f7.f64 = double(float(sqrt(f0.f64)));
	// fmuls f0,f11,f11
	f0.f64 = double(float(ctx.f11.f64 * ctx.f11.f64));
	// fmadds f0,f12,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + f0.f64));
	// fsqrts f3,f0
	ctx.f3.f64 = double(float(sqrt(f0.f64)));
	// bge ctx_arrow(ctx)->r6,0x8210fc70
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210FC70;
	// fcmpu ctx_arrow(ctx)->r6,f7,f29
	ctx_arrow(ctx)->r6.compare(ctx.f7.f64, f29.f64);
	// blt ctx_arrow(ctx)->r6,0x8210fbb8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210FBB8;
	// fcmpu ctx_arrow(ctx)->r6,f3,f29
	ctx_arrow(ctx)->r6.compare(ctx.f3.f64, f29.f64);
	// blt ctx_arrow(ctx)->r6,0x8210fbb8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210FBB8;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8210ebe8
	sub_8210EBE8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210fc70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FC70;
loc_8210FBB8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210fbe4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FBE4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f2,f7
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = ctx.f7.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f1,f8
	ctx.f1.f64 = ctx.f8.f64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mtctr ctx_arrow(ctx)->r22
	ctr.u64 = ctx_arrow(ctx)->r22.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210fc44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210FC44;
loc_8210FBE4:
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r28.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210fc44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FC44;
	// lwz ctx_arrow(ctx)->r10,21276(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r27.s64 + -1;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8210fc2c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210FC2C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + -4;
loc_8210FC10:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210fc70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FC70;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8210fc10
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210FC10;
loc_8210FC2C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,800
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 800, xer);
	// bgt ctx_arrow(ctx)->r6,0x8210fce0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210FCE0;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 4;
	// b 0x8210fc70
	goto loc_8210FC70;
loc_8210FC44:
	// stw ctx_arrow(ctx)->r30,17612(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 17612);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// stw ctx_arrow(ctx)->r31,17604(ctx_arrow(ctx)->r20)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r20.u32 + 17604);
	// beq ctx_arrow(ctx)->r6,0x8210fcf8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FCF8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mtctr ctx_arrow(ctx)->r24
	ctr.u64 = ctx_arrow(ctx)->r24.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8210fcf8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210FCF8;
loc_8210FC70:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 6);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210fac4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210FAC4;
loc_8210FC88:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,400
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 400, xer);
	// ble ctx_arrow(ctx)->r6,0x8210fc9c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210FC9C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r16.u64;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_8210FC9C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,800
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 800, xer);
	// bgt ctx_arrow(ctx)->r6,0x8210fce0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210FCE0;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r19.s32, ctx_arrow(ctx)->r27.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210fa7c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210FA7C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210fcc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FCC8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mtctr ctx_arrow(ctx)->r24
	ctr.u64 = ctx_arrow(ctx)->r24.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8210FCC8:
	// li ctx_arrow(ctx)->r3,-2
	ctx_arrow(ctx)->r3.s64 = -2;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,3472
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 3472;
	// lfd f29,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-152(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
loc_8210FCE0:
	// li ctx_arrow(ctx)->r3,5
	ctx_arrow(ctx)->r3.s64 = 5;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,3472
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 3472;
	// lfd f29,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-152(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
loc_8210FCF8:
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,3472
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 3472;
	// lfd f29,-160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-152(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_8210FD10) PPC_WEAK_FUNC(sub_8210FD10);
PPC_FUNC_IMPL(__imp__sub_8210FD10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8210fd48
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210FD48;
	// lbz ctx_arrow(ctx)->r9,3(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210FD28:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r9.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8210fd70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FD70;
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r7.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210fd28
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210FD28;
loc_8210FD48:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x8210fd70
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8210FD70;
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
loc_8210FD70:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_8210FD78) PPC_WEAK_FUNC(sub_8210FD78);
PPC_FUNC_IMPL(__imp__sub_8210FD78) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 12);
	// blr 
	return;
}

alias(__imp__sub_8210FD90) PPC_WEAK_FUNC(sub_8210FD90);
PPC_FUNC_IMPL(__imp__sub_8210FD90) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64;
	// lis ctx_arrow(ctx)->r9,-32239
	ctx_arrow(ctx)->r9.s64 = -2112815104;
	// lis ctx_arrow(ctx)->r7,-32239
	ctx_arrow(ctx)->r7.s64 = -2112815104;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r6,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-648
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -648;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-752
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -752;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x8210fa18
	sub_8210FA18(&ctx);
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 1, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// ble ctx_arrow(ctx)->r6,0x8210fdf4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210FDF4;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
loc_8210FDF4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8210FE08) PPC_WEAK_FUNC(sub_8210FE08);
PPC_FUNC_IMPL(__imp__sub_8210FE08) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lhz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 4);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10916
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10916;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0xFFF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 12;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8210FE40) PPC_WEAK_FUNC(sub_8210FE40);
PPC_FUNC_IMPL(__imp__sub_8210FE40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r11,14(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 14);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210feb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FEB8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-10916
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -10916;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,21276(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
	// lhz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 4);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,12
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0xFFF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32 >> 12;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210fe9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FE9C;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// blr 
	return;
loc_8210FE9C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,25,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8210feb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FEB8;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// stw ctx_arrow(ctx)->r11,18188(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 18188);
	// stw ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 4);
loc_8210FEB8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_8210FEC0) PPC_WEAK_FUNC(sub_8210FEC0);
PPC_FUNC_IMPL(__imp__sub_8210FEC0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCRegister r11{};
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.s64 = 16;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_8210FED4:
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bdnz 0x8210fed4
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8210FED4;
	// lis ctx_arrow(ctx)->r8,-32239
	ctx_arrow(ctx)->r8.s64 = -2112815104;
	// lis ctx_arrow(ctx)->r11,-32239
	ctx_arrow(ctx)->r11.s64 = -2112815104;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-448
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -448;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-504
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -504;
	// b 0x8210fa18
	sub_8210FA18(ctx, base);
	return;
}

alias(__imp__sub_8210FEF8) PPC_WEAK_FUNC(sub_8210FEF8);
PPC_FUNC_IMPL(__imp__sub_8210FEF8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r29,18188(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r29.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8210ff78
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8210FF78;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,14
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r29.s64 + 14;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-10916
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -10916;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r7,21276(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
loc_8210FF34:
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r8.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,0,0,27
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF0;
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 3);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r7.u64;
	// beq ctx_arrow(ctx)->r6,0x8210ff68
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8210FF68;
	// lhz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 4);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,12
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0xFFF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32 >> 12;
	// lbzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,25,25
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x40;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8210ff9c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8210FF9C;
loc_8210FF68:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 8;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r6.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8210ff34
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8210FF34;
loc_8210FF78:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8210e480
	sub_8210E480(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,26044
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 26044;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed180
	return;
loc_8210FF9C:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lis ctx_arrow(ctx)->r10,21845
	ctx_arrow(ctx)->r10.s64 = 1431633920;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,21846
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 21846;
	// mulhw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.s64 = (int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1,31,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1,0,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// subfic ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,8
	xer.ca = ctx_arrow(ctx)->r8.u32 <= 8;
	ctx_arrow(ctx)->r8.s64 = 8 - ctx_arrow(ctx)->r8.s64;
	// extsh ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r27.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// lis ctx_arrow(ctx)->r8,-32141
	ctx_arrow(ctx)->r8.s64 = -2106392576;
	// lfs f13,-10896(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
loc_8210FFE0:
	// lhz ctx_arrow(ctx)->r7,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u32 & 0x3;
	// srawi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s32 >> 2;
	// extsh ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r7);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,-2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 + -2;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6,1,0,30
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r3.u64;
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u32 & 0x3;
	// mulhw ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r31.s64 = (int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r28.u64;
	// mulhw ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.s64 = (int64_t(ctx_arrow(ctx)->r4.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,1,31,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0x1;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,1,31,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r5.u64;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r30.u64;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r3.s64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 2;
	// subfic ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,2
	xer.ca = ctx_arrow(ctx)->r3.u32 <= 2;
	ctx_arrow(ctx)->r3.s64 = 2 - ctx_arrow(ctx)->r3.s64;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// extsh ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,1,0,30
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r3.u64;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r3.s64;
	// sraw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r26.s32 < 0) & (((ctx_arrow(ctx)->r26.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r26.s32);
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r26.s32 >> temp.u32;
	// subfic ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4,2
	xer.ca = ctx_arrow(ctx)->r4.u32 <= 2;
	ctx_arrow(ctx)->r31.s64 = 2 - ctx_arrow(ctx)->r4.s64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,2,0,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,3,25,28
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0x78;
	// extsh ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 + ctx_arrow(ctx)->r11.u64;
	// lhz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r31.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 8);
	// extsh ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = PPCRegister_s16(ctx_arrow(ctx)->r31);
	// std ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,0(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// lhz ctx_arrow(ctx)->r31,10(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r31.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 10);
	// extsh ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = PPCRegister_s16(ctx_arrow(ctx)->r31);
	// std ctx_arrow(ctx)->r31,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,4(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 4);
	// lhz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r4.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 12);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r4, 0);
	// std ctx_arrow(ctx)->r4,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 8);
	// lhz ctx_arrow(ctx)->r4,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r5.u64;
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r4, 0);
	// sraw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r4.s32 < 0) & (((ctx_arrow(ctx)->r4.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r4.s32);
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s32 >> temp.u32;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,3,25,28
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 + ctx_arrow(ctx)->r11.u64;
	// lhz ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 8);
	// extsh ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7,30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r7.u32 & 0x3;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// std ctx_arrow(ctx)->r31,104(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r30.u64;
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7,30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r7.u32 & 0x3;
	// mulhw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.s64 = (int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r10.s32)) >> 32;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lfd f0,104(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,0(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// lhz ctx_arrow(ctx)->r30,10(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r30.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 10);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// extsh ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.s64 = PPCRegister_s16(ctx_arrow(ctx)->r30);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 12, xer);
	// std ctx_arrow(ctx)->r30,112(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7,1,31,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0x1;
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7,1,0,30
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r30.u64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// subfic ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2
	xer.ca = ctx_arrow(ctx)->r8.u32 <= 2;
	ctx_arrow(ctx)->r8.s64 = 2 - ctx_arrow(ctx)->r8.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// lfd f0,112(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,4(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 4);
	// lhz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 12);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r5.u64;
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// std ctx_arrow(ctx)->r7,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 8);
	// lhz ctx_arrow(ctx)->r7,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// sraw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4
	temp.u32 = ctx_arrow(ctx)->r4.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r7.s32 < 0) & (((ctx_arrow(ctx)->r7.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r7.s32);
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s32 >> temp.u32;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,3,25,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r11.u64;
	// lhz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + 8);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// std ctx_arrow(ctx)->r6,128(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// lfd f0,128(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,0(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// lhz ctx_arrow(ctx)->r6,10(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + 10);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// std ctx_arrow(ctx)->r6,136(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.s64 = PPCRegister_s16(ctx_arrow(ctx)->r27);
	// lfd f0,136(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,4(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 4);
	// lhz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + 12);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// std ctx_arrow(ctx)->r7,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfd f0,144(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 8);
	// lhz ctx_arrow(ctx)->r7,6(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r29.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,1,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0xFFFFFFFE;
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r5.u64;
	// sraw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	temp.u32 = ctx_arrow(ctx)->r6.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r7.s32 < 0) & (((ctx_arrow(ctx)->r7.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r7.s32);
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s32 >> temp.u32;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,3,25,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r29.u64;
	// lhz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + 8);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// std ctx_arrow(ctx)->r6,152(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// lfd f0,152(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,0(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// lhz ctx_arrow(ctx)->r6,10(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + 10);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// std ctx_arrow(ctx)->r6,160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// lfd f0,160(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,4(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 4);
	// lhz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + 12);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// std ctx_arrow(ctx)->r7,168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// lfd f0,168(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f0,f0,f13
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// stfs f0,8(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x821102d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821102D0;
	// lfs f11,4(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f0,28(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f11,f0
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210ffe0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210FFE0;
	// lfs f12,16(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210ffe0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210FFE0;
	// lfs f0,40(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f11,f0
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210ffe0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210FFE0;
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8210ffe0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8210FFE0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed180
	return;
loc_821102D0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26032
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26032;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821102E8) PPC_WEAK_FUNC(sub_821102E8);
PPC_FUNC_IMPL(__imp__sub_821102E8) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// lfs f0,0(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r11,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x8211036c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8211036C;
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 1);
	// divw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s32 = ctx_arrow(ctx)->r10.s32 / ctx_arrow(ctx)->r9.s32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mullw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r8.s64;
	// twllei ctx_arrow(ctx)->r9,0
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// twlgei ctx_arrow(ctx)->r9,-1
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lhz ctx_arrow(ctx)->r11,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lfd f13,-16(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bgtlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.gt()) return;
loc_8211036C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_82110378) PPC_WEAK_FUNC(sub_82110378);
PPC_FUNC_IMPL(__imp__sub_82110378) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r11,-32239
	ctx_arrow(ctx)->r11.s64 = -2112815104;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,744
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 744;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// lfs f0,-10900(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fmuls f0,f0,f4
	f0.f64 = double(float(f0.f64 * ctx.f4.f64));
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8210fa18
	sub_8210FA18(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821103C0) PPC_WEAK_FUNC(sub_821103C0);
PPC_FUNC_IMPL(__imp__sub_821103C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r4.u64;
	// mtctr ctx_arrow(ctx)->r20
	ctr.u64 = ctx_arrow(ctx)->r20.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821103f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821103F0;
loc_821103E4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed168
	return;
loc_821103F0:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,18200
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 18200;
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
loc_82110404:
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r22.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821104f4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821104F4;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r24.u64;
loc_82110418:
	// lwz ctx_arrow(ctx)->r27,0(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r27.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFF000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821104c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821104C4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27,14
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r27.s64 + 14;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r24.u64;
loc_8211043C:
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r29.u32 + 0);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 3);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,27
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF0;
	// lwz ctx_arrow(ctx)->r11,21276(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821104ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821104AC;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82110484
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82110484;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
loc_82110468:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r31.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821104ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821104AC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r30.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82110468
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110468;
loc_82110484:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mtctr ctx_arrow(ctx)->r20
	ctr.u64 = ctx_arrow(ctx)->r20.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821103e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821103E4;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,350
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 350, xer);
	// bgt ctx_arrow(ctx)->r6,0x821104e8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821104E8;
loc_821104AC:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r27.u32 + 6);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8211043c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8211043C;
loc_821104C4:
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,4
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, ctx_arrow(ctx)->r21.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82110418
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110418;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r21.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82110404
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110404;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed168
	return;
loc_821104E8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26088
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26088;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_821104F4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed168
	return;
}

alias(__imp__sub_82110500) PPC_WEAK_FUNC(sub_82110500);
PPC_FUNC_IMPL(__imp__sub_82110500) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r3,17612(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82110544
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110544;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r4,17604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8210f910
	sub_8210F910(ctx, base);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_82110544:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,21296(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821105a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821105A8;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18180
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 18180;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,2688(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f13,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// stfs f0,4(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lfs f13,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// stfs f13,8(ctx_arrow(ctx)->r5)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18192
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 18192;
	// lfs f13,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfs f13,0(ctx_arrow(ctx)->r6)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// stfs f0,4(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 4);
	// lfs f0,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,8(ctx_arrow(ctx)->r6)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 8);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
loc_821105A8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821105C0) PPC_WEAK_FUNC(sub_821105C0);
PPC_FUNC_IMPL(__imp__sub_821105C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stfd f31,-48(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-10896
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -10896;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f1,-4(ctx_arrow(ctx)->r30)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -4);
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fdivs f8,f0,f1
	ctx.f8.f64 = double(float(f0.f64 / ctx.f1.f64));
	// stfs f8,0(ctx_arrow(ctx)->r30)
	temp.f32 = float(ctx.f8.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x821108a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821108A4;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f10,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8211073c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211073C;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-10892
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -10892;
	// lfs f9,2692(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
loc_82110624:
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFF;
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,20,12,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 20) & 0xFFFFF;
	// lbzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r9, 0);
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s32 >> 8;
	// srawi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,4
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s32 >> 4;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0xF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0xF;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,3,0,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r11.u64;
	// lhz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 0);
	// lhz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 4);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r5, 0);
	// lhz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 0);
	// lhz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r4.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r8.u32 + 0);
	// lhz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 4);
	// extsh ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r5, 0);
	// lhz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r8.u32 + 4);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r4, 0);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r7.s64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// extsw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r5.s32;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32;
	// extsw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s32;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// std ctx_arrow(ctx)->r7,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r8,104(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f12,96(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f11,104(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fmuls f7,f0,f0
	ctx.f7.f64 = double(float(f0.f64 * f0.f64));
	// fmuls f0,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f12,f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f12.f64));
	// fmadds f0,f11,f13,f0
	f0.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + f0.f64));
	// fmadds f12,f11,f11,f12
	ctx.f12.f64 = double(float(ctx.f11.f64 * ctx.f11.f64 + ctx.f12.f64));
	// fmadds f13,f13,f13,f7
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f7.f64));
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmsubs f0,f12,f13,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f13.f64 - f0.f64));
	// fsqrts f0,f0
	f0.f64 = double(float(sqrt(f0.f64)));
	// fmadds f10,f0,f9,f10
	ctx.f10.f64 = double(float(f0.f64 * ctx.f9.f64 + ctx.f10.f64));
	// bne ctx_arrow(ctx)->r6,0x82110624
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110624;
loc_8211073C:
	// fmuls f0,f8,f8
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f8.f64 * ctx.f8.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26152;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f31,3608(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fmuls f0,f0,f10
	f0.f64 = double(float(f0.f64 * ctx.f10.f64));
	// fmuls f1,f0,f31
	ctx.f1.f64 = double(float(f0.f64 * f31.f64));
	// stfd f1,24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 24);
	// ld ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// li ctx_arrow(ctx)->r5,32767
	ctx_arrow(ctx)->r5.s64 = 32767;
	// li ctx_arrow(ctx)->r31,32767
	ctx_arrow(ctx)->r31.s64 = 32767;
	// li ctx_arrow(ctx)->r7,32767
	ctx_arrow(ctx)->r7.s64 = 32767;
	// li ctx_arrow(ctx)->r6,-32767
	ctx_arrow(ctx)->r6.s64 = -32767;
	// lwz ctx_arrow(ctx)->r11,17608(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,32767
	ctx_arrow(ctx)->r3.s64 = 32767;
	// li ctx_arrow(ctx)->r8,32767
	ctx_arrow(ctx)->r8.s64 = 32767;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82110850
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82110850;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r9,-32010
	ctx_arrow(ctx)->r9.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,19600
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 19600;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,17616
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + 17616;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 6;
loc_821107A0:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8211083c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211083C;
	// lhz ctx_arrow(ctx)->r9,-6(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + -6);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r5);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r9);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r28.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x821107c4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821107C4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64;
loc_821107C4:
	// lhz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 0);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r6);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r9);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r28.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x821107dc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821107DC;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64;
loc_821107DC:
	// lhz ctx_arrow(ctx)->r9,-4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + -4);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.s64 = PPCRegister_s16(ctx_arrow(ctx)->r31);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r9);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r28.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x821107f4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821107F4;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64;
loc_821107F4:
	// lhz ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 2);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r3);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r9);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r28.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x8211080c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8211080C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64;
loc_8211080C:
	// lhz ctx_arrow(ctx)->r9,-2(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + -2);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r7);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r9);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r28.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82110824
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82110824;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64;
loc_82110824:
	// lhz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 4);
	// extsh ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r29.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r9);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r28.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x8211083c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8211083C;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64;
loc_8211083C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 12;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821107a0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821107A0;
loc_82110850:
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r5, 0);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26124
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26124;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r10.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// std ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// lfd f0,104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,0(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fmuls f1,f0,f31
	ctx.f1.f64 = double(float(f0.f64 * f31.f64));
	// stfd f1,24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 24);
	// ld ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_821108A4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lfd f31,-48(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed188
	return;
}

alias(__imp__sub_821108B0) PPC_WEAK_FUNC(sub_821108B0);
PPC_FUNC_IMPL(__imp__sub_821108B0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	// std ctx_arrow(ctx)->r30,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// std ctx_arrow(ctx)->r31,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,-48
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + -48;
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 8;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32 >> 4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,3,25,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,25,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r3.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// lhz ctx_arrow(ctx)->r31,10(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r31.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 10);
	// lhz ctx_arrow(ctx)->r8,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// extsh ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r3, 0);
	// lhz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = PPCRegister_s16(ctx_arrow(ctx)->r31);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// lhz ctx_arrow(ctx)->r4,10(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r4.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 10);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// lhz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r30.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 12);
	// subf ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r8.s64;
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r7.s64;
	// lhz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsw ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s32;
	// lhz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 8);
	// extsw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s32;
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// extsh ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.s64 = PPCRegister_s16(ctx_arrow(ctx)->r30);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r4, 0);
	// std ctx_arrow(ctx)->r31,-80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -80);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// std ctx_arrow(ctx)->r3,-88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -88);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r6.s64;
	// subf ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r7.s64;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r8.s64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r6.s64;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// extsw ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s32;
	// extsw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s32;
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32;
	// std ctx_arrow(ctx)->r10,-64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,-40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + -40;
	// std ctx_arrow(ctx)->r30,-72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -72);
	// std ctx_arrow(ctx)->r4,-96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// std ctx_arrow(ctx)->r9,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,-32
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + -32;
	// lfd f12,-80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,-88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// lfd f10,-64(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// lfd f11,-72(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// lfd f0,-96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f9,-56(ctx_arrow(ctx)->r1)
	ctx.f9.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fcfid f9,f9
	ctx.f9.f64 = double(ctx.f9.s64);
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f8,f12,f13
	ctx.f8.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// frsp f9,f9
	ctx.f9.f64 = double(float(ctx.f9.f64));
	// fmuls f7,f11,f10
	ctx.f7.f64 = double(float(ctx.f11.f64 * ctx.f10.f64));
	// fmsubs f11,f11,f0,f8
	ctx.f11.f64 = double(float(ctx.f11.f64 * f0.f64 - ctx.f8.f64));
	// fmuls f0,f9,f0
	f0.f64 = double(float(ctx.f9.f64 * f0.f64));
	// fmsubs f13,f9,f13,f7
	ctx.f13.f64 = double(float(ctx.f9.f64 * ctx.f13.f64 - ctx.f7.f64));
	// fctidz f11,f11
	ctx.f11.s64 = (ctx.f11.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f11.f64));
	// stfd f11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// fmsubs f0,f12,f10,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f10.f64 - f0.f64));
	// fctidz f13,f13
	ctx.f13.s64 = (ctx.f13.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f13.f64));
	// stfd f13,0(ctx_arrow(ctx)->r10)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfd f0,0(ctx_arrow(ctx)->r9)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// ld ctx_arrow(ctx)->r10,-40(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpdi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int64_t>(ctx_arrow(ctx)->r10.s64, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82110a34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110A34;
	// lhz ctx_arrow(ctx)->r11,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfd f0,-56(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,-10896(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// ld ctx_arrow(ctx)->r30,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_82110A34:
	// ld ctx_arrow(ctx)->r9,-48(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s32;
	// ld ctx_arrow(ctx)->r11,-32(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r8.s32;
	// std ctx_arrow(ctx)->r10,-72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -72);
	// mulld ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r7.s64 * ctx_arrow(ctx)->r11.s64;
	// std ctx_arrow(ctx)->r9,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// std ctx_arrow(ctx)->r11,-64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// mulld ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 * ctx_arrow(ctx)->r10.s64;
	// extsw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r6.s32;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r10.u64;
	// mulld ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s64 * ctx_arrow(ctx)->r9.s64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfd f10,-72(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10896
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10896;
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// lfd f12,-56(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lfd f11,-64(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfs f0,-4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f0,f1
	ctx.f13.f64 = double(float(f0.f64 * ctx.f1.f64));
	// fmuls f0,f0,f2
	f0.f64 = double(float(f0.f64 * ctx.f2.f64));
	// lfd f9,-56(ctx_arrow(ctx)->r1)
	ctx.f9.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f9,f9
	ctx.f9.f64 = double(ctx.f9.s64);
	// fnmsub f13,f13,f12,f9
	ctx.f13.f64 = -(ctx.f13.f64 * ctx.f12.f64 - ctx.f9.f64);
	// fnmsub f0,f0,f11,f13
	f0.f64 = -(f0.f64 * ctx.f11.f64 - ctx.f13.f64);
	// fdiv f0,f0,f10
	f0.f64 = f0.f64 / ctx.f10.f64;
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// ld ctx_arrow(ctx)->r30,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82110AC8) PPC_WEAK_FUNC(sub_82110AC8);
PPC_FUNC_IMPL(__imp__sub_82110AC8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister r11{};
	// lhz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 4);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 8;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32 >> 4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0xF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u32 & 0xF;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,4,0,27
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 4) & 0xFFFFFFF0;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,4,0,27
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 4) & 0xFFFFFFF0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r11.u64;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r10.u64;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r9.u64;
	// stb ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r6)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r6.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r10,1(ctx_arrow(ctx)->r6)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 1));
	// stb ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r6)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 2));
	// blr 
	return;
}

alias(__imp__sub_82110B18) PPC_WEAK_FUNC(sub_82110B18);
PPC_FUNC_IMPL(__imp__sub_82110B18) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,-112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + -112;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x82110c3c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110C3C;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// li ctx_arrow(ctx)->r5,10
	ctx_arrow(ctx)->r5.s64 = 10;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64;
	// bl 0x823eede8
	sub_823EEDE8(ctx, base);
	// lwz ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82110b80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110B80;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26400
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26400;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// b 0x82110c4c
	goto loc_82110C4C;
loc_82110B80:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,32767
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 32767, xer);
	// ble ctx_arrow(ctx)->r6,0x82110b94
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82110B94;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26352;
	// b 0x82110c44
	goto loc_82110C44;
loc_82110B94:
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-97
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -97;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 25, xer);
	// bgt ctx_arrow(ctx)->r6,0x82110c2c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110C2C;
	// lbz ctx_arrow(ctx)->r10,1(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82110bcc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110BCC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,48
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 48, xer);
	// beq ctx_arrow(ctx)->r6,0x82110bcc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110BCC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-48
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -48;
loc_82110BCC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 7, xer);
	// bgt ctx_arrow(ctx)->r6,0x82110c1c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110C1C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82110bfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110BFC;
	// lbz ctx_arrow(ctx)->r10,2(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82110bfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110BFC;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26312
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26312;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// b 0x82110c4c
	goto loc_82110C4C;
loc_82110BFC:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,15,0,16
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 15) & 0xFFFF8000;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0xFFFFFFF8;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r4.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// sth ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r28)
	PPC_STORE_U16(ctx_arrow(ctx)->r28.u32 + 0, ctx_arrow(ctx)->r10.u16);
	// stb ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r27.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed184
	return;
loc_82110C1C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26268
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26268;
	// b 0x82110c44
	goto loc_82110C44;
loc_82110C2C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26224
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26224;
	// b 0x82110c44
	goto loc_82110C44;
loc_82110C3C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26180
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26180;
loc_82110C44:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_82110C4C:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// li ctx_arrow(ctx)->r10,255
	ctx_arrow(ctx)->r10.s64 = 255;
	// sth ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r28.u32 + 0, ctx_arrow(ctx)->r11, 0);
	// stb ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r27)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0));
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82110C68) PPC_WEAK_FUNC(sub_82110C68);
PPC_FUNC_IMPL(__imp__sub_82110C68) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82110cf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110CF0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,82
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 82;
	// bl 0x82110b18
	sub_82110B18(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82110cf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110CF0;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lhz ctx_arrow(ctx)->r8,82(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 82);
	// lbz ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-10892
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -10892;
loc_82110CB4:
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 0);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82110cd0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110CD0;
	// lbz ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r7.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82110cf4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110CF4;
loc_82110CD0:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82110cb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110CB4;
loc_82110CF0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82110CF4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82110D08) PPC_WEAK_FUNC(sub_82110D08);
PPC_FUNC_IMPL(__imp__sub_82110D08) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82110d68
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110D68;
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r4.u32 & 0xFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-10892
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -10892;
loc_82110D2C:
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82110d48
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110D48;
	// lbz ctx_arrow(ctx)->r10,2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r7.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82110d70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82110D70;
loc_82110D48:
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,20,12,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 20) & 0xFFFFF;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82110d2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82110D2C;
loc_82110D68:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
loc_82110D70:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// blr 
	return;
}

alias(__imp__sub_82110D78) PPC_WEAK_FUNC(sub_82110D78);
PPC_FUNC_IMPL(__imp__sub_82110D78) {
	PPC_FUNC_PROLOGUE();
	// lbz ctx_arrow(ctx)->r3,3(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U8(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82110D80) PPC_WEAK_FUNC(sub_82110D80);
PPC_FUNC_IMPL(__imp__sub_82110D80) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-320(ctx_arrow(ctx)->r1)
	ea = -320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// lhz ctx_arrow(ctx)->r9,6(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 6);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4,0,24,15
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFFFFFF00FF;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0,16,7
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFFFF00FFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u32 & 0xFFFFFF;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,-10896(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lfs f10,184(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lfs f9,188(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lfs f8,192(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s32 >> 8;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s32 >> 4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0x78;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0xF;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
	// lhz ctx_arrow(ctx)->r8,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// lhz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r4, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r8,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r4,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f7,2952(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// lfd f12,96(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fmadds f13,f13,f0,f7
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f7.f64));
	// fmsubs f12,f12,f0,f10
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64 - ctx.f10.f64));
	// stfs f12,208(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 208);
	// fmsubs f6,f11,f0,f8
	ctx.f6.f64 = double(float(ctx.f11.f64 * f0.f64 - ctx.f8.f64));
	// stfs f6,216(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f6.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// fsubs f11,f13,f9
	ctx.f11.f64 = double(float(ctx.f13.f64 - ctx.f9.f64));
	// lfs f13,26436(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f11,212(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 212);
	// fcmpu ctx_arrow(ctx)->r6,f12,f13
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f13.f64);
	// lfs f5,17848(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// blt ctx_arrow(ctx)->r6,0x82110e90
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110E90;
	// fcmpu ctx_arrow(ctx)->r6,f12,f5
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f5.f64);
	// bgt ctx_arrow(ctx)->r6,0x82110e90
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110E90;
	// fcmpu ctx_arrow(ctx)->r6,f11,f13
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110e90
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110E90;
	// fcmpu ctx_arrow(ctx)->r6,f11,f5
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f5.f64);
	// bgt ctx_arrow(ctx)->r6,0x82110e90
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110E90;
	// fcmpu ctx_arrow(ctx)->r6,f6,f13
	ctx_arrow(ctx)->r6.compare(ctx.f6.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110e90
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110E90;
	// fcmpu ctx_arrow(ctx)->r6,f6,f5
	ctx_arrow(ctx)->r6.compare(ctx.f6.f64, ctx.f5.f64);
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x82110e94
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82110E94;
loc_82110E90:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r4.u64;
loc_82110E94:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0xFFFFFFF8;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r9,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// lhz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = PPCRegister_s16(ctx_arrow(ctx)->r31);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// std ctx_arrow(ctx)->r31,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f12,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f11,96(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f6,88(ctx_arrow(ctx)->r1)
	ctx.f6.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f6,f6
	ctx.f6.f64 = double(ctx.f6.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f6,f6
	ctx.f6.f64 = double(float(ctx.f6.f64));
	// fmadds f4,f12,f0,f7
	ctx.f4.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f7.f64));
	// fmsubs f12,f11,f0,f10
	ctx.f12.f64 = double(float(ctx.f11.f64 * f0.f64 - ctx.f10.f64));
	// stfs f12,236(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 236);
	// fmsubs f6,f6,f0,f8
	ctx.f6.f64 = double(float(ctx.f6.f64 * f0.f64 - ctx.f8.f64));
	// stfs f6,244(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f6.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 244);
	// fsubs f11,f4,f9
	ctx.f11.f64 = double(float(ctx.f4.f64 - ctx.f9.f64));
	// stfs f11,240(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 240);
	// fcmpu ctx_arrow(ctx)->r6,f12,f13
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110f38
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110F38;
	// fcmpu ctx_arrow(ctx)->r6,f12,f5
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f5.f64);
	// bgt ctx_arrow(ctx)->r6,0x82110f38
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110F38;
	// fcmpu ctx_arrow(ctx)->r6,f11,f13
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110f38
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110F38;
	// fcmpu ctx_arrow(ctx)->r6,f11,f5
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f5.f64);
	// bgt ctx_arrow(ctx)->r6,0x82110f38
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110F38;
	// fcmpu ctx_arrow(ctx)->r6,f6,f13
	ctx_arrow(ctx)->r6.compare(ctx.f6.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110f38
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110F38;
	// fcmpu ctx_arrow(ctx)->r6,f6,f5
	ctx_arrow(ctx)->r6.compare(ctx.f6.f64, ctx.f5.f64);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x82110f3c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82110F3C;
loc_82110F38:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r4.u64;
loc_82110F3C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r8.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r9,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// lhz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// std ctx_arrow(ctx)->r8,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f12,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f11,96(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f6,88(ctx_arrow(ctx)->r1)
	ctx.f6.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f6,f6
	ctx.f6.f64 = double(ctx.f6.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f6,f6
	ctx.f6.f64 = double(float(ctx.f6.f64));
	// fmadds f7,f12,f0,f7
	ctx.f7.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f7.f64));
	// fmsubs f12,f11,f0,f10
	ctx.f12.f64 = double(float(ctx.f11.f64 * f0.f64 - ctx.f10.f64));
	// stfs f12,264(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 264);
	// fmsubs f11,f6,f0,f8
	ctx.f11.f64 = double(float(ctx.f6.f64 * f0.f64 - ctx.f8.f64));
	// stfs f11,272(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 272);
	// fsubs f0,f7,f9
	f0.f64 = double(float(ctx.f7.f64 - ctx.f9.f64));
	// stfs f0,268(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 268);
	// fcmpu ctx_arrow(ctx)->r6,f12,f13
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110fe0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110FE0;
	// fcmpu ctx_arrow(ctx)->r6,f12,f5
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f5.f64);
	// bgt ctx_arrow(ctx)->r6,0x82110fe0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110FE0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110fe0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110FE0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f5
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f5.f64);
	// bgt ctx_arrow(ctx)->r6,0x82110fe0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82110FE0;
	// fcmpu ctx_arrow(ctx)->r6,f11,f13
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82110fe0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82110FE0;
	// fcmpu ctx_arrow(ctx)->r6,f11,f5
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f5.f64);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x82110fe4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82110FE4;
loc_82110FE0:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
loc_82110FE4:
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111198
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111198;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// li ctx_arrow(ctx)->r9,7
	ctx_arrow(ctx)->r9.s64 = 7;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_82111000:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x82111000
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_82111000;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,236
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 236;
	// li ctx_arrow(ctx)->r9,7
	ctx_arrow(ctx)->r9.s64 = 7;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_82111024:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x82111024
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_82111024;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,264
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 264;
	// li ctx_arrow(ctx)->r9,7
	ctx_arrow(ctx)->r9.s64 = 7;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_82111048:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x82111048
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_82111048;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,16,16,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 16) & 0xFFFF;
	// sth ctx_arrow(ctx)->r4,124(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 124, ctx_arrow(ctx)->r4.u16);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stb ctx_arrow(ctx)->r7,139(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 139));
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,24,8,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 24) & 0xFFFFFF;
	// sth ctx_arrow(ctx)->r4,152(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 152, ctx_arrow(ctx)->r4.u16);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,16,16,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 16) & 0xFFFF;
	// stb ctx_arrow(ctx)->r6,167(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 167));
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6,24,8,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 24) & 0xFFFFFF;
	// sth ctx_arrow(ctx)->r4,180(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 180, ctx_arrow(ctx)->r4.u16);
	// stb ctx_arrow(ctx)->r10,137(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 137));
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,8,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 8) & 0xFF;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5,24,8,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 24) & 0xFFFFFF;
	// stfs f0,128(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7,8,24,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 8) & 0xFF;
	// stfs f0,132(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// stfs f0,160(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// stb ctx_arrow(ctx)->r9,138(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 138));
	// stb ctx_arrow(ctx)->r10,164(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 164));
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,8,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 8) & 0xFF;
	// lfs f13,26440(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,16,16,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 16) & 0xFFFF;
	// stfs f13,156(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 156);
	// stb ctx_arrow(ctx)->r8,165(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 165));
	// stfs f13,184(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 184);
	// stb ctx_arrow(ctx)->r30,136(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 136, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r30), 0);
	// stfs f13,188(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 188);
	// stb ctx_arrow(ctx)->r3,166(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 166));
	// stb ctx_arrow(ctx)->r10,192(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 192));
	// stb ctx_arrow(ctx)->r11,193(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 193, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r31,194(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 194, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r31), 0);
	// stb ctx_arrow(ctx)->r5,195(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 195));
	// bl 0x82113110
	sub_82113110(ctx, base);
	// lfs f0,112(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,112(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,116(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,116(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,120(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,120(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,140(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,140(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,144(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,148(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,148(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,168(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,168(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,172(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,172(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 172);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,176(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,176(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 176);
	// bl 0x82097838
	sub_82097838(&ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x82097860
	sub_82097860_wrapper(&ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,140
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 140;
	// bl 0x82097860
	sub_82097860_wrapper(&ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// bl 0x82097860
	sub_82097860_wrapper(&ctx, base);
	// bl 0x820987a8
	sub_820987A8(ctx, base);
loc_82111198:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821111B0) PPC_WEAK_FUNC(sub_821111B0);
PPC_FUNC_IMPL(__imp__sub_821111B0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f30,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-336(ctx_arrow(ctx)->r1)
	ea = -336 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32014
	ctx_arrow(ctx)->r11.s64 = -2098069504;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,-1364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// lfs f9,184(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// lfs f8,188(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,192(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r3.u64;
	// lhz ctx_arrow(ctx)->r9,10(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 10);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// extsh ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// std ctx_arrow(ctx)->r8,200(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 200);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// lhz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r5,10(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 10);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// std ctx_arrow(ctx)->r9,192(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 192);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// std ctx_arrow(ctx)->r10,208(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 208);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r5, 0);
	// std ctx_arrow(ctx)->r8,168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// std ctx_arrow(ctx)->r11,184(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 184);
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// std ctx_arrow(ctx)->r10,176(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 176);
	// lfd f13,200(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// lfd f0,192(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f12,208(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lfd f11,168(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// lfd f6,184(ctx_arrow(ctx)->r1)
	ctx.f6.u64 = PPC_Read_U64(ctx,  ctx);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// lfd f10,176(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f6,f6
	ctx.f6.f64 = double(ctx.f6.s64);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f5,f0
	ctx.f5.f64 = double(float(f0.f64));
	// lfs f0,-10896(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// frsp f4,f12
	ctx.f4.f64 = double(float(ctx.f12.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f3,f11
	ctx.f3.f64 = double(float(ctx.f11.f64));
	// fmuls f11,f13,f0
	ctx.f11.f64 = double(float(ctx.f13.f64 * f0.f64));
	// frsp f1,f6
	ctx.f1.f64 = double(float(ctx.f6.f64));
	// frsp f2,f10
	ctx.f2.f64 = double(float(ctx.f10.f64));
	// fmuls f12,f5,f0
	ctx.f12.f64 = double(float(ctx.f5.f64 * f0.f64));
	// fmuls f10,f4,f0
	ctx.f10.f64 = double(float(ctx.f4.f64 * f0.f64));
	// fmuls f6,f3,f0
	ctx.f6.f64 = double(float(ctx.f3.f64 * f0.f64));
	// lfs f3,2952(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fsubs f13,f11,f9
	ctx.f13.f64 = double(float(ctx.f11.f64 - ctx.f9.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f4,f1,f0
	ctx.f4.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f13,224(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// fmuls f5,f2,f0
	ctx.f5.f64 = double(float(ctx.f2.f64 * f0.f64));
	// fadds f0,f12,f3
	f0.f64 = double(float(ctx.f12.f64 + ctx.f3.f64));
	// fsubs f2,f10,f7
	ctx.f2.f64 = double(float(ctx.f10.f64 - ctx.f7.f64));
	// stfs f2,232(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 232);
	// fadds f11,f11,f6
	ctx.f11.f64 = double(float(ctx.f11.f64 + ctx.f6.f64));
	// fadds f10,f10,f4
	ctx.f10.f64 = double(float(ctx.f10.f64 + ctx.f4.f64));
	// fadds f31,f12,f5
	f31.f64 = double(float(ctx.f12.f64 + ctx.f5.f64));
	// fsubs f12,f0,f8
	ctx.f12.f64 = double(float(f0.f64 - ctx.f8.f64));
	// lfs f0,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,228(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 228);
	// fmuls f1,f11,f0
	ctx.f1.f64 = double(float(ctx.f11.f64 * f0.f64));
	// fmuls f30,f10,f0
	f30.f64 = double(float(ctx.f10.f64 * f0.f64));
	// fmuls f31,f31,f0
	f31.f64 = double(float(f31.f64 * f0.f64));
	// lfs f0,26436(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// lfs f10,17848(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// blt ctx_arrow(ctx)->r6,0x82111324
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111324;
	// fcmpu ctx_arrow(ctx)->r6,f13,f10
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x82111324
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111324;
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82111324
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111324;
	// fcmpu ctx_arrow(ctx)->r6,f12,f10
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x82111324
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111324;
	// fcmpu ctx_arrow(ctx)->r6,f2,f0
	ctx_arrow(ctx)->r6.compare(ctx.f2.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82111324
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111324;
	// fcmpu ctx_arrow(ctx)->r6,f2,f10
	ctx_arrow(ctx)->r6.compare(ctx.f2.f64, ctx.f10.f64);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x82111328
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111328;
loc_82111324:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u64;
loc_82111328:
	// fadds f12,f5,f3
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f5.f64 + ctx.f3.f64));
	// fsubs f13,f6,f9
	ctx.f13.f64 = double(float(ctx.f6.f64 - ctx.f9.f64));
	// stfs f13,252(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 252);
	// fsubs f11,f4,f7
	ctx.f11.f64 = double(float(ctx.f4.f64 - ctx.f7.f64));
	// stfs f11,260(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 260);
	// fsubs f12,f12,f8
	ctx.f12.f64 = double(float(ctx.f12.f64 - ctx.f8.f64));
	// stfs f12,256(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 256);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82111378
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111378;
	// fcmpu ctx_arrow(ctx)->r6,f13,f10
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x82111378
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111378;
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82111378
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111378;
	// fcmpu ctx_arrow(ctx)->r6,f12,f10
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x82111378
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111378;
	// fcmpu ctx_arrow(ctx)->r6,f11,f0
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82111378
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111378;
	// fcmpu ctx_arrow(ctx)->r6,f11,f10
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f10.f64);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x8211137c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8211137C;
loc_82111378:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_8211137C:
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// fsubs f11,f30,f7
	ctx.fpscr.disableFlushMode();
	ctx.f11.f64 = double(float(f30.f64 - ctx.f7.f64));
	// stfs f11,288(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 288);
	// lfs f13,3112(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// fadds f12,f31,f13
	ctx.f12.f64 = double(float(f31.f64 + ctx.f13.f64));
	// fsubs f13,f1,f9
	ctx.f13.f64 = double(float(ctx.f1.f64 - ctx.f9.f64));
	// stfs f13,280(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 280);
	// fsubs f12,f12,f8
	ctx.f12.f64 = double(float(ctx.f12.f64 - ctx.f8.f64));
	// stfs f12,284(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 284);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x821113d8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821113D8;
	// fcmpu ctx_arrow(ctx)->r6,f13,f10
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x821113d8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821113D8;
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x821113d8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821113D8;
	// fcmpu ctx_arrow(ctx)->r6,f12,f10
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f10.f64);
	// bgt ctx_arrow(ctx)->r6,0x821113d8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821113D8;
	// fcmpu ctx_arrow(ctx)->r6,f11,f0
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x821113d8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821113D8;
	// fcmpu ctx_arrow(ctx)->r6,f11,f10
	ctx_arrow(ctx)->r6.compare(ctx.f11.f64, ctx.f10.f64);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x821113dc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821113DC;
loc_821113D8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821113DC:
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111584
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111584;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// li ctx_arrow(ctx)->r9,7
	ctx_arrow(ctx)->r9.s64 = 7;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_821113F8:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x821113f8
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821113F8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,252
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 252;
	// li ctx_arrow(ctx)->r9,7
	ctx_arrow(ctx)->r9.s64 = 7;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_8211141C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x8211141c
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8211141C;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,280
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 280;
	// li ctx_arrow(ctx)->r9,7
	ctx_arrow(ctx)->r9.s64 = 7;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_82111440:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x82111440
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_82111440;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// sth ctx_arrow(ctx)->r7,92(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 92, ctx_arrow(ctx)->r7.u16);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// sth ctx_arrow(ctx)->r7,120(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 120, ctx_arrow(ctx)->r7.u16);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,24,8,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 24) & 0xFFFFFF;
	// sth ctx_arrow(ctx)->r7,148(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 148, ctx_arrow(ctx)->r7.u16);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,16,16,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 16) & 0xFFFF;
	// lfs f13,26440(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u32 & 0xFF;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,8,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 8) & 0xFF;
	// stfs f0,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r6.u32 & 0xFF;
	// stfs f0,100(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stfs f13,124(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stfs f0,128(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// stb ctx_arrow(ctx)->r9,106(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 106));
	// stfs f13,152(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// stb ctx_arrow(ctx)->r10,105(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 105));
	// stfs f13,156(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 156);
	// stb ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 104, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r8,107(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 107));
	// stb ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 132, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r10,133(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 133));
	// stb ctx_arrow(ctx)->r9,134(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 134));
	// stb ctx_arrow(ctx)->r8,135(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 135));
	// stb ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 160, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r10,161(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 161));
	// stb ctx_arrow(ctx)->r9,162(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 162));
	// stb ctx_arrow(ctx)->r8,163(ctx_arrow(ctx)->r1)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 163));
	// bl 0x82113110
	sub_82113110(ctx, base);
	// lfs f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,84(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,108(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,108(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,112(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,112(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,116(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,116(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,136(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,136(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,140(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,140(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// bl 0x82113110
	sub_82113110(&ctx);
	// lfs f0,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// stfs f0,144(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// bl 0x82097838
	sub_82097838(&ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82097860
	sub_82097860_wrapper(&ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// bl 0x82097860
	sub_82097860_wrapper(&ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// bl 0x82097860
	sub_82097860_wrapper(&ctx, base);
	// bl 0x820987a8
	sub_820987A8(ctx, base);
loc_82111584:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f30,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821115A0) PPC_WEAK_FUNC(sub_821115A0);
PPC_FUNC_IMPL(__imp__sub_821115A0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r7.u64;
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
	// stw ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 0);
	// bl 0x8210d7d0
	sub_8210D7D0(&ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8210d790
	sub_8210D790(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// bl 0x82097618
	sub_82097618(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// extsb ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r31.s8;
	// lis ctx_arrow(ctx)->r24,-32141
	ctx_arrow(ctx)->r24.s64 = -2106392576;
	// lis ctx_arrow(ctx)->r17,-32010
	ctx_arrow(ctx)->r17.s64 = -2097807360;
	// lfs f31,2776(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r21,-32010
	ctx_arrow(ctx)->r21.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,26444
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + 26444;
	// lis ctx_arrow(ctx)->r22,-32010
	ctx_arrow(ctx)->r22.s64 = -2097807360;
	// li ctx_arrow(ctx)->r19,-64
	ctx_arrow(ctx)->r19.s64 = -64;
loc_8211160C:
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r18.u64;
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,17,15,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 17) & 0x1FFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r25.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82111794
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111794;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 32768;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// sth ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r30.u32 + 0, ctx_arrow(ctx)->r11, 0);
	// lfs f0,21300(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,21308(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82111668
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111668;
	// lfs f13,21304(ctx_arrow(ctx)->r17)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// stfs f0,21300(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21300);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// ble ctx_arrow(ctx)->r6,0x82111668
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111668;
	// fsubs f0,f0,f31
	f0.f64 = double(float(f0.f64 - f31.f64));
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stfs f0,21300(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21300);
loc_82111668:
	// lwz ctx_arrow(ctx)->r11,-10876(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,-10876(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + -10876);
	// beq ctx_arrow(ctx)->r6,0x8211168c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211168C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r16.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82110d80
	sub_82110D80(ctx, base);
	// lfs f0,21300(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_8211168C:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 6);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFF000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111794
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111794;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r30,14
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r30.s64 + 14;
loc_821116A4:
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r26.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821116f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821116F8;
	// lwz ctx_arrow(ctx)->r10,21276(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17,15,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 17) & 0x1FFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r25.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8211177c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211177C;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, ctx_arrow(ctx)->r23.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82111778
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111778;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r20.u64;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// b 0x82111778
	goto loc_82111778;
loc_821116F8:
	// lwz ctx_arrow(ctx)->r10,21308(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82111728
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111728;
	// lfs f13,21304(ctx_arrow(ctx)->r17)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// stfs f0,21300(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21300);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// ble ctx_arrow(ctx)->r6,0x82111728
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111728;
	// fsubs f0,f0,f31
	f0.f64 = double(float(f0.f64 - f31.f64));
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stfs f0,21300(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21300);
loc_82111728:
	// lwz ctx_arrow(ctx)->r10,-10876(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// stw ctx_arrow(ctx)->r10,-10876(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + -10876);
	// beq ctx_arrow(ctx)->r6,0x8211177c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211177C;
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 6);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r19.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 1);
	// divw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s32 = ctx_arrow(ctx)->r10.s32 / ctx_arrow(ctx)->r9.s32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mullw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r8.s64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// twllei ctx_arrow(ctx)->r9,0
	// twlgei ctx_arrow(ctx)->r11,-1
	// bl 0x821111b0
	sub_821111B0(ctx, base);
loc_82111778:
	// lfs f0,21300(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_8211177C:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 6);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,8
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821116a4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821116A4;
loc_82111794:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8211160c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8211160C;
	// bl 0x823d22e0
	sub_823D22E0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_821117B0) PPC_WEAK_FUNC(sub_821117B0);
PPC_FUNC_IMPL(__imp__sub_821117B0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed110
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-120
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -120;
	// bl 0x823ed544
	// stwu ctx_arrow(ctx)->r1,-272(ctx_arrow(ctx)->r1)
	ea = -272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// lfs f0,-10900(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,4(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f12,0(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f11,8(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fmuls f30,f12,f0
	f30.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmuls f29,f11,f0
	f29.f64 = double(float(ctx.f11.f64 * f0.f64));
	// lfs f27,26484(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2696(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82111820
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111820;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2700(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x82111824
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82111824;
loc_82111820:
	// fmr f13,f0
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = f0.f64;
loc_82111824:
	// fctiwz f0,f30
	ctx.fpscr.disableFlushMode();
	f0.s64 = (f30.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f30.f64));
	// stfd f0,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// fctiwz f0,f13
	f0.s64 = (ctx.f13.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f13.f64));
	// stfd f0,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lis ctx_arrow(ctx)->r22,-32010
	ctx_arrow(ctx)->r22.s64 = -2097807360;
	// fctiwz f0,f29
	f0.s64 = (f29.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f29.f64));
	// stfd f0,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lhz ctx_arrow(ctx)->r21,86(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r21.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 86);
	// lhz ctx_arrow(ctx)->r20,102(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r20.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 102);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// lwz ctx_arrow(ctx)->r8,17608(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// lhz ctx_arrow(ctx)->r19,94(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r19.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 94);
	// ble ctx_arrow(ctx)->r6,0x82111ad0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111AD0;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,17616
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r10.s64 + 17616;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,19600
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 19600;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 6;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// lfs f28,3060(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,-10892
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + -10892;
	// lfs f31,14264(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
loc_82111888:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111A94;
	// lhz ctx_arrow(ctx)->r10,-6(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + -6);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r21);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111A94;
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 0);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bgt ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111A94;
	// lhz ctx_arrow(ctx)->r10,-2(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + -2);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r20);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111A94;
	// lhz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 4);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bgt ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111A94;
	// lhz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + -4);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r10.s64 = PPCRegister_s16(ctx_arrow(ctx)->r19);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111A94;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111930
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111930;
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,255
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 255, xer);
	// beq ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111A94;
loc_82111908:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// bge ctx_arrow(ctx)->r6,0x82111a94
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82111A94;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r28.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82111930
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111930;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lbzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,255
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 255, xer);
	// bne ctx_arrow(ctx)->r6,0x82111908
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111908;
	// b 0x82111a94
	goto loc_82111A94;
loc_82111930:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111a94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111A94;
loc_8211193C:
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r28.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82111a90
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111A90;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
loc_8211194C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f2,f29
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f29.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8210eaa0
	sub_8210EAA0(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// blt ctx_arrow(ctx)->r6,0x82111a70
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111A70;
	// fcmpu ctx_arrow(ctx)->r6,f1,f28
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f28.f64);
	// bge ctx_arrow(ctx)->r6,0x82111970
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82111970;
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
loc_82111970:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8211194c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8211194C;
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 6);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 8;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32 >> 4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,3,25,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,25,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r31.u64;
	// lhz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// lhz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// lhz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 8);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// lhz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 12);
	// extsh ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r11.s64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r8.s64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r11.s64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r8.s64;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82111a70
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82111A70;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r25.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111a44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111A44;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8210e710
	sub_8210E710(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lfs f4,8(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f3,0(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,104(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f1,96(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8210f2f0
	sub_8210F2F0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111a70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111A70;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82111a70
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111A70;
loc_82111A44:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f2,8(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f1,0(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x821108b0
	sub_821108B0(ctx, base);
	// lfs f0,4(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82111a70
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82111A70;
	// fcmpu ctx_arrow(ctx)->r6,f1,f27
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f27.f64);
	// ble ctx_arrow(ctx)->r6,0x82111a70
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111A70;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f27,f1
	f27.f64 = ctx.f1.f64;
loc_82111A70:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8211193c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8211193C;
loc_82111A90:
	// lwz ctx_arrow(ctx)->r8,17608(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
loc_82111A94:
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,12
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 12;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r8.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82111888
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111888;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111ad0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111AD0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r18.u32, 0, xer);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// beq ctx_arrow(ctx)->r6,0x82111ad4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111AD4;
	// stfs f27,0(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f27.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-120
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -120;
	// bl 0x823ed590
	// b 0x823ed160
	return;
loc_82111AD0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
loc_82111AD4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-120
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -120;
	// bl 0x823ed590
	// b 0x823ed160
	return;
}

alias(__imp__sub_82111AE8) PPC_WEAK_FUNC(sub_82111AE8);
PPC_FUNC_IMPL(__imp__sub_82111AE8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,21288(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 21288);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r3,18172(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 18172);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-128
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -128;
	// stw ctx_arrow(ctx)->r11,21276(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 21276);
	// bl 0x8210e520
	sub_8210E520(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x821105c0
	sub_821105C0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_82111B38) PPC_WEAK_FUNC(sub_82111B38);
PPC_FUNC_IMPL(__imp__sub_82111B38) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r5.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r6.u64;
	// li ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r21.s64 = 0;
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
	// extsb ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r4.s8;
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 0);
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,26488
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 26488;
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
loc_82111B68:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r23.u64;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,17,15,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 17) & 0x1FFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r26.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82111c8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111C8C;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 32768;
	// lhz ctx_arrow(ctx)->r7,6(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 6);
	// sth ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r31.u32 + 0, ctx_arrow(ctx)->r11, 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r7);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 8;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32 >> 4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,3,25,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,25,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r31.u64;
	// lhz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// lhz ctx_arrow(ctx)->r5,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// lhz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 8);
	// extsh ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r5, 0);
	// lhz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 12);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// extsh ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r11.s64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r8.s64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r11.s64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r8.s64;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82111c10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82111C10;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r21.s64 + 1;
loc_82111C10:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,0,16,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xF000;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111c8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111C8C;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,14
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 14;
loc_82111C24:
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r28.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111c74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111C74;
	// lwz ctx_arrow(ctx)->r10,21276(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17,15,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 17) & 0x1FFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r26.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82111c74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111C74;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r25.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82111c74
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111C74;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r22.u64;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_82111C74:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 6);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82111c24
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111C24;
loc_82111C8C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82111b68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111B68;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_82111CA0) PPC_WEAK_FUNC(sub_82111CA0);
PPC_FUNC_IMPL(__imp__sub_82111CA0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed53c
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// fmr f25,f1
	ctx.fpscr.disableFlushMode();
	f25.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f28,0(ctx_arrow(ctx)->r29)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lfs f27,0(ctx_arrow(ctx)->r28)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// lfs f26,0(ctx_arrow(ctx)->r27)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f26.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f29,16148(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111e4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111E4C;
	// lis ctx_arrow(ctx)->r11,-32141
	ctx_arrow(ctx)->r11.s64 = -2106392576;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-10892
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -10892;
loc_82111CFC:
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,16
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFF8000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 32768, xer);
	// beq ctx_arrow(ctx)->r6,0x82111e2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111E2C;
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 6);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xFF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s32 >> 8;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0xF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32 >> 4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,25,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0x78;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,3,25,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,25,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0x78;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r31.u64;
	// lhz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// lhz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx.PPCRegister_s16(ctx_arrow(ctx)->r8);
	// lhz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r6.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 12);
	// lhz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 8);
	// extsh ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r6, 0);
	// lhz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 12);
	// extsh ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// extsh ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r7, 0);
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r9, 0);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r11.s64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r8.s64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r11.s64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r8.s64;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82111e2c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82111E2C;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// stw ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
loc_82111D90:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 3, xer);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bne ctx_arrow(ctx)->r6,0x82111da8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111DA8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// bl 0x8210e710
	sub_8210E710(ctx, base);
	// b 0x82111db4
	goto loc_82111DB4;
loc_82111DA8:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8210e868
	sub_8210E868(ctx, base);
loc_82111DB4:
	// lfs f31,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lfs f30,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// fmr f3,f25
	ctx.f3.f64 = f25.f64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x8210fa18
	sub_8210FA18(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82111e20
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82111E20;
	// lfs f11,92(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fsubs f0,f26,f31
	f0.f64 = double(float(f26.f64 - f31.f64));
	// fsubs f13,f27,f11
	ctx.f13.f64 = double(float(f27.f64 - ctx.f11.f64));
	// fsubs f12,f28,f30
	ctx.f12.f64 = double(float(f28.f64 - f30.f64));
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fmadds f0,f12,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + f0.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f29
	ctx_arrow(ctx)->r6.compare(f0.f64, f29.f64);
	// bge ctx_arrow(ctx)->r6,0x82111e20
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82111E20;
	// stfs f30,0(ctx_arrow(ctx)->r29)
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// fmr f29,f0
	f29.f64 = f0.f64;
	// stfs f11,0(ctx_arrow(ctx)->r28)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r31.u64;
	// stfs f31,0(ctx_arrow(ctx)->r27)
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
loc_82111E20:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x82111d90
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82111D90;
loc_82111E2C:
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 6);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,12,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFFFF;
	// lbzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82111cfc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111CFC;
loc_82111E4C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed588
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82111E60) PPC_WEAK_FUNC(sub_82111E60);
PPC_FUNC_IMPL(__imp__sub_82111E60) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// fmr f29,f1
	ctx.fpscr.disableFlushMode();
	f29.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f28,f2
	f28.f64 = ctx.f2.f64;
	// fmr f31,f3
	f31.f64 = ctx.f3.f64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64;
	// fmr f30,f4
	f30.f64 = ctx.f4.f64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111f04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111F04;
	// lbz ctx_arrow(ctx)->r4,3(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82111ecc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111ECC;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed594
	// b 0x823ed17c
	return;
loc_82111ECC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// bl 0x82113788
	sub_82113788(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82111f04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111F04;
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed594
	// b 0x823ed17c
	return;
loc_82111F04:
	// lis ctx_arrow(ctx)->r11,-32239
	ctx_arrow(ctx)->r11.s64 = -2112815104;
	// fmr f4,f30
	ctx.fpscr.disableFlushMode();
	ctx.f4.f64 = f30.f64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,-2088
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + -2088;
	// fmr f2,f28
	ctx.f2.f64 = f28.f64;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r31,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// stw ctx_arrow(ctx)->r30,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stw ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// bl 0x8210f2f0
	sub_8210F2F0(&ctx);
	// lwz ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// bne ctx_arrow(ctx)->r6,0x82111f60
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111F60;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed594
	// b 0x823ed17c
	return;
loc_82111F60:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x82111f6c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82111F6C;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r30.u64;
loc_82111F6C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82111f80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82111F80;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
loc_82111F80:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82111ffc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82111FFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// rotlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// bl 0x8210e480
	sub_8210E480(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f2,f30
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f30.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8210ece0
	sub_8210ECE0(ctx, base);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8210e480
	sub_8210E480(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f2,f30
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f30.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8210ece0
	sub_8210ECE0(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8210e480
	sub_8210E480(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,26524
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 26524;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_82111FFC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82112010
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82112010;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
loc_82112010:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed594
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82112020) PPC_WEAK_FUNC(sub_82112020);
PPC_FUNC_IMPL(__imp__sub_82112020) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f20{};
	PPCRegister f21{};
	PPCRegister f22{};
	PPCRegister f23{};
	PPCRegister f24{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed104
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-144
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -144;
	// bl 0x823ed528
	// stwu ctx_arrow(ctx)->r1,-496(ctx_arrow(ctx)->r1)
	ea = -496 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f27,f5
	ctx.fpscr.disableFlushMode();
	f27.f64 = ctx.f5.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f26,f6
	f26.f64 = ctx.f6.f64;
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f29,f1
	f29.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r8.u64;
	// fmr f28,f2
	f28.f64 = ctx.f2.f64;
	// li ctx_arrow(ctx)->r15,1
	ctx_arrow(ctx)->r15.s64 = 1;
	// fmr f24,f3
	f24.f64 = ctx.f3.f64;
	// lfs f20,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f20.f64 = double(temp.f32);
	// fmr f23,f4
	f23.f64 = ctx.f4.f64;
	// fmr f22,f7
	f22.f64 = ctx.f7.f64;
	// fmr f21,f8
	f21.f64 = ctx.f8.f64;
	// fmr f30,f20
	f30.f64 = f20.f64;
	// fcmpu ctx_arrow(ctx)->r6,f27,f26
	ctx_arrow(ctx)->r6.compare(f27.f64, f26.f64);
	// bge ctx_arrow(ctx)->r6,0x82112078
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112078;
	// li ctx_arrow(ctx)->r15,0
	ctx_arrow(ctx)->r15.s64 = 0;
loc_82112078:
	// lis ctx_arrow(ctx)->r11,-32239
	ctx_arrow(ctx)->r11.s64 = -2112815104;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r29.s64 = -1;
	// stfs f29,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f29.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,-2088
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + -2088;
	// stfs f28,148(ctx_arrow(ctx)->r1)
	temp.f32 = float(f28.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// stfs f24,112(ctx_arrow(ctx)->r1)
	temp.f32 = float(f24.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfs f23,116(ctx_arrow(ctx)->r1)
	temp.f32 = float(f23.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fmr f4,f23
	ctx.f4.f64 = f23.f64;
	// li ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r18.s64 = 0;
	// stw ctx_arrow(ctx)->r29,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// fmr f3,f24
	ctx.f3.f64 = f24.f64;
	// lfs f25,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f25.f64 = double(temp.f32);
	// fmr f2,f28
	ctx.f2.f64 = f28.f64;
	// fmr f31,f25
	f31.f64 = f25.f64;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// stw ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
	// stw ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// bl 0x8210f2f0
	sub_8210F2F0(&ctx);
	// lwz ctx_arrow(ctx)->r4,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 20, xer);
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r31.u64;
	// ble ctx_arrow(ctx)->r6,0x82112110
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112110;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26556
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26556;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// li ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r30.s64 = 20;
loc_82112110:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,18192
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 18192;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r23,-32010
	ctx_arrow(ctx)->r23.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,18180
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 18180;
	// lis ctx_arrow(ctx)->r24,-32010
	ctx_arrow(ctx)->r24.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// bne ctx_arrow(ctx)->r6,0x82112220
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82112220;
	// lwz ctx_arrow(ctx)->r11,17612(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// lwz ctx_arrow(ctx)->r10,17604(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// lhz ctx_arrow(ctx)->r7,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// stw ctx_arrow(ctx)->r9,21296(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 21296);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,20,12,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 20) & 0xFFFFF;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 1);
	// divw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.s32 = ctx_arrow(ctx)->r8.s32 / ctx_arrow(ctx)->r7.s32;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r6.s32) * int64_t(ctx_arrow(ctx)->r7.s32);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 & ~ctx_arrow(ctx)->r5.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// twlgei ctx_arrow(ctx)->r8,-1
	// lhz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 8);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// extsh ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r8, 0);
	// lis ctx_arrow(ctx)->r10,-32141
	ctx_arrow(ctx)->r10.s64 = -2106392576;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// twllei ctx_arrow(ctx)->r7,0
	// std ctx_arrow(ctx)->r8,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,-10896(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r27)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 12);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f13,96(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,4(ctx_arrow(ctx)->r27)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4);
	// lhz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// extsh ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S16_TO_S64(ctx_arrow(ctx)->r10, 0);
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f13,96(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r28)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// lhz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f13,96(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,4(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4);
	// bl 0x8210a990
	sub_8210A990(&ctx);
	// fmr f30,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f1.f64;
loc_82112220:
	// lis ctx_arrow(ctx)->r22,-32010
	ctx_arrow(ctx)->r22.s64 = -2097807360;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r16.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,21268(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 21268);
	// beq ctx_arrow(ctx)->r6,0x82112458
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112458;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// stwx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x820cef38
	sub_820CEF38(&ctx);
	// lis ctx_arrow(ctx)->r11,-32013
	ctx_arrow(ctx)->r11.s64 = -2098003968;
	// lwz ctx_arrow(ctx)->r19,-2304(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r19.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r19.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82112458
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112458;
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// lwz ctx_arrow(ctx)->r26,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r10,-784
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r10.s64 + -784;
loc_8211226C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r16.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ce830
	sub_820CE830(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112440
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112440;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820cdf80
	sub_820CDF80(ctx, base);
	// lwz ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82112440
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112440;
	// lwz ctx_arrow(ctx)->r7,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_821122C0:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lfsx f5,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r7.u64;
	// fmr f4,f23
	ctx.f4.f64 = f23.f64;
	// divw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s32 = ctx_arrow(ctx)->r31.s32 / ctx_arrow(ctx)->r9.s32;
	// fmr f3,f24
	ctx.f3.f64 = f24.f64;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 1);
	// fmr f2,f28
	ctx.f2.f64 = f28.f64;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// lfs f6,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r10.u64;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r7.u64;
	// twllei ctx_arrow(ctx)->r9,0
	// twlgei ctx_arrow(ctx)->r10,-1
	// lfs f8,4(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,0(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// bl 0x8210eed0
	sub_8210EED0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112430
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112430;
	// lfs f0,0(ctx_arrow(ctx)->r6)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// stfs f0,120(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lfs f0,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// stfs f0,124(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// lfs f0,0(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,136(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// lfs f0,4(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,140(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// bl 0x8210a990
	sub_8210A990(&ctx);
	// fmr f5,f1
	ctx.fpscr.disableFlushMode();
	ctx.f5.f64 = ctx.f1.f64;
	// fcmpu ctx_arrow(ctx)->r6,f5,f30
	ctx_arrow(ctx)->r6.compare(ctx.f5.f64, f30.f64);
	// bge ctx_arrow(ctx)->r6,0x82112428
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112428;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r15,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r15.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821123f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821123F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r18.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821123d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821123D4;
	// li ctx_arrow(ctx)->r18,1
	ctx_arrow(ctx)->r18.s64 = 1;
	// fcmpu ctx_arrow(ctx)->r6,f22,f21
	ctx_arrow(ctx)->r6.compare(f22.f64, f21.f64);
	// blt ctx_arrow(ctx)->r6,0x82112384
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112384;
	// fsubs f25,f22,f27
	f25.f64 = double(float(f22.f64 - f27.f64));
	// fsubs f31,f21,f26
	f31.f64 = double(float(f21.f64 - f26.f64));
	// b 0x821123d4
	goto loc_821123D4;
loc_82112384:
	// fcmpu ctx_arrow(ctx)->r6,f30,f20
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f30.f64, f20.f64);
	// bge ctx_arrow(ctx)->r6,0x8211239c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8211239C;
	// fsubs f0,f24,f29
	f0.f64 = double(float(f24.f64 - f29.f64));
	// fsubs f13,f23,f28
	ctx.f13.f64 = double(float(f23.f64 - f28.f64));
	// fmadds f24,f0,f30,f29
	f24.f64 = double(float(f0.f64 * f30.f64 + f29.f64));
	// fmadds f23,f13,f30,f28
	f23.f64 = double(float(ctx.f13.f64 * f30.f64 + f28.f64));
loc_8211239C:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f2,f28
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f28.f64;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// bl 0x821108b0
	sub_821108B0(ctx, base);
	// fmr f6,f1
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// fmr f2,f23
	ctx.f2.f64 = f23.f64;
	// fmr f1,f24
	ctx.f1.f64 = f24.f64;
	// fadds f27,f6,f27
	f27.f64 = double(float(ctx.f6.f64 + f27.f64));
	// fadds f26,f6,f26
	f26.f64 = double(float(ctx.f6.f64 + f26.f64));
	// bl 0x821108b0
	sub_821108B0(ctx, base);
	// fsubs f0,f1,f6
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64 - ctx.f6.f64));
	// fdivs f31,f0,f30
	f31.f64 = double(float(f0.f64 / f30.f64));
	// fmr f25,f31
	f25.f64 = f31.f64;
loc_821123D4:
	// fmadds f0,f5,f31,f26
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f5.f64 * f31.f64 + f26.f64));
	// lfs f13,128(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x82112428
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112428;
	// fmadds f0,f5,f25,f27
	f0.f64 = double(float(ctx.f5.f64 * f25.f64 + f27.f64));
	// lfs f13,96(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82112428
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112428;
loc_821123F4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// fmr f30,f5
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f5.f64;
	// li ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r21.s64 = 0;
	// stw ctx_arrow(ctx)->r29,21268(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 21268);
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// stw ctx_arrow(ctx)->r11,21296(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 21296);
	// ld ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// ld ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,17612(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 17612);
	// stw ctx_arrow(ctx)->r11,17604(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 17604);
loc_82112428:
	// lwz ctx_arrow(ctx)->r7,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
loc_82112430:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821122c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821122C0;
loc_82112440:
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r19,2
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r19.s64 + 2;
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r19.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8211226c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8211226C;
	// b 0x8211245c
	goto loc_8211245C;
loc_82112458:
	// lwz ctx_arrow(ctx)->r26,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
loc_8211245C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82112498
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82112498;
	// fsubs f0,f23,f28
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f23.f64 - f28.f64));
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fsubs f13,f24,f29
	ctx.f13.f64 = double(float(f24.f64 - f29.f64));
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// fmr f2,f28
	ctx.f2.f64 = f28.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// fmadds f4,f0,f30,f28
	ctx.f4.f64 = double(float(f0.f64 * f30.f64 + f28.f64));
	// fmadds f3,f13,f30,f29
	ctx.f3.f64 = double(float(ctx.f13.f64 * f30.f64 + f29.f64));
	// bl 0x8210f2f0
	sub_8210F2F0(ctx, base);
	// lwz ctx_arrow(ctx)->r26,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
loc_82112498:
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r17)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r17.u32 + 0);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// stfs f30,21272(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 21272);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,496
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 496;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-144
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -144;
	// bl 0x823ed574
	// b 0x823ed154
	return;
}

alias(__imp__sub_821124B8) PPC_WEAK_FUNC(sub_821124B8);
PPC_FUNC_IMPL(__imp__sub_821124B8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed544
	// stwu ctx_arrow(ctx)->r1,-336(ctx_arrow(ctx)->r1)
	ea = -336 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// fmr f30,f2
	f30.f64 = ctx.f2.f64;
	// li ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = -1;
	// fmr f29,f3
	f29.f64 = ctx.f3.f64;
	// lis ctx_arrow(ctx)->r10,-32239
	ctx_arrow(ctx)->r10.s64 = -2112815104;
	// fmr f28,f4
	f28.f64 = ctx.f4.f64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lfs f27,2776(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f27.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,-2088
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + -2088;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
	// stw ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// bl 0x8210f2f0
	sub_8210F2F0(&ctx);
	// lwz ctx_arrow(ctx)->r4,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 20, xer);
	// ble ctx_arrow(ctx)->r6,0x8211254c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8211254C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26600
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26600;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
loc_8211254C:
	// stfs f31,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// stfs f30,100(ctx_arrow(ctx)->r1)
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stfs f29,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f29.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stfs f28,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f28.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// beq ctx_arrow(ctx)->r6,0x821126ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821126AC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x820cef38
	sub_820CEF38(&ctx);
	// lis ctx_arrow(ctx)->r11,-32013
	ctx_arrow(ctx)->r11.s64 = -2098003968;
	// lwz ctx_arrow(ctx)->r26,-2304(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r26.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x821126ac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821126AC;
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10,-784
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r10.s64 + -784;
loc_82112598:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ce830
	sub_820CE830(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112698
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112698;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820cdfc8
	sub_820CDFC8(ctx, base);
	// lwz ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82112698
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112698;
	// lwz ctx_arrow(ctx)->r7,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_821125E4:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// lfsx f5,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f5.f64 = double(temp.f32);
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r7.u64;
	// fmr f4,f28
	ctx.f4.f64 = f28.f64;
	// divw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s32 = ctx_arrow(ctx)->r31.s32 / ctx_arrow(ctx)->r9.s32;
	// fmr f3,f29
	ctx.f3.f64 = f29.f64;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 1);
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// lfs f6,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f6.f64 = double(temp.f32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r10.u64;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r7.u64;
	// twllei ctx_arrow(ctx)->r9,0
	// twlgei ctx_arrow(ctx)->r10,-1
	// lfs f8,4(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfs f7,0(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f7.f64 = double(temp.f32);
	// bl 0x8210eed0
	sub_8210EED0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8211268c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211268C;
	// lfs f0,0(ctx_arrow(ctx)->r6)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// stfs f0,104(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lfs f0,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfs f0,108(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lfs f0,0(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,128(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// lfs f0,4(ctx_arrow(ctx)->r8)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,132(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// bl 0x8210a990
	sub_8210A990(&ctx);
	// lwz ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f27
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f27.f64);
	// lwz ctx_arrow(ctx)->r7,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// bge ctx_arrow(ctx)->r6,0x8211268c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8211268C;
	// fmr f27,f1
	f27.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r29.u64;
loc_8211268C:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, ctx_arrow(ctx)->r9.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821125e4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821125E4;
loc_82112698:
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,2
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 2;
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r26.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82112598
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112598;
loc_821126AC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed590
	// b 0x823ed17c
	return;
}

alias(__imp__sub_821126C0) PPC_WEAK_FUNC(sub_821126C0);
PPC_FUNC_IMPL(__imp__sub_821126C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-104
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -104;
	// bl 0x823ed53c
	// stwu ctx_arrow(ctx)->r1,-368(ctx_arrow(ctx)->r1)
	ea = -368 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f27,f4
	ctx.fpscr.disableFlushMode();
	f27.f64 = ctx.f4.f64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f26,f5
	f26.f64 = ctx.f5.f64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r7.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// fmr f30,f2
	f30.f64 = ctx.f2.f64;
	// li ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.s64 = 1;
	// fmr f29,f3
	f29.f64 = ctx.f3.f64;
	// fcmpu ctx_arrow(ctx)->r6,f27,f26
	ctx_arrow(ctx)->r6.compare(f27.f64, f26.f64);
	// bge ctx_arrow(ctx)->r6,0x82112704
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112704;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r24.u64;
loc_82112704:
	// lis ctx_arrow(ctx)->r11,-32239
	ctx_arrow(ctx)->r11.s64 = -2112815104;
	// fmr f3,f29
	ctx.fpscr.disableFlushMode();
	ctx.f3.f64 = f29.f64;
	// lis ctx_arrow(ctx)->r9,-32239
	ctx_arrow(ctx)->r9.s64 = -2112815104;
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-752
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -752;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stw ctx_arrow(ctx)->r24,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-648
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -648;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
	// stw ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// bl 0x8210fa18
	sub_8210FA18(&ctx);
	// lwz ctx_arrow(ctx)->r4,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x82112a3c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82112A3C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82112a2c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112A2C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 20, xer);
	// ble ctx_arrow(ctx)->r6,0x82112780
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112780;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26640
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26640;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// li ctx_arrow(ctx)->r31,20
	ctx_arrow(ctx)->r31.s64 = 20;
loc_82112780:
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,21268(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 21268);
	// beq ctx_arrow(ctx)->r6,0x82112a28
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112A28;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821127b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821127B4;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f2,f30
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f30.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x821108b0
	sub_821108B0(ctx, base);
	// fadds f27,f1,f27
	ctx.fpscr.disableFlushMode();
	f27.f64 = double(float(ctx.f1.f64 + f27.f64));
	// fadds f26,f1,f26
	f26.f64 = double(float(ctx.f1.f64 + f26.f64));
loc_821127B4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x820cef38
	sub_820CEF38(&ctx);
	// lis ctx_arrow(ctx)->r11,-32013
	ctx_arrow(ctx)->r11.s64 = -2098003968;
	// lwz ctx_arrow(ctx)->r22,-2304(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r22.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82112a28
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112A28;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,18192
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r10.s64 + 18192;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,18180
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r10.s64 + 18180;
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// lfs f28,2688(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// lfs f25,6580(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f25.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10,-784
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r10.s64 + -784;
loc_82112818:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r21.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ce830
	sub_820CE830(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112a14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112A14;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820cdf80
	sub_820CDF80(ctx, base);
	// lwz ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82112a14
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112A14;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112880
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112880;
	// lfs f0,84(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f27,f0
	ctx_arrow(ctx)->r6.compare(f27.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82112a14
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112A14;
	// lfs f0,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f26,f0
	ctx_arrow(ctx)->r6.compare(f26.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82112a14
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82112A14;
loc_82112880:
	// lwz ctx_arrow(ctx)->r6,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f7,f25
	ctx.fpscr.disableFlushMode();
	ctx.f7.f64 = f25.f64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
loc_8211288C:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// divw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.s32 = ctx_arrow(ctx)->r10.s32 / ctx_arrow(ctx)->r8.s32;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r6.u64;
	// mullw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.s64 = int64_t(ctx_arrow(ctx)->r9.s32) * int64_t(ctx_arrow(ctx)->r8.s32);
	// lfs f11,0(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f12,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 1);
	// twllei ctx_arrow(ctx)->r8,0
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r10.u64;
	// twlgei ctx_arrow(ctx)->r10,-1
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// lfs f8,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fsubs f13,f8,f11
	ctx.f13.f64 = double(float(ctx.f8.f64 - ctx.f11.f64));
	// lfs f9,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fsubs f0,f9,f12
	f0.f64 = double(float(ctx.f9.f64 - ctx.f12.f64));
	// fmuls f10,f13,f13
	ctx.f10.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f10,f0,f0,f10
	ctx.f10.f64 = double(float(f0.f64 * f0.f64 + ctx.f10.f64));
	// fsqrts f10,f10
	ctx.f10.f64 = double(float(sqrt(ctx.f10.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f10,f28
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f28.f64);
	// bne ctx_arrow(ctx)->r6,0x82112904
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82112904;
	// fsubs f13,f31,f8
	ctx.f13.f64 = double(float(f31.f64 - ctx.f8.f64));
	// fsubs f0,f30,f9
	f0.f64 = double(float(f30.f64 - ctx.f9.f64));
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f10,f0
	ctx.f10.f64 = double(float(sqrt(f0.f64)));
	// b 0x8211291c
	goto loc_8211291C;
loc_82112904:
	// fsubs f6,f31,f11
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = double(float(f31.f64 - ctx.f11.f64));
	// fsubs f5,f30,f12
	ctx.f5.f64 = double(float(f30.f64 - ctx.f12.f64));
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// fmuls f0,f6,f0
	f0.f64 = double(float(ctx.f6.f64 * f0.f64));
	// fmadds f0,f5,f13,f0
	f0.f64 = double(float(ctx.f5.f64 * ctx.f13.f64 + f0.f64));
	// fdivs f10,f0,f10
	ctx.f10.f64 = double(float(f0.f64 / ctx.f10.f64));
loc_8211291C:
	// fcmpu ctx_arrow(ctx)->r6,f10,f28
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f28.f64);
	// bge ctx_arrow(ctx)->r6,0x82112928
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112928;
	// fneg f10,f10
	ctx.f10.u64 = ctx.f10.u64 ^ 0x8000000000000000;
loc_82112928:
	// fcmpu ctx_arrow(ctx)->r6,f10,f7
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f7.f64);
	// ble ctx_arrow(ctx)->r6,0x821129fc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821129FC;
	// fsubs f0,f31,f11
	f0.f64 = double(float(f31.f64 - ctx.f11.f64));
	// fsubs f13,f30,f12
	ctx.f13.f64 = double(float(f30.f64 - ctx.f12.f64));
	// fsubs f12,f31,f8
	ctx.f12.f64 = double(float(f31.f64 - ctx.f8.f64));
	// fsubs f11,f30,f9
	ctx.f11.f64 = double(float(f30.f64 - ctx.f9.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f29
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f29.f64);
	// bge ctx_arrow(ctx)->r6,0x821129fc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821129FC;
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f0,f0
	f0.f64 = double(float(sqrt(f0.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f0,f29
	ctx_arrow(ctx)->r6.compare(f0.f64, f29.f64);
	// blt ctx_arrow(ctx)->r6,0x821129c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821129C0;
	// fmuls f0,f11,f11
	f0.f64 = double(float(ctx.f11.f64 * ctx.f11.f64));
	// fmadds f0,f12,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + f0.f64));
	// fsqrts f0,f0
	f0.f64 = double(float(sqrt(f0.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f0,f29
	ctx_arrow(ctx)->r6.compare(f0.f64, f29.f64);
	// blt ctx_arrow(ctx)->r6,0x821129c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821129C0;
	// lfs f12,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f12
	f0.f64 = double(float(f0.f64 - ctx.f12.f64));
	// lfs f11,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fsubs f12,f31,f12
	ctx.f12.f64 = double(float(f31.f64 - ctx.f12.f64));
	// lfs f13,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 - ctx.f11.f64));
	// fsubs f11,f30,f11
	ctx.f11.f64 = double(float(f30.f64 - ctx.f11.f64));
	// fmuls f9,f0,f0
	ctx.f9.f64 = double(float(f0.f64 * f0.f64));
	// fmuls f12,f12,f0
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmadds f0,f11,f13,f12
	f0.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fmadds f13,f13,f13,f9
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f9.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x821129b0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821129B0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f28
	ctx_arrow(ctx)->r6.compare(f0.f64, f28.f64);
	// blt ctx_arrow(ctx)->r6,0x821129c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821129C0;
loc_821129B0:
	// fcmpu ctx_arrow(ctx)->r6,f0,f28
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, f28.f64);
	// ble ctx_arrow(ctx)->r6,0x821129fc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821129FC;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x821129fc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821129FC;
loc_821129C0:
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// fmr f7,f10
	ctx.fpscr.disableFlushMode();
	ctx.f7.f64 = ctx.f10.f64;
	// stw ctx_arrow(ctx)->r9,21296(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21296);
	// lfs f0,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lfs f0,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stfs f0,4(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lfs f0,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r29,21268(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 21268);
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r11,17612(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 17612);
	// stw ctx_arrow(ctx)->r11,17604(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 17604);
loc_821129FC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112a0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112A0C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// b 0x8211288c
	goto loc_8211288C;
loc_82112A0C:
	// fcmpu ctx_arrow(ctx)->r6,f7,f25
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f7.f64, f25.f64);
	// bgt ctx_arrow(ctx)->r6,0x82112a3c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82112A3C;
loc_82112A14:
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,2
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 2;
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r22.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82112818
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112818;
loc_82112A28:
	// li ctx_arrow(ctx)->r3,-2
	ctx_arrow(ctx)->r3.s64 = -2;
loc_82112A2C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,368
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 368;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-104
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -104;
	// bl 0x823ed588
	// b 0x823ed168
	return;
loc_82112A3C:
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,368
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 368;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-104
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -104;
	// bl 0x823ed588
	// b 0x823ed168
	return;
}

alias(__imp__sub_82112A50) PPC_WEAK_FUNC(sub_82112A50);
PPC_FUNC_IMPL(__imp__sub_82112A50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-104
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -104;
	// bl 0x823ed53c
	// stwu ctx_arrow(ctx)->r1,-368(ctx_arrow(ctx)->r1)
	ea = -368 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f27,f4
	ctx.fpscr.disableFlushMode();
	f27.f64 = ctx.f4.f64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f26,f5
	f26.f64 = ctx.f5.f64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r7.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// fmr f30,f2
	f30.f64 = ctx.f2.f64;
	// li ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.s64 = 1;
	// fmr f29,f3
	f29.f64 = ctx.f3.f64;
	// fcmpu ctx_arrow(ctx)->r6,f27,f26
	ctx_arrow(ctx)->r6.compare(f27.f64, f26.f64);
	// bge ctx_arrow(ctx)->r6,0x82112a94
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112A94;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r24.u64;
loc_82112A94:
	// lis ctx_arrow(ctx)->r11,-32239
	ctx_arrow(ctx)->r11.s64 = -2112815104;
	// fmr f3,f29
	ctx.fpscr.disableFlushMode();
	ctx.f3.f64 = f29.f64;
	// lis ctx_arrow(ctx)->r9,-32239
	ctx_arrow(ctx)->r9.s64 = -2112815104;
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-752
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -752;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stw ctx_arrow(ctx)->r24,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-648
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -648;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
	// stw ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// bl 0x8210fa18
	sub_8210FA18(&ctx);
	// lwz ctx_arrow(ctx)->r4,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 20, xer);
	// ble ctx_arrow(ctx)->r6,0x82112afc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112AFC;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26640
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26640;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// li ctx_arrow(ctx)->r31,20
	ctx_arrow(ctx)->r31.s64 = 20;
loc_82112AFC:
	// lis ctx_arrow(ctx)->r25,-32010
	ctx_arrow(ctx)->r25.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,21268(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 21268);
	// beq ctx_arrow(ctx)->r6,0x82112da4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112DA4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112b30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112B30;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f2,f30
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = f30.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x821108b0
	sub_821108B0(ctx, base);
	// fadds f27,f1,f27
	ctx.fpscr.disableFlushMode();
	f27.f64 = double(float(ctx.f1.f64 + f27.f64));
	// fadds f26,f1,f26
	f26.f64 = double(float(ctx.f1.f64 + f26.f64));
loc_82112B30:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bl 0x820cef38
	sub_820CEF38(&ctx);
	// lis ctx_arrow(ctx)->r11,-32013
	ctx_arrow(ctx)->r11.s64 = -2098003968;
	// lwz ctx_arrow(ctx)->r22,-2304(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r22.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x82112da4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112DA4;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,18192
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r10.s64 + 18192;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,18180
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r10.s64 + 18180;
	// lis ctx_arrow(ctx)->r10,-32014
	ctx_arrow(ctx)->r10.s64 = -2098069504;
	// lfs f28,2688(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r27,-32010
	ctx_arrow(ctx)->r27.s64 = -2097807360;
	// lfs f25,6580(ctx_arrow(ctx)->r9)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f25.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10,-784
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r10.s64 + -784;
loc_82112B94:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r21.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820ce830
	sub_820CE830(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112d90
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112D90;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x820cdf80
	sub_820CDF80(ctx, base);
	// lwz ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x82112d90
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112D90;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112bfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112BFC;
	// lfs f0,84(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f27,f0
	ctx_arrow(ctx)->r6.compare(f27.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82112d90
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112D90;
	// lfs f0,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f26,f0
	ctx_arrow(ctx)->r6.compare(f26.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82112d90
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82112D90;
loc_82112BFC:
	// lwz ctx_arrow(ctx)->r6,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f7,f25
	ctx.fpscr.disableFlushMode();
	ctx.f7.f64 = f25.f64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
loc_82112C08:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// divw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.s32 = ctx_arrow(ctx)->r10.s32 / ctx_arrow(ctx)->r8.s32;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r6.u64;
	// mullw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.s64 = int64_t(ctx_arrow(ctx)->r9.s32) * int64_t(ctx_arrow(ctx)->r8.s32);
	// lfs f11,0(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lfs f12,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 1);
	// twllei ctx_arrow(ctx)->r8,0
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r10.u64;
	// twlgei ctx_arrow(ctx)->r10,-1
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// lfs f8,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// fsubs f13,f8,f11
	ctx.f13.f64 = double(float(ctx.f8.f64 - ctx.f11.f64));
	// lfs f9,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fsubs f0,f9,f12
	f0.f64 = double(float(ctx.f9.f64 - ctx.f12.f64));
	// fmuls f10,f13,f13
	ctx.f10.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f10,f0,f0,f10
	ctx.f10.f64 = double(float(f0.f64 * f0.f64 + ctx.f10.f64));
	// fsqrts f10,f10
	ctx.f10.f64 = double(float(sqrt(ctx.f10.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f10,f28
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f28.f64);
	// bne ctx_arrow(ctx)->r6,0x82112c80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82112C80;
	// fsubs f13,f31,f8
	ctx.f13.f64 = double(float(f31.f64 - ctx.f8.f64));
	// fsubs f0,f30,f9
	f0.f64 = double(float(f30.f64 - ctx.f9.f64));
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f10,f0
	ctx.f10.f64 = double(float(sqrt(f0.f64)));
	// b 0x82112c98
	goto loc_82112C98;
loc_82112C80:
	// fsubs f6,f31,f11
	ctx.fpscr.disableFlushMode();
	ctx.f6.f64 = double(float(f31.f64 - ctx.f11.f64));
	// fsubs f5,f30,f12
	ctx.f5.f64 = double(float(f30.f64 - ctx.f12.f64));
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// fmuls f0,f6,f0
	f0.f64 = double(float(ctx.f6.f64 * f0.f64));
	// fmadds f0,f5,f13,f0
	f0.f64 = double(float(ctx.f5.f64 * ctx.f13.f64 + f0.f64));
	// fdivs f10,f0,f10
	ctx.f10.f64 = double(float(f0.f64 / ctx.f10.f64));
loc_82112C98:
	// fcmpu ctx_arrow(ctx)->r6,f10,f28
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f28.f64);
	// bge ctx_arrow(ctx)->r6,0x82112ca4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112CA4;
	// fneg f10,f10
	ctx.f10.u64 = ctx.f10.u64 ^ 0x8000000000000000;
loc_82112CA4:
	// fcmpu ctx_arrow(ctx)->r6,f10,f7
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f7.f64);
	// ble ctx_arrow(ctx)->r6,0x82112d78
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112D78;
	// fsubs f0,f31,f11
	f0.f64 = double(float(f31.f64 - ctx.f11.f64));
	// fsubs f13,f30,f12
	ctx.f13.f64 = double(float(f30.f64 - ctx.f12.f64));
	// fsubs f12,f31,f8
	ctx.f12.f64 = double(float(f31.f64 - ctx.f8.f64));
	// fsubs f11,f30,f9
	ctx.f11.f64 = double(float(f30.f64 - ctx.f9.f64));
	// fcmpu ctx_arrow(ctx)->r6,f10,f29
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, f29.f64);
	// bge ctx_arrow(ctx)->r6,0x82112d78
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112D78;
	// fmuls f13,f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64));
	// fmadds f0,f0,f0,f13
	f0.f64 = double(float(f0.f64 * f0.f64 + ctx.f13.f64));
	// fsqrts f0,f0
	f0.f64 = double(float(sqrt(f0.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f0,f29
	ctx_arrow(ctx)->r6.compare(f0.f64, f29.f64);
	// blt ctx_arrow(ctx)->r6,0x82112d3c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112D3C;
	// fmuls f0,f11,f11
	f0.f64 = double(float(ctx.f11.f64 * ctx.f11.f64));
	// fmadds f0,f12,f12,f0
	f0.f64 = double(float(ctx.f12.f64 * ctx.f12.f64 + f0.f64));
	// fsqrts f0,f0
	f0.f64 = double(float(sqrt(f0.f64)));
	// fcmpu ctx_arrow(ctx)->r6,f0,f29
	ctx_arrow(ctx)->r6.compare(f0.f64, f29.f64);
	// blt ctx_arrow(ctx)->r6,0x82112d3c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112D3C;
	// lfs f12,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f0,f0,f12
	f0.f64 = double(float(f0.f64 - ctx.f12.f64));
	// lfs f11,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fsubs f12,f31,f12
	ctx.f12.f64 = double(float(f31.f64 - ctx.f12.f64));
	// lfs f13,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fsubs f13,f13,f11
	ctx.f13.f64 = double(float(ctx.f13.f64 - ctx.f11.f64));
	// fsubs f11,f30,f11
	ctx.f11.f64 = double(float(f30.f64 - ctx.f11.f64));
	// fmuls f9,f0,f0
	ctx.f9.f64 = double(float(f0.f64 * f0.f64));
	// fmuls f12,f12,f0
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64));
	// fmadds f0,f11,f13,f12
	f0.f64 = double(float(ctx.f11.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fmadds f13,f13,f13,f9
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f13.f64 + ctx.f9.f64));
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x82112d2c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112D2C;
	// fcmpu ctx_arrow(ctx)->r6,f0,f28
	ctx_arrow(ctx)->r6.compare(f0.f64, f28.f64);
	// blt ctx_arrow(ctx)->r6,0x82112d3c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112D3C;
loc_82112D2C:
	// fcmpu ctx_arrow(ctx)->r6,f0,f28
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, f28.f64);
	// ble ctx_arrow(ctx)->r6,0x82112d78
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112D78;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x82112d78
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112D78;
loc_82112D3C:
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// fmr f7,f10
	ctx.fpscr.disableFlushMode();
	ctx.f7.f64 = ctx.f10.f64;
	// stw ctx_arrow(ctx)->r9,21296(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 21296);
	// lfs f0,0(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lfs f0,4(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// stfs f0,4(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// lfs f0,0(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lfs f0,4(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stw ctx_arrow(ctx)->r29,21268(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 21268);
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r11,17612(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 17612);
	// stw ctx_arrow(ctx)->r11,17604(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 17604);
loc_82112D78:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112d88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112D88;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// b 0x82112c08
	goto loc_82112C08;
loc_82112D88:
	// fcmpu ctx_arrow(ctx)->r6,f7,f25
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f7.f64, f25.f64);
	// bgt ctx_arrow(ctx)->r6,0x82112db8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82112DB8;
loc_82112D90:
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,2
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 2;
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r22.u32 + 0);
	// extsh ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x82112b94
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112B94;
loc_82112DA4:
	// li ctx_arrow(ctx)->r3,-2
	ctx_arrow(ctx)->r3.s64 = -2;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,368
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 368;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-104
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -104;
	// bl 0x823ed588
	// b 0x823ed168
	return;
loc_82112DB8:
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,368
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 368;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-104
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -104;
	// bl 0x823ed588
	// b 0x823ed168
	return;
}

alias(__imp__sub_82112DD0) PPC_WEAK_FUNC(sub_82112DD0);
PPC_FUNC_IMPL(__imp__sub_82112DD0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// ld ctx_arrow(ctx)->r12,-4096(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U64(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r1,-4272(ctx_arrow(ctx)->r1)
	ea = -4272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r30,-32010
	ctx_arrow(ctx)->r30.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r26,-32010
	ctx_arrow(ctx)->r26.s64 = -2097807360;
	// lis ctx_arrow(ctx)->r31,-32010
	ctx_arrow(ctx)->r31.s64 = -2097807360;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r29,-32141
	ctx_arrow(ctx)->r29.s64 = -2106392576;
	// lwz ctx_arrow(ctx)->r11,21288(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r27,-32141
	ctx_arrow(ctx)->r27.s64 = -2106392576;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r11,21308(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17,15,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 17) & 0x1FFFF;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// beq ctx_arrow(ctx)->r6,0x82112ec0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112EC0;
	// lwz ctx_arrow(ctx)->r11,-10880(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82112e5c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82112E5C;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// clrlwi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// lis ctx_arrow(ctx)->r10,255
	ctx_arrow(ctx)->r10.s64 = 16711680;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r24.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,65535
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 65535;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82112e5c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82112E5C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,26696
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 26696;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
loc_82112E5C:
	// lwz ctx_arrow(ctx)->r11,21308(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82112ec0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82112EC0;
	// lwz ctx_arrow(ctx)->r11,-10880(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// extsw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s32;
	// lwz ctx_arrow(ctx)->r11,-10876(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// extsw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s32;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,14064(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f0,13964(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f13,21304(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f13,f12
	ctx.f13.f64 = double(float(ctx.f13.f64 * ctx.f12.f64));
	// lfd f12,88(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// fdivs f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 / ctx.f11.f64));
	// fmadds f0,f12,f0,f13
	f0.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// b 0x82112edc
	goto loc_82112EDC;
loc_82112EC0:
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// lfs f13,15540(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f0,21304(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f12,3904(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f0,f0,f13,f12
	f0.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
loc_82112EDC:
	// stfs f0,21304(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 21304);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-10880(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + -10880);
	// stw ctx_arrow(ctx)->r11,-10876(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + -10876);
	// stw ctx_arrow(ctx)->r11,21308(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 21308);
	// bl 0x8238ce40
	sub_8238CE40(&ctx);
	// clrlwi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	// bl 0x8238ce40
	sub_8238CE40(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// xori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64 ^ 1;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r11,21288(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,1024
	ctx_arrow(ctx)->r7.s64 = 1024;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,48
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & 0xFFFF;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// extsb ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,15620(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32010
	ctx_arrow(ctx)->r11.s64 = -2097807360;
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,21300(ctx_arrow(ctx)->r11)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 21300);
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821115a0
	sub_821115A0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,21288(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1024
	ctx_arrow(ctx)->r6.s64 = 1024;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r11,18172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82111b38
	sub_82111B38(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,4272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 4272;
	// b 0x823ed178
	return;
}

alias(__imp__sub_82112F80) PPC_WEAK_FUNC(sub_82112F80);
PPC_FUNC_IMPL(__imp__sub_82112F80) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32123
	ctx_arrow(ctx)->r11.s64 = -2105212928;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,32620
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 32620;
	// lis ctx_arrow(ctx)->r27,-32123
	ctx_arrow(ctx)->r27.s64 = -2105212928;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// lis ctx_arrow(ctx)->r28,-32010
	ctx_arrow(ctx)->r28.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,26736
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s64 + 26736;
loc_82112FA8:
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwz ctx_arrow(ctx)->r11,32588(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82113018
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82113018;
loc_82112FBC:
	// lbz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,1(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x82113004
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82113004;
loc_82112FCC:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x823ed380
	sub_823ED380(ctx, base);
	// lwz ctx_arrow(ctx)->r11,21420(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// lbz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stb ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 6));
	// lbz ctx_arrow(ctx)->r11,1(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82112fcc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82112FCC;
loc_82113004:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 2;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,255
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 255, xer);
	// bne ctx_arrow(ctx)->r6,0x82112fbc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82112FBC;
	// b 0x82113028
	goto loc_82113028;
loc_82113018:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 2;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,255
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 255, xer);
	// bne ctx_arrow(ctx)->r6,0x82113018
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82113018;
loc_82113028:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r26.s64 + 20;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82112fa8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82112FA8;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_82113040) PPC_WEAK_FUNC(sub_82113040);
PPC_FUNC_IMPL(__imp__sub_82113040) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r10,-32009
	ctx_arrow(ctx)->r10.s64 = -2097741824;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lwz ctx_arrow(ctx)->r8,12232(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8211307c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8211307C;
	// lis ctx_arrow(ctx)->r10,-32010
	ctx_arrow(ctx)->r10.s64 = -2097807360;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28824
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 28824;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
loc_82113060:
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r3.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8211309c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211309C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 24;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r8.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x82113060
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82113060;
loc_8211307C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// stfs f0,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// stfs f0,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// blr 
	return;
loc_8211309C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 + 12;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r9.s64 + 16;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,20
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 20;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,4(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,8(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,12(ctx_arrow(ctx)->r4)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// blr 
	return;
}

alias(__imp__sub_821130E0) PPC_WEAK_FUNC(sub_821130E0);
PPC_FUNC_IMPL(__imp__sub_821130E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32123
	ctx_arrow(ctx)->r11.s64 = -2105212928;
	// lis ctx_arrow(ctx)->r10,-32123
	ctx_arrow(ctx)->r10.s64 = -2105212928;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32656
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32656;
	// lwz ctx_arrow(ctx)->r11,32588(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,56
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 56;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfsx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fdivs f1,f0,f13
	ctx.f1.f64 = double(float(f0.f64 / ctx.f13.f64));
	// blr 
	return;
}

alias(__imp__sub_82113110) PPC_WEAK_FUNC(sub_82113110);
PPC_FUNC_IMPL(__imp__sub_82113110) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32123
	ctx_arrow(ctx)->r11.s64 = -2105212928;
	// lfs f1,32584(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_82113120) PPC_WEAK_FUNC(sub_82113120);
PPC_FUNC_IMPL(__imp__sub_82113120) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-32123
	ctx_arrow(ctx)->r10.s64 = -2105212928;
	// lis ctx_arrow(ctx)->r11,-32123
	ctx_arrow(ctx)->r11.s64 = -2105212928;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32656
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32656;
	// lwz ctx_arrow(ctx)->r10,32588(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 24;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,56
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 56;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82113140) PPC_WEAK_FUNC(sub_82113140);
PPC_FUNC_IMPL(__imp__sub_82113140) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-32123
	ctx_arrow(ctx)->r10.s64 = -2105212928;
	// lis ctx_arrow(ctx)->r11,-32123
	ctx_arrow(ctx)->r11.s64 = -2105212928;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32656
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32656;
	// lwz ctx_arrow(ctx)->r10,32588(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 28;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,56
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 56;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82113160) PPC_WEAK_FUNC(sub_82113160);
PPC_FUNC_IMPL(__imp__sub_82113160) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32009
	ctx_arrow(ctx)->r11.s64 = -2097741824;
	// beq ctx_arrow(ctx)->r6,0x8211317c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8211317C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-9868
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -9868;
	// lwz ctx_arrow(ctx)->r3,-8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
loc_8211317C:
	// lwz ctx_arrow(ctx)->r3,-9868(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

