#include "ppc_recomp_patch.h"
#include "../include/ppc/ppc_recomp_fix.h"
#include "../include/ppc/ppc_recomp_wrappers.h"
#include "ppc_recomp_shared.h"
#include "../include/ppc/ppc_register.h"




#include "../include/ppc/ppc_recomp_macros.h"



alias(__imp__sub_82317DC0) PPC_WEAK_FUNC(sub_82317DC0);
PPC_FUNC_IMPL(__imp__sub_82317DC0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble 0x82317e08
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_82317E08;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x82317df8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82317DF8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x82317df8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82317DF8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,512
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 512, xer);
	// bne ctx_arrow(ctx)->r6,0x82317e08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82317E08;
loc_82317DF8:
	// lis ctx_arrow(ctx)->r11,-64
	ctx_arrow(ctx)->r11.s64 = -4194304;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f1,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x82317e10
	goto loc_82317E10;
loc_82317E08:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x823edbe0
	sub_823EDBE0(ctx, base);
loc_82317E10:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82317E28) PPC_WEAK_FUNC(sub_82317E28);
PPC_FUNC_IMPL(__imp__sub_82317E28) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble 0x82317e70
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_82317E70;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x82317e60
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82317E60;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x82317e60
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82317E60;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,512
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 512, xer);
	// bne ctx_arrow(ctx)->r6,0x82317e70
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82317E70;
loc_82317E60:
	// lis ctx_arrow(ctx)->r11,-64
	ctx_arrow(ctx)->r11.s64 = -4194304;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f1,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x82317e78
	goto loc_82317E78;
loc_82317E70:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x823edcb0
	sub_823EDCB0(ctx, base);
loc_82317E78:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82317E90) PPC_WEAK_FUNC(sub_82317E90);
PPC_FUNC_IMPL(__imp__sub_82317E90) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f1,2728(ctx_arrow(ctx)->r11)
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f1
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f1.f64);
	// beq ctx_arrow(ctx)->r6,0x82317f0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82317F0C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x82317ed4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82317ED4;
loc_82317EC4:
	// lis ctx_arrow(ctx)->r11,-64
	ctx_arrow(ctx)->r11.s64 = -4194304;
loc_82317EC8:
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f1,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x82317f0c
	goto loc_82317F0C;
loc_82317ED4:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble 0x82317f04
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_82317F04;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x82317ec4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82317EC4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x82317ec4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82317EC4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,512
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 512, xer);
	// bne ctx_arrow(ctx)->r6,0x82317f04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82317F04;
	// lis ctx_arrow(ctx)->r11,32640
	ctx_arrow(ctx)->r11.s64 = 2139095040;
	// b 0x82317ec8
	goto loc_82317EC8;
loc_82317F04:
	// fsqrt f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = sqrt(f31.f64);
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
loc_82317F0C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82317F20) PPC_WEAK_FUNC(sub_82317F20);
PPC_FUNC_IMPL(__imp__sub_82317F20) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f29,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stfd f30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f29,2728(ctx_arrow(ctx)->r11)
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f29
	ctx_arrow(ctx)->r6.compare(f31.f64, f29.f64);
	// bne ctx_arrow(ctx)->r6,0x82317f54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82317F54;
	// fmr f1,f29
	ctx.f1.f64 = f29.f64;
	// b 0x82317fd0
	goto loc_82317FD0;
loc_82317F54:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f30,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f30
	ctx_arrow(ctx)->r6.compare(f31.f64, f30.f64);
	// bge ctx_arrow(ctx)->r6,0x82317f74
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82317F74;
loc_82317F64:
	// lis ctx_arrow(ctx)->r11,-64
	ctx_arrow(ctx)->r11.s64 = -4194304;
loc_82317F68:
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f1,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x82317fd0
	goto loc_82317FD0;
loc_82317F74:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ble 0x82317fc4
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_82317FC4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// ble ctx_arrow(ctx)->r6,0x82317f64
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82317F64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x82317f64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82317F64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 32, xer);
	// beq ctx_arrow(ctx)->r6,0x82317fbc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82317FBC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,64
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 64, xer);
	// beq ctx_arrow(ctx)->r6,0x82317fb4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82317FB4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,512
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 512, xer);
	// bne ctx_arrow(ctx)->r6,0x82317fc4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82317FC4;
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// b 0x82317fd0
	goto loc_82317FD0;
loc_82317FB4:
	// lis ctx_arrow(ctx)->r11,32640
	ctx_arrow(ctx)->r11.s64 = 2139095040;
	// b 0x82317f68
	goto loc_82317F68;
loc_82317FBC:
	// lis ctx_arrow(ctx)->r11,-128
	ctx_arrow(ctx)->r11.s64 = -8388608;
	// b 0x82317f68
	goto loc_82317F68;
loc_82317FC4:
	// fsqrt f0,f31
	ctx.fpscr.disableFlushMode();
	f0.f64 = sqrt(f31.f64);
	// fdiv f1,f29,f0
	ctx.f1.f64 = f29.f64 / f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
loc_82317FD0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f29,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-24(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82317FF0) PPC_WEAK_FUNC(sub_82317FF0);
PPC_FUNC_IMPL(__imp__sub_82317FF0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// b 0x82318040
	goto loc_82318040;
loc_82318010:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82318034
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318034;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8231804c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231804C;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// subf ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r11.s64;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// b 0x82318040
	goto loc_82318040;
loc_82318034:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822ef5e0
	sub_822EF5E0(ctx, base);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + -1;
loc_82318040:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82318010
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318010;
	// b 0x82318058
	goto loc_82318058;
loc_8231804C:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r31.s64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
loc_82318058:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82318070) PPC_WEAK_FUNC(sub_82318070);
PPC_FUNC_IMPL(__imp__sub_82318070) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x822e4d38
	sub_822E4D38(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// li ctx_arrow(ctx)->r4,95
	ctx_arrow(ctx)->r4.s64 = 95;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stb ctx_arrow(ctx)->r26,-1(ctx_arrow(ctx)->r27)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r27.u32 + -1, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r26), 0);
	// bl 0x823f0670
	sub_823F0670(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq 0x823180f8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823180F8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-17108
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -17108;
	// bl 0x823f07a0
	sub_823F07A0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823180f4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823180F4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,1612
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 1612;
	// bl 0x823f07a0
	sub_823F07A0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x823180f8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823180F8;
loc_823180F4:
	// stb ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r26), 0);
loc_823180F8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_82318100:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82318100
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318100;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// b 0x82318140
	goto loc_82318140;
loc_82318124:
	// lbz ctx_arrow(ctx)->r11,-1(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// extsb ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s8;
	// bl 0x823f0818
	sub_823F0818(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82318148
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318148;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r28.u64;
loc_82318140:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x82318124
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82318124;
loc_82318148:
	// li ctx_arrow(ctx)->r5,10
	ctx_arrow(ctx)->r5.s64 = 10;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823eede8
	sub_823EEDE8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r25.u64;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82318190
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318190;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318190
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318190;
	// lis ctx_arrow(ctx)->r11,-32253
	ctx_arrow(ctx)->r11.s64 = -2113732608;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,4684
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 4684;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r30.s64;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x823f1d48
	sub_823F1D48(ctx, base);
	// stb ctx_arrow(ctx)->r26,-1(ctx_arrow(ctx)->r27)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r27.u32 + -1, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r26), 0);
loc_82318190:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82318198) PPC_WEAK_FUNC(sub_82318198);
PPC_FUNC_IMPL(__imp__sub_82318198) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823181cc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823181CC;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x823181cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823181CC;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// stw ctx_arrow(ctx)->r9,28(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 28);
loc_823181CC:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823181fc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823181FC;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r5,100
	ctx_arrow(ctx)->r5.s64 = 100;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82318070
	sub_82318070(ctx, base);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r4,3628
	ctx_arrow(ctx)->r4.s64 = 3628;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_823181FC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,14,16,17
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r5.u32, 14) & 0xC000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFF3FFF);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82318220) PPC_WEAK_FUNC(sub_82318220);
PPC_FUNC_IMPL(__imp__sub_82318220) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,40
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 * 40;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,29,18,31
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x3FFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82318268
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318268;
	// bl 0x82296460
	sub_82296460(ctx, base);
loc_82318268:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 3) & 0xFFFFFFF8;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,28,18,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x3FFF;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,0,1,1
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// beq 0x823182d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823182D4;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231834c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231834C;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
loc_823182A8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,28,18,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823182c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823182C4;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
loc_823182C4:
	// addic. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,-1
	xer.ca = ctx_arrow(ctx)->r6.u32 > 0;
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// bne 0x823182a8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823182A8;
	// b 0x8231834c
	goto loc_8231834C;
loc_823182D4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231830c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231830C;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -8;
loc_823182E8:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28,18,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 28) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231830c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231830C;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
	// addic. ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,-1
	xer.ca = ctx_arrow(ctx)->r5.u32 > 0;
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -8;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r8.u64;
	// bne 0x823182e8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823182E8;
loc_8231830C:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82318348
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82318348;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
loc_82318320:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28,18,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 28) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82318348
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318348;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r8.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r29.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82318320
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82318320;
loc_82318348:
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r5.s64;
loc_8231834C:
	// stw ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_82318368) PPC_WEAK_FUNC(sub_82318368);
PPC_FUNC_IMPL(__imp__sub_82318368) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x823183e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823183E0;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,15,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1FFF8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// beqlr 
	if (ctx_arrow(ctx)->r0.eq()) return;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_82318384:
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,28,18,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r5.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823183c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823183C4;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 31;
	ctx_arrow(ctx)->r9.s64 = 31 - ctx_arrow(ctx)->r9.s64;
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2,16,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 2) & 0xFFFC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFFFFFF0003);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0,30,14
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0) & 0xFFFFFFFFFFFE0003) | (ctx_arrow(ctx)->r6.u64 & 0x1FFFC);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
loc_823183C4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,18,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82318384
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82318384;
	// blr 
	return;
loc_823183E0:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r7.u32, xer);
	// bgelr ctx_arrow(ctx)->r6
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) return;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,3,0,28
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 3) & 0xFFFFFFF8;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r6.s64;
loc_823183F4:
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64;
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,8
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 8;
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0,16,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 0) & 0xFFFC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFFFFFF0003);
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0,30,14
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 0) & 0xFFFFFFFFFFFE0003) | (ctx_arrow(ctx)->r6.u64 & 0x1FFFC);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// bne 0x823183f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823183F4;
	// blr 
	return;
}

alias(__imp__sub_82318430) PPC_WEAK_FUNC(sub_82318430);
PPC_FUNC_IMPL(__imp__sub_82318430) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r5,40
	ctx_arrow(ctx)->r5.s64 = 40;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,64
	ctx_arrow(ctx)->r11.s64 = 4194304;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,25,17
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFFFFC07F;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,7,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 7) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82318490) PPC_WEAK_FUNC(sub_82318490);
PPC_FUNC_IMPL(__imp__sub_82318490) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823184b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823184B0;
	// bl 0x82317be0
	sub_82317BE0(ctx, base);
loc_823184B0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823184c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823184C8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f2,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	ctx.f2.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823f09b8
	sub_823F09B8(ctx, base);
	// frsp f1,f1
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64));
loc_823184C8:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823184e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823184E4;
	// stfs f1,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// xoris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 2147483648;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// lfs f1,132(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
loc_823184E4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_823184F8) PPC_WEAK_FUNC(sub_823184F8);
PPC_FUNC_IMPL(__imp__sub_823184F8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82318524
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318524;
	// frsp f1,f1
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64));
	// bl 0x82317be0
	sub_82317BE0(ctx, base);
loc_82318524:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82318538
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318538;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f2,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	ctx.f2.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823f09b8
	sub_823F09B8(ctx, base);
loc_82318538:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231855c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231855C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82318558
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318558;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfd f0,14672(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fsub f1,f0,f1
	ctx.f1.f64 = f0.f64 - ctx.f1.f64;
	// b 0x8231855c
	goto loc_8231855C;
loc_82318558:
	// bl 0x823f09f0
	sub_823F09F0(ctx, base);
loc_8231855C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82318578) PPC_WEAK_FUNC(sub_82318578);
PPC_FUNC_IMPL(__imp__sub_82318578) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x82318594
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82318594;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,101
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 101, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x82318598
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82318598;
loc_82318594:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82318598:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823185e4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823185E4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823185b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823185B0;
loc_823185A8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
loc_823185B0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x823185cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823185CC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 123, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x823185d0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823185D0;
loc_823185CC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_823185D0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
loc_823185D4:
	// bne 0x823185a8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823185A8;
loc_823185D8:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x823186c8
	goto loc_823186C8;
loc_823185E4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x82318600
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318600;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 123, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82318604
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318604;
loc_82318600:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_82318604:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823186bc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823186BC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x380000;
	// lis ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = 1048576;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x823185d8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823185D8;
	// lwz ctx_arrow(ctx)->r8,40(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,44(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x82318644
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318644;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 123, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82318648
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318648;
loc_82318644:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_82318648:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x8231866c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231866C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 123, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82318670
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318670;
loc_8231866C:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_82318670:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// beq 0x82318694
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318694;
	// clrlwi. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82318694
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318694;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ ctx_arrow(ctx)->r7.u64;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,27,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x823185a8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823185A8;
loc_82318694:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823186a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823186A4;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823185d8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823185D8;
loc_823186A4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,31,1,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 31) & 0x7FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0xFF;
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r10.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// b 0x823185d4
	goto loc_823185D4;
loc_823186BC:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// b 0x823185d4
	goto loc_823185D4;
loc_823186C4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_823186C8:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823186c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823186C4;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// stw ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,5,19,26
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 5) & 0x1FE0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFE01F);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,0,27,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 0) & 0x1F) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFE0);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82318708) PPC_WEAK_FUNC(sub_82318708);
PPC_FUNC_IMPL(__imp__sub_82318708) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister temp{};
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 10;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lfsx f1,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x82318490
	sub_82318490(ctx, base);
	return;
}

alias(__imp__sub_82318720) PPC_WEAK_FUNC(sub_82318720);
PPC_FUNC_IMPL(__imp__sub_82318720) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0xFFFFF000;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231875c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231875C;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// b 0x82318770
	goto loc_82318770;
loc_8231875C:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
loc_82318770:
	// bl 0x822bdb58
	sub_822BDB58(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82318798) PPC_WEAK_FUNC(sub_82318798);
PPC_FUNC_IMPL(__imp__sub_82318798) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0x3;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823187a8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823187A8;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
loc_823187A8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823187e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823187E8;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823187c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823187C8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// b 0x823187e0
	goto loc_823187E0;
loc_823187C8:
	// lis ctx_arrow(ctx)->r11,-128
	ctx_arrow(ctx)->r11.s64 = -8388608;
	// stw ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfs f13,-16(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// stfd f13,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
loc_823187E0:
	// stfd f0,0(ctx_arrow(ctx)->r5)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// b 0x82318804
	goto loc_82318804;
loc_823187E8:
	// lis ctx_arrow(ctx)->r11,32640
	ctx_arrow(ctx)->r11.s64 = 2139095040;
	// stw ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lfs f0,-16(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfd f0,0(ctx_arrow(ctx)->r5)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
loc_82318804:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
}

alias(__imp__sub_82318810) PPC_WEAK_FUNC(sub_82318810);
PPC_FUNC_IMPL(__imp__sub_82318810) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister f0{};
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// beq 0x82318868
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318868;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,0(ctx_arrow(ctx)->r3)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// lfd f12,2728(ctx_arrow(ctx)->r11)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// bge ctx_arrow(ctx)->r6,0x8231883c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231883C;
	// stfd f13,0(ctx_arrow(ctx)->r3)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x82318848
	goto loc_82318848;
loc_8231883C:
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x82318848
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82318848;
	// stfd f12,0(ctx_arrow(ctx)->r3)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82318848:
	// lfd f0,0(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8231885c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231885C;
	// stfd f13,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// b 0x82318868
	goto loc_82318868;
loc_8231885C:
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// ble ctx_arrow(ctx)->r6,0x82318868
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82318868;
	// stfd f12,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
loc_82318868:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823188b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823188B0;
	// lfd f12,0(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f12,f13
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x823188b0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_823188B0;
	// lfd f0,0(ctx_arrow(ctx)->r4)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x8231889c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231889C;
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfd f0,0(ctx_arrow(ctx)->r3)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// fneg f0,f12
	f0.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfd f0,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// b 0x823188b0
	goto loc_823188B0;
loc_8231889C:
	// fneg f12,f12
	ctx.fpscr.disableFlushMode();
	ctx.f12.u64 = ctx.f12.u64 ^ 0x8000000000000000;
	// stfd f13,0(ctx_arrow(ctx)->r3)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x823188b0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823188B0;
	// stfd f12,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
loc_823188B0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beqlr 
	if (ctx_arrow(ctx)->r0.eq()) return;
	// lfd f13,0(ctx_arrow(ctx)->r4)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f0,0(ctx_arrow(ctx)->r3)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fneg f13,f13
	ctx.f13.u64 = ctx.f13.u64 ^ 0x8000000000000000;
	// stfd f13,0(ctx_arrow(ctx)->r3)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfd f0,0(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_823188D8) PPC_WEAK_FUNC(sub_823188D8);
PPC_FUNC_IMPL(__imp__sub_823188D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x82318948
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318948;
	// bl 0x822bdb58
	sub_822BDB58(ctx, base);
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x823f0a20
	sub_823F0A20(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82318928
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318928;
	// stfd f31,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stfd f31,0(ctx_arrow(ctx)->r30)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x823189e0
	goto loc_823189E0;
loc_82318928:
	// lis ctx_arrow(ctx)->r11,-128
	ctx_arrow(ctx)->r11.s64 = -8388608;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,32640
	ctx_arrow(ctx)->r11.s64 = 2139095040;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lfs f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfd f0,0(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lfs f0,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x823189dc
	goto loc_823189DC;
loc_82318948:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82318998
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318998;
loc_82318954:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8231896c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231896C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x82318954
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82318954;
loc_8231896C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318998
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318998;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,5
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r4.s64 + 5;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0xFFFFFFF8;
	// lfdx f0,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,0(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lfdx f0,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,0(ctx_arrow(ctx)->r30)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x823189e0
	goto loc_823189E0;
loc_82318998:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 * 3;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFF;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// bl 0x82318798
	sub_82318798(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823189e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823189E0;
	// lis ctx_arrow(ctx)->r11,-128
	ctx_arrow(ctx)->r11.s64 = -8388608;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lis ctx_arrow(ctx)->r11,32640
	ctx_arrow(ctx)->r11.s64 = 2139095040;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f0,84(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfd f0,0(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lfs f0,80(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_823189DC:
	// stfd f0,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_823189E0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82318A00) PPC_WEAK_FUNC(sub_82318A00);
PPC_FUNC_IMPL(__imp__sub_82318A00) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 1) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// bl 0x823188d8
	sub_823188D8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82318810
	sub_82318810(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82318A50) PPC_WEAK_FUNC(sub_82318A50);
PPC_FUNC_IMPL(__imp__sub_82318A50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,58
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 58, xer);
	// bgt ctx_arrow(ctx)->r6,0x82318ad0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82318AD0;
	// beq ctx_arrow(ctx)->r6,0x82318ac8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318AC8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,21
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 21, xer);
	// beq ctx_arrow(ctx)->r6,0x82318ac0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318AC0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,22
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 22, xer);
	// beq ctx_arrow(ctx)->r6,0x82318ab4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318AB4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 23, xer);
	// beq ctx_arrow(ctx)->r6,0x82318a9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318A9C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 24, xer);
	// bne ctx_arrow(ctx)->r6,0x82318ae8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82318AE8;
	// li ctx_arrow(ctx)->r10,23
	ctx_arrow(ctx)->r10.s64 = 23;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,7,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 7) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// lwz ctx_arrow(ctx)->r3,44(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82281410
	sub_82281410(ctx, base);
	return;
loc_82318A9C:
	// li ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.s64 = 3;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,10,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 10) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// lwz ctx_arrow(ctx)->r3,44(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82281410
	sub_82281410(ctx, base);
	return;
loc_82318AB4:
	// li ctx_arrow(ctx)->r10,21
	ctx_arrow(ctx)->r10.s64 = 21;
loc_82318AB8:
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,7,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 7) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// b 0x82318b34
	goto loc_82318B34;
loc_82318AC0:
	// li ctx_arrow(ctx)->r10,11
	ctx_arrow(ctx)->r10.s64 = 11;
	// b 0x82318b30
	goto loc_82318B30;
loc_82318AC8:
	// li ctx_arrow(ctx)->r10,59
	ctx_arrow(ctx)->r10.s64 = 59;
	// b 0x82318ab8
	goto loc_82318AB8;
loc_82318AD0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,59
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 59, xer);
	// beq ctx_arrow(ctx)->r6,0x82318b2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318B2C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,60
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 60, xer);
	// beq ctx_arrow(ctx)->r6,0x82318b14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318B14;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,61
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 61, xer);
	// beq ctx_arrow(ctx)->r6,0x82318afc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318AFC;
loc_82318AE8:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8225d328
	sub_8225D328(ctx, base);
	return;
loc_82318AFC:
	// li ctx_arrow(ctx)->r10,15
	ctx_arrow(ctx)->r10.s64 = 15;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,9,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 9) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// lwz ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82281410
	sub_82281410(ctx, base);
	return;
loc_82318B14:
	// li ctx_arrow(ctx)->r10,61
	ctx_arrow(ctx)->r10.s64 = 61;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,7,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 7) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// lwz ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82281410
	sub_82281410(ctx, base);
	return;
loc_82318B2C:
	// li ctx_arrow(ctx)->r10,29
	ctx_arrow(ctx)->r10.s64 = 29;
loc_82318B30:
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
loc_82318B34:
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_82318B40) PPC_WEAK_FUNC(sub_82318B40);
PPC_FUNC_IMPL(__imp__sub_82318B40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x82317b88
	sub_82317B88(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82318b6c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318B6C;
loc_82318B64:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82318c04
	goto loc_82318C04;
loc_82318B6C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8227a7e8
	sub_8227A7E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82318b84
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82318B84;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82318c04
	goto loc_82318C04;
loc_82318B84:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,228
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 228, xer);
	// beq ctx_arrow(ctx)->r6,0x82318b64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318B64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318bc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318BC0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_82318BA0:
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x3;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r9.u64;
	// bne 0x82318ba0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82318BA0;
loc_82318BC0:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,-28311
	ctx_arrow(ctx)->r9.s64 = -1855389696;
	// lis ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,5192
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 5192;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,36262
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 36262;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18,29,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 18) & 0x7;
	// rldimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,32,0
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft64(ctx_arrow(ctx)->r8.u64, 32) & 0xFFFFFFFF00000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF);
	// srd ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r9.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r9.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r9.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 4;
	ctx_arrow(ctx)->r11.s64 = 4 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1;
loc_82318C04:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82318C10) PPC_WEAK_FUNC(sub_82318C10);
PPC_FUNC_IMPL(__imp__sub_82318C10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x82317b88
	sub_82317B88(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82318c48
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318C48;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,14,15,17
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 14) & 0x1C000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFE3FFF);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
loc_82318C40:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
loc_82318C48:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318c7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318C7C;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_82318C5C:
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r30.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x3;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r10.u64;
	// bne 0x82318c5c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82318C5C;
loc_82318C7C:
	// lis ctx_arrow(ctx)->r9,-28311
	ctx_arrow(ctx)->r9.s64 = -1855389696;
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,5192
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 5192;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,36262
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 36262;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF;
	// rldimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,32,0
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft64(ctx_arrow(ctx)->r8.u64, 32) & 0xFFFFFFFF00000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7,18,29,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 18) & 0x7;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,31,28,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 31) & 0xF;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0xFFFFFFFE;
	// li ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r3.s64 = 3;
	// srd ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r5.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r5.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r5.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r11.s64;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
loc_82318CCC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318d08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318D08;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r10.u64;
	// andc ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r4.u64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r4.s64;
	// subfic ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 31;
	ctx_arrow(ctx)->r10.s64 = 31 - ctx_arrow(ctx)->r10.s64;
	// slw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 & ~ctx_arrow(ctx)->r4.u64;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r10.u64;
	// b 0x82318ccc
	goto loc_82318CCC;
loc_82318D08:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
loc_82318D0C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318d7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318D7C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r11.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r9.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// beq ctx_arrow(ctx)->r6,0x82318d6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318D6C;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82318D34:
	// srw ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r6.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r31.u32 & 0x3;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r31.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82318d58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318D58;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r5.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82318d34
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82318D34;
	// b 0x82318d6c
	goto loc_82318D6C;
loc_82318D58:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 1) & 0xFFFFFFFE;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64 & ~ctx_arrow(ctx)->r9.u64;
	// or ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
loc_82318D6C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r11.s64;
	// b 0x82318d0c
	goto loc_82318D0C;
loc_82318D7C:
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x7;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,0,18,14
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFFFFFE3FFF;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,14,0,17
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 14) & 0xFFFFC000;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
loc_82318D98:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82318e0c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82318E0C;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,25,0,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 25) & 0xFE000000;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6,27,29,30
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6,29,29,30
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6,31,29,30
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6,1,29,30
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 1) & 0x6;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,7,3
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFFF1FFFFFF;
	// or ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,27,18
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r3, 0, BINARY_OP_U8(ctx_arrow(ctx)->r3, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r3) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r30, 0, BINARY_OP_U8(ctx_arrow(ctx)->r30, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r30) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3,2,28,29
	ctx_arrow(ctx)->r31.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r3.u32, 2) & 0xC) | (ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r28, 0, BINARY_OP_U8(ctx_arrow(ctx)->r28, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r28) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r30.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r3.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r30.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000003);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xFFFFFFE0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r7.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// b 0x82318d98
	goto loc_82318D98;
loc_82318E0C:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_82318E10:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318c40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318C40;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82318e74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82318E74;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82318e74
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318E74;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,27,18
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27,29,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,29,29,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31,29,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,29,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x6;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r4.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r4.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r4.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,2,28,29
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xC) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r4.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000003);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xFFFFFFE0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
loc_82318E74:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82318e10
	goto loc_82318E10;
}

alias(__imp__sub_82318E80) PPC_WEAK_FUNC(sub_82318E80);
PPC_FUNC_IMPL(__imp__sub_82318E80) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82318E8C:
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r7.s64 = 3;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x3;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r7.u64;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r9.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 8, xer);
	// blt ctx_arrow(ctx)->r6,0x82318e8c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82318E8C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64;
	// blr 
	return;
}

alias(__imp__sub_82318EC8) PPC_WEAK_FUNC(sub_82318EC8);
PPC_FUNC_IMPL(__imp__sub_82318EC8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + 10;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// lwzx ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82318f04
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82318F04;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
loc_82318F04:
	// lwz ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28,7,29,31
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 7) & 0x7;
	// bl 0x8227a840
	sub_8227A840(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319008
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319008;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31,28,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0xF;
	// mr. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319080
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319080;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_82318F38:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82318f7c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82318F7C;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28,27,24,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 27) & 0xFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r9.u64;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r9.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
	// subfic ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 31;
	ctx_arrow(ctx)->r9.s64 = 31 - ctx_arrow(ctx)->r9.s64;
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 1) & 0xFFFFFFFE;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x3;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r31.u64;
	// bne 0x82318f38
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82318F38;
loc_82318F7C:
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r6.u64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r6.u32);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// subfic ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,31
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 31;
	ctx_arrow(ctx)->r7.s64 = 31 - ctx_arrow(ctx)->r10.s64;
loc_82318F8C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319080
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319080;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r11.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r7.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82318fbc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82318FBC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0xFFFFFFFE;
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r7.u64;
	// b 0x82318fe0
	goto loc_82318FE0;
loc_82318FBC:
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r6.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ~ctx_arrow(ctx)->r8.u64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// subfic ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 31;
	ctx_arrow(ctx)->r10.s64 = 31 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r10.u64;
loc_82318FE0:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r31.u64;
	// b 0x82318f8c
	goto loc_82318F8C;
loc_82319008:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319040
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319040;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,27,24,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 27) & 0xFF;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231901C:
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x3;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r29.u32, xer);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r31.u64;
	// blt ctx_arrow(ctx)->r6,0x8231901c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231901C;
loc_82319040:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 4, xer);
	// bge ctx_arrow(ctx)->r6,0x82319080
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82319080;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,27,24,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
loc_82319060:
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x3;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r31.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 8, xer);
	// blt ctx_arrow(ctx)->r6,0x82319060
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82319060;
loc_82319080:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1,23,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 1) & 0x1FE) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFE01);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,25,25,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x823190ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823190AC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 123, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x823190b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823190B0;
loc_823190AC:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_823190B0:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82319118
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319118;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823190d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823190D0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 128;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
loc_823190D0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319100
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319100;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 512;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319100
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319100;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8192
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 536870912;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4);
loc_82319100:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26,13,20
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 26) & 0x7F800) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFF807FF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// b 0x8231914c
	goto loc_8231914C;
loc_82319118:
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1024;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,15,24,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 15) & 0xFF;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,31,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 31) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x82319134
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319134;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,128
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 128;
loc_82319134:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,27,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82319140
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319140;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,64
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 64;
loc_82319140:
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,11,13,20
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 11) & 0x7F800) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFF807FF);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
loc_8231914C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82319158) PPC_WEAK_FUNC(sub_82319158);
PPC_FUNC_IMPL(__imp__sub_82319158) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -65536;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,15
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFF0000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x823191dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823191DC;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 17, xer);
	// bne ctx_arrow(ctx)->r6,0x82319188
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319188;
	// li ctx_arrow(ctx)->r9,3558
	ctx_arrow(ctx)->r9.s64 = 3558;
	// b 0x82319194
	goto loc_82319194;
loc_82319188:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,18
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 18, xer);
	// bne ctx_arrow(ctx)->r6,0x82319194
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319194;
	// li ctx_arrow(ctx)->r9,3559
	ctx_arrow(ctx)->r9.s64 = 3559;
loc_82319194:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x823191dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823191DC;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,3,3
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823191d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823191D0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823191d0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823191D0;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x823191c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823191C8;
	// li ctx_arrow(ctx)->r9,3557
	ctx_arrow(ctx)->r9.s64 = 3557;
	// b 0x823191d0
	goto loc_823191D0;
loc_823191C8:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,30,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x3;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3630
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 3630;
loc_823191D0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 524288;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
loc_823191DC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823191f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823191F4;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823191f4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823191F4;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r9.u64;
	// b 0x8225d328
	sub_8225D328(ctx, base);
	return;
loc_823191F4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64;
	// blr 
	return;
}

alias(__imp__sub_82319200) PPC_WEAK_FUNC(sub_82319200);
PPC_FUNC_IMPL(__imp__sub_82319200) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2147483648;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stw ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// blr 
	return;
}

alias(__imp__sub_82319230) PPC_WEAK_FUNC(sub_82319230);
PPC_FUNC_IMPL(__imp__sub_82319230) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x822700e8
	sub_822700E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231925c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231925C;
loc_82319254:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82319314
	goto loc_82319314;
loc_8231925C:
	// lwz ctx_arrow(ctx)->r23,12(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r23.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r22,12(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x82319310
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319310;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x82319310
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319310;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,7,29,31
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x7;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,7,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 7) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82319310
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319310;
	// clrlwi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319254
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319254;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
loc_823192B4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	// bl 0x82318720
	sub_82318720(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r22.u64;
	// bl 0x82318720
	sub_82318720(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f31,f1
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f1.f64);
	// bne ctx_arrow(ctx)->r6,0x82319310
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319310;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r24.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, ctx_arrow(ctx)->r27.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x823192b4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823192B4;
	// b 0x82319254
	goto loc_82319254;
loc_82319310:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82319314:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
}

alias(__imp__sub_82319320) PPC_WEAK_FUNC(sub_82319320);
PPC_FUNC_IMPL(__imp__sub_82319320) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82319324:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231937c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231937C;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82319340
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319340;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,28,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82319348
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319348;
loc_82319340:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82319324
	goto loc_82319324;
loc_82319348:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14976
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 14976, xer);
	// beq ctx_arrow(ctx)->r6,0x82319370
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319370;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8225d328
	sub_8225D328(ctx, base);
	return;
loc_82319370:
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
loc_8231937C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8225d328
	sub_8225D328(ctx, base);
	return;
}

alias(__imp__sub_82319390) PPC_WEAK_FUNC(sub_82319390);
PPC_FUNC_IMPL(__imp__sub_82319390) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
loc_823193AC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823193fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823193FC;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823193ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823193EC;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,7,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 7) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x823193ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823193EC;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823193ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823193EC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823193ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823193EC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r29.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x823193f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823193F4;
loc_823193EC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x823193ac
	goto loc_823193AC;
loc_823193F4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// b 0x8231942c
	goto loc_8231942C;
loc_823193FC:
	// bl 0x82281810
	sub_82281810(ctx, base);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,20,9,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 20) & 0x700000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u32 & 0x1F;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,18
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFE000;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xFFFFFFE0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,7,3
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFF1FFFFFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_8231942C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82319438) PPC_WEAK_FUNC(sub_82319438);
PPC_FUNC_IMPL(__imp__sub_82319438) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-304(ctx_arrow(ctx)->r1)
	ea = -304 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r10.u64;
	// bl 0x822e4d38
	sub_822E4D38(ctx, base);
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// lwz ctx_arrow(ctx)->r22,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,11,14
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1E0000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823194ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823194EC;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64;
loc_82319484:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// lis ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 131072;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 & ~ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 - ctx_arrow(ctx)->r11.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x823194c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823194C4;
	// lis ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = 262144;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x823194bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823194BC;
	// lis ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = 524288;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82319578
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319578;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// b 0x823194c8
	goto loc_823194C8;
loc_823194BC:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// b 0x823194c8
	goto loc_823194C8;
loc_823194C4:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
loc_823194C8:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82318198
	sub_82318198(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82319484
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319484;
loc_823194EC:
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319528
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319528;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r24.u64;
loc_823194FC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,4,28,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xF;
	// bl 0x823f2720
	sub_823F2720(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823195b4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823195B4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,12
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 12;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r23.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x823194fc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823194FC;
loc_82319528:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -65536;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,15
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFF0000;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r5,100
	ctx_arrow(ctx)->r5.s64 = 100;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,3524
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 3524;
	// bl 0x82318070
	sub_82318070(ctx, base);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82319578:
	// lis ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = 1048576;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82319590
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319590;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82319590:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r5,100
	ctx_arrow(ctx)->r5.s64 = 100;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x82318070
	sub_82318070(ctx, base);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// li ctx_arrow(ctx)->r4,3627
	ctx_arrow(ctx)->r4.s64 = 3627;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_823195B4:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 * 12;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r5,10
	ctx_arrow(ctx)->r5.s64 = 10;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xF;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r22.u64;
	// bl 0x823eede8
	sub_823EEDE8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,14,27,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x1F;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82319528
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82319528;
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319654
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319654;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,15,16
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82319528
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319528;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-17108
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -17108;
	// bl 0x823f07a0
	sub_823F07A0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x8231961c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231961C;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// b 0x82319638
	goto loc_82319638;
loc_8231961C:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,1612
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 1612;
	// bl 0x823f07a0
	sub_823F07A0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x82319528
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319528;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
loc_82319638:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82318198
	sub_82318198(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
loc_82319654:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,17,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319674
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319674;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82319674
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319674;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stw ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 28);
loc_82319674:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,5,23,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 5) & 0x1E0;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,27,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x1F;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,22
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFE00;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,28,18,18
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 28) & 0x2000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFDFFF);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,15,16
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 32768, xer);
	// beq ctx_arrow(ctx)->r6,0x823196d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823196D0;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 65536;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,15,16
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18000;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32768
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 32768;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x823196d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823196D4;
loc_823196D0:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_823196D4:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r22,0(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,16,15,15
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 16) & 0x10000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFEFFFF);
	// lwz ctx_arrow(ctx)->r11,388(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17,30,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 17) & 0x3;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x82319700
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319700;
	// stb ctx_arrow(ctx)->r25,0(ctx_arrow(ctx)->r11)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r11.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r25), 0);
loc_82319700:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,304
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 304;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_82319708) PPC_WEAK_FUNC(sub_82319708);
PPC_FUNC_IMPL(__imp__sub_82319708) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r7.u64;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32272
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32272;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// li ctx_arrow(ctx)->r8,19
	ctx_arrow(ctx)->r8.s64 = 19;
	// bl 0x82319438
	sub_82319438(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 10, xer);
	// bne ctx_arrow(ctx)->r6,0x82319768
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319768;
	// lbz ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne 0x82319768
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319768;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,14,16,17
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 14) & 0xC000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFF3FFF);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_82319768:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82319780) PPC_WEAK_FUNC(sub_82319780);
PPC_FUNC_IMPL(__imp__sub_82319780) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_82319798:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823197c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823197C8;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823197bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823197BC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822705c8
	sub_822705C8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823197c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823197C4;
loc_823197BC:
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82319798
	goto loc_82319798;
loc_823197C4:
	// li ctx_arrow(ctx)->r26,-1
	ctx_arrow(ctx)->r26.s64 = -1;
loc_823197C8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 13952, xer);
	// bne ctx_arrow(ctx)->r6,0x823197e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823197E8;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
loc_823197DC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
loc_823197E8:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,40
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 40;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r30.u64;
loc_823197F8:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r27.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x823197dc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_823197DC;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822705c8
	sub_822705C8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231986c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231986C;
	// lwz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15744
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15744, xer);
	// beq ctx_arrow(ctx)->r6,0x8231986c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231986C;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
loc_82319830:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r27.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8231985c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231985C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82319868
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319868;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r8.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82319860
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319860;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// b 0x82319830
	goto loc_82319830;
loc_8231985C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82319860:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231986c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231986C;
loc_82319868:
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
loc_8231986C:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// b 0x823197f8
	goto loc_823197F8;
}

alias(__imp__sub_82319878) PPC_WEAK_FUNC(sub_82319878);
PPC_FUNC_IMPL(__imp__sub_82319878) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,14312
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 14312;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r21,28
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r21.u32 & 0xF;
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r30,31,28,31
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 31) & 0xF;
	// rlwinm ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r30,25,25,31
	ctx_arrow(ctx)->r26.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 25) & 0x7F;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64 + ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,95
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 95, xer);
	// lbz ctx_arrow(ctx)->r11,-1(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27,5,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFE;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,29,29,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31,29,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,29,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x6;
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2,28,29
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 2) & 0xC) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r23.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r23.u64 & 0xFFFFFFFF00000003);
	// blt ctx_arrow(ctx)->r6,0x823198f8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823198F8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,101
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 101, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// ble ctx_arrow(ctx)->r6,0x823198fc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823198FC;
loc_823198F8:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_823198FC:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319b7c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319B7C;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r7,228
	ctx_arrow(ctx)->r7.s64 = 228;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,95
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 95, xer);
	// bne ctx_arrow(ctx)->r6,0x82319950
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319950;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFF000;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 13) & 0x7;
	// li ctx_arrow(ctx)->r4,95
	ctx_arrow(ctx)->r4.s64 = 95;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + -20;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,20,28,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xF;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,24,28,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 24) & 0xF;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,15,24,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 15) & 0xFF;
	// b 0x823199ac
	goto loc_823199AC;
loc_82319950:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 96, xer);
	// beq ctx_arrow(ctx)->r6,0x8231996c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231996C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,98
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 98, xer);
	// beq ctx_arrow(ctx)->r6,0x8231996c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231996C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,99
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 99, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82319970
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319970;
loc_8231996C:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
loc_82319970:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823199ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823199AC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFF000;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 13) & 0x7;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + -24;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,14(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,28,28,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 28) & 0xF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
loc_823199AC:
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r25.u64;
loc_823199BC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319a2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319A2C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// li ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r3.s64 = 3;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r11.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r24.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u32 & 0x3;
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r6.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// slw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r4.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64 & ~ctx_arrow(ctx)->r3.u64;
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r4.u64;
	// beq 0x82319a10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319A10;
	// slw ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r24.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
loc_82319A10:
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r5.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319a1c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319A1C;
	// slw ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r24.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
loc_82319A1C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// b 0x823199bc
	goto loc_823199BC;
loc_82319A2C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,95
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 95, xer);
	// bne ctx_arrow(ctx)->r6,0x82319a7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319A7C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFF000;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 13) & 0x7;
	// li ctx_arrow(ctx)->r4,95
	ctx_arrow(ctx)->r4.s64 = 95;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// rlwimi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,5,19,26
	ctx_arrow(ctx)->r28.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 5) & 0x1FE0) | (ctx_arrow(ctx)->r28.u64 & 0xFFFFFFFFFFFFE01F);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + -20;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,24,15
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFFFFF00FF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,15,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFFE01FFFF;
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,8175
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64 & 8175;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// rlwimi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,4,0,27
	ctx_arrow(ctx)->r29.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 4) & 0xFFFFFFF0) | (ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFF0000000F);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,8,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 8) & 0xFFFFFF00;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// b 0x82319ad8
	goto loc_82319AD8;
loc_82319A7C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 96, xer);
	// beq ctx_arrow(ctx)->r6,0x82319a98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319A98;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,98
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 98, xer);
	// beq ctx_arrow(ctx)->r6,0x82319a98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319A98;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,99
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 99, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82319a9c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319A9C;
loc_82319A98:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
loc_82319A9C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319b60
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319B60;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFF000;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 13) & 0x7;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + -24;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// stb ctx_arrow(ctx)->r31,14(ctx_arrow(ctx)->r11)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r11.u32 + 14, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r31), 0);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,4,24,27
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r28.u32, 4) & 0xF0) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFF0F);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,0,28,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r29.u32, 0) & 0xF) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFF0);
loc_82319AD8:
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
loc_82319ADC:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_82319AE0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319cfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319CFC;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319b58
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319B58;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,228
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 228, xer);
	// beq ctx_arrow(ctx)->r6,0x82319b40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319B40;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,27,18
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27,29,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,29,29,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31,29,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,29,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x6;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,2,28,29
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xC) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000003);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xFFFFFFE0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
loc_82319B40:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,16384
	ctx_arrow(ctx)->r9.s64 = 1073741824;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFE001FFF;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r21,13,7,18
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r21.u32, 13) & 0x1FFE000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFE001FFF);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
loc_82319B58:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82319ae0
	goto loc_82319AE0;
loc_82319B60:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,0,0,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFF000;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r4,3500
	ctx_arrow(ctx)->r4.s64 = 3500;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,14680
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 14680;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82319B7C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,228
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 228, xer);
	// beq ctx_arrow(ctx)->r6,0x82319adc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319ADC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8227a840
	sub_8227A840(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319adc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319ADC;
	// lis ctx_arrow(ctx)->r11,-28311
	ctx_arrow(ctx)->r11.s64 = -1855389696;
	// lis ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5192
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 5192;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,36262
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 36262;
	// clrldi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,32
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u64 & 0xFFFFFFFF;
	// rldimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,32,0
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft64(ctx_arrow(ctx)->r10.u64, 32) & 0xFFFFFFFF00000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r22.u64 + ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,27,29,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,29,29,30
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,31,29,30
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 31) & 0x6;
	// lbz ctx_arrow(ctx)->r10,-1(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,1,29,30
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0x6;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// srd ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r7.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x7F)), 0));
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2,28,29
	ctx_arrow(ctx)->r5.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xC) | (ctx_arrow(ctx)->r5.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r3, 0, BINARY_OP_U8(ctx_arrow(ctx)->r3, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r3) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r5.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r4.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,2,0,29
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r4.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF00000003);
	// srd ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r7.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r7.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x7F)), 0));
	// clrlwi. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u32 & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// beq 0x82319c34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319C34;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
loc_82319C08:
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1,29,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 1) & 0x6;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r4.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r7.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r6.u32, xer);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r5.u64;
	// blt ctx_arrow(ctx)->r6,0x82319c08
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82319C08;
loc_82319C34:
	// lis ctx_arrow(ctx)->r10,-32251
	ctx_arrow(ctx)->r10.s64 = -2113601536;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,27,29,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x6;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-564
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -564;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,29,29,30
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x6;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,31,29,30
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1,29,30
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x6;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27,40
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r27.s64 + 40;
	// lbz ctx_arrow(ctx)->r11,-1(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2,28,29
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 2) & 0xC) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r3, 0, BINARY_OP_U8(ctx_arrow(ctx)->r3, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r3) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r5.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r5.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,2,0,29
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r5.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000003);
loc_82319C7C:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13,29,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 13) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82319adc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82319ADC;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// beq 0x82319cf0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319CF0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27,29,30
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,29,29,30
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,31,29,30
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,1,29,30
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x6;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6,14,15,17
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 14) & 0x1C000;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,0,27,18
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,0,7,3
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFFF1FFFFFF;
	// srw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r3, 0, BINARY_OP_U8(ctx_arrow(ctx)->r3, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r3) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x3;
	// srw ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r29.u64;
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r30, 0, BINARY_OP_U8(ctx_arrow(ctx)->r30, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r30) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5,2,0,29
	ctx_arrow(ctx)->r3.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r5.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r3.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r31.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r3.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,2,0,29
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF00000003);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5,0,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 5) & 0xFFFFFFE0;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r4.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
loc_82319CF0:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// b 0x82319c7c
	goto loc_82319C7C;
loc_82319CFC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,1,27,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r22.u32, 1) & 0x1E) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFE1);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 8);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_82319D10) PPC_WEAK_FUNC(sub_82319D10);
PPC_FUNC_IMPL(__imp__sub_82319D10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stfd f30,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stfd f31,-56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -56);
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// fmr f30,f2
	f30.f64 = ctx.f2.f64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x823f0a20
	sub_823F0A20(ctx, base);
	// lis ctx_arrow(ctx)->r29,-128
	ctx_arrow(ctx)->r29.s64 = -8388608;
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x82319d50
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319D50;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f31,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
loc_82319D50:
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// bl 0x823f0a20
	sub_823F0A20(ctx, base);
	// lis ctx_arrow(ctx)->r31,32640
	ctx_arrow(ctx)->r31.s64 = 2139095040;
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x82319d6c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319D6C;
	// stw ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f30,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
loc_82319D6C:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82319d84
	goto loc_82319D84;
loc_82319D74:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x82319d8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319D8C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82319D84:
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x82319d74
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319D74;
loc_82319D8C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82319e10
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319E10;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// bne ctx_arrow(ctx)->r6,0x82319dbc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319DBC;
	// stw ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f0,80(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// bne ctx_arrow(ctx)->r6,0x82319dbc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82319DBC;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82319e4c
	goto loc_82319E4C;
loc_82319DBC:
	// li ctx_arrow(ctx)->r5,23
	ctx_arrow(ctx)->r5.s64 = 23;
	// li ctx_arrow(ctx)->r4,72
	ctx_arrow(ctx)->r4.s64 = 72;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// li ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = 4;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 40;
loc_82319DE8:
	// lfs f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 0;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// stfd f0,-32(ctx_arrow(ctx)->r10)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -32);
	// lfs f0,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfd f0,0(ctx_arrow(ctx)->r10)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// bne 0x82319de8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319DE8;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 12);
loc_82319E10:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// lfdx f0,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82319e30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319E30;
	// stfdx f31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82319E30:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,5
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r27.s64 + 5;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// lfdx f0,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// beq ctx_arrow(ctx)->r6,0x82319e4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319E4C;
	// stfdx f30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82319E4C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lfd f30,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-56(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed184
	return;
}

alias(__imp__sub_82319E60) PPC_WEAK_FUNC(sub_82319E60);
PPC_FUNC_IMPL(__imp__sub_82319E60) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -20;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82319EB8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a078
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A078;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82319ed8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319ED8;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82319ee0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82319EE0;
loc_82319ED8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82319eb8
	goto loc_82319EB8;
loc_82319EE0:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,27,14,19
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 27) & 0x3F000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFC0FFF);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82319f08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319F08;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 262144;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_82319F08:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31,28,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0xF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,15,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 15) & 0xFF;
	// clrlwi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x82319f34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319F34;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFF8;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r7.u64;
	// b 0x82319f38
	goto loc_82319F38;
loc_82319F34:
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 7;
loc_82319F38:
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x82319f54
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319F54;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,1,27,28
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 1) & 0x18) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFFE7);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,27,25
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFFFFFFFFDF;
	// b 0x82319f58
	goto loc_82319F58;
loc_82319F54:
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,56
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 56;
loc_82319F58:
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x82319f74
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319F74;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,24,25
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 2) & 0xC0) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFF3F);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,24,22
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFFFFFFFEFF;
	// b 0x82319f78
	goto loc_82319F78;
loc_82319F74:
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,448
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 448;
loc_82319F78:
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,28,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82319f94
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82319F94;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,21,22
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 3) & 0x600) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFF9FF);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,21,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFFFFF7FF;
	// b 0x82319f9c
	goto loc_82319F9C;
loc_82319F94:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3584
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3584;
loc_82319F9C:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 24) & 0xF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a00c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A00C;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x82319ffc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82319FFC;
	// beq ctx_arrow(ctx)->r6,0x82319fec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82319FEC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x82319fdc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82319FDC;
	// bne ctx_arrow(ctx)->r6,0x8231a00c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A00C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,11,20,22
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 11) & 0xE00) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFF1FF);
	// b 0x8231a008
	goto loc_8231A008;
loc_82319FDC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8,23,25
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0x1C0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFE3F);
	// b 0x8231a008
	goto loc_8231A008;
loc_82319FEC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,5,26,28
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 5) & 0x38) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFC7);
	// b 0x8231a008
	goto loc_8231A008;
loc_82319FFC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,29,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 2) & 0x7) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFF8);
loc_8231A008:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231A00C:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a084
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A084;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a068
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A068;
	// beq ctx_arrow(ctx)->r6,0x8231a058
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A058;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a048
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A048;
	// bne ctx_arrow(ctx)->r6,0x8231a084
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A084;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r10.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,9,20,22
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 9) & 0xE00) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFF1FF);
	// b 0x8231a080
	goto loc_8231A080;
loc_8231A048:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r10.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,6,23,25
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 6) & 0x1C0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFE3F);
	// b 0x8231a080
	goto loc_8231A080;
loc_8231A058:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r10.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,26,28
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 3) & 0x38) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFC7);
	// b 0x8231a080
	goto loc_8231A080;
loc_8231A068:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r10.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,29,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0x7) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFF8);
	// b 0x8231a080
	goto loc_8231A080;
loc_8231A078:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4095
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4095;
loc_8231A080:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231A084:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a0cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A0CC;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,20,21,26
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 20) & 0x7E0) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFF81F);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,25,0,1
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 25) & 0xC0000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF3FFFFFFF);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a0cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A0CC;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2048;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231A0CC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = 524288;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8231a118
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231A118;
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.s64 = 3;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 15) & 0xFF;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,95
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 95;
	ctx_arrow(ctx)->r11.s64 = 95 - ctx_arrow(ctx)->r11.s64;
	// divwu ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r10.u32;
	// divwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r10.u32;
	// mulli ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 * 3;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r8.s64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,5,25,26
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 5) & 0x60) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFF9F);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,20,5,11
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 20) & 0x7F00000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFF80FFFFF);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x8231a128
	goto loc_8231A128;
loc_8231A118:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,95
	ctx_arrow(ctx)->r10.s64 = 95;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,20,5,11
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 20) & 0x7F00000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFF80FFFFF);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231A128:
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a164
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A164;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2147483648;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,23,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x1FF;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31,0,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 31) & 0x80000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF7FFFFFFF);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// b 0x8231a180
	goto loc_8231A180;
loc_8231A164:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,13,0,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 13) & 0x80000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF7FFFFFFF);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,14,0,0
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 14) & 0x80000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF7FFFFFFF);
	// stw ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231A180:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8231A198) PPC_WEAK_FUNC(sub_8231A198);
PPC_FUNC_IMPL(__imp__sub_8231A198) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// li ctx_arrow(ctx)->r9,228
	ctx_arrow(ctx)->r9.s64 = 228;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 96, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a1e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A1E4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,98
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 98, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a1e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A1E4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,99
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 99, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8231a1e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A1E8;
loc_8231A1E4:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
loc_8231A1E8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a230
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A230;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -24;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lbz ctx_arrow(ctx)->r9,14(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// b 0x8231a2a4
	goto loc_8231A2A4;
loc_8231A230:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3871
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 253689856;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 524288;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,61440
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 61440;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,25,25,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,97
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 97, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a298
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A298;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,100
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 100, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a28c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A28C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,101
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 101, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a280
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A280;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231A280:
	// li ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.s64 = 13;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1,27,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 1) & 0x1F) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFE0);
	// b 0x8231a2a0
	goto loc_8231A2A0;
loc_8231A28C:
	// li ctx_arrow(ctx)->r10,25
	ctx_arrow(ctx)->r10.s64 = 25;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,27,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0x1F) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFE0);
	// b 0x8231a2a0
	goto loc_8231A2A0;
loc_8231A298:
	// li ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.s64 = 3;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,27,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 3) & 0x1F) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFE0);
loc_8231A2A0:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231A2A4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = 524288;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8231a2c4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231A2C4;
	// lwz ctx_arrow(ctx)->r28,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,44(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231a2c8
	goto loc_8231A2C8;
loc_8231A2C4:
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231A2C8:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231A2CC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a498
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A498;
	// lwz ctx_arrow(ctx)->r7,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a2ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A2EC;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,4,6
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x8231a2f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A2F4;
loc_8231A2EC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231a2cc
	goto loc_8231A2CC;
loc_8231A2F4:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,27,14,19
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 27) & 0x3F000) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFFFFFC0FFF);
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64 & 9;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq 0x8231a328
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A328;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231A328:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a33c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A33C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 262144;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231A33C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0xF;
	// clrlwi. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8231a360
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A360;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u32 & 0x3;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFF8;
	// or ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r6.u64;
	// b 0x8231a364
	goto loc_8231A364;
loc_8231A360:
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,7
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 7;
loc_8231A364:
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// rlwinm. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8231a380
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A380;
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,1,27,28
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 1) & 0x18) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFFFFE7);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,27,25
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFFFFFFFFDF;
	// b 0x8231a384
	goto loc_8231A384;
loc_8231A380:
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,56
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 56;
loc_8231A384:
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// rlwinm. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8231a3a0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A3A0;
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,2,24,25
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 2) & 0xC0) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFFFF3F);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,24,22
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFFFFFFFEFF;
	// b 0x8231a3a4
	goto loc_8231A3A4;
loc_8231A3A0:
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,448
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 448;
loc_8231A3A4:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 0);
	// beq 0x8231a3c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A3C0;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,3,21,22
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 3) & 0x600) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFF9FF);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,21,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFF7FF;
	// b 0x8231a3c4
	goto loc_8231A3C4;
loc_8231A3C0:
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3584
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3584;
loc_8231A3C4:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a4a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A4A4;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a42c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A42C;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a420
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A420;
	// beq ctx_arrow(ctx)->r6,0x8231a414
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A414;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a408
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A408;
	// bne ctx_arrow(ctx)->r6,0x8231a42c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A42C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,11,20,22
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r27.u32, 11) & 0xE00) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFF1FF);
	// b 0x8231a428
	goto loc_8231A428;
loc_8231A408:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,8,23,25
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r27.u32, 8) & 0x1C0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFE3F);
	// b 0x8231a428
	goto loc_8231A428;
loc_8231A414:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,5,26,28
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r27.u32, 5) & 0x38) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFC7);
	// b 0x8231a428
	goto loc_8231A428;
loc_8231A420:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,2,29,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r27.u32, 2) & 0x7) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFF8);
loc_8231A428:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231A42C:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0xF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a4a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A4A4;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a488
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A488;
	// beq ctx_arrow(ctx)->r6,0x8231a478
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A478;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a468
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A468;
	// bne ctx_arrow(ctx)->r6,0x8231a4a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A4A4;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,5
	ctx_arrow(ctx)->r9.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,9,20,22
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 9) & 0xE00) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFF1FF);
	// b 0x8231a4a0
	goto loc_8231A4A0;
loc_8231A468:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,5
	ctx_arrow(ctx)->r9.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,6,23,25
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 6) & 0x1C0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFE3F);
	// b 0x8231a4a0
	goto loc_8231A4A0;
loc_8231A478:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,5
	ctx_arrow(ctx)->r9.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,3,26,28
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 3) & 0x38) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFC7);
	// b 0x8231a4a0
	goto loc_8231A4A0;
loc_8231A488:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,5
	ctx_arrow(ctx)->r9.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,29,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0) & 0x7) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFF8);
	// b 0x8231a4a0
	goto loc_8231A4A0;
loc_8231A498:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4095
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4095;
loc_8231A4A0:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231A4A4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a504
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A504;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,20,21,26
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 20) & 0x7E0) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFF81F);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,28,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231a4dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A4DC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231A4DC:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a4f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A4F0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2048;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231A4F0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26,0,5
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 26) & 0xFC000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF03FFFFFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231A504:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a550
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A550;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -65536;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,3,7,11
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 3) & 0x1F00000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFE0FFFFF);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,15
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFF0000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a550
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A550;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,7,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1F00000;
	// lis ctx_arrow(ctx)->r10,320
	ctx_arrow(ctx)->r10.s64 = 20971520;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a550
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A550;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231a550
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A550;
	// stw ctx_arrow(ctx)->r27,28(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 28);
loc_8231A550:
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a58c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A58C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2147483648;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,23,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x1FF;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31,0,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 31) & 0x80000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF7FFFFFFF);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// b 0x8231a5a8
	goto loc_8231A5A8;
loc_8231A58C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,13,0,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 13) & 0x80000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF7FFFFFFF);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,14,0,0
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 14) & 0x80000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF7FFFFFFF);
	// stw ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231A5A8:
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82319158
	sub_82319158(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8231A5C8) PPC_WEAK_FUNC(sub_8231A5C8);
PPC_FUNC_IMPL(__imp__sub_8231A5C8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r5.s64 + 1;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// li ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r8.s64 = 2;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// li ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = -1;
	// not ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ~ctx_arrow(ctx)->r11.u64;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// bne 0x8231a610
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A610;
loc_8231A5FC:
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r5.u64;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64 & ctx_arrow(ctx)->r6.u64;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// b 0x8231a678
	goto loc_8231A678;
loc_8231A610:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,5,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x7FFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27,5,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r11.u64;
	// bne ctx_arrow(ctx)->r6,0x8231a63c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A63C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231a5fc
	goto loc_8231A5FC;
loc_8231A63C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r6.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r6.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a660
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A660;
loc_8231A64C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
loc_8231A654:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a64c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A64C;
loc_8231A660:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231a654
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231A654;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r5.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r11.s64;
loc_8231A678:
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// blr 
	return;
}

alias(__imp__sub_8231A688) PPC_WEAK_FUNC(sub_8231A688);
PPC_FUNC_IMPL(__imp__sub_8231A688) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// b 0x8231a6b4
	goto loc_8231A6B4;
loc_8231A6A8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822820f0
	sub_822820F0(ctx, base);
loc_8231A6B4:
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// bne 0x8231a6a8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A6A8;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8231A6D8) PPC_WEAK_FUNC(sub_8231A6D8);
PPC_FUNC_IMPL(__imp__sub_8231A6D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r27.u64;
loc_8231A6F0:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x8231a784
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A784;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,2,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231a714
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A714;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a718
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A718;
loc_8231A714:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A718:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a770
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A770;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a734
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A734;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a738
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A738;
loc_8231A734:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A738:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a74c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A74C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,7,18
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1FFE000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x8231a750
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A750;
loc_8231A74C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A750:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a770
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A770;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,19,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 19) & 0xFFF;
	// lwz ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// bl 0x82326028
	sub_82326028(ctx, base);
loc_8231A770:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a6f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A6F0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// b 0x8231a6f0
	goto loc_8231A6F0;
loc_8231A784:
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r28.u64;
loc_8231A78C:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x8231a82c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A82C;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a818
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A818;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,2,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231a7bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A7BC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a7c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A7C0;
loc_8231A7BC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A7C0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a818
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A818;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a7dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A7DC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a7e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A7E0;
loc_8231A7DC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A7E0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a7f4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A7F4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,7,18
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1FFE000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x8231a7f8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A7F8;
loc_8231A7F4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A7F8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a818
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A818;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,19,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 19) & 0xFFF;
	// lwz ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// bl 0x82326028
	sub_82326028(ctx, base);
loc_8231A818:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a78c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A78C;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// b 0x8231a78c
	goto loc_8231A78C;
loc_8231A82C:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231A830:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a8b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A8B4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231a850
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A850;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a854
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A854;
loc_8231A850:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A854:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a8ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A8AC;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231A860:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a8ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A8AC;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x8231a8a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A8A4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231a88c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A88C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a890
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A890;
loc_8231A88C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A890:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a8a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A8A4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82281aa0
	sub_82281AA0(ctx, base);
loc_8231A8A4:
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231a860
	goto loc_8231A860;
loc_8231A8AC:
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231a830
	goto loc_8231A830;
loc_8231A8B4:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq 0x8231a95c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A95C;
	// lwz ctx_arrow(ctx)->r29,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq 0x8231a948
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A948;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231a8e4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A8E4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a8e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A8E8;
loc_8231A8E4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A8E8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a948
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A948;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231A8F4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231a938
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231A938;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231a914
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A914;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8231a918
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A918;
loc_8231A914:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231A918:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a930
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A930;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82281aa0
	sub_82281AA0(ctx, base);
loc_8231A930:
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231a8f4
	goto loc_8231A8F4;
loc_8231A938:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x822820f0
	sub_822820F0(ctx, base);
loc_8231A948:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a8b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A8B4;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// b 0x8231a8b4
	goto loc_8231A8B4;
loc_8231A95C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_8231A968) PPC_WEAK_FUNC(sub_8231A968);
PPC_FUNC_IMPL(__imp__sub_8231A968) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a994
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A994;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231a98c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231A98C;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 32;
	// b 0x8231a998
	goto loc_8231A998;
loc_8231A98C:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 24;
	// b 0x8231a998
	goto loc_8231A998;
loc_8231A994:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 16;
loc_8231A998:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231aa28
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AA28;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8231aa28
	goto loc_8231AA28;
loc_8231A9AC:
	// lwz ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r6,8191
	ctx_arrow(ctx)->r6.s64 = 536805376;
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3,0,28
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 3) & 0xFFFFFFF8) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF00000007);
	// oris ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,16384
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1073741824;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,65535
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 65535;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r6.u32, xer);
	// stw ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 16);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// bge ctx_arrow(ctx)->r6,0x8231a9d8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231A9D8;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
loc_8231A9D8:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x8231a9f0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231A9F0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a9ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A9AC;
loc_8231A9F0:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r4.s64 + 32;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + 24;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aa18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AA18;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// beq 0x8231aa1c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AA1C;
loc_8231AA18:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
loc_8231AA1C:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bnelr 
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) return;
loc_8231AA28:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231a9ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231A9AC;
	// blr 
	return;
}

alias(__imp__sub_8231AA38) PPC_WEAK_FUNC(sub_8231AA38);
PPC_FUNC_IMPL(__imp__sub_8231AA38) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r7.u64;
	// lwz ctx_arrow(ctx)->r30,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231aad0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AAD0;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aa80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AA80;
loc_8231AA78:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8231addc
	goto loc_8231ADDC;
loc_8231AA80:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82319320
	sub_82319320(ctx, base);
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231AA90:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aad0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AAD0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231aaac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AAAC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231aab4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231AAB4;
loc_8231AAAC:
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231aa90
	goto loc_8231AA90;
loc_8231AAB4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82319320
	sub_82319320(ctx, base);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r28.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231aac8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AAC8;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
loc_8231AAC8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231aa78
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AA78;
loc_8231AAD0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231aaf8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AAF8;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aa78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AA78;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231aa78
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AA78;
loc_8231AAF8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,111
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 111, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ab34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AB34;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ab34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AB34;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231aa78
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AA78;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aa78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AA78;
loc_8231AB34:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,116
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 116, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ab98
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AB98;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,116
	ctx_arrow(ctx)->r4.s64 = 116;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231ab98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AB98;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ab7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AB7C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 123, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8231ab80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AB80;
loc_8231AB7C:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_8231AB80:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231ab98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AB98;
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231aa78
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231AA78;
loc_8231AB98:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,111
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 111, xer);
	// bne ctx_arrow(ctx)->r6,0x8231acb8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231ACB8;
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r4.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231acb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231ACB8;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231abc0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ABC0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231ABC0:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aa78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AA78;
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,17,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231abfc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ABFC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x8231abf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231ABF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 123, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8231abf4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231ABF4;
loc_8231ABF0:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_8231ABF4:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231aa78
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231AA78;
loc_8231ABFC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28,29,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x6;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,18,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 14208, xer);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// bne ctx_arrow(ctx)->r6,0x8231ac54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AC54;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ac54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AC54;
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ac54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AC54;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,27,30,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x3;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r6.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ac54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AC54;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r24.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aa78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AA78;
loc_8231AC54:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,18,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 18) & 0x1;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x822b71a0
	sub_822B71A0(ctx, base);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r3.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231aa78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AA78;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x8231ac80
	goto loc_8231AC80;
loc_8231AC7C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_8231AC80:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ac7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AC7C;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,57
	ctx_arrow(ctx)->r9.s64 = 57;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,7,19,26
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 7) & 0x1FE0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFE01F);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x8231add8
	goto loc_8231ADD8;
loc_8231ACB8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// beq 0x8231acd8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ACD8;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231acd8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ACD8;
loc_8231ACD0:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8231ad00
	goto loc_8231AD00;
loc_8231ACD8:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ace8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ACE8;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231acd0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231ACD0;
loc_8231ACE8:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231acfc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ACFC;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne 0x8231ad00
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231AD00;
loc_8231ACFC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_8231AD00:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231aa78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231AA78;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x8231ad18
	goto loc_8231AD18;
loc_8231AD14:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_8231AD18:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ad14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AD14;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,27,18
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27,29,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,29,29,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31,29,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,29,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x6;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,2,28,29
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xC) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000003);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xFFFFFFE0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// beq 0x8231ada4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ADA4;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231ada4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ADA4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24,-4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r24.s64 + -4;
loc_8231ADA4:
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r10.u64;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,29,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231adb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ADB8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -4;
loc_8231ADB8:
	// clrlwi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231adcc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ADCC;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231adcc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ADCC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -2;
loc_8231ADCC:
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,26
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFE0) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF0000001F);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231ADD8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_8231ADDC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
}

alias(__imp__sub_8231ADE8) PPC_WEAK_FUNC(sub_8231ADE8);
PPC_FUNC_IMPL(__imp__sub_8231ADE8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,5,24,26
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 5) & 0xE0) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFF1F);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,-5
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 + -5;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 96, xer);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r5,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,14
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFE007F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,13,9
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFC7FFFF;
	// andi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,231
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & 231;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,7,0,24
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 7) & 0xFFFFFF80) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF0000007F);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,7,0,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 7) & 0xFFFFFF80;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// bgt ctx_arrow(ctx)->r6,0x8231af48
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8231AF48;
	// lis ctx_arrow(ctx)->r12,-32251
	ctx_arrow(ctx)->r12.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,14376
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 14376;
	// lbzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r12,-32206
	ctx_arrow(ctx)->r12.s64 = -2110652416;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-20896
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -20896;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r10.u64) {
	case 0:
		goto loc_8231AE60;
	case 1:
		goto loc_8231AE60;
	case 2:
		goto loc_8231AE60;
	case 3:
		goto loc_8231AE60;
	case 4:
		goto loc_8231AF48;
	case 5:
		goto loc_8231AE7C;
	case 6:
		goto loc_8231AE7C;
	case 7:
		goto loc_8231AF48;
	case 8:
		goto loc_8231AF48;
	case 9:
		goto loc_8231AF48;
	case 10:
		goto loc_8231AF48;
	case 11:
		goto loc_8231AF48;
	case 12:
		goto loc_8231AF48;
	case 13:
		goto loc_8231AF48;
	case 14:
		goto loc_8231AF48;
	case 15:
		goto loc_8231AF48;
	case 16:
		goto loc_8231AF40;
	case 17:
		goto loc_8231AF40;
	case 18:
		goto loc_8231AF40;
	case 19:
		goto loc_8231AF40;
	case 20:
		goto loc_8231AE60;
	case 21:
		goto loc_8231AE60;
	case 22:
		goto loc_8231AE60;
	case 23:
		goto loc_8231AE60;
	case 24:
		goto loc_8231AE94;
	case 25:
		goto loc_8231AF40;
	case 26:
		goto loc_8231AF48;
	case 27:
		goto loc_8231AF48;
	case 28:
		goto loc_8231AF48;
	case 29:
		goto loc_8231AF48;
	case 30:
		goto loc_8231AF48;
	case 31:
		goto loc_8231AF48;
	case 32:
		goto loc_8231AF48;
	case 33:
		goto loc_8231AE60;
	case 34:
		goto loc_8231AE60;
	case 35:
		goto loc_8231AE60;
	case 36:
		goto loc_8231AE60;
	case 37:
		goto loc_8231AF48;
	case 38:
		goto loc_8231AE7C;
	case 39:
		goto loc_8231AE7C;
	case 40:
		goto loc_8231AF48;
	case 41:
		goto loc_8231AF48;
	case 42:
		goto loc_8231AF48;
	case 43:
		goto loc_8231AF48;
	case 44:
		goto loc_8231AF48;
	case 45:
		goto loc_8231AF48;
	case 46:
		goto loc_8231AEAC;
	case 47:
		goto loc_8231AEAC;
	case 48:
		goto loc_8231AEAC;
	case 49:
		goto loc_8231AF40;
	case 50:
		goto loc_8231AF40;
	case 51:
		goto loc_8231AF48;
	case 52:
		goto loc_8231AF48;
	case 53:
		goto loc_8231AF40;
	case 54:
		goto loc_8231AF40;
	case 55:
		goto loc_8231AF40;
	case 56:
		goto loc_8231AF40;
	case 57:
		goto loc_8231AF40;
	case 58:
		goto loc_8231AF40;
	case 59:
		goto loc_8231AF40;
	case 60:
		goto loc_8231AF40;
	case 61:
		goto loc_8231AE60;
	case 62:
		goto loc_8231AE60;
	case 63:
		goto loc_8231AE60;
	case 64:
		goto loc_8231AE60;
	case 65:
		goto loc_8231AE60;
	case 66:
		goto loc_8231AEAC;
	case 67:
		goto loc_8231AF48;
	case 68:
		goto loc_8231AF48;
	case 69:
		goto loc_8231AF48;
	case 70:
		goto loc_8231AF48;
	case 71:
		goto loc_8231AF48;
	case 72:
		goto loc_8231AF48;
	case 73:
		goto loc_8231AF48;
	case 74:
		goto loc_8231AF48;
	case 75:
		goto loc_8231AF48;
	case 76:
		goto loc_8231AF48;
	case 77:
		goto loc_8231AF48;
	case 78:
		goto loc_8231AF48;
	case 79:
		goto loc_8231AF48;
	case 80:
		goto loc_8231AEC4;
	case 81:
		goto loc_8231AEC4;
	case 82:
		goto loc_8231AF48;
	case 83:
		goto loc_8231AF48;
	case 84:
		goto loc_8231AF48;
	case 85:
		goto loc_8231AF40;
	case 86:
		goto loc_8231AF40;
	case 87:
		goto loc_8231AF40;
	case 88:
		goto loc_8231AF40;
	case 89:
		goto loc_8231AF48;
	case 90:
		goto loc_8231AED4;
	case 91:
		goto loc_8231AF00;
	case 92:
		goto loc_8231AF40;
	case 93:
		goto loc_8231AF00;
	case 94:
		goto loc_8231AF00;
	case 95:
		goto loc_8231AF40;
	case 96:
		goto loc_8231AF40;
	default:
		__builtin_unreachable();
	}
loc_8231AE60:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 3510;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3510
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3510, xer);
	// beq ctx_arrow(ctx)->r6,0x8231af48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AF48;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3510;
loc_8231AE74:
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// b 0x8231af48
	goto loc_8231AF48;
loc_8231AE7C:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 2340;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2340
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2340, xer);
	// beq ctx_arrow(ctx)->r6,0x8231af48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AF48;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2340;
	// b 0x8231ae74
	goto loc_8231AE74;
loc_8231AE94:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x6;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 6, xer);
	// beq ctx_arrow(ctx)->r6,0x8231af48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AF48;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 6;
	// b 0x8231ae74
	goto loc_8231AE74;
loc_8231AEAC:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1170
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 1170;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1170
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1170, xer);
	// beq ctx_arrow(ctx)->r6,0x8231af48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231AF48;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1170
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1170;
	// b 0x8231ae74
	goto loc_8231AE74;
loc_8231AEC4:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1024;
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 40);
	// b 0x8231af48
	goto loc_8231AF48;
loc_8231AED4:
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -20;
	// li ctx_arrow(ctx)->r10,57
	ctx_arrow(ctx)->r10.s64 = 57;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,19,7,14
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 19) & 0x1FE0000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFE01FFFF);
	// stw ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// b 0x8231af48
	goto loc_8231AF48;
loc_8231AF00:
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -24;
	// li ctx_arrow(ctx)->r10,228
	ctx_arrow(ctx)->r10.s64 = 228;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stb ctx_arrow(ctx)->r10,14(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 14));
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,3871
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 | 253689856;
	// oris ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 524288;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,61440
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 61440;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// b 0x8231af48
	goto loc_8231AF48;
loc_8231AF40:
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,64
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 64;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
loc_8231AF48:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8231AF60) PPC_WEAK_FUNC(sub_8231AF60);
PPC_FUNC_IMPL(__imp__sub_8231AF60) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-82
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -82;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 12, xer);
	// bgt ctx_arrow(ctx)->r6,0x8231b214
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8231B214;
	// lis ctx_arrow(ctx)->r12,-32251
	ctx_arrow(ctx)->r12.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,14480
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 14480;
	// lbzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r0,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r0.u32 | (ctx_arrow(ctx)->r0.u64 << 32), 2) & 0xFFFFFFFC;
	// lis ctx_arrow(ctx)->r12,-32206
	ctx_arrow(ctx)->r12.s64 = -2110652416;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-20556
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -20556;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_8231AFB4;
	case 1:
		goto loc_8231B118;
	case 2:
		goto loc_8231B15C;
	case 3:
		goto loc_8231B06C;
	case 4:
		goto loc_8231B06C;
	case 5:
		goto loc_8231B0A4;
	case 6:
		goto loc_8231AFC0;
	case 7:
		goto loc_8231AFC0;
	case 8:
		goto loc_8231B0C8;
	case 9:
		goto loc_8231B0B4;
	case 10:
		goto loc_8231B0B4;
	case 11:
		goto loc_8231B0DC;
	case 12:
		goto loc_8231B200;
	default:
		__builtin_unreachable();
	}
loc_8231AFB4:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231AFC0:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,16
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFBFFF;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,45056
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 45056;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,24,21,21
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 24) & 0x400) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFBFF);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,11264
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 11264, xer);
	// bne ctx_arrow(ctx)->r6,0x8231affc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231AFFC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231AFF4:
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8192
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8192;
	// b 0x8231b05c
	goto loc_8231B05C;
loc_8231AFFC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231b054
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231B054;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8226ffa0
	sub_8226FFA0(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231b054
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231B054;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231B024:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b040
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B040;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231b040
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231B040;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231b024
	goto loc_8231B024;
loc_8231B040:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,17,22,29
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 17) & 0x3FC) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFC03);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// b 0x8231b060
	goto loc_8231B060;
loc_8231B054:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231B058:
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16384;
loc_8231B05C:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231B060:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_8231B064:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
loc_8231B06C:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,16
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFF9FFF;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,36864
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 36864;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,24,21,21
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 24) & 0x400) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFBFF);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10880
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 10880, xer);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x8231b058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B058;
	// b 0x8231aff4
	goto loc_8231AFF4;
loc_8231B0A4:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r10.s64 = 5;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,13,16,19
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 13) & 0xF000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFF0FFF);
	// b 0x8231b208
	goto loc_8231B208;
loc_8231B0B4:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,23,21
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFFDFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,20,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFCFFF;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,50176
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 50176;
	// b 0x8231b208
	goto loc_8231B208;
loc_8231B0C8:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,22,20
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFFBFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,20,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFCFFF;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,49664
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 49664;
	// b 0x8231b208
	goto loc_8231B208;
loc_8231B0DC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,20,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFCFFF;
	// li ctx_arrow(ctx)->r4,93
	ctx_arrow(ctx)->r4.s64 = 93;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,50688
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 50688;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// bl 0x822701f8
	sub_822701F8(&ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,28
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFF8) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF00000007);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x8231b20c
	goto loc_8231B20C;
loc_8231B118:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = 7;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,12,16,19
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 12) & 0xF000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFF0FFF);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,83
	ctx_arrow(ctx)->r4.s64 = 83;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// bl 0x822701f8
	sub_822701F8(&ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,-16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r30.s64 + -16;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,16,11,15
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 16) & 0x1F0000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFE0FFFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x8231b064
	goto loc_8231B064;
loc_8231B15C:
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,84
	ctx_arrow(ctx)->r4.s64 = 84;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -16;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,15,16,19
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 15) & 0xF000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFF0FFF);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,83
	ctx_arrow(ctx)->r4.s64 = 83;
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r28,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// bl 0x822701f8
	sub_822701F8(&ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,-16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + -16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,16,11,15
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 16) & 0x1F0000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFE0FFFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82270ac8
	sub_82270AC8(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,19,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r3.u32, 0) & 0x1FFF) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFE000);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4,10,10
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 4) & 0x200000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFDFFFFF);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,24,21,21
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 24) & 0x400) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFBFF);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// b 0x8231b20c
	goto loc_8231B20C;
loc_8231B200:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,61440
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 61440;
loc_8231B208:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231B20C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8231b064
	goto loc_8231B064;
loc_8231B214:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r4,3500
	ctx_arrow(ctx)->r4.s64 = 3500;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,14728
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 14728;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
}

alias(__imp__sub_8231B228) PPC_WEAK_FUNC(sub_8231B228);
PPC_FUNC_IMPL(__imp__sub_8231B228) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u32 & 0x3;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231b300
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231B300;
	// beq ctx_arrow(ctx)->r6,0x8231b2c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B2C4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231b288
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231B288;
	// beq ctx_arrow(ctx)->r6,0x8231b24c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B24C;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// b 0x8225d328
	sub_8225D328(ctx, base);
	return;
loc_8231B24C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// blr 
	return;
loc_8231B288:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 1;
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r8,32(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 32);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// blr 
	return;
loc_8231B2C4:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,0,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,32(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 32);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// blr 
	return;
loc_8231B300:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,0,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8231B340) PPC_WEAK_FUNC(sub_8231B340);
PPC_FUNC_IMPL(__imp__sub_8231B340) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-103
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -103;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r8,212(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r9.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -8;
	// lwz ctx_arrow(ctx)->r10,220(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,14,16,17
	ctx_arrow(ctx)->r30.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 14) & 0xC000) | (ctx_arrow(ctx)->r30.u64 & 0xFFFFFFFFFFFF3FFF);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 2, xer);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,15,1,16
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 15) & 0x7FFF8000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF80007FFF);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27,0,28,31
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r27.u32, 0) & 0xF) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFFF0);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,0,17,31
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r28.u32, 0) & 0x7FFF) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFF8000);
	// oris ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 1048576;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// beq ctx_arrow(ctx)->r6,0x8231b3f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B3F0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x8231b408
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B408;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 3510;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3510
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3510, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b408
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B408;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3510;
	// b 0x8231b404
	goto loc_8231B404;
loc_8231B3F0:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 2340;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2340
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2340, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b408
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B408;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2340;
loc_8231B404:
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
loc_8231B408:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8231B410) PPC_WEAK_FUNC(sub_8231B410);
PPC_FUNC_IMPL(__imp__sub_8231B410) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b4ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B4AC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,-32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + -32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231B4AC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8231B4B8) PPC_WEAK_FUNC(sub_8231B4B8);
PPC_FUNC_IMPL(__imp__sub_8231B4B8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,111
	ctx_arrow(ctx)->r4.s64 = 111;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,111
	ctx_arrow(ctx)->r6.s64 = 111;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,-4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + -4;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8388608;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r8,104(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 104);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231B578) PPC_WEAK_FUNC(sub_8231B578);
PPC_FUNC_IMPL(__imp__sub_8231B578) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r6.s64 = 4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,109
	ctx_arrow(ctx)->r4.s64 = 109;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,109
	ctx_arrow(ctx)->r6.s64 = 109;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b60c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B60C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,-32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + -32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231B60C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8231B618) PPC_WEAK_FUNC(sub_8231B618);
PPC_FUNC_IMPL(__imp__sub_8231B618) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x8231b65c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B65C;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r28.s64 + 4;
loc_8231B65C:
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x8231b680
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B680;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
loc_8231B680:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,8
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFBFFFFF;
	// stw ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r25,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r25,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231b74c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231B74C;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// b 0x8231b6dc
	goto loc_8231B6DC;
loc_8231B6C8:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b6d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B6D8;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_8231B6D8:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231B6DC:
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x8231b6c8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231B6C8;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231b74c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231B74C;
	// stw ctx_arrow(ctx)->r25,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// lwz ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231b744
	goto loc_8231B744;
loc_8231B6F8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231b710
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231B710;
	// bne ctx_arrow(ctx)->r6,0x8231b7d0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B7D0;
	// li ctx_arrow(ctx)->r26,72
	ctx_arrow(ctx)->r26.s64 = 72;
	// b 0x8231b714
	goto loc_8231B714;
loc_8231B710:
	// li ctx_arrow(ctx)->r26,12
	ctx_arrow(ctx)->r26.s64 = 12;
loc_8231B714:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 4);
	// stw ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// lwz ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231B744:
	// cmplwi ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne 0x8231b6f8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231B6F8;
loc_8231B74C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,40
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 40;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,15,27,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 15) & 0x1C;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,111
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 111, xer);
	// bne ctx_arrow(ctx)->r6,0x8231b7dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B7DC;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,111
	ctx_arrow(ctx)->r4.s64 = 111;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r10,104(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 104);
	// stw ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r8,-8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,0,17,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0) & 0x7FFF) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFF8000);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,-8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,0,3,16
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0) & 0x1FFF8000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFE0007FFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,-8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,3,1
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFFFFFFFFDFFFFFFF) | (ctx_arrow(ctx)->r9.u64 & 0x20000000);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// b 0x8231b90c
	goto loc_8231B90C;
loc_8231B7D0:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231B7DC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,118
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 118, xer);
	// bne ctx_arrow(ctx)->r6,0x8231b81c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B81C;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,118
	ctx_arrow(ctx)->r4.s64 = 118;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -12;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x82295178
	sub_82295178(ctx, base);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// b 0x8231b90c
	goto loc_8231B90C;
loc_8231B81C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 96, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b834
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B834;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,98
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 98, xer);
	// beq ctx_arrow(ctx)->r6,0x8231b834
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231B834;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,99
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 99, xer);
	// bne ctx_arrow(ctx)->r6,0x8231b838
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B838;
loc_8231B834:
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
loc_8231B838:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231b88c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231B88C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -24;
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231b90c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231B90C;
	// lwz ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x82295178
	sub_82295178(ctx, base);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231b8dc
	goto loc_8231B8DC;
loc_8231B88C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,95
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 95, xer);
	// bne ctx_arrow(ctx)->r6,0x8231b90c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231B90C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -20;
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231b90c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231B90C;
	// lwz ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x82295178
	sub_82295178(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231B8DC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// stw ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -4;
	// stwx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r11.u32);
loc_8231B90C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8231B918) PPC_WEAK_FUNC(sub_8231B918);
PPC_FUNC_IMPL(__imp__sub_8231B918) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r29,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15744
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15744, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ba2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BA2C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -8;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFF;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 40;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x70;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,48
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 48, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ba2c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BA2C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231b618
	sub_8231B618(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// bl 0x822819e0
	sub_822819E0(&ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// lwz ctx_arrow(ctx)->r4,44(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// stw ctx_arrow(ctx)->r3,44(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231B9EC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ba20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BA20;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ba18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BA18;
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ba18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BA18;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
loc_8231BA18:
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231b9ec
	goto loc_8231B9EC;
loc_8231BA20:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
loc_8231BA2C:
	// li ctx_arrow(ctx)->r4,4801
	ctx_arrow(ctx)->r4.s64 = 4801;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
}

alias(__imp__sub_8231BA38) PPC_WEAK_FUNC(sub_8231BA38);
PPC_FUNC_IMPL(__imp__sub_8231BA38) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,40
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r23.s64 * 40;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ba7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BA7C;
	// bl 0x82296460
	sub_82296460(ctx, base);
loc_8231BA7C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29,18,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x3FFF;
	// beq 0x8231baa0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231BAA0;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,28,18,31
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x3FFF;
loc_8231BAA0:
	// li ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r27.s64 = -1;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231bafc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BAFC;
	// lwz ctx_arrow(ctx)->r9,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231BABC:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,28,18,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 28) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r24.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bae4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BAE4;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r26.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r27.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8231bae4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231BAE4;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
loc_8231BAE4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r8.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231babc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231BABC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bb18
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BB18;
loc_8231BAFC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bb0c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BB0C;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8231bbc0
	goto loc_8231BBC0;
loc_8231BB0C:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231BB18:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,-103
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 + -103;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,3,0,28
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 3) & 0xFFFFFFF8;
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r23.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14,30,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x3;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x8231b340
	sub_8231B340(&ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231b228
	sub_8231B228(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231bba8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231BBA8;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 131072;
	// b 0x8231bbb8
	goto loc_8231BBB8;
loc_8231BBA8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bbbc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BBBC;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1;
loc_8231BBB8:
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
loc_8231BBBC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
loc_8231BBC0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_8231BBC8) PPC_WEAK_FUNC(sub_8231BBC8);
PPC_FUNC_IMPL(__imp__sub_8231BBC8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29,772
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r29.s64 + 772;
	// lwz ctx_arrow(ctx)->r27,16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// mulli ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25,40
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r25.s64 * 40;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,132
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 132, xer);
	// ble ctx_arrow(ctx)->r6,0x8231bc08
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231BC08;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82270c00
	sub_82270C00(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x8231bc74
	goto loc_8231BC74;
loc_8231BC08:
	// lwz ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,140(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4096
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4096;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231bc2c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231BC2C;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// stw ctx_arrow(ctx)->r10,144(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 144);
	// b 0x8231bc70
	goto loc_8231BC70;
loc_8231BC2C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,30,2,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 30) & 0x3FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x8231bc64
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231BC64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32);
	// bl 0x823edf70
	sub_823EDF70(&ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// b 0x8231bc70
	goto loc_8231BC70;
loc_8231BC64:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822703e8
	sub_822703E8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231BC70:
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
loc_8231BC74:
	// mulli ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27,40
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r27.s64 * 40;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r28.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// li ctx_arrow(ctx)->r5,40
	ctx_arrow(ctx)->r5.s64 = 40;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 40;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,132
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 132, xer);
	// ble ctx_arrow(ctx)->r6,0x8231bce0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231BCE0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-12
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -12;
	// lis ctx_arrow(ctx)->r4,24973
	ctx_arrow(ctx)->r4.s64 = 1636630528;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// bl 0x8209d060
	sub_8209D060(&ctx);
	// b 0x8231bcf8
	goto loc_8231BCF8;
loc_8231BCE0:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30,2,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 30) & 0x3FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r30.u32);
loc_8231BCF8:
	// stw ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 12);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r25,16(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 16);
	// stw ctx_arrow(ctx)->r25,20(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 20);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24,4,25,27
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r24.u32, 4) & 0x70) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFF8F);
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// beq ctx_arrow(ctx)->r6,0x8231bd40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BD40;
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// li ctx_arrow(ctx)->r10,40
	ctx_arrow(ctx)->r10.s64 = 40;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r11.s64;
	// divw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.s32 = ctx_arrow(ctx)->r11.s32 / ctx_arrow(ctx)->r10.s32;
	// bl 0x82296460
	sub_82296460(ctx, base);
loc_8231BD40:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8231BD50) PPC_WEAK_FUNC(sub_8231BD50);
PPC_FUNC_IMPL(__imp__sub_8231BD50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x822e9858
	sub_822E9858(ctx, base);
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26,3,0,28
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r25.u64 + ctx_arrow(ctx)->r3.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4);
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bdf4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BDF4;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bdf4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BDF4;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,111
	ctx_arrow(ctx)->r4.s64 = 111;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bdf4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BDF4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17,18,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 17) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c020
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C020;
loc_8231BDF4:
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,16
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r27.s64 + 16;
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231be78
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231BE78;
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x8231be78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231BE78;
loc_8231BE0C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x8231be54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BE54;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,111
	ctx_arrow(ctx)->r4.s64 = 111;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231be54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BE54;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17,18,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 17) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231be70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BE70;
loc_8231BE54:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r31,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231be78
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231BE78;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231be0c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BE0C;
	// b 0x8231be78
	goto loc_8231BE78;
loc_8231BE70:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bfe4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BFE4;
loc_8231BE78:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231be88
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231BE88;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231BE88:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r11.u32, xer);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bne ctx_arrow(ctx)->r6,0x8231bf14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BF14;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,115
	ctx_arrow(ctx)->r6.s64 = 115;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stw ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// li ctx_arrow(ctx)->r4,115
	ctx_arrow(ctx)->r4.s64 = 115;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 32);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4);
	// bl 0x822701f8
	sub_822701F8(&ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -4;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,15,3,16
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r26.u32, 15) & 0x1FFF8000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFE0007FFF);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,0,17,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r29.u32, 0) & 0x7FFF) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFF8000);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// b 0x8231bfe4
	goto loc_8231BFE4;
loc_8231BF14:
	// bl 0x8231b4b8
	sub_8231B4B8(&ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,111
	ctx_arrow(ctx)->r4.s64 = 111;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -8;
	// lis ctx_arrow(ctx)->r10,8192
	ctx_arrow(ctx)->r10.s64 = 536870912;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,15,3,16
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r26.u32, 15) & 0x1FFF8000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFE0007FFF);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,17
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u32 & 0x7FFF;
	// mulli ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r29.s64 * 40;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,2
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xE0000000;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r8.u64;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bf88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BF88;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,5,5
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231bf88
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231BF88;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82296460
	sub_82296460(ctx, base);
loc_8231BF88:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231bfe4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231BFE4;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14,30,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x3;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8231bfcc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BFCC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x8231bfe4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231BFE4;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x6;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 6, xer);
	// beq ctx_arrow(ctx)->r6,0x8231bfe4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BFE4;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 6;
	// b 0x8231bfe0
	goto loc_8231BFE0;
loc_8231BFCC:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8231bfe4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231BFE4;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4;
loc_8231BFE0:
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
loc_8231BFE4:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c000
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C000;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231c010
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C010;
loc_8231C000:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 0);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,16,14
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFFFFFFEFFFF) | (ctx_arrow(ctx)->r10.u64 & 0x10000);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 4);
loc_8231C010:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,16,14
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFFFFFFEFFFF) | (ctx_arrow(ctx)->r10.u64 & 0x10000);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 4);
loc_8231C020:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
}

alias(__imp__sub_8231C030) PPC_WEAK_FUNC(sub_8231C030);
PPC_FUNC_IMPL(__imp__sub_8231C030) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r10.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c064
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C064;
loc_8231C05C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8231c294
	goto loc_8231C294;
loc_8231C064:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r22.s64 = 0;
loc_8231C06C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c080
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C080;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 1;
	// b 0x8231c06c
	goto loc_8231C06C;
loc_8231C080:
	// lis ctx_arrow(ctx)->r11,-32214
	ctx_arrow(ctx)->r11.s64 = -2111176704;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-3792
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -3792;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8229e6c0
	sub_8229E6C0(ctx, base);
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231C098:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c164
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C164;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// lwz ctx_arrow(ctx)->r24,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,2,31,31
	ctx_arrow(ctx)->r26.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x1;
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,7,29,31
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x7;
loc_8231C0BC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c154
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C154;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u32 & 0xFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231c148
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231C148;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r25.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231c148
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231C148;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c104
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C104;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82319230
	sub_82319230(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231c110
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C110;
	// b 0x8231c148
	goto loc_8231C148;
loc_8231C104:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r24.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231c148
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231C148;
loc_8231C110:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r11.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bne 0x8231c128
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C128;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
loc_8231C128:
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 29) & 0x1FFFFFFC;
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
loc_8231C148:
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// b 0x8231c0bc
	goto loc_8231C0BC;
loc_8231C154:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c05c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C05C;
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231c098
	goto loc_8231C098;
loc_8231C164:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c290
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C290;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r22.s64 + -1;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8231a5c8
	sub_8231A5C8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231c05c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C05C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c1c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C1C0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// ble ctx_arrow(ctx)->r6,0x8231c1b8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231C1B8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 8, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c1b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C1B8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c1b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C1B8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -16;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// bgt ctx_arrow(ctx)->r6,0x8231c1c0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8231C1C0;
loc_8231C1B8:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x8231c1c4
	goto loc_8231C1C4;
loc_8231C1C0:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231C1C4:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c220
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C220;
	// lwz ctx_arrow(ctx)->r4,40(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r31.s64 = 2;
	// lwz ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82319230
	sub_82319230(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c1f8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C1F8;
	// lwz ctx_arrow(ctx)->r4,44(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,44(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82319230
	sub_82319230(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231c220
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C220;
loc_8231C1F8:
	// lwz ctx_arrow(ctx)->r4,40(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,44(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82319230
	sub_82319230(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c05c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C05C;
	// lwz ctx_arrow(ctx)->r4,44(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82319230
	sub_82319230(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c05c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C05C;
loc_8231C220:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8231c290
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231C290;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 10;
	// subf ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r27.s64 - ctx_arrow(ctx)->r23.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r23.u64;
loc_8231C244:
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c268
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C268;
	// bl 0x82319230
	sub_82319230(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c05c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C05C;
	// b 0x8231c278
	goto loc_8231C278;
loc_8231C268:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231c05c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231C05C;
loc_8231C278:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231c244
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231C244;
loc_8231C290:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_8231C294:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_8231C2A0) PPC_WEAK_FUNC(sub_8231C2A0);
PPC_FUNC_IMPL(__imp__sub_8231C2A0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231C2BC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c2dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C2DC;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231c2d4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C2D4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
loc_8231C2D4:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231c2bc
	goto loc_8231C2BC;
loc_8231C2DC:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0,0,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFF000;
	// lis ctx_arrow(ctx)->r11,-32214
	ctx_arrow(ctx)->r11.s64 = -2111176704;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-3792
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -3792;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8229e6c0
	sub_8229E6C0(ctx, base);
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231C300:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c3a0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C3A0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231c390
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C390;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
loc_8231C324:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c388
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C388;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231c380
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C380;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r5.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231c37c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231C37C;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r11.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bne 0x8231c35c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C35C;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
loc_8231C35C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFC;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// slw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | ctx_arrow(ctx)->r3.u64;
	// stwx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
loc_8231C37C:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
loc_8231C380:
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231c324
	goto loc_8231C324;
loc_8231C388:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c398
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C398;
loc_8231C390:
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231c300
	goto loc_8231C300;
loc_8231C398:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8231c3cc
	goto loc_8231C3CC;
loc_8231C3A0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c3c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C3C4;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8231a5c8
	sub_8231A5C8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne 0x8231c3c8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C3C8;
loc_8231C3C4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_8231C3C8:
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_8231C3CC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8231C3D8) PPC_WEAK_FUNC(sub_8231C3D8);
PPC_FUNC_IMPL(__imp__sub_8231C3D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C3DC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231c408
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231C408;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	xer.ca = ctx_arrow(ctx)->r11.u32 > 35;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231c408
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231C408;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231c3dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231C3DC;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
loc_8231C408:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_8231C410) PPC_WEAK_FUNC(sub_8231C410);
PPC_FUNC_IMPL(__imp__sub_8231C410) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// li ctx_arrow(ctx)->r6,48
	ctx_arrow(ctx)->r6.s64 = 48;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c460
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C460;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C460:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// stw ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231C4B8) PPC_WEAK_FUNC(sub_8231C4B8);
PPC_FUNC_IMPL(__imp__sub_8231C4B8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// li ctx_arrow(ctx)->r6,58
	ctx_arrow(ctx)->r6.s64 = 58;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c508
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C508;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C508:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// stw ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231C560) PPC_WEAK_FUNC(sub_8231C560);
PPC_FUNC_IMPL(__imp__sub_8231C560) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// li ctx_arrow(ctx)->r6,59
	ctx_arrow(ctx)->r6.s64 = 59;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c5b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C5B0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C5B0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// stw ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231C608) PPC_WEAK_FUNC(sub_8231C608);
PPC_FUNC_IMPL(__imp__sub_8231C608) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// li ctx_arrow(ctx)->r6,60
	ctx_arrow(ctx)->r6.s64 = 60;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c658
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C658;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C658:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// stw ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231C6B0) PPC_WEAK_FUNC(sub_8231C6B0);
PPC_FUNC_IMPL(__imp__sub_8231C6B0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// li ctx_arrow(ctx)->r6,61
	ctx_arrow(ctx)->r6.s64 = 61;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c700
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C700;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C700:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// stw ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231C758) PPC_WEAK_FUNC(sub_8231C758);
PPC_FUNC_IMPL(__imp__sub_8231C758) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// li ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = 4;
	// li ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = 2;
	// li ctx_arrow(ctx)->r6,96
	ctx_arrow(ctx)->r6.s64 = 96;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// beq ctx_arrow(ctx)->r6,0x8231c7ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C7AC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C7AC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// stw ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 40);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c7d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C7D8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C7D8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,44(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 44);
	// beq ctx_arrow(ctx)->r6,0x8231c820
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C820;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,-32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + -32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
loc_8231C820:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8231C830) PPC_WEAK_FUNC(sub_8231C830);
PPC_FUNC_IMPL(__imp__sub_8231C830) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// li ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = 4;
	// li ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = 2;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// stw ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231c8a0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231C8A0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231C8A0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r8,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// stw ctx_arrow(ctx)->r9,44(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 1;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,7,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 7) & 0x7;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,14,15,17
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 14) & 0x1C000) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFE3FFF);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8231C910) PPC_WEAK_FUNC(sub_8231C910);
PPC_FUNC_IMPL(__imp__sub_8231C910) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// std ctx_arrow(ctx)->r6,168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// li ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = 4;
	// li ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = 2;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// bl 0x822eaca0
	sub_822EACA0(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r8,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 24;
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// stw ctx_arrow(ctx)->r9,44(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 1;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,7,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 7) & 0x7;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,14,15,17
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 14) & 0x1C000) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFE3FFF);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231C9E0) PPC_WEAK_FUNC(sub_8231C9E0);
PPC_FUNC_IMPL(__imp__sub_8231C9E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// std ctx_arrow(ctx)->r6,168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// li ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = 4;
	// li ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = 2;
	// li ctx_arrow(ctx)->r6,7
	ctx_arrow(ctx)->r6.s64 = 7;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,168
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 168;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// bl 0x822eaca0
	sub_822EACA0(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r8,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 24;
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// stw ctx_arrow(ctx)->r9,44(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 44);
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 1;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,7,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 7) & 0x7;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,14,15,17
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 14) & 0x1C000) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFE3FFF);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231CAB0) PPC_WEAK_FUNC(sub_8231CAB0);
PPC_FUNC_IMPL(__imp__sub_8231CAB0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,30,30,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 30) & 0x3;
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u32 & 0x3;
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,28,30,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 28) & 0x3;
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,26,30,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 26) & 0x3;
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8231CAF8) PPC_WEAK_FUNC(sub_8231CAF8);
PPC_FUNC_IMPL(__imp__sub_8231CAF8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231cb30
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CB30;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231cb30
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CB30;
loc_8231CB28:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8231cb58
	goto loc_8231CB58;
loc_8231CB30:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231cb40
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CB40;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231cb28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231CB28;
loc_8231CB40:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231cb54
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CB54;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne 0x8231cb58
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231CB58;
loc_8231CB54:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_8231CB58:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231cb90
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231CB90;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x822e71a0
	sub_822E71A0(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xE000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFF1FFFFFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_8231CB90:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231cbb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CBB0;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30,0,30,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231cbb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CBB0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
loc_8231CBB0:
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r30.u64;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,29,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231cbc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CBC4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,-4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r30.s64 + -4;
loc_8231CBC4:
	// clrlwi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231cbd8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CBD8;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,0,30,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231cbd8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CBD8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -2;
loc_8231CBD8:
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,7,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 7) & 0x7;
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82319390
	sub_82319390(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8231CBF8) PPC_WEAK_FUNC(sub_8231CBF8);
PPC_FUNC_IMPL(__imp__sub_8231CBF8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8231cc98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CC98;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// bl 0x822834c0
	sub_822834C0(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r29.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,0,7,3
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0) & 0xFFFFFFFFF1FFFFFF) | (ctx_arrow(ctx)->r10.u64 & 0xE000000);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 24;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 1;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
loc_8231CC98:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-28311
	ctx_arrow(ctx)->r10.s64 = -1855389696;
	// lis ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 32;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5192
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 5192;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,36262
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 36262;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// rldimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,32,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft64(ctx_arrow(ctx)->r9.u64, 32) & 0xFFFFFFFF00000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 8);
	// li ctx_arrow(ctx)->r5,228
	ctx_arrow(ctx)->r5.s64 = 228;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x7;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// srd ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r9.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r9.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r9.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x7F)), 0));
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,13,16,18
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 13) & 0xE000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFF1FFF);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,1,27,30
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 1) & 0x1E) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFFE1);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,1,15,17
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 1) & 0x1C000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFE3FFF);
	// stw ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 8);
	// bl 0x82319878
	sub_82319878(&ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -65536;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,15
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFF0000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231cdf4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231CDF4;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,28,4,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 28) & 0xFFFFFFF;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,61
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 61, xer);
	// bne ctx_arrow(ctx)->r6,0x8231cd3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231CD3C;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x8231cd44
	goto loc_8231CD44;
loc_8231CD3C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3, xer);
	// bgt ctx_arrow(ctx)->r6,0x8231cd48
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8231CD48;
loc_8231CD44:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_8231CD48:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231cdf4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CDF4;
	// lwz ctx_arrow(ctx)->r4,548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne 0x8231cde4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231CDE4;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,116
	ctx_arrow(ctx)->r6.s64 = 116;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 24;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 1;
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r8,32(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 32);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r27,548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,92(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beq 0x8231cdd4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CDD4;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82282150
	sub_82282150(ctx, base);
loc_8231CDD4:
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 92);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 33554432;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
loc_8231CDE4:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82281aa0
	sub_82281AA0(ctx, base);
loc_8231CDF4:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_8231CE10) PPC_WEAK_FUNC(sub_8231CE10);
PPC_FUNC_IMPL(__imp__sub_8231CE10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,124
	ctx_arrow(ctx)->r4.s64 = 124;
	// stw ctx_arrow(ctx)->r29,188(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 188);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ce64
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CE64;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231CE64:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,124
	ctx_arrow(ctx)->r6.s64 = 124;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ceac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231CEAC;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27,40
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r27.s64 + 40;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_8231CE94:
	// lfs f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stfs f0,0(ctx_arrow(ctx)->r9)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// bne 0x8231ce94
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231CE94;
loc_8231CEAC:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231cec0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CEC0;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,14,10,17
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 14) & 0x3FC000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFC03FFF);
	// stw ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 16);
loc_8231CEC0:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ced0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CED0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231CED0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,17,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231d034
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D034;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d034
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D034;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
loc_8231CF30:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,188
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 188;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,29,3,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// li ctx_arrow(ctx)->r5,-1
	ctx_arrow(ctx)->r5.s64 = -1;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r5.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r4.u64;
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r5.u64;
	// srw. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231cfb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231CFB0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// bne ctx_arrow(ctx)->r6,0x8231cf9c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231CF9C;
	// cmpwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// blt 0x8231cf8c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_8231CF8C;
	// li ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = 6;
loc_8231CF8C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x8231cffc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8231CFFC;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1;
	// b 0x8231cffc
	goto loc_8231CFFC;
loc_8231CF9C:
	// li ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = 6;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231cffc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231CFFC;
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// b 0x8231cffc
	goto loc_8231CFFC;
loc_8231CFB0:
	// lfs f0,0(ctx_arrow(ctx)->r7)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x8231cfc0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231CFC0;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
loc_8231CFC0:
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bgt ctx_arrow(ctx)->r6,0x8231cfcc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8231CFCC;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1;
loc_8231CFCC:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,0(ctx_arrow(ctx)->r7)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fctiwz f12,f0
	ctx.f12.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f12,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// lwa ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.s64 = int32_t(PPC_Read_U32(ctx,  ctx));
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f12,88(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x8231cffc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231CFFC;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4;
loc_8231CFFC:
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,20
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d020
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D020;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 16);
loc_8231D020:
	// addic. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-1
	xer.ca = ctx_arrow(ctx)->r30.u32 > 0;
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 2;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,4
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 4;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 3;
	// bne 0x8231cf30
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231CF30;
loc_8231D034:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8231D040) PPC_WEAK_FUNC(sub_8231D040);
PPC_FUNC_IMPL(__imp__sub_8231D040) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231d09c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D09C;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r28,40
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r28.s64 * 40;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d080
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D080;
	// bl 0x82296460
	sub_82296460(ctx, base);
loc_8231D080:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 3) & 0xFFFFFFF8;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,28,18,31
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x3FFF;
loc_8231D09C:
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// clrlwi. ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r29,31
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r29.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// bne 0x8231d0b0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D0B0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_8231D0B0:
	// lwz ctx_arrow(ctx)->r31,20(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231d128
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D128;
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x8231d128
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D128;
loc_8231D0C4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15744
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15744, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d110
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D110;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r28.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d110
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D110;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17,18,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 17) & 0x3FFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r25.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d170
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D170;
loc_8231D110:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r31,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231d128
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D128;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d0c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D0C4;
loc_8231D128:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8231d138
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D138;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_8231D138:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 | 3;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8231d150
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D150;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
loc_8231D150:
	// li ctx_arrow(ctx)->r7,123
	ctx_arrow(ctx)->r7.s64 = 123;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8231ba38
	sub_8231BA38(ctx, base);
loc_8231D168:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
loc_8231D170:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// b 0x8231d168
	goto loc_8231D168;
}

alias(__imp__sub_8231D178) PPC_WEAK_FUNC(sub_8231D178);
PPC_FUNC_IMPL(__imp__sub_8231D178) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// stfs f3,252(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 252);
	// li ctx_arrow(ctx)->r9,7
	ctx_arrow(ctx)->r9.s64 = 7;
	// stfs f4,260(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f4.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 260);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// stfs f2,244(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 244);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stfs f1,236(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 236);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// stfs f1,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// stfs f2,100(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stfs f3,104(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stfs f4,108(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f4.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// lwz ctx_arrow(ctx)->r10,252(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,260(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r10,244(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r10,236(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// divwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r9.u32;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 7;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 15;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8231d2a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D2A4;
	// li ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = 1;
loc_8231D1F4:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3FC000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231d298
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D298;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r28.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d298
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D298;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d284
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D284;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,40
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r4.s64 + 40;
loc_8231D228:
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
loc_8231D238:
	// lwz ctx_arrow(ctx)->r25,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r5.s32, ctx_arrow(ctx)->r25.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d260
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D260;
	// li ctx_arrow(ctx)->r25,3
	ctx_arrow(ctx)->r25.s64 = 3;
	// slw ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r23.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r23.u64 | ctx_arrow(ctx)->r7.u64;
	// slw ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r27.u64 & ~ctx_arrow(ctx)->r25.u64;
	// or ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r27.u64 | ctx_arrow(ctx)->r24.u64;
loc_8231D260:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 8, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d238
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D238;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r3.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d228
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D228;
loc_8231D284:
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r28, 0, BINARY_OP_U8(ctx_arrow(ctx)->r28, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r28) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231d308
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D308;
loc_8231D298:
	// lwz ctx_arrow(ctx)->r4,28(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// bne 0x8231d1f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D1F4;
loc_8231D2A4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231ce10
	sub_8231CE10(ctx, base);
	// lwz ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,15,15
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x10000;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 1;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stw ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 28);
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// ld ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// std ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r29)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 88);
loc_8231D2FC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed174
	return;
loc_8231D308:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// lwz ctx_arrow(ctx)->r8,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r27.u32 & 0xFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,20,9,11
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 20) & 0x700000;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,15,15
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x10000;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 | 2;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5,0,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 5) & 0xFFFFFFE0;
	// stw ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,27,18
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// ld ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,7,3
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFF1FFFFFF;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// std ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r29)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// b 0x8231d2fc
	goto loc_8231D2FC;
}

alias(__imp__sub_8231D358) PPC_WEAK_FUNC(sub_8231D358);
PPC_FUNC_IMPL(__imp__sub_8231D358) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u32 & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d39c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D39C;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
loc_8231D388:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r11.u64;
	// bne 0x8231d388
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D388;
loc_8231D39C:
	// li ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = 7;
	// divwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r10.u32;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 7;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 15;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x8231d4a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D4A4;
	// clrlwi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r24,24
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r24.u32 & 0xFF;
loc_8231D3CC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14592
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 14592, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d430
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D430;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231d400
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D400;
	// lwz ctx_arrow(ctx)->r11,540(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stw ctx_arrow(ctx)->r31,540(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 540);
	// b 0x8231d498
	goto loc_8231D498;
loc_8231D400:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r6,34
	ctx_arrow(ctx)->r6.s64 = 34;
	// bl 0x82270940
	sub_82270940(ctx, base);
	// b 0x8231d498
	goto loc_8231D498;
loc_8231D430:
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 18) & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d494
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D494;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r28.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d494
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D494;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d48c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D48C;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,40
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 40;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_8231D464:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r7.s64;
	// cntlzw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r7.u32);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27,31,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 27) & 0x1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r8.u64;
	// bne 0x8231d464
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D464;
loc_8231D48C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231d4d4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D4D4;
loc_8231D494:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,28
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 28;
loc_8231D498:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne 0x8231d3cc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D3CC;
loc_8231D4A4:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8231ce10
	sub_8231CE10(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 28);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 88);
	// b 0x8231d4d8
	goto loc_8231D4D8;
loc_8231D4D4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
loc_8231D4D8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8231D4E0) PPC_WEAK_FUNC(sub_8231D4E0);
PPC_FUNC_IMPL(__imp__sub_8231D4E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8231d550
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D550;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r4.u64;
loc_8231D514:
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// lfs f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stfs f0,0(ctx_arrow(ctx)->r8)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 0;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r5.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r31.u64;
	// stwx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + ctx_arrow(ctx)->r6.u32);
	// bne 0x8231d514
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D514;
loc_8231D550:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231d358
	sub_8231D358(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8231D570) PPC_WEAK_FUNC(sub_8231D570);
PPC_FUNC_IMPL(__imp__sub_8231D570) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64;
	// stw ctx_arrow(ctx)->r6,188(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 188);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d624
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D624;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
loc_8231D598:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// li ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r31.s64 = 2;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// li ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r30.s64 = -1;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,188
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 188;
	// lwzx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// slw ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r30.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r29.u64;
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r31.u64;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d600
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D600;
	// beq ctx_arrow(ctx)->r6,0x8231d5f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D5F0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 3, xer);
	// bge ctx_arrow(ctx)->r6,0x8231d634
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231D634;
	// lfd f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// b 0x8231d5f8
	goto loc_8231D5F8;
loc_8231D5F0:
	// lfd f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
loc_8231D5F8:
	// stfiwx f0,0,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// b 0x8231d60c
	goto loc_8231D60C;
loc_8231D600:
	// lfd f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfs f0,0(ctx_arrow(ctx)->r9)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
loc_8231D60C:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, ctx_arrow(ctx)->r4.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d598
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D598;
loc_8231D624:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8231d358
	sub_8231D358(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed188
	return;
loc_8231D634:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
}

alias(__imp__sub_8231D640) PPC_WEAK_FUNC(sub_8231D640);
PPC_FUNC_IMPL(__imp__sub_8231D640) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 1) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,18,24,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 18) & 0xFF;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u32 & 0x1F;
	// li ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r8.s64 = 2;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// li ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = -1;
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64 | ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// stw ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwzx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r6.u64;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r9.u64;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// bne ctx_arrow(ctx)->r6,0x8231d6d0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D6D0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r5.s64 + 10;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x8231d734
	goto loc_8231D734;
loc_8231D6D0:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822bdb58
	sub_822BDB58(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d730
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D730;
	// beq ctx_arrow(ctx)->r6,0x8231d71c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D71C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d714
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D714;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231D714:
	// fctidz f0,f1
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f1.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f1.f64));
	// b 0x8231d720
	goto loc_8231D720;
loc_8231D71C:
	// fctiwz f0,f1
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f1.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f1.f64));
loc_8231D720:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lfs f0,80(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x8231d734
	goto loc_8231D734;
loc_8231D730:
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
loc_8231D734:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stfs f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231D748) PPC_WEAK_FUNC(sub_8231D748);
PPC_FUNC_IMPL(__imp__sub_8231D748) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,58
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 58, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d7fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D7FC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,59
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 59, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d7e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D7E8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 60, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d7b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D7B8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,61
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 61, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d810
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D810;
	// lwz ctx_arrow(ctx)->r4,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82281410
	sub_82281410(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231c608
	sub_8231C608(ctx, base);
	// b 0x8231d80c
	goto loc_8231D80C;
loc_8231D7B8:
	// lwz ctx_arrow(ctx)->r4,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82281410
	sub_82281410(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231c6b0
	sub_8231C6B0(ctx, base);
	// b 0x8231d80c
	goto loc_8231D80C;
loc_8231D7E8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231c4b8
	sub_8231C4B8(ctx, base);
	// b 0x8231d80c
	goto loc_8231D80C;
loc_8231D7FC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231c560
	sub_8231C560(ctx, base);
loc_8231D80C:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231D810:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231D814:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d83c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D83C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231d834
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D834;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
loc_8231D834:
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231d814
	goto loc_8231D814;
loc_8231D83C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8231D848) PPC_WEAK_FUNC(sub_8231D848);
PPC_FUNC_IMPL(__imp__sub_8231D848) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 15) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231d888
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D888;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4096
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 268435456;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,9,4,4
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 9) & 0x8000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFF7FFFFFF);
	// b 0x8231d8c8
	goto loc_8231D8C8;
loc_8231D888:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82270030
	sub_82270030(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231d8cc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D8CC;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231d8cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D8CC;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4096
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 268435456;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0xFF;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27,4,4
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 27) & 0x8000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFF7FFFFFF);
loc_8231D8C8:
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231D8CC:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,3,3
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231d920
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D920;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231d920
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D920;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231D8E8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d904
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D904;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x8231d904
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D904;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231d8e8
	goto loc_8231D8E8;
loc_8231D904:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,64
	ctx_arrow(ctx)->r9.s64 = 4194304;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,7,14
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1FE0000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231d920
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231D920;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,5,2
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFE7FFFFFF;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231D920:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231d940
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231D940;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 30, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x8231d944
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231D944;
loc_8231D940:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_8231D944:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231dc24
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DC24;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,25,7,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x1FFFFFF;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3FFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,51200
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3355443200;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,24,3,7
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 24) & 0x1F000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFE0FFFFFF);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231d988
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D988;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16777216;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231D988:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,15,12,15
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 15) & 0xF0000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFF0FFFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231D99C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231da04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DA04;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231d9bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231D9BC;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231d9c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231D9C4;
loc_8231D9BC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231d99c
	goto loc_8231D99C;
loc_8231D9C4:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231d9dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D9DC;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32768
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 32768;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231D9DC:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,27,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231d9f4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231D9F4;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,64
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231D9F4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,15,26,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 15) & 0x3F) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFC0);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231DA04:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = 524288;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u64;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,57344
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3758096384;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231da80
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231DA80;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82318ec8
	sub_82318EC8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31,1,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x7FFFFFFF;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26,5,5
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 26) & 0x4000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFBFFFFFF);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,21,0,0
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 21) & 0x80000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF7FFFFFFF);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,21,11,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 21) & 0x1FFFFF;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stb ctx_arrow(ctx)->r8,5(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 5));
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,22,0,0
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 22) & 0x80000000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF7FFFFFFF);
	// stb ctx_arrow(ctx)->r7,9(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 9));
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231DA80:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = 1048576;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231db04
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231DB04;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82318ec8
	sub_82318EC8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31,1,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x7FFFFFFF;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25,6,6
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 25) & 0x2000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFDFFFFFF);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,20,1,1
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 20) & 0x40000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFBFFFFFFF);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,21,11,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 21) & 0x1FFFFF;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stb ctx_arrow(ctx)->r8,6(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 6));
	// stb ctx_arrow(ctx)->r7,10(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10));
	// beq 0x8231db00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DB00;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231daf8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DAF8;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,21,1,1
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 21) & 0x40000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFBFFFFFFF);
	// b 0x8231dafc
	goto loc_8231DAFC;
loc_8231DAF8:
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,22,0,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 22) & 0x80000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF7FFFFFFF);
loc_8231DAFC:
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231DB00:
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r30.u64;
loc_8231DB04:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.s64 = 1572864;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231db84
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231DB84;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82318ec8
	sub_82318EC8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31,1,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x7FFFFFFF;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,24,7,7
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 24) & 0x1000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFEFFFFFF);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,19,2,2
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 19) & 0x20000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFDFFFFFFF);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,21,11,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 21) & 0x1FFFFF;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stb ctx_arrow(ctx)->r8,7(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 7));
	// stb ctx_arrow(ctx)->r7,11(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 11));
	// beq 0x8231db84
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DB84;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231db7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DB7C;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,21,1,1
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 21) & 0x40000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFBFFFFFFF);
	// b 0x8231db80
	goto loc_8231DB80;
loc_8231DB7C:
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,22,0,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 22) & 0x80000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF7FFFFFFF);
loc_8231DB80:
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231DB84:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,2,2
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231dbb4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DBB4;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231dbb4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DBB4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231dbb4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DBB4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231DBB4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-21
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -21;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bgt ctx_arrow(ctx)->r6,0x8231dfac
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8231DFAC;
	// lbz ctx_arrow(ctx)->r11,5(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2,28,29
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 2) & 0xC) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFFF3);
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,2,28,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 2) & 0xC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFFFFFFFFF3);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,26,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0x3C;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,6,24,25
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 6) & 0xC0;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,2,26,29
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 2) & 0x3C;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,6,24,25
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 6) & 0xC0;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r9.u64;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r7.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r10.u64;
	// stb ctx_arrow(ctx)->r11,5(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 5, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 6));
	// b 0x8231dfac
	goto loc_8231DFAC;
loc_8231DC24:
	// clrlwi. ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// bne 0x8231dc3c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DC3C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,113
	ctx_arrow(ctx)->r10.s64 = 113;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,25,0,7
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 25) & 0xFF000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00FFFFFF);
	// b 0x8231dc84
	goto loc_8231DC84;
loc_8231DC3C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231dc54
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DC54;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x8231dc5c
	goto loc_8231DC5C;
loc_8231DC54:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
loc_8231DC5C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231dc74
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DC74;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32768
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2147483648;
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
loc_8231DC74:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8231dc88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231DC88;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1073741824;
loc_8231DC84:
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
loc_8231DC88:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,7,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x1FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26,0,5
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 26) & 0xFC000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF03FFFFFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231dcb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DCB8;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 33554432;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231DCB8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,19,0,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 19) & 0xFFF80000;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,12,7
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFFFFFFFFFF0FFFFF) | (ctx_arrow(ctx)->r11.u64 & 0xF00000);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231DCD4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231dd4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DD4C;
	// lwz ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231dcf4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DCF4;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x8231dcfc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DCFC;
loc_8231DCF4:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231dcd4
	goto loc_8231DCD4;
loc_8231DCFC:
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231dd24
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DD24;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 32768;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,15,26,31
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 15) & 0x3F) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFFC0);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x8231dda8
	goto loc_8231DDA8;
loc_8231DD24:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,27,27
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231dd38
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DD38;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16384;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231DD38:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,23,18,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 23) & 0x3F00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFC0FF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x8231dda8
	goto loc_8231DDA8;
loc_8231DD4C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82270030
	sub_82270030(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231dda8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DDA8;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231de1c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DE1C;
	// lwz ctx_arrow(ctx)->r30,40(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231DD6C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822705c8
	sub_822705C8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231dda8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DDA8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,19,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 19) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,24,17
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFFFFC0FF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,16,12,15
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xF0000;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,22,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,12,7
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFF0FFFFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231DDA8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231dfac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DFAC;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231dddc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DDDC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231ddd0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DDD0;
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
loc_8231DDD0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231dddc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DDDC;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
loc_8231DDDC:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82318ec8
	sub_82318EC8(ctx, base);
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x8231de58
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DE58;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8231de50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231DE50;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,21,1,1
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 21) & 0x40000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFBFFFFFFF);
	// b 0x8231de54
	goto loc_8231DE54;
loc_8231DE1C:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231DE20:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231de3c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DE3C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231dd6c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DD6C;
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231de20
	goto loc_8231DE20;
loc_8231DE3C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231DE50:
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,22,0,0
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 22) & 0x80000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF7FFFFFFF);
loc_8231DE54:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8231DE58:
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,21,11,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 21) & 0x1FFFFF;
	// lis ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 1048576;
	// rlwimi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,24,7,7
	ctx_arrow(ctx)->r5.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 24) & 0x1000000) | (ctx_arrow(ctx)->r5.u64 & 0xFFFFFFFFFEFFFFFF);
	// stb ctx_arrow(ctx)->r11,11(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 11, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stw ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r4.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231def4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231DEF4;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82318ec8
	sub_82318EC8(ctx, base);
	// lwz ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,21,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 21) & 0xFF;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231debc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DEBC;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,0,5
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFC000000;
	// addis ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1024
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 67108864;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,6,31
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0x3FFFFFF) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFC000000);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231DEBC:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,30,28,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0xC;
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,30,30,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x3;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,31,30,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 31) & 0x3;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,28,2,2
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 28) & 0x20000000) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFDFFFFFFF);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,6,24,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 6) & 0xC0;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31,30,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 31) & 0x3;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// b 0x8231dfa8
	goto loc_8231DFA8;
loc_8231DEF4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,31,24,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 31) & 0xFF;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,19,2,2
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 19) & 0x20000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFDFFFFFFF);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// bl 0x82318e80
	sub_82318E80(&ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231df80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DF80;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231df2c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231DF2C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x8231df34
	goto loc_8231DF34;
loc_8231DF2C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
loc_8231DF34:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r4.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8231df80
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231DF80;
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u32 & 0xFF;
	// bl 0x82318e80
	sub_82318E80(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u32 & 0x3;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,30,2,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 30) & 0x3FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,6,24,25
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xC0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,30,2,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 30) & 0x3FFFFFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r3.u32 & 0x3;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,28,29
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 2) & 0xC) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFF3);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,26,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x3C;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// b 0x8231dfa8
	goto loc_8231DFA8;
loc_8231DF80:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u32 & 0x3;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,30,30,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 30) & 0x3;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2,28,29
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 2) & 0xC) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFFF3);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,24,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xC0;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,2,26,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0x3C;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
loc_8231DFA8:
	// stb ctx_arrow(ctx)->r11,7(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 7, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_8231DFAC:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231e060
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E060;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e060
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E060;
	// lwz ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231DFC4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231dfec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DFEC;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231dfe4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231DFE4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231dfec
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231DFEC;
loc_8231DFE4:
	// lwz ctx_arrow(ctx)->r27,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231dfc4
	goto loc_8231DFC4;
loc_8231DFEC:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231DFF8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e084
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E084;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e07c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E07C;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231e07c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E07C;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,15,17,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 15) & 0x7FFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,26
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x3F;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r9.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231e07c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E07C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,120
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 120, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e068
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E068;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,121
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 121, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e068
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E068;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r26.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e07c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E07C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227b1d0
	sub_8227B1D0(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e07c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E07C;
loc_8231E060:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
loc_8231E068:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-121
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -121;
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// or ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r29.u64;
loc_8231E07C:
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231dff8
	goto loc_8231DFF8;
loc_8231E084:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e060
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E060;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16384;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// beq 0x8231e060
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E060;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231E0A8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e060
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E060;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231e108
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E108;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,15488
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 15488, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e108
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E108;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,19,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 19) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x3F;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,28,4,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0xFFFFFFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e108
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E108;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,20,0,11
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xFFF00000;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xFFFF0000;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r10.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,12,7
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFFFFFFFFFF0FFFFF) | (ctx_arrow(ctx)->r11.u64 & 0xF00000);
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,16,11
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFFFFFF0FFFF) | (ctx_arrow(ctx)->r10.u64 & 0xF0000);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231E108:
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231e0a8
	goto loc_8231E0A8;
}

alias(__imp__sub_8231E110) PPC_WEAK_FUNC(sub_8231E110);
PPC_FUNC_IMPL(__imp__sub_8231E110) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x8227a6e8
	sub_8227A6E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231e140
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E140;
loc_8231E138:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8231e1c0
	goto loc_8231E1C0;
loc_8231E140:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x3;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231e194
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231E194;
	// beq ctx_arrow(ctx)->r6,0x8231e170
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E170;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231e168
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231E168;
	// beq ctx_arrow(ctx)->r6,0x8231e138
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E138;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231E168:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8231e1c0
	goto loc_8231E1C0;
loc_8231E170:
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,0,0,29
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8227a6e8
	sub_8227A6E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e168
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E168;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e1b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E1B4;
	// b 0x8231e138
	goto loc_8231E138;
loc_8231E194:
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,0,0,29
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8227a6e8
	sub_8227A6E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e168
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E168;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e168
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E168;
loc_8231E1B4:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8227b1d0
	sub_8227B1D0(ctx, base);
loc_8231E1C0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8231E1C8) PPC_WEAK_FUNC(sub_8231E1C8);
PPC_FUNC_IMPL(__imp__sub_8231E1C8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8227ab28
	sub_8227AB28(ctx, base);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231e234
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E234;
	// rotlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,7,29,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 7) & 0x7;
loc_8231E214:
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x3;
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r11.u64;
	// bne 0x8231e214
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E214;
loc_8231E234:
	// lis ctx_arrow(ctx)->r9,-28311
	ctx_arrow(ctx)->r9.s64 = -1855389696;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,5192
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 5192;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,36262
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 36262;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// rldimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,32,0
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft64(ctx_arrow(ctx)->r7.u64, 32) & 0xFFFFFFFF00000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF);
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// li ctx_arrow(ctx)->r26,3
	ctx_arrow(ctx)->r26.s64 = 3;
	// srd ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r7.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r7.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r7.u64 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x7F)), 0));
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,25,4,6
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 25) & 0xE000000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFF1FFFFFF);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8231e2cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E2CC;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_8231E288:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r8.u64;
	// andc ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64 & ~ctx_arrow(ctx)->r7.u64;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r8.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// cntlzw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
	// subfic ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,31
	xer.ca = ctx_arrow(ctx)->r8.u32 <= 31;
	ctx_arrow(ctx)->r8.s64 = 31 - ctx_arrow(ctx)->r8.s64;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,1,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 1) & 0xFFFFFFFE;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// or ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r8.u64;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64 & ~ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// or ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r7.u64;
	// bne 0x8231e288
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E288;
loc_8231E2CC:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r24,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,12,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e414
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E414;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r22.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e414
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E414;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231E2EC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e32c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E32C;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x8231e31c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E31C;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,18,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 13952, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e31c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E31C;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x8231e324
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E324;
loc_8231E31C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231e2ec
	goto loc_8231E2EC;
loc_8231E324:
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64;
	// b 0x8231e330
	goto loc_8231E330;
loc_8231E32C:
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
loc_8231E330:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e414
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E414;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8231e110
	sub_8231E110(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e414
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E414;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e3d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E3D4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,40
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r28.s64 + 40;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,7,29,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 7) & 0x7;
loc_8231E374:
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r6.u64;
loc_8231E37C:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r5.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8231e3c8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8231E3C8;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r24.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e3ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E3AC;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r27.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,5,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x7FFFFFF;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64 ^ ctx_arrow(ctx)->r10.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231e3b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E3B8;
loc_8231E3AC:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// b 0x8231e37c
	goto loc_8231E37C;
loc_8231E3B8:
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r27.u64 & ~ctx_arrow(ctx)->r9.u64;
	// or ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
loc_8231E3C8:
	// addic. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	xer.ca = ctx_arrow(ctx)->r7.u32 > 0;
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// bne 0x8231e374
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E374;
loc_8231E3D4:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x8231e3e4
	goto loc_8231E3E4;
loc_8231E3E0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_8231E3E4:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e3e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E3E0;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8231E414:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,5,19,26
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r27.u32, 5) & 0x1FE0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFE01F);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x822834c0
	sub_822834C0(&ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231b228
	sub_8231B228(ctx, base);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFE0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,27,18
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27,29,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,29,29,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31,29,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,29,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x6;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,2,28,29
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xC) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000003);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xFFFFFFE0;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x8231e4a8
	goto loc_8231E4A8;
loc_8231E4A4:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_8231E4A8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e4a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E4A4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1E;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e4e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E4E0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82281b88
	sub_82281B88(ctx, base);
loc_8231E4E0:
	// lbz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e500
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E500;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822985e0
	sub_822985E0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16777216;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
loc_8231E500:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_8231E508) PPC_WEAK_FUNC(sub_8231E508);
PPC_FUNC_IMPL(__imp__sub_8231E508) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x8231e1c8
	sub_8231E1C8(&ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8231E530) PPC_WEAK_FUNC(sub_8231E530);
PPC_FUNC_IMPL(__imp__sub_8231E530) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-400(ctx_arrow(ctx)->r1)
	ea = -400 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r3.u64;
	// mulli ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r16.s64 = ctx_arrow(ctx)->r29.s64 * 40;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r16.u64 + ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231e58c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E58C;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r17)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r17.u32 + 0);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r17)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r17.u32 + 4);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ef1c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231EF1C;
loc_8231E58C:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82318220
	sub_82318220(ctx, base);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r30,3,0,28
	ctx_arrow(ctx)->r18.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 3) & 0xFFFFFFF8;
	// lwz ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 2;
	// lwz ctx_arrow(ctx)->r4,20(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,60(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14,30,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x3;
	// subfc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	xer.ca = ctx_arrow(ctx)->r11.u32 >= ctx_arrow(ctx)->r10.u32;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 < ~ctx_arrow(ctx)->r9.u32) | (~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r9.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r21.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	// bl 0x82296268
	sub_82296268(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82317ff0
	sub_82317FF0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r19.u64;
	// bl 0x822ef5e0
	sub_822EF5E0(ctx, base);
	// lwz ctx_arrow(ctx)->r5,8(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// cmpwi ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// bne 0x8231e640
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E640;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x822e5b10
	sub_822E5B10(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822e49e8
	sub_822E49E8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,3502
	ctx_arrow(ctx)->r4.s64 = 3502;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231E640:
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,0,5,5
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 0) & 0x4000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231e66c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E66C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x822e4d38
	sub_822E4D38(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,4502
	ctx_arrow(ctx)->r4.s64 = 4502;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r5,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231E66C:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -65536;
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// lwz ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,15
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFF0000;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,5,28,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 5) & 0xF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// stw ctx_arrow(ctx)->r23,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// beq ctx_arrow(ctx)->r6,0x8231ea58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EA58;
	// lis ctx_arrow(ctx)->r10,-32017
	ctx_arrow(ctx)->r10.s64 = -2098266112;
	// stw ctx_arrow(ctx)->r23,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,-32512
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 + -32512;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// li ctx_arrow(ctx)->r8,20
	ctx_arrow(ctx)->r8.s64 = 20;
	// bl 0x82319438
	sub_82319438(ctx, base);
	// lwz ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r24,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,27,28,31
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xF;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r26.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 16, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e6f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E6F4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,14
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 14, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e6f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E6F4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,15
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 15, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e6f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E6F4;
	// li ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r30.s64 = 16;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r25.u64;
loc_8231E6F4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 4, xer);
	// ble ctx_arrow(ctx)->r6,0x8231e708
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231E708;
	// li ctx_arrow(ctx)->r4,4801
	ctx_arrow(ctx)->r4.s64 = 4801;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231E708:
	// lwz ctx_arrow(ctx)->r10,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8231e758
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231E758;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,348
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 348;
loc_8231E71C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e744
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E744;
	// lwz ctx_arrow(ctx)->r9,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 12;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231e71c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231E71C;
	// b 0x8231e758
	goto loc_8231E758;
loc_8231E744:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r29,352(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne 0x8231e8e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231E8E0;
loc_8231E758:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,112
	ctx_arrow(ctx)->r4.s64 = 112;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231e790
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E790;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231E790:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,112
	ctx_arrow(ctx)->r6.s64 = 112;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8388608;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231e7c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E7C8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231E7C8:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 134217728;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 16, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e824
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E824;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231E824:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231e840
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E840;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e840
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E840;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231E840:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r28, 0, BINARY_OP_U8(ctx_arrow(ctx)->r28, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r28) & 0x3F)), 0));
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 16, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// stw ctx_arrow(ctx)->r29,352(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 352);
	// lwz ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 29;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,0,27,31
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 0) & 0x1F) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFFE0);
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 29;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,27,22
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFFFFFFE1F;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 29;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,9,19,22
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 9) & 0x1E00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFE1FF);
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// bne ctx_arrow(ctx)->r6,0x8231e8c0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231E8C0;
	// lwz ctx_arrow(ctx)->r10,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 12;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1940
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1940;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,344(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 344);
	// b 0x8231e8d4
	goto loc_8231E8D4;
loc_8231E8C0:
	// lwz ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,104(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r10,344(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 344);
loc_8231E8D4:
	// lwz ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 536);
loc_8231E8E0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 16, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e9e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E9E4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,14
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 14, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e9e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E9E4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,15
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 15, xer);
	// beq ctx_arrow(ctx)->r6,0x8231e9e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231E9E4;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,95
	ctx_arrow(ctx)->r4.s64 = 95;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231e930
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E930;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231E930:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// li ctx_arrow(ctx)->r6,95
	ctx_arrow(ctx)->r6.s64 = 95;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -20;
	// rlwimi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r26,4,0,27
	ctx_arrow(ctx)->r27.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r26.u32, 4) & 0xFFFFFFF0) | (ctx_arrow(ctx)->r27.u64 & 0xFFFFFFFF0000000F);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stb ctx_arrow(ctx)->r27,15(ctx_arrow(ctx)->r11)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r11.u32 + 15, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r27), 0);
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | 524288;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// bl 0x82281810
	sub_82281810(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
	// stw ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 40);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231e9a8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E9A8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231E9A8:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 24;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// b 0x8231e9f8
	goto loc_8231E9F8;
loc_8231E9E4:
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231e9f8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231E9F8;
	// stw ctx_arrow(ctx)->r25,28(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 28);
loc_8231E9F8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231ea34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EA34;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8231ea20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EA20;
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 2340;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2340
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2340, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ea34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EA34;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2340;
	// b 0x8231ea30
	goto loc_8231EA30;
loc_8231EA20:
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 3510;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3510
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3510, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ea34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EA34;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3510;
loc_8231EA30:
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16);
loc_8231EA34:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,15
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 15, xer);
	// bne ctx_arrow(ctx)->r6,0x8231eea0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231EEA0;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 3510;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3510
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3510, xer);
	// beq ctx_arrow(ctx)->r6,0x8231eea0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EEA0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3510;
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16);
	// b 0x8231eea0
	goto loc_8231EEA0;
loc_8231EA58:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// bl 0x82319708
	sub_82319708(ctx, base);
	// lwz ctx_arrow(ctx)->r10,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r23.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 17, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ead8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231EAD8;
	// lwz ctx_arrow(ctx)->r9,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8231ead8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8231EAD8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,348
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 348;
loc_8231EA8C:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 17, xer);
	// beq ctx_arrow(ctx)->r6,0x8231eab4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EAB4;
	// lwz ctx_arrow(ctx)->r8,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 12;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r8.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231ea8c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231EA8C;
	// b 0x8231ead8
	goto loc_8231EAD8;
loc_8231EAB4:
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 29;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r31.u64;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 * 12;
	// lwz ctx_arrow(ctx)->r30,352(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,15,15
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10000;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r9.u64;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
loc_8231EAD8:
	// lwz ctx_arrow(ctx)->r27,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r28,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231eaec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EAEC;
	// li ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = 4;
loc_8231EAEC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ecac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231ECAC;
	// lwz ctx_arrow(ctx)->r11,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 16, xer);
	// bne ctx_arrow(ctx)->r6,0x8231eb0c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231EB0C;
	// li ctx_arrow(ctx)->r4,3530
	ctx_arrow(ctx)->r4.s64 = 3530;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231EB0C:
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r23.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,20,14,14
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 20) & 0x20000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFDFFFF);
	// beq ctx_arrow(ctx)->r6,0x8231eb58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EB58;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,348
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 348;
loc_8231EB28:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, ctx_arrow(ctx)->r6.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231eb44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231EB44;
	// xor ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r8.u64;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,23,26
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1E0;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8231ec68
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EC68;
loc_8231EB44:
	// lwz ctx_arrow(ctx)->r8,536(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 12;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r8.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231eb28
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231EB28;
loc_8231EB58:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwz ctx_arrow(ctx)->r8,104(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// lwz ctx_arrow(ctx)->r7,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,536(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 536);
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,344
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + 344;
	// li ctx_arrow(ctx)->r4,112
	ctx_arrow(ctx)->r4.s64 = 112;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// bl 0x822701f8
	sub_822701F8(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ebb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EBB8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231EBB8:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,112
	ctx_arrow(ctx)->r6.s64 = 112;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8231ade8
	sub_8231ADE8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8388608;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ebf0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EBF0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231EBF0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r30,352(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 352);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 134217728;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// beq 0x8231ecac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ECAC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231ecac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231ECAC;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8231ec98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EC98;
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 2340;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2340
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2340, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ecac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231ECAC;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2340
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2340;
	// b 0x8231eca8
	goto loc_8231ECA8;
loc_8231EC68:
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,100
	ctx_arrow(ctx)->r5.s64 = 100;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,5,28,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xF;
	// bl 0x82318070
	sub_82318070(ctx, base);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// li ctx_arrow(ctx)->r4,3513
	ctx_arrow(ctx)->r4.s64 = 3513;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231EC98:
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 3510;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3510
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3510, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ecac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231ECAC;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3510
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 3510;
loc_8231ECA8:
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16);
loc_8231ECAC:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ee5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EE5C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ee20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231EE20;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8231ecfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231ECFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ecf4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ECF4;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231ECF4:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64;
	// b 0x8231ee90
	goto loc_8231EE90;
loc_8231ECFC:
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231ed0c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ED0C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231ED0C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231c410
	sub_8231C410(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lfs f31,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// fmr f4,f31
	ctx.f4.f64 = f31.f64;
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x8231d178
	sub_8231D178(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ed50
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ED50;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231ED50:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// ld ctx_arrow(ctx)->r6,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U64(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231c9e0
	sub_8231C9E0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f4,f31
	ctx.fpscr.disableFlushMode();
	ctx.f4.f64 = f31.f64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lfs f1,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8231d178
	sub_8231D178(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ed9c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231ED9C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231ED9C:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// ld ctx_arrow(ctx)->r6,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U64(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231c910
	sub_8231C910(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f4,f31
	ctx.fpscr.disableFlushMode();
	ctx.f4.f64 = f31.f64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// fmr f3,f31
	ctx.f3.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f2,f31
	ctx.f2.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8231d178
	sub_8231D178(ctx, base);
	// ld ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// std ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// bl 0x822eaca0
	sub_822EACA0(&ctx);
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82281410
	sub_82281410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ee08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EE08;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231EE08:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231c830
	sub_8231C830(ctx, base);
	// b 0x8231ee9c
	goto loc_8231EE9C;
loc_8231EE20:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26,4,6
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 26) & 0xE000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFF1FFFFFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// bl 0x82281410
	sub_82281410(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,119
	ctx_arrow(ctx)->r10.s64 = 119;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,6,19,26
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 6) & 0x1FE0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFE01F);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x8231ee6c
	goto loc_8231EE6C;
loc_8231EE5C:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231EE6C:
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82281410
	sub_82281410(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231ee88
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231EE88;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8231EE88:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
loc_8231EE90:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822b7728
	sub_822B7728(ctx, base);
loc_8231EE9C:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
loc_8231EEA0:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r16.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231eed4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231EED4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,0,15,28
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1FFF8;
	// bl 0x82295178
	sub_82295178(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r16.u64 + ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 24);
loc_8231EED4:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r7,132(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r20.u64;
	// lwz ctx_arrow(ctx)->r6,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r5,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82318368
	sub_82318368(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r16.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r18.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r17)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r17.u32 + 0);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r17)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r17.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,964(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r19)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r19.u32 + 0);
	// stw ctx_arrow(ctx)->r19,964(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 964);
loc_8231EF1C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r17.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,400
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 400;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_8231EF30) PPC_WEAK_FUNC(sub_8231EF30);
PPC_FUNC_IMPL(__imp__sub_8231EF30) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// stw ctx_arrow(ctx)->r4,156(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 156);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u32 & 0xFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,156(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfs f0,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
	// stfs f0,100(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	// stfs f0,104(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stfs f0,108(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// bl 0x8231d358
	sub_8231D358(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8231EFA0) PPC_WEAK_FUNC(sub_8231EFA0);
PPC_FUNC_IMPL(__imp__sub_8231EFA0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64;
	// bl 0x8231ef30
	sub_8231EF30(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,16,14
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFFFFFFFFFFFEFFFF) | (ctx_arrow(ctx)->r11.u64 & 0x10000);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8231EFF8) PPC_WEAK_FUNC(sub_8231EFF8);
PPC_FUNC_IMPL(__imp__sub_8231EFF8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stfs f1,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stfs f2,100(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfs f3,104(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f3.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stfs f4,108(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f4.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231d358
	sub_8231D358(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8231F040) PPC_WEAK_FUNC(sub_8231F040);
PPC_FUNC_IMPL(__imp__sub_8231F040) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231f09c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231F09C;
	// beq ctx_arrow(ctx)->r6,0x8231f080
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F080;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231f068
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231F068;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231F068:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctidz f0,f1
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f1.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f1.f64));
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231f094
	goto loc_8231F094;
loc_8231F080:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f1
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f1.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f1.f64));
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
loc_8231F094:
	// bl 0x8231ef30
	sub_8231EF30(ctx, base);
	// b 0x8231f0d4
	goto loc_8231F0D4;
loc_8231F09C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stfs f0,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lfs f0,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f0,100(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stfs f0,104(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stfs f0,108(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// bl 0x8231d358
	sub_8231D358(&ctx);
loc_8231F0D4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8231F0E8) PPC_WEAK_FUNC(sub_8231F0E8);
PPC_FUNC_IMPL(__imp__sub_8231F0E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed10c
	// stfd f31,-136(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -136);
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 1) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r7.u64;
	// lwz ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r8.u64;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 & ctx_arrow(ctx)->r21.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
loc_8231F148:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x7F;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f564
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F564;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f494
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F494;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,102
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 102, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f38c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F38C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,109
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 109, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f2c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F2C4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,111
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 111, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f650
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F650;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r20.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F73C;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x8231f19c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F19C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne ctx_arrow(ctx)->r6,0x8231f1a0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F1A0;
loc_8231F19C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231F1A0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// lwz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r6.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f73c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F73C;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,24(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,40(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r7.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f214
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F214;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f214
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F214;
loc_8231F20C:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8231f23c
	goto loc_8231F23C;
loc_8231F214:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f224
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F224;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f20c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F20C;
loc_8231F224:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f238
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F238;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne 0x8231f23c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F23C;
loc_8231F238:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_8231F23C:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f264
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F264;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,76(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,76(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r9.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7FFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
loc_8231F264:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,11,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 11) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,13,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7,27,30,31
	ctx_arrow(ctx)->r26.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 27) & 0x3;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// beq 0x8231f290
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F290;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f290
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F290;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
loc_8231F290:
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f2a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F2A4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s64 + -4;
loc_8231F2A4:
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f2b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F2B8;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f2b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F2B8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -2;
loc_8231F2B8:
	// or ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// b 0x8231f644
	goto loc_8231F644;
loc_8231F2C4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + 10;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f2f8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F2F8;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f2f8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F2F8;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8231f310
	goto loc_8231F310;
loc_8231F2F8:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f30c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F30C;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne 0x8231f310
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F310;
loc_8231F30C:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_8231F310:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f340
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F340;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,24(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,76(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,76(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r7.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7FFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
loc_8231F340:
	// rlwinm. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r9,27,30,31
	ctx_arrow(ctx)->r26.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x3;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// beq 0x8231f35c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F35C;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f35c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F35C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
loc_8231F35C:
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f370
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F370;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s64 + -4;
loc_8231F370:
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f384
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F384;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f384
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F384;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -2;
loc_8231F384:
	// lwz ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231f640
	goto loc_8231F640;
loc_8231F38C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r22.u32 | (ctx_arrow(ctx)->r22.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 13) & 0x7;
	// li ctx_arrow(ctx)->r4,102
	ctx_arrow(ctx)->r4.s64 = 102;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + -4;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8231f400
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231F400;
	// beq ctx_arrow(ctx)->r6,0x8231f3f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F3F0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231f3dc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231F3DC;
	// bne ctx_arrow(ctx)->r6,0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F73C;
	// li ctx_arrow(ctx)->r25,4
	ctx_arrow(ctx)->r25.s64 = 4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f408
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F408;
	// li ctx_arrow(ctx)->r24,4
	ctx_arrow(ctx)->r24.s64 = 4;
	// b 0x8231f408
	goto loc_8231F408;
loc_8231F3DC:
	// li ctx_arrow(ctx)->r25,3
	ctx_arrow(ctx)->r25.s64 = 3;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f3f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F3F8;
	// li ctx_arrow(ctx)->r24,3
	ctx_arrow(ctx)->r24.s64 = 3;
	// b 0x8231f3f8
	goto loc_8231F3F8;
loc_8231F3F0:
	// li ctx_arrow(ctx)->r25,2
	ctx_arrow(ctx)->r25.s64 = 2;
	// li ctx_arrow(ctx)->r24,2
	ctx_arrow(ctx)->r24.s64 = 2;
loc_8231F3F8:
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,0,31,29
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0xFFFFFFFFFFFFFFFD;
	// b 0x8231f408
	goto loc_8231F408;
loc_8231F400:
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
loc_8231F408:
	// lwz ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f434
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F434;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f434
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F434;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8231f44c
	goto loc_8231F44C;
loc_8231F434:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f448
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F448;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne 0x8231f44c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F44C;
loc_8231F448:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_8231F44C:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f47c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F47C;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,24(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,76(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,76(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r7.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7FFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
loc_8231F47C:
	// lwz ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,27,24,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26,1,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// b 0x8231f600
	goto loc_8231F600;
loc_8231F494:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,44(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,48(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F73C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26,1,0,30
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// bl 0x82318720
	sub_82318720(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64;
	// beq ctx_arrow(ctx)->r6,0x8231f4e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F4E0;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64;
loc_8231F4E0:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f508
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F508;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f508
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F508;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8231f520
	goto loc_8231F520;
loc_8231F508:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f51c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F51C;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne 0x8231f520
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F520;
loc_8231F51C:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_8231F520:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f550
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F550;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,24(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,76(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,76(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r7.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7FFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
loc_8231F550:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27,24,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 27) & 0xFF;
	// lwz ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// b 0x8231f600
	goto loc_8231F600;
loc_8231F564:
	// lwz ctx_arrow(ctx)->r31,40(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,44(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822700e8
	sub_822700E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f5a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F5A4;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f5a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F5A4;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8231f5bc
	goto loc_8231F5BC;
loc_8231F5A4:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f5b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F5B8;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne 0x8231f5bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F5BC;
loc_8231F5B8:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_8231F5BC:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f5ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F5EC;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,24(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,76(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,76(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r8.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7FFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F73C;
loc_8231F5EC:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26,1,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 1) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27,24,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0xFF;
	// rlwinm. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
loc_8231F600:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// clrlwi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r9,30
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r9.u32 & 0x3;
	// beq 0x8231f618
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F618;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f618
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F618;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
loc_8231F618:
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f62c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F62C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s64 + -4;
loc_8231F62C:
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f640
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F640;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f640
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F640;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -2;
loc_8231F640:
	// or ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
loc_8231F644:
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 & ctx_arrow(ctx)->r21.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231f148
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F148;
	// b 0x8231f73c
	goto loc_8231F73C;
loc_8231F650:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 124, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f73c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F73C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f73c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F73C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFF000;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231f73c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F73C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + 10;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r25.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// blt ctx_arrow(ctx)->r6,0x8231f70c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231F70C;
	// beq ctx_arrow(ctx)->r6,0x8231f6fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F6FC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8231f6e4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231F6E4;
	// beq ctx_arrow(ctx)->r6,0x8231f6d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F6D0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r22.u32 | (ctx_arrow(ctx)->r22.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231F6D0:
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x8231f6f4
	goto loc_8231F6F4;
loc_8231F6E4:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_8231F6F4:
	// fcfid f1,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(f0.s64);
	// b 0x8231f724
	goto loc_8231F724;
loc_8231F6FC:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x8231f718
	goto loc_8231F718;
loc_8231F70C:
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_8231F718:
	// fcfid f0,f0
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(f0.s64);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// frsp f1,f0
	ctx.f1.f64 = double(float(f0.f64));
loc_8231F724:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r22.u32 | (ctx_arrow(ctx)->r22.u64 << 32), 0) & 0xFFFFF000;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231f040
	sub_8231F040(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
loc_8231F73C:
	// stw ctx_arrow(ctx)->r27,0(ctx_arrow(ctx)->r19)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r19.u32 + 0);
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 0);
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r17)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r17.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// lfd f31,-136(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed15c
	return;
}

alias(__imp__sub_8231F758) PPC_WEAK_FUNC(sub_8231F758);
PPC_FUNC_IMPL(__imp__sub_8231F758) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r6.s64 + 4;
loc_8231F77C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f7dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F7DC;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f7d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F7D4;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,7,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 7) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231f7d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F7D4;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f7d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F7D0;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_8231F7B0:
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u32 & 0x3;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r5.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r8.u64;
	// bne 0x8231f7b0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F7B0;
loc_8231F7D0:
	// or ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r30.u64;
loc_8231F7D4:
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8231f77c
	goto loc_8231F77C;
loc_8231F7DC:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82281810
	sub_82281810(ctx, base);
	// lis ctx_arrow(ctx)->r10,-28311
	ctx_arrow(ctx)->r10.s64 = -1855389696;
	// lis ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5192
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 5192;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,36262
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 36262;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 & 0xFFFFFFFF;
	// rldimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,32,0
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft64(ctx_arrow(ctx)->r9.u64, 32) & 0xFFFFFFFF00000000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// srd ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r8.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r8.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// srd ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r8.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,25,4,6
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 25) & 0xE000000) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFF1FFFFFF);
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8231f884
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F884;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r7.s64 = 3;
loc_8231F840:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64 & ~ctx_arrow(ctx)->r8.u64;
	// andc ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 & ~ctx_arrow(ctx)->r6.u64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
	// subf. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r8.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// subfic ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 31;
	ctx_arrow(ctx)->r10.s64 = 31 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r10.u64;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64 & ~ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// or ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r8.u64;
	// bne 0x8231f840
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231F840;
loc_8231F884:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,5,19,26
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 5) & 0x1FE0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFE01F);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x8231e1c8
	sub_8231E1C8(&ctx);
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// b 0x8231f8b8
	goto loc_8231F8B8;
loc_8231F8B4:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_8231F8B8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f8b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F8B4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,26
	ctx_arrow(ctx)->r6.s64 = 26;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// bl 0x82270940
	sub_82270940(&ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r25.u64;
loc_8231F8E4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231f99c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F99C;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x8231f988
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F988;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8231f988
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231F988;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r30.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8231f988
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231F988;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,27,24,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 27) & 0xFF;
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,27,18
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFFFFFFE01F;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,27,29,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,29,29,30
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x6;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,31,29,30
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1,29,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0x6;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2,28,29
	ctx_arrow(ctx)->r5.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xC) | (ctx_arrow(ctx)->r5.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r5.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r4.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,2,0,29
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r4.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF00000003);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5,0,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 5) & 0xFFFFFFE0;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// b 0x8231f964
	goto loc_8231F964;
loc_8231F960:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_8231F964:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f960
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F960;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// stw ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
loc_8231F988:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f8e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F8E4;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// b 0x8231f8e4
	goto loc_8231F8E4;
loc_8231F99C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8231F9A8) PPC_WEAK_FUNC(sub_8231F9A8);
PPC_FUNC_IMPL(__imp__sub_8231F9A8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82281928
	sub_82281928(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231e1c8
	sub_8231E1C8(ctx, base);
	// lwz ctx_arrow(ctx)->r29,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// b 0x8231f9f4
	goto loc_8231F9F4;
loc_8231F9F0:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_8231F9F4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8231f9f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231F9F0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,26
	ctx_arrow(ctx)->r6.s64 = 26;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// bl 0x82270940
	sub_82270940(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8231FA28) PPC_WEAK_FUNC(sub_8231FA28);
PPC_FUNC_IMPL(__imp__sub_8231FA28) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,40
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 * 40;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231fa84
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231FA84;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8231fddc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231FDDC;
loc_8231FA84:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82318220
	sub_82318220(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,18,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x3FFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8231fad0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231FAD0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82295178
	sub_82295178(ctx, base);
	// stw ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 24);
loc_8231FAD0:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231fc04
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231FC04;
	// lwz ctx_arrow(ctx)->r24,104(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,123
	ctx_arrow(ctx)->r4.s64 = 123;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,34
	ctx_arrow(ctx)->r5.s64 = 34;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8231fb18
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231FB18;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
loc_8231FB18:
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,3,0,28
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 3) & 0xFFFFFFF8;
	// stw ctx_arrow(ctx)->r24,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r27,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,123
	ctx_arrow(ctx)->r5.s64 = 123;
	// lwz ctx_arrow(ctx)->r24,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r9,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14,30,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x3;
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x8231b340
	sub_8231B340(&ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8231fb68
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231FB68;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8231FB68:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8231fbb8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231FBB8;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 131072;
	// b 0x8231fbc8
	goto loc_8231FBC8;
loc_8231FBB8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8231fbcc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8231FBCC;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1;
loc_8231FBC8:
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
loc_8231FBCC:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r7,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82318368
	sub_82318368(ctx, base);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4);
	// b 0x8231fddc
	goto loc_8231FDDC;
loc_8231FC04:
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// bne 0x8231fc28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231FC28;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,3619
	ctx_arrow(ctx)->r4.s64 = 3619;
	// lwz ctx_arrow(ctx)->r5,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231FC28:
	// li ctx_arrow(ctx)->r5,18
	ctx_arrow(ctx)->r5.s64 = 18;
	// bl 0x822e4a88
	sub_822E4A88(ctx, base);
	// lwz ctx_arrow(ctx)->r30,20(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8231fc4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231FC4C;
	// li ctx_arrow(ctx)->r4,4801
	ctx_arrow(ctx)->r4.s64 = 4801;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231FC4C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,108
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 108;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// stb ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 96, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x822941a8
	sub_822941A8(ctx, base);
	// lbz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8231fc88
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8231FC88;
	// li ctx_arrow(ctx)->r4,4509
	ctx_arrow(ctx)->r4.s64 = 4509;
	// lwz ctx_arrow(ctx)->r5,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231FC88:
	// lwz ctx_arrow(ctx)->r4,548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,119
	ctx_arrow(ctx)->r6.s64 = 119;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r4.s64 + 16;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,1,27,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r28.u32, 1) & 0x1E) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFE1);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bl 0x82281810
	sub_82281810(&ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,3,0,28
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 3) & 0xFFFFFFF8;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f0,132(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// stfs f0,136(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1073741824;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r6,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// stfs f0,140(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,17,7,14
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 17) & 0x1FE0000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFE01FFFF);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,13,15,18
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r28.u32, 13) & 0x1E000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFE1FFF);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28,18,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x3FFF;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfs f0,128(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// bl 0x8231d358
	sub_8231D358(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82281928
	sub_82281928(ctx, base);
	// lwz ctx_arrow(ctx)->r4,548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,24
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r4.s64 + 24;
	// bl 0x8231c758
	sub_8231C758(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -24;
	// lwz ctx_arrow(ctx)->r8,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,15,3,16
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 15) & 0x1FFF8000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFE0007FFF);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,0,27,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r28.u32, 0) & 0x1F) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFE0);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25,0,17,31
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r25.u32, 0) & 0x7FFF) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFF8000);
	// oris ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 131072;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 16);
	// stw ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,16,29
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 2) & 0xFFFC) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFF0003);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,0,30,14
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r28.u32, 0) & 0xFFFFFFFFFFFE0003) | (ctx_arrow(ctx)->r8.u64 & 0x1FFFC);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4);
loc_8231FDDC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8231FDE8) PPC_WEAK_FUNC(sub_8231FDE8);
PPC_FUNC_IMPL(__imp__sub_8231FDE8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u64;
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 * 40;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8231fe6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231FE6C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8231fe50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231FE50;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8231fe3c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231FE3C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8231fe50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8231FE50;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8231FE3C:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231e530
	sub_8231E530(ctx, base);
	// b 0x8231fe7c
	goto loc_8231FE7C;
loc_8231FE50:
	// lwz ctx_arrow(ctx)->r5,548(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231bd50
	sub_8231BD50(ctx, base);
	// b 0x8231fe7c
	goto loc_8231FE7C;
loc_8231FE6C:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231fa28
	sub_8231FA28(ctx, base);
loc_8231FE7C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8231FE98) PPC_WEAK_FUNC(sub_8231FE98);
PPC_FUNC_IMPL(__imp__sub_8231FE98) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stfd f29,-176(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -176);
	// stfd f30,-168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -168);
	// stfd f31,-160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -160);
	// stwu ctx_arrow(ctx)->r1,-464(ctx_arrow(ctx)->r1)
	ea = -464 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,128
	ctx_arrow(ctx)->r5.s64 = 128;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// std ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// std ctx_arrow(ctx)->r29,8(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 8);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r29.u64;
	// std ctx_arrow(ctx)->r29,16(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 16);
	// std ctx_arrow(ctx)->r29,24(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 24);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// stw ctx_arrow(ctx)->r24,484(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 484);
	// bl 0x823edf70
	sub_823EDF70(&ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r24,40
	ctx_arrow(ctx)->r14.s64 = ctx_arrow(ctx)->r24.s64 + 40;
	// rlwinm ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r10,13,29,31
	ctx_arrow(ctx)->r15.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 13) & 0x7;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r14.u64;
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
	// li ctx_arrow(ctx)->r28,2
	ctx_arrow(ctx)->r28.s64 = 2;
	// li ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = -1;
loc_8231FF18:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r20.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8232006c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232006C;
	// lwz ctx_arrow(ctx)->r17,0(ctx_arrow(ctx)->r18)
	ctx_arrow(ctx)->r17.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r17)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,7,29,31
	ctx_arrow(ctx)->r19.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r19.s32, 0, xer);
	// beq 0x82321b60
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321B60;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 0, xer);
	// beq 0x8232005c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232005C;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r29.u64;
loc_8231FF48:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r17.u64;
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// lwz ctx_arrow(ctx)->r21,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r21.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r21.u32 | (ctx_arrow(ctx)->r21.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82321b60
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321B60;
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x8232004c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232004C;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,0,0,19
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0xFFFFF000;
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u32 & 0x1F;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r23, 0, BINARY_OP_U8(ctx_arrow(ctx)->r23, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r23) & 0x3F)), 0));
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r22.u32 | (ctx_arrow(ctx)->r22.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,148(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,40(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ~ctx_arrow(ctx)->r8.u64;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,18,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bne 0x8231ffd4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8231FFD4;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x8231ffe8
	goto loc_8231FFE8;
loc_8231FFD4:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
loc_8231FFE8:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27,5,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r20.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r24.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r7.u64;
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 & ~ctx_arrow(ctx)->r8.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r11.u64;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r9.u32);
	// bl 0x822bdb58
	sub_822BDB58(&ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64 + ctx_arrow(ctx)->r23.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r24,484(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// stfdx f1,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
loc_8232004C:
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,1
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,2
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, ctx_arrow(ctx)->r19.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8231ff48
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8231FF48;
loc_8232005C:
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r20.s64 + 1;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r18,4
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r18.s64 + 4;
	// b 0x8231ff18
	goto loc_8231FF18;
loc_8232006C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8227a7e8
	sub_8227A7E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823208b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823208B0;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// rlwinm ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,28,28,31
	ctx_arrow(ctx)->r21.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0xF;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,7,29,31
	ctx_arrow(ctx)->r20.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f29,2728(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,2752(ctx_arrow(ctx)->r11)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
loc_823200A8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r25.u64 & ctx_arrow(ctx)->r21.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64 & ctx_arrow(ctx)->r22.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 27, xer);
	// bgt ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320848;
	// lis ctx_arrow(ctx)->r12,-32251
	ctx_arrow(ctx)->r12.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,14616
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 14616;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// lhzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r12.u32 + ctx_arrow(ctx)->r0.u32);
	// lis ctx_arrow(ctx)->r12,-32206
	ctx_arrow(ctx)->r12.s64 = -2110652416;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,236
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 236;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r10.u64) {
	case 0:
		goto loc_823200EC;
	case 1:
		goto loc_823201A0;
	case 2:
		goto loc_823202F0;
	case 3:
		goto loc_82320230;
	case 4:
		goto loc_82320320;
	case 5:
		goto loc_823203DC;
	case 6:
		goto loc_823204AC;
	case 7:
		goto loc_82320538;
	case 8:
		goto loc_82320568;
	case 9:
		goto loc_823205E8;
	case 10:
		goto loc_82320610;
	case 11:
		goto loc_8232062C;
	case 12:
		goto loc_82320744;
	case 13:
		goto loc_8232085C;
	case 14:
		goto loc_8232087C;
	case 15:
		goto loc_82320848;
	case 16:
		goto loc_82320848;
	case 17:
		goto loc_82320848;
	case 18:
		goto loc_82320848;
	case 19:
		goto loc_82320848;
	case 20:
		goto loc_82320848;
	case 21:
		goto loc_82320848;
	case 22:
		goto loc_82320848;
	case 23:
		goto loc_82320848;
	case 24:
		goto loc_82320320;
	case 25:
		goto loc_823203DC;
	case 26:
		goto loc_823204AC;
	case 27:
		goto loc_82320538;
	default:
		__builtin_unreachable();
	}
loc_823200EC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f13,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fadd f1,f0,f13
	ctx.f1.f64 = f0.f64 + ctx.f13.f64;
loc_82320114:
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
loc_82320118:
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// stfdx f1,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + ctx_arrow(ctx)->r16.u32);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r5.u64;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r9.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
loc_82320184:
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
	// b 0x82320840
	goto loc_82320840;
loc_823201A0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823201e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823201E4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823201ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823201EC;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f13,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f0,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f30
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f30.f64);
	// beq ctx_arrow(ctx)->r6,0x823201dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823201DC;
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// beq ctx_arrow(ctx)->r6,0x823201dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823201DC;
	// fmul f1,f13,f0
	ctx.f1.f64 = ctx.f13.f64 * f0.f64;
	// b 0x82320114
	goto loc_82320114;
loc_823201DC:
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// b 0x82320118
	goto loc_82320118;
loc_823201E4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
loc_823201EC:
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x4;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lfdx f1,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320848;
	// lis ctx_arrow(ctx)->r11,-64
	ctx_arrow(ctx)->r11.s64 = -4194304;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// lfs f0,112(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
	// b 0x82320848
	goto loc_82320848;
loc_82320230:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x82320264
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82320264;
loc_8232025C:
	// stfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
	// b 0x82320268
	goto loc_82320268;
loc_82320264:
	// stfdx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
loc_82320268:
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r5.u64;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r9.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
loc_823202E8:
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32);
	// b 0x82320848
	goto loc_82320848;
loc_823202F0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82320264
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82320264;
	// b 0x8232025c
	goto loc_8232025C;
loc_82320320:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bne ctx_arrow(ctx)->r6,0x82320354
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320354;
loc_8232034C:
	// stfdx f29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
	// b 0x82320358
	goto loc_82320358;
loc_82320354:
	// stfdx f30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
loc_82320358:
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r5.u64;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r9.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// b 0x823202e8
	goto loc_823202E8;
loc_823203DC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232040c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232040C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// ble ctx_arrow(ctx)->r6,0x82320354
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82320354;
	// b 0x8232034c
	goto loc_8232034C;
loc_8232040C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// bne ctx_arrow(ctx)->r6,0x82320844
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320844;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1E;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x82320844
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320844;
	// lwz ctx_arrow(ctx)->r3,272(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stfdx f30,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + ctx_arrow(ctx)->r16.u32);
loc_82320464:
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r8.u64;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
	// srw ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// bl 0x822be318
	sub_822BE318(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// b 0x82320828
	goto loc_82320828;
loc_823204AC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823204dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823204DC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82320354
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82320354;
	// b 0x8232034c
	goto loc_8232034C;
loc_823204DC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// bne ctx_arrow(ctx)->r6,0x82320844
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320844;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1E;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82320844
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320844;
	// lwz ctx_arrow(ctx)->r3,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stfdx f29,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + ctx_arrow(ctx)->r16.u32);
	// b 0x82320464
	goto loc_82320464;
loc_82320538:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f13,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// beq ctx_arrow(ctx)->r6,0x82320354
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320354;
	// b 0x8232034c
	goto loc_8232034C;
loc_82320568:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// lfdx f31,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x822bda28
	sub_822BDA28(ctx, base);
	// bl 0x823f09f0
	sub_823F09F0(ctx, base);
	// fadd f1,f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f1.f64 + f31.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
loc_82320590:
	// stfdx f1,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + ctx_arrow(ctx)->r16.u32);
loc_82320594:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r8.u64;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r8.u64;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r30.u32);
	// b 0x82320848
	goto loc_82320848;
loc_823205E8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// lfdx f1,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823f2590
	sub_823F2590(ctx, base);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfdx f0,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r16
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + ctx_arrow(ctx)->r16.u32);
	// b 0x82320594
	goto loc_82320594;
loc_82320610:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// lfdx f1,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x822bda28
	sub_822BDA28(ctx, base);
	// b 0x82320590
	goto loc_82320590;
loc_8232062C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + 8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82320848
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f13,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfdx f0,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f30
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f30.f64);
	// beq ctx_arrow(ctx)->r6,0x8232068c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232068C;
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// beq ctx_arrow(ctx)->r6,0x8232068c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232068C;
	// fmul f1,f0,f13
	ctx.f1.f64 = f0.f64 * ctx.f13.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320690
	goto loc_82320690;
loc_8232068C:
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
loc_82320690:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// lfdx f0,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fadd f1,f0,f1
	ctx.f1.f64 = f0.f64 + ctx.f1.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// stfdx f1,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r16
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + ctx_arrow(ctx)->r16.u32);
loc_823206A4:
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// clrlwi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,27
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r23.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// rlwinm ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r19.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r4.u64;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r23, 0, BINARY_OP_U8(ctx_arrow(ctx)->r23, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r23) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r7.u64;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r9.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r6.u64 & ctx_arrow(ctx)->r5.u64;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r24, 0, BINARY_OP_U8(ctx_arrow(ctx)->r24, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r24) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r24, 0, BINARY_OP_U8(ctx_arrow(ctx)->r24, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r24) & 0x3F)), 0));
	// b 0x82320184
	goto loc_82320184;
loc_82320744:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// beq ctx_arrow(ctx)->r6,0x82320898
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320898;
loc_82320760:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + 8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82320848
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,1,0,30
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// clrlwi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,27
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r23.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// rlwinm ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r19.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64 | ctx_arrow(ctx)->r26.u64;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// stfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r4.u64;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r23, 0, BINARY_OP_U8(ctx_arrow(ctx)->r23, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r23) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r7.u64;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r9.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r6.u64 & ctx_arrow(ctx)->r5.u64;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r24, 0, BINARY_OP_U8(ctx_arrow(ctx)->r24, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r24) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r24, 0, BINARY_OP_U8(ctx_arrow(ctx)->r24, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r24) & 0x3F)), 0));
loc_82320828:
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 29) & 0x1FFFFFFC;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
loc_82320840:
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32);
loc_82320844:
	// lwz ctx_arrow(ctx)->r24,484(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
loc_82320848:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,1,0,30
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 1) & 0xFFFFFFFE;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r20.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x823200a8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823200A8;
	// b 0x82321c08
	goto loc_82321C08;
loc_8232085C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// bge ctx_arrow(ctx)->r6,0x82320898
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82320898;
	// b 0x82320760
	goto loc_82320760;
loc_8232087C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// ble ctx_arrow(ctx)->r6,0x82320760
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82320760;
loc_82320898:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82320848
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320848;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
	// b 0x823206a4
	goto loc_823206A4;
loc_823208B0:
	// lwz ctx_arrow(ctx)->r27,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x823208cc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823208CC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 30, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// ble ctx_arrow(ctx)->r6,0x823208d0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823208D0;
loc_823208CC:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
loc_823208D0:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82320cc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82320CC4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 16, xer);
	// beq ctx_arrow(ctx)->r6,0x82320bbc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320BBC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 17, xer);
	// beq ctx_arrow(ctx)->r6,0x82320b00
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320B00;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 18, xer);
	// beq ctx_arrow(ctx)->r6,0x82320a40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320A40;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 19, xer);
	// beq ctx_arrow(ctx)->r6,0x82321b60
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321B60;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 20, xer);
	// beq ctx_arrow(ctx)->r6,0x823209d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823209D8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 29, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82320934
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82320934;
	// lwz ctx_arrow(ctx)->r9,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfd f0,200(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,24(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 24);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,24,25
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xC0;
	// li ctx_arrow(ctx)->r26,8
	ctx_arrow(ctx)->r26.s64 = 8;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320934:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,30,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8232095c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232095C;
	// lwz ctx_arrow(ctx)->r9,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfd f0,160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,16(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 16);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,26,27
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x30;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 4;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_8232095C:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x823209c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823209C4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823209c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823209C4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f12,152(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x82320998
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320998;
	// lfd f13,184(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x82320998
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320998;
	// fmul f1,f12,f13
	ctx.f1.f64 = ctx.f12.f64 * ctx.f13.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// fmr f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64;
loc_82320998:
	// lwz ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfd f0,8(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 8);
	// lwz ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,2
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,30,30,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x3;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,30,30,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 30) & 0x3;
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_823209C4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 1;
	// lfd f0,2728(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,0(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// b 0x82321c08
	goto loc_82321C08;
loc_823209D8:
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// lfd f0,160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,168(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f12,152(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82320a04
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82320A04;
	// fmr f13,f0
	ctx.f13.f64 = f0.f64;
	// b 0x82320a08
	goto loc_82320A08;
loc_82320A04:
	// fmr f0,f13
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f13.f64;
loc_82320A08:
	// fcmpu ctx_arrow(ctx)->r6,f12,f0
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f12.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82320a18
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82320A18;
	// fmr f13,f12
	ctx.f13.f64 = ctx.f12.f64;
	// b 0x82320a1c
	goto loc_82320A1C;
loc_82320A18:
	// fmr f12,f0
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = f0.f64;
loc_82320A1C:
	// lfd f0,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f12
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f12.f64);
	// blt ctx_arrow(ctx)->r6,0x82320a2c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82320A2C;
	// fmr f13,f0
	ctx.f13.f64 = f0.f64;
loc_82320A2C:
	// lwz ctx_arrow(ctx)->r3,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stfd f13,0(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8231cab0
	sub_8231CAB0(ctx, base);
	// b 0x82320cb8
	goto loc_82320CB8;
loc_82320A40:
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,24,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,48
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 48, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,20,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xF00;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 256, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,152(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320a94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320A94;
	// lfd f0,184(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320a94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320A94;
	// fmul f1,f13,f0
	ctx.f1.f64 = ctx.f13.f64 * f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320a98
	goto loc_82320A98;
loc_82320A94:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
loc_82320A98:
	// lfd f0,208(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fadd f1,f1,f0
	ctx.f1.f64 = ctx.f1.f64 + f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// lfd f13,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fmr f30,f1
	f30.f64 = ctx.f1.f64;
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320acc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320ACC;
	// lfd f0,176(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320acc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320ACC;
	// fmul f1,f13,f0
	ctx.f1.f64 = ctx.f13.f64 * f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320ad0
	goto loc_82320AD0;
loc_82320ACC:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
loc_82320AD0:
	// fadd f1,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f1.f64 + f30.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfd f1,0(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64;
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// bl 0x822c72f8
	sub_822C72F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822be3a8
	sub_822BE3A8(ctx, base);
	// b 0x82320cb8
	goto loc_82320CB8;
loc_82320B00:
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 7, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,24,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 112, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320b4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320B4C;
	// lfd f0,192(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320b4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320B4C;
	// fmul f1,f13,f0
	ctx.f1.f64 = ctx.f13.f64 * f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// fmr f30,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f1.f64;
	// b 0x82320b50
	goto loc_82320B50;
loc_82320B4C:
	// fmr f30,f31
	ctx.fpscr.disableFlushMode();
	f30.f64 = f31.f64;
loc_82320B50:
	// lfd f13,152(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320b74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320B74;
	// lfd f0,184(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320b74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320B74;
	// fmul f1,f13,f0
	ctx.f1.f64 = ctx.f13.f64 * f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320b78
	goto loc_82320B78;
loc_82320B74:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
loc_82320B78:
	// fadd f1,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f1.f64 + f30.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// lfd f0,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fmr f30,f1
	f30.f64 = ctx.f1.f64;
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320ba8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320BA8;
	// lfd f13,176(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320ba8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320BA8;
	// fmul f1,f0,f13
	ctx.f1.f64 = f0.f64 * ctx.f13.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320bac
	goto loc_82320BAC;
loc_82320BA8:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
loc_82320BAC:
	// fadd f1,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f1.f64 + f30.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// b 0x82320ca8
	goto loc_82320CA8;
loc_82320BBC:
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,15
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 15, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,24,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,240
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 240, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,168(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C08;
	// lfd f0,200(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C08;
	// fmul f1,f13,f0
	ctx.f1.f64 = ctx.f13.f64 * f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// fmr f30,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = ctx.f1.f64;
	// b 0x82320c0c
	goto loc_82320C0C;
loc_82320C08:
	// fmr f30,f31
	ctx.fpscr.disableFlushMode();
	f30.f64 = f31.f64;
loc_82320C0C:
	// lfd f13,160(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C30;
	// lfd f0,192(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C30;
	// fmul f1,f13,f0
	ctx.f1.f64 = ctx.f13.f64 * f0.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320c34
	goto loc_82320C34;
loc_82320C30:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
loc_82320C34:
	// fadd f1,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f1.f64 + f30.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// lfd f0,152(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fmr f30,f1
	f30.f64 = ctx.f1.f64;
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C64;
	// lfd f13,184(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C64;
	// fmul f1,f0,f13
	ctx.f1.f64 = f0.f64 * ctx.f13.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320c68
	goto loc_82320C68;
loc_82320C64:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
loc_82320C68:
	// fadd f1,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f1.f64 + f30.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// lfd f0,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fmr f30,f1
	f30.f64 = ctx.f1.f64;
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C98;
	// lfd f13,176(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f13,f31
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82320c98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320C98;
	// fmul f1,f0,f13
	ctx.f1.f64 = f0.f64 * ctx.f13.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// b 0x82320c9c
	goto loc_82320C9C;
loc_82320C98:
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
loc_82320C9C:
	// fadd f1,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = ctx.f1.f64 + f30.f64;
	// bl 0x822bd9d8
	sub_822BD9D8(ctx, base);
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
loc_82320CA8:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfd f1,0(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x822c72f8
	sub_822C72F8(ctx, base);
loc_82320CB8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 | ctx_arrow(ctx)->r11.u64;
	// b 0x82321b78
	goto loc_82321B78;
loc_82320CC4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 31, xer);
	// blt ctx_arrow(ctx)->r6,0x82320cd8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82320CD8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,81
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 81, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// ble ctx_arrow(ctx)->r6,0x82320cdc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82320CDC;
loc_82320CD8:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
loc_82320CDC:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82321060
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321060;
	// lwz ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// lwz ctx_arrow(ctx)->r9,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lfd f1,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x3;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-38
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -38;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,42
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 42, xer);
	// bgt ctx_arrow(ctx)->r6,0x82321b60
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82321B60;
	// lis ctx_arrow(ctx)->r12,-32251
	ctx_arrow(ctx)->r12.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,14528
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 14528;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// lhzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r12.u32 + ctx_arrow(ctx)->r0.u32);
	// lis ctx_arrow(ctx)->r12,-32206
	ctx_arrow(ctx)->r12.s64 = -2110652416;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,3404
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 3404;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_82320F6C;
	case 1:
		goto loc_82320FBC;
	case 2:
		goto loc_82320FD0;
	case 3:
		goto loc_82320FAC;
	case 4:
		goto loc_82321B60;
	case 5:
		goto loc_82321B60;
	case 6:
		goto loc_82321B60;
	case 7:
		goto loc_82320D4C;
	case 8:
		goto loc_82320D78;
	case 9:
		goto loc_82320DC8;
	case 10:
		goto loc_82320DF8;
	case 11:
		goto loc_82320E38;
	case 12:
		goto loc_82320E8C;
	case 13:
		goto loc_82320EC0;
	case 14:
		goto loc_82320EE0;
	case 15:
		goto loc_82320F00;
	case 16:
		goto loc_82321000;
	case 17:
		goto loc_82321B60;
	case 18:
		goto loc_82321B60;
	case 19:
		goto loc_82321B60;
	case 20:
		goto loc_82320F50;
	case 21:
		goto loc_82320F6C;
	case 22:
		goto loc_82320F80;
	case 23:
		goto loc_82320F94;
	case 24:
		goto loc_82321B60;
	case 25:
		goto loc_82321B60;
	case 26:
		goto loc_82321B60;
	case 27:
		goto loc_82321B60;
	case 28:
		goto loc_82320F6C;
	case 29:
		goto loc_82320FBC;
	case 30:
		goto loc_82320FD0;
	case 31:
		goto loc_82320FAC;
	case 32:
		goto loc_82320FE4;
	case 33:
		goto loc_82320F20;
	case 34:
		goto loc_82321B60;
	case 35:
		goto loc_82321B60;
	case 36:
		goto loc_82321B60;
	case 37:
		goto loc_82321B60;
	case 38:
		goto loc_82321B60;
	case 39:
		goto loc_82321B60;
	case 40:
		goto loc_82321B60;
	case 41:
		goto loc_82320F40;
	case 42:
		goto loc_82320F48;
	default:
		__builtin_unreachable();
	}
loc_82320D4C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x82320f60
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320F60;
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x82320d6c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82320D6C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320D6C:
	// bl 0x82317ca0
	sub_82317CA0(&ctx);
loc_82320D70:
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// b 0x82321058
	goto loc_82321058;
loc_82320D78:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2728(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x82320ff8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320FF8;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82320da0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320DA0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320DA0:
	// bl 0x82317d28
	sub_82317D28(&ctx);
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x82321058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321058;
loc_82320DB4:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfd f31,664(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
loc_82320DBC:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x82321058
	goto loc_82321058;
loc_82320DC8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2728(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x82320ff8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320FF8;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82320df0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320DF0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320DF0:
	// bl 0x82317d28
	sub_82317D28(&ctx);
	// b 0x82320d70
	goto loc_82320D70;
loc_82320DF8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x82320e10
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320E10;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320E10:
	// bl 0x822bda98
	sub_822BDA98(&ctx);
loc_82320E14:
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x82320db4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320DB4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,512
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 512, xer);
	// bne ctx_arrow(ctx)->r6,0x82321058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321058;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfd f31,656(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x82320dbc
	goto loc_82320DBC;
loc_82320E38:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f30,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f30
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f30.f64);
	// bne ctx_arrow(ctx)->r6,0x82320e50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320E50;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320E50:
	// bl 0x822bda98
	sub_822BDA98(&ctx);
loc_82320E54:
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x823f0a88
	sub_823F0A88(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x82320e74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82320E74;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,512
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 512, xer);
	// bne ctx_arrow(ctx)->r6,0x82321058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321058;
	// fmr f31,f30
	ctx.fpscr.disableFlushMode();
	f31.f64 = f30.f64;
	// b 0x82321058
	goto loc_82321058;
loc_82320E74:
	// lis ctx_arrow(ctx)->r11,-32768
	ctx_arrow(ctx)->r11.s64 = -2147483648;
	// stw ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// lfs f31,128(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x82321058
	goto loc_82321058;
loc_82320E8C:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// bne 0x82320ea8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82320EA8;
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x82321058
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321058;
loc_82320EA8:
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x82320eb8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82320EB8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320EB8:
	// bl 0x822bda98
	sub_822BDA98(&ctx);
	// b 0x82320d70
	goto loc_82320D70;
loc_82320EC0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82320ed8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320ED8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320ED8:
	// bl 0x82317f20
	sub_82317F20(&ctx);
	// b 0x82320e14
	goto loc_82320E14;
loc_82320EE0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f30,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f30
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f30.f64);
	// bgt ctx_arrow(ctx)->r6,0x82320ef8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320EF8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320EF8:
	// bl 0x82317f20
	sub_82317F20(&ctx);
	// b 0x82320e54
	goto loc_82320E54;
loc_82320F00:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82320f18
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320F18;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320F18:
	// bl 0x82317f20
	sub_82317F20(&ctx);
	// b 0x82320d70
	goto loc_82320D70;
loc_82320F20:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x82320f38
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82320F38;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82320F38:
	// bl 0x82317e90
	sub_82317E90(&ctx);
	// b 0x82320d70
	goto loc_82320D70;
loc_82320F40:
	// bl 0x82317dc0
	sub_82317DC0(&ctx);
	// b 0x82320d70
	goto loc_82320D70;
loc_82320F48:
	// bl 0x82317e28
	sub_82317E28(&ctx);
	// b 0x82320d70
	goto loc_82320D70;
loc_82320F50:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
loc_82320F5C:
	// beq ctx_arrow(ctx)->r6,0x82321058
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321058;
loc_82320F60:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f31,2728(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x82321058
	goto loc_82321058;
loc_82320F6C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// bne ctx_arrow(ctx)->r6,0x82321058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321058;
	// b 0x82320f60
	goto loc_82320F60;
loc_82320F80:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// bgt ctx_arrow(ctx)->r6,0x82321058
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82321058;
	// b 0x82320f60
	goto loc_82320F60;
loc_82320F94:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,2728(ctx_arrow(ctx)->r11)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
loc_82320FA4:
	// fsel f31,f1,f0,f13
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64 >= 0.0 ? f0.f64 : ctx.f13.f64;
	// b 0x82321058
	goto loc_82321058;
loc_82320FAC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// b 0x82320f5c
	goto loc_82320F5C;
loc_82320FBC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// ble ctx_arrow(ctx)->r6,0x82321058
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82321058;
	// b 0x82320f60
	goto loc_82320F60;
loc_82320FD0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f0,2728(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,2752(ctx_arrow(ctx)->r11)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x82320fa4
	goto loc_82320FA4;
loc_82320FE4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f31,2728(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82321058
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321058;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
loc_82320FF8:
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x82321058
	goto loc_82321058;
loc_82321000:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,31,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 31) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321058
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321058;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f30,28168(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// fadd f1,f1,f30
	ctx.f1.f64 = ctx.f1.f64 + f30.f64;
	// bl 0x822bda28
	sub_822BDA28(ctx, base);
	// lfd f0,152(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// fadd f1,f0,f30
	ctx.f1.f64 = f0.f64 + f30.f64;
	// bl 0x822bda28
	sub_822BDA28(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f1,f31
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f31.f64);
	// ble ctx_arrow(ctx)->r6,0x82321034
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82321034;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
loc_82321034:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfd f13,14760(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f13
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x82321054
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321054;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfd f0,672(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x82321058
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82321058;
loc_82321054:
	// fmr f31,f13
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f13.f64;
loc_82321058:
	// stfd f31,0(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// b 0x82321c08
	goto loc_82321C08;
loc_82321060:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,106
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 106, xer);
	// bgt ctx_arrow(ctx)->r6,0x823219f8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_823219F8;
	// beq ctx_arrow(ctx)->r6,0x82321994
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321994;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,95
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 95, xer);
	// beq ctx_arrow(ctx)->r6,0x823218e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823218E0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 96, xer);
	// beq ctx_arrow(ctx)->r6,0x82321874
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321874;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,99
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 99, xer);
	// beq ctx_arrow(ctx)->r6,0x82321818
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321818;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,102
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 102, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r24,0,0,19
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0xFFFFF000;
	// lwz ctx_arrow(ctx)->r23,484(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r23.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822be730
	sub_822BE730(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 12, xer);
	// bgt ctx_arrow(ctx)->r6,0x82321c08
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82321C08;
	// lis ctx_arrow(ctx)->r12,-32251
	ctx_arrow(ctx)->r12.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,14496
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 14496;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r3,1,0,30
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 1) & 0xFFFFFFFE;
	// lhzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r12.u32 + ctx_arrow(ctx)->r0.u32);
	// lis ctx_arrow(ctx)->r12,-32206
	ctx_arrow(ctx)->r12.s64 = -2110652416;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,4308
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 4308;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r3.u64) {
	case 0:
		goto loc_823210D4;
	case 1:
		goto loc_82321174;
	case 2:
		goto loc_82321214;
	case 3:
		goto loc_823212B0;
	case 4:
		goto loc_8232134C;
	case 5:
		goto loc_82321570;
	case 6:
		goto loc_82321444;
	case 7:
		goto loc_82321570;
	case 8:
		goto loc_82321570;
	case 9:
		goto loc_82321570;
	case 10:
		goto loc_823216D0;
	case 11:
		goto loc_823216D0;
	case 12:
		goto loc_823216D0;
	default:
		__builtin_unreachable();
	}
loc_823210D4:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r16.u64;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r16.s64;
loc_823210F0:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82321154
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321154;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lfdx f0,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// stfiwx f0,0,ctx_arrow(ctx)->r6
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32);
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r26.u64;
	// lwa ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.s64 = int32_t(PPC_Read_U32(ctx,  ctx));
	// std ctx_arrow(ctx)->r5,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfd f0,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r5.u64;
	// stwx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r30.u32);
loc_82321154:
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,18,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x823210f0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823210F0;
	// b 0x82321c08
	goto loc_82321C08;
loc_82321174:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r16.u64;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r16.s64;
loc_82321190:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x823211f4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823211F4;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// stfiwx f0,0,ctx_arrow(ctx)->r6
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32);
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r5,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfd f0,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r5.u64;
	// stwx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r30.u32);
loc_823211F4:
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,18,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82321190
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321190;
	// b 0x82321c08
	goto loc_82321C08;
loc_82321214:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r16.u64;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r16.s64;
loc_82321230:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82321290
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321290;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// stfiwx f0,0,ctx_arrow(ctx)->r6
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32);
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r5,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// stfd f0,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r5.u64;
	// stwx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r30.u32);
loc_82321290:
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,18,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82321230
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321230;
	// b 0x82321c08
	goto loc_82321C08;
loc_823212B0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r16.u64;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r16.s64;
loc_823212CC:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8232132c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232132C;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// stfiwx f0,0,ctx_arrow(ctx)->r6
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32);
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r26.u64;
	// lwa ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.s64 = int32_t(PPC_Read_U32(ctx,  ctx));
	// std ctx_arrow(ctx)->r5,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// stfd f0,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | ctx_arrow(ctx)->r5.u64;
	// stwx ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r30.u32);
loc_8232132C:
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,18,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x823212cc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823212CC;
	// b 0x82321c08
	goto loc_82321C08;
loc_8232134C:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r16.u64;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r16.s64;
loc_82321368:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321424
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321424;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// lfdx f0,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r4.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r3.u64;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x823213e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823213E4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r4
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32);
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ~ctx_arrow(ctx)->r4.u64;
	// clrldi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r4,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x82321404
	goto loc_82321404;
loc_823213E4:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// fctiwz f0,f0
	ctx.fpscr.disableFlushMode();
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r4
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32);
	// lwz ctx_arrow(ctx)->r4,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ~ctx_arrow(ctx)->r4.u64;
	// extsw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s32;
	// std ctx_arrow(ctx)->r4,128(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// lfd f0,128(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_82321404:
	// fcfid f0,f0
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(f0.s64);
	// stfd f0,0(ctx_arrow(ctx)->r6)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r4.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r26.u64;
loc_82321424:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,8
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82321368
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321368;
	// b 0x82321c08
	goto loc_82321C08;
loc_82321444:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r16.s64 - ctx_arrow(ctx)->r11.s64;
loc_82321460:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321550
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321550;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r6.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321550
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321550;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// lfd f0,32(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,29,3,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfiwx f0,0,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32);
	// lfd f0,0(ctx_arrow(ctx)->r8)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r4.u64;
	// and ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82321510
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321510;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r4
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32);
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r3, 0, BINARY_OP_U8(ctx_arrow(ctx)->r3, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r4.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r3) & 0x3F)), 0));
	// clrldi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r4,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x82321530
	goto loc_82321530;
loc_82321510:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// fctiwz f0,f0
	ctx.fpscr.disableFlushMode();
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r4
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32);
	// lwz ctx_arrow(ctx)->r4,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// sraw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r4.s32 < 0) & (((ctx_arrow(ctx)->r4.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r4.s32);
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s32 >> temp.u32;
	// extsw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s32;
	// std ctx_arrow(ctx)->r4,128(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// lfd f0,128(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_82321530:
	// fcfid f0,f0
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(f0.s64);
	// stfdx f0,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + ctx_arrow(ctx)->r8.u32);
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r4.u64;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r30.u32);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r26.u64;
loc_82321550:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82321460
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321460;
	// b 0x82321c08
	goto loc_82321C08;
loc_82321570:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r16.s64 - ctx_arrow(ctx)->r11.s64;
loc_8232158C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823216a0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823216A0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r6.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823216a0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823216A0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfd f0,-32(ctx_arrow(ctx)->r7)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lfd f13,0(ctx_arrow(ctx)->r7)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 5, xer);
	// fctidz f13,f13
	ctx.f13.s64 = (ctx.f13.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f13.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// stfiwx f13,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// beq ctx_arrow(ctx)->r6,0x82321638
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321638;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 7, xer);
	// beq ctx_arrow(ctx)->r6,0x82321628
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321628;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 8, xer);
	// beq ctx_arrow(ctx)->r6,0x82321618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321618;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x823216c0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823216C0;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r11.u64;
	// b 0x82321644
	goto loc_82321644;
loc_82321618:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// b 0x82321644
	goto loc_82321644;
loc_82321628:
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	// b 0x82321644
	goto loc_82321644;
loc_82321638:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
loc_82321644:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// clrldi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,32
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFC;
	// std ctx_arrow(ctx)->r8,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// stfdx f0,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r7
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + ctx_arrow(ctx)->r7.u32);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r4.u64 | ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r4.u64;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r29.u64;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r4.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32);
loc_823216A0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8232158c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232158C;
	// b 0x82321c08
	goto loc_82321C08;
loc_823216C0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_823216D0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r16.u64;
	// subf ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r16.s64;
loc_823216EC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823217d8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823217D8;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r31.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r4.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r27.u64;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8232176c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232176C;
	// beq ctx_arrow(ctx)->r6,0x82321758
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321758;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 3, xer);
	// bge ctx_arrow(ctx)->r6,0x823217f8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_823217F8;
	// lfdx f0,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// b 0x82321760
	goto loc_82321760;
loc_82321758:
	// lfdx f0,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
loc_82321760:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stfiwx f0,0,ctx_arrow(ctx)->r8
	ctx.fpscr.disableFlushMode();
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32);
	// b 0x82321778
	goto loc_82321778;
loc_8232176C:
	// lfdx f0,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
loc_82321778:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 10, xer);
	// beq ctx_arrow(ctx)->r6,0x823217c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823217C0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 11, xer);
	// beq ctx_arrow(ctx)->r6,0x823217ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823217AC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 12, xer);
	// bne ctx_arrow(ctx)->r6,0x82321808
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321808;
	// lwz ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// std ctx_arrow(ctx)->r8,120(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// lfd f0,120(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_823217A0:
	// fcfid f0,f0
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(f0.s64);
	// stfd f0,0(ctx_arrow(ctx)->r9)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// b 0x823217cc
	goto loc_823217CC;
loc_823217AC:
	// lwa ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.s64 = int32_t(PPC_Read_U32(ctx,  ctx));
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// std ctx_arrow(ctx)->r8,128(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// lfd f0,128(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823217a0
	goto loc_823217A0;
loc_823217C0:
	// lfs f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// stfd f0,0(ctx_arrow(ctx)->r9)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
loc_823217CC:
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r8.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r30.u32);
loc_823217D8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x823216ec
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823216EC;
	// b 0x82321c08
	goto loc_82321C08;
loc_823217F8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82321808:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82321818:
	// lis ctx_arrow(ctx)->r8,-32256
	ctx_arrow(ctx)->r8.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r16.u64;
	// lfd f0,2752(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_8232182C:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,29,3,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8232185c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232185C;
	// li ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 3;
	// stfd f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// stfd f0,8(ctx_arrow(ctx)->r10)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r26.u64;
loc_8232185C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x8232182c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232182C;
	// b 0x82321c08
	goto loc_82321C08;
loc_82321874:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0xFFFFF000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,148(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822817c8
	sub_822817C8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0xF;
	// bne 0x823218b0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823218B0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,31,1,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 31) & 0x7FFFFFFF;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
loc_823218B0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823218d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823218D4;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lfd f0,2728(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
loc_823218D4:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// b 0x82321948
	goto loc_82321948;
loc_823218E0:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0xFFFFF000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,148(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822704f0
	sub_822704F0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0xF;
	// bne 0x8232191c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232191C;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,31,1,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 31) & 0x7FFFFFFF;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
loc_8232191C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321940
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321940;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lfd f0,2728(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
loc_82321940:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24,28,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 24) & 0xF;
loc_82321948:
	// lwz ctx_arrow(ctx)->r10,148(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r10.u64;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232196c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232196C;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31,1,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 31) & 0x7FFFFFFF;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
loc_8232196C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321C08;
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r26.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r11.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lfd f0,2752(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfdx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r16.u32);
	// b 0x82321c08
	goto loc_82321C08;
loc_82321994:
	// lwz ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 28) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f2,176(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f2.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f2,f0
	ctx_arrow(ctx)->r6.compare(ctx.f2.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x823219d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823219D4;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r10,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lfd f0,2728(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// stfd f0,0(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
loc_823219C4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// b 0x82321b74
	goto loc_82321B74;
loc_823219D4:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// lfd f1,144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82321c08
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321C08;
	// bl 0x823f0100
	sub_823F0100(ctx, base);
	// lwz ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stfd f1,0(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// b 0x823219c4
	goto loc_823219C4;
loc_823219F8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,109
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 109, xer);
	// beq ctx_arrow(ctx)->r6,0x82321b80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321B80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,111
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 111, xer);
	// beq ctx_arrow(ctx)->r6,0x82321a88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321A88;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C08;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,15,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x1C000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r29.u64;
	// beq 0x82321a48
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321A48;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r16.u64;
loc_82321A20:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822bdb58
	sub_822BDB58(ctx, base);
	// stfd f1,0(ctx_arrow(ctx)->r29)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82321a20
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321A20;
loc_82321A48:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0xFFFFF000;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18,29,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 18) & 0x7;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ~ctx_arrow(ctx)->r11.u64;
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,18,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82321c08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321C08;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0xFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// b 0x82321b78
	goto loc_82321B78;
loc_82321A88:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r29.u64;
	// lfd f31,2752(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
loc_82321A9C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321b58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321B58;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// lwz ctx_arrow(ctx)->r31,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x82321b60
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321B60;
	// lwz ctx_arrow(ctx)->r27,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r5,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82318720
	sub_82318720(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFF000;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82321b14
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321B14;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x82321b28
	goto loc_82321B28;
loc_82321B14:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
loc_82321B28:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82321b40
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321B40;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// b 0x82321b50
	goto loc_82321B50;
loc_82321B40:
	// fcmpu ctx_arrow(ctx)->r6,f31,f1
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f1.f64);
	// bne ctx_arrow(ctx)->r6,0x82321b60
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321B60;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82321b60
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321B60;
loc_82321B50:
	// lwz ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82321a9c
	goto loc_82321A9C;
loc_82321B58:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82321b68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321B68;
loc_82321B60:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82321c0c
	goto loc_82321C0C;
loc_82321B68:
	// stfd f31,0(ctx_arrow(ctx)->r16)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64 | ctx_arrow(ctx)->r11.u64;
loc_82321B74:
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r25.u64;
loc_82321B78:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x82321c08
	goto loc_82321C08;
loc_82321B80:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r15,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r15.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321C08;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r16.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 144;
loc_82321B9C:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82321bec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321BEC;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lfd f0,0(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// stfd f0,0(ctx_arrow(ctx)->r7)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// slw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r25.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64 | ctx_arrow(ctx)->r26.u64;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x3;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r5.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r4.u64;
	// stwx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r30.u32);
loc_82321BEC:
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,32
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 32;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r15.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82321b9c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321B9C;
loc_82321C08:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
loc_82321C0C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,464
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 464;
	// lfd f29,-176(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f30,-168(ctx_arrow(ctx)->r1)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-160(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed150
	return;
}

alias(__imp__sub_82321C20) PPC_WEAK_FUNC(sub_82321C20);
PPC_FUNC_IMPL(__imp__sub_82321C20) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x82321c58
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321C58;
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,12,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82321e9c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321E9C;
loc_82321C58:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321c7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321C7C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8229ee20
	sub_8229EE20(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8231a6d8
	sub_8231A6D8(ctx, base);
loc_82321C7C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321d30
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321D30;
loc_82321C88:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
loc_82321C8C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321cf8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321CF8;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82321cac
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321CAC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x82321cb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321CB0;
loc_82321CAC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82321CB0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321cc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321CC4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,7,18
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1FFE000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x82321cc8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321CC8;
loc_82321CC4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82321CC8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82321cd8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321CD8;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82321c8c
	goto loc_82321C8C;
loc_82321CD8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,19,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 19) & 0xFFF;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// bl 0x82326028
	sub_82326028(ctx, base);
	// b 0x82321c88
	goto loc_82321C88;
loc_82321CF8:
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,92
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 92;
loc_82321D04:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82321d18
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321D18;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
loc_82321D18:
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bne 0x82321d04
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321D04;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,7,5
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFDFFFFFF;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
loc_82321D30:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne 0x82321d98
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321D98;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321d68
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321D68;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r10,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,32(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 32);
	// lwz ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
loc_82321D68:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,111
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 111, xer);
	// blt ctx_arrow(ctx)->r6,0x82321e50
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82321E50;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,112
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 112, xer);
	// ble ctx_arrow(ctx)->r6,0x82321d88
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82321D88;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,124
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 124, xer);
	// bne ctx_arrow(ctx)->r6,0x82321e50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321E50;
loc_82321D88:
	// li ctx_arrow(ctx)->r10,57
	ctx_arrow(ctx)->r10.s64 = 57;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// b 0x82321e9c
	goto loc_82321E9C;
loc_82321D98:
	// lwz ctx_arrow(ctx)->r29,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321db4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321DB4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
loc_82321DB4:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822820f0
	sub_822820F0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321d30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321D30;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 13952, xer);
	// bne ctx_arrow(ctx)->r6,0x82321d30
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321D30;
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_82321DE4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321e1c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321E1C;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x82321e14
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321E14;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,18,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 13952, xer);
	// bne ctx_arrow(ctx)->r6,0x82321e14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321E14;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x82321e20
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321E20;
loc_82321E14:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82321de4
	goto loc_82321DE4;
loc_82321E1C:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_82321E20:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82321d30
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82321D30;
loc_82321E28:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321d30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321D30;
	// lwz ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x82321e48
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321E48;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
loc_82321E48:
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82321e28
	goto loc_82321E28;
loc_82321E50:
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82321e78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321E78;
	// li ctx_arrow(ctx)->r10,57
	ctx_arrow(ctx)->r10.s64 = 57;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8,18,24
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0x3F80) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFC07F);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,540(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 28);
	// stw ctx_arrow(ctx)->r30,540(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 540);
	// b 0x82321e9c
	goto loc_82321E9C;
loc_82321E78:
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r6,34
	ctx_arrow(ctx)->r6.s64 = 34;
	// bl 0x82270940
	sub_82270940(ctx, base);
loc_82321E9C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_82321EA8) PPC_WEAK_FUNC(sub_82321EA8);
PPC_FUNC_IMPL(__imp__sub_82321EA8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4096
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 | 4096;
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,20,31,31
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 20) & 0x1;
	// stw ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 40);
	// bl 0x82270688
	sub_82270688(&ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 | 1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_82321EF0:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_82321EF4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321f5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321F5C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82321f30
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321F30;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82321f30
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321F30;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82321f3c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82321F3C;
loc_82321F30:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82321F3C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82321ef4
	goto loc_82321EF4;
loc_82321F5C:
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_82321F60:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82321ff4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82321FF4;
	// lwz ctx_arrow(ctx)->r30,16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq 0x82321fec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321FEC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82321f8c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321F8C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x82321f90
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321F90;
loc_82321F8C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82321F90:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82321fec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321FEC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82321fc8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82321FC8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82321fc8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82321FC8;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82321fd4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82321FD4;
loc_82321FC8:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82321FD4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82321FEC:
	// lwz ctx_arrow(ctx)->r29,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82321f60
	goto loc_82321F60;
loc_82321FF4:
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82321c20
	sub_82321C20(ctx, base);
loc_82322008:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823220a4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823220A4;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x823220a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823220A4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x8232207c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232207C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
loc_8232207C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14592
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14592, xer);
	// beq ctx_arrow(ctx)->r6,0x82322008
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322008;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82270718
	sub_82270718(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322008
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322008;
	// b 0x82321ef0
	goto loc_82321EF0;
loc_823220A4:
	// lwz ctx_arrow(ctx)->r11,936(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r31,936(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 936);
	// bl 0x82270998
	sub_82270998(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_823220C8) PPC_WEAK_FUNC(sub_823220C8);
PPC_FUNC_IMPL(__imp__sub_823220C8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u32 & 0xFF;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,14,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823221f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823221F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,86
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 86, xer);
	// beq ctx_arrow(ctx)->r6,0x82322178
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322178;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,89
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 89, xer);
	// beq ctx_arrow(ctx)->r6,0x82322118
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322118;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r4,3500
	ctx_arrow(ctx)->r4.s64 = 3500;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2236
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 2236;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82322118:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -12;
	// lwz ctx_arrow(ctx)->r27,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,12
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r27.s64 + 12;
	// lwzx ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232213C:
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82322250
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322250;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, ctx_arrow(ctx)->r26.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82322164
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322164;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822bf6d8
	sub_822BF6D8(ctx, base);
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
loc_82322164:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232213c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232213C;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r29.s64 + 8;
	// b 0x8232213c
	goto loc_8232213C;
loc_82322178:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,-12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + -12;
	// lwz ctx_arrow(ctx)->r29,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwzx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82321c20
	sub_82321C20(ctx, base);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,85
	ctx_arrow(ctx)->r6.s64 = 85;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29,32
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r29.s64 + 32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8231b410
	sub_8231B410(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -12;
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r11.u32);
	// b 0x82322264
	goto loc_82322264;
loc_823221F4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 84, xer);
	// beq ctx_arrow(ctx)->r6,0x8232227c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232227C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,86
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 86, xer);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// beq ctx_arrow(ctx)->r6,0x8232226c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232226C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,89
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 89, xer);
	// beq ctx_arrow(ctx)->r6,0x82322220
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322220;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r4,3500
	ctx_arrow(ctx)->r4.s64 = 3500;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2236
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 2236;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82322220:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,-12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + -12;
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822bf6d8
	sub_822BF6D8(ctx, base);
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
loc_82322250:
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82321c20
	sub_82321C20(ctx, base);
loc_82322264:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// b 0x82322280
	goto loc_82322280;
loc_8232226C:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r4,3500
	ctx_arrow(ctx)->r4.s64 = 3500;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,14768
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 14768;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8232227C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82322280:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82322288) PPC_WEAK_FUNC(sub_82322288);
PPC_FUNC_IMPL(__imp__sub_82322288) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed114
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r6.u64;
	// bl 0x82270688
	sub_82270688(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 | 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82270688
	sub_82270688(&ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64 | 1;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// li ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r19.s64 = 0;
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r22.u64 | 1;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82322304:
	// lwz ctx_arrow(ctx)->r27,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
loc_82322308:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82322440
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322440;
	// lwz ctx_arrow(ctx)->r29,12(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r21.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x823224d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823224D0;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82322358
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322358;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r9.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322438
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322438;
loc_82322358:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232237c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232237C;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82322438
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82322438;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// beq ctx_arrow(ctx)->r6,0x82322438
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322438;
loc_8232237C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,2,2
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322438
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322438;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8192
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 536870912;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823223c0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823223C0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823223c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823223C0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x823223cc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823223CC;
loc_823223C0:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_823223CC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322414
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322414;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82322414
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322414;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82322420
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82322420;
loc_82322414:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82322420:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82322438:
	// lwz ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82322308
	goto loc_82322308;
loc_82322440:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823224dc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823224DC;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x823224dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823224DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x823224b4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823224B4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
loc_823224B4:
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,1
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + 1;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,40000
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 40000, xer);
	// ble ctx_arrow(ctx)->r6,0x82322304
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82322304;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_823224D0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r19,1
	ctx_arrow(ctx)->r19.s64 = 1;
	// bl 0x8227b930
	sub_8227B930(ctx, base);
loc_823224DC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322560
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322560;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82322560
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322560;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x82322550
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322550;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
loc_82322550:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,3,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFDFFFFFFF;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// b 0x823224dc
	goto loc_823224DC;
loc_82322560:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,932
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r24.s64 + 932;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r19.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 0);
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed164
	return;
}

alias(__imp__sub_82322588) PPC_WEAK_FUNC(sub_82322588);
PPC_FUNC_IMPL(__imp__sub_82322588) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed10c
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r20,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r20.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x82270688
	sub_82270688(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 | 1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82270688
	sub_82270688(&ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 | 1;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// li ctx_arrow(ctx)->r17,1
	ctx_arrow(ctx)->r17.s64 = 1;
	// li ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r22.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82322604:
	// lwz ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
loc_82322608:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823227f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823227F0;
	// lwz ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r23.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823226bc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823226BC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r27.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232262c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232262C;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r19,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r19.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823227e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823227E0;
loc_8232262C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r17,0
	ctx_arrow(ctx)->r17.s64 = 0;
	// bl 0x8227b930
	sub_8227B930(ctx, base);
loc_82322638:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232287c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232287C;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8232287c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232287C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x823226ac
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823226AC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
loc_823226AC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,3,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFDFFFFFFF;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// b 0x82322638
	goto loc_82322638;
loc_823226BC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82298570
	sub_82298570(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823227e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823227E0;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r20.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823227e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823227E0;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r18,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r18.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823226f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823226F0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x822a2960
	sub_822A2960(ctx, base);
	// b 0x8232271c
	goto loc_8232271C;
loc_823226F0:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_823226F4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823227e8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823227E8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	xer.ca = ctx_arrow(ctx)->r11.u32 > 35;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823227e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823227E8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r23.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823226f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823226F4;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_8232271C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823227e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823227E0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,2,2
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823227e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823227E0;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8192
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 536870912;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322768
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322768;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82322768
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322768;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82322774
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82322774;
loc_82322768:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82322774:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823227bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823227BC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823227bc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823227BC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x823227c8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823227C8;
loc_823227BC:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_823227C8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_823227E0:
	// lwz ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82322608
	goto loc_82322608;
loc_823227E8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8232271c
	goto loc_8232271C;
loc_823227F0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322638
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322638;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82322638
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322638;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x82322864
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322864;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
loc_82322864:
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r22.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,10000
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 10000, xer);
	// ble ctx_arrow(ctx)->r6,0x82322604
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82322604;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8232287C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,932
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 + 932;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r17.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 0);
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed15c
	return;
}

alias(__imp__sub_823228A8) PPC_WEAK_FUNC(sub_823228A8);
PPC_FUNC_IMPL(__imp__sub_823228A8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r22,24(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x82270688
	sub_82270688(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r24.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 | 1;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64 | 1;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x8232291c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232291C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x8232291c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232291C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82322928
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82322928;
loc_8232291C:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82322928:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82322940:
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
loc_82322948:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82322ab0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322AB0;
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82322978
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82322978;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r24.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232296c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232296C;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322aa0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322AA0;
loc_8232296C:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82322978:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82298570
	sub_82298570(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322aa0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322AA0;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r22.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82322aa0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82322AA0;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823229ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823229AC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822a2960
	sub_822A2960(ctx, base);
	// b 0x823229d8
	goto loc_823229D8;
loc_823229AC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_823229B0:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322aa8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322AA8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	xer.ca = ctx_arrow(ctx)->r11.u32 > 35;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322aa8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322AA8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823229b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823229B0;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_823229D8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322aa0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322AA0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
	// bl 0x822a6618
	sub_822A6618(ctx, base);
loc_823229F0:
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82322a20
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82322A20;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82322a10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322A10;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82322A10:
	// lwz ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq ctx_arrow(ctx)->r6,0x82322a24
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322A24;
loc_82322A20:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82322A24:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322a4c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322A4C;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x822a56c8
	sub_822A56C8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823229f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823229F0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_82322A4C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322a7c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322A7C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82322a7c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322A7C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82322a88
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82322A88;
loc_82322A7C:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82322A88:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82322AA0:
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82322948
	goto loc_82322948;
loc_82322AA8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x823229d8
	goto loc_823229D8;
loc_82322AB0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322b84
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322B84;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 32);
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,2,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFBFFFFFFF;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322b30
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322B30;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// b 0x82322b3c
	goto loc_82322B3C;
loc_82322B30:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
loc_82322B3C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x82322b84
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322B84;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
loc_82322B84:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322bc0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322BC0;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82322bc0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322BC0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322b3c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322B3C;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
loc_82322BC0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322bd4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322BD4;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x82322940
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322940;
loc_82322BD4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 0) & 0xFFFFFFFE;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 32;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,32(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 32);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// beq 0x82322c38
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322C38;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + -32;
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// b 0x82322c5c
	goto loc_82322C5C;
loc_82322C38:
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-32
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + -32;
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,32(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 32);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
loc_82322C5C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,2,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFBFFFFFFF;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,936(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// stw ctx_arrow(ctx)->r30,936(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 936);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed168
	return;
}

alias(__imp__sub_82322C80) PPC_WEAK_FUNC(sub_82322C80);
PPC_FUNC_IMPL(__imp__sub_82322C80) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82322cb4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322CB4;
loc_82322CAC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82322d40
	goto loc_82322D40;
loc_82322CB4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82298570
	sub_82298570(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322cac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322CAC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82298570
	sub_82298570(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322cdc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322CDC;
loc_82322CD4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82322d40
	goto loc_82322D40;
loc_82322CDC:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322cf4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322CF4;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822a2960
	sub_822A2960(ctx, base);
	// b 0x82322d20
	goto loc_82322D20;
loc_82322CF4:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_82322CF8:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322d48
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322D48;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	xer.ca = ctx_arrow(ctx)->r11.u32 > 35;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322d48
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322D48;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82322cf8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82322CF8;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82322D20:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322cd4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322CD4;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82322588
	sub_82322588(ctx, base);
loc_82322D40:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
loc_82322D48:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82322d20
	goto loc_82322D20;
}

alias(__imp__sub_82322D50) PPC_WEAK_FUNC(sub_82322D50);
PPC_FUNC_IMPL(__imp__sub_82322D50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r29,24(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r30,64(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq 0x8232301c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232301C;
	// li ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = 1;
loc_82322D7C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82322dc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322DC8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r25.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82322dbc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322DBC;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// bne 0x82322dc0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322DC0;
loc_82322DBC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82322DC0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232301c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232301C;
loc_82322DC8:
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322e48
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322E48;
	// lwz ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82322e10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322E10;
	// b 0x82322df4
	goto loc_82322DF4;
loc_82322DE8:
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,9,9
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x400000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82322e00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322E00;
loc_82322DF4:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x82322de8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322DE8;
loc_82322E00:
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322df4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322DF4;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 112);
loc_82322E10:
	// lwz ctx_arrow(ctx)->r31,112(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr. ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq 0x82322e68
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322E68;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,15,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 15) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82322e68
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322E68;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322e48
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322E48;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82324d28
	sub_82324D28(ctx, base);
loc_82322E48:
	// lbz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322f5c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322F5C;
	// lwz ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82322f34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322F34;
	// b 0x82322f18
	goto loc_82322F18;
loc_82322E68:
	// lwz ctx_arrow(ctx)->r31,96(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x82322e48
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322E48;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322e48
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322E48;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x82322ee8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322EE8;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322ec0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322EC0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82322ec0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322EC0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82322ecc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82322ECC;
loc_82322EC0:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82322ECC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
	// b 0x82322e48
	goto loc_82322E48;
loc_82322EE8:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_82322EEC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82322e48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322E48;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82324238
	sub_82324238(ctx, base);
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82322eec
	goto loc_82322EEC;
loc_82322F0C:
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,9,9
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x400000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82322f24
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322F24;
loc_82322F18:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x82322f0c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322F0C;
loc_82322F24:
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,10,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82322f18
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322F18;
	// stw ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 108);
loc_82322F34:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,108(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322f5c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322F5C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82324d28
	sub_82324D28(ctx, base);
loc_82322F5C:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82322f78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322F78;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
	// bne ctx_arrow(ctx)->r6,0x82322f7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82322F7C;
loc_82322F78:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82322F7C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82322fd0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82322FD0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,85
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 85, xer);
	// beq ctx_arrow(ctx)->r6,0x82322fb0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82322FB0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,86
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 86, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82322fb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82322FB4;
loc_82322FB0:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
loc_82322FB4:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322fd0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322FD0;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,6,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82322fd0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322FD0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82324d28
	sub_82324D28(ctx, base);
loc_82322FD0:
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8232301c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232301C;
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,5,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8232300c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232300C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_8232300C:
	// lwz ctx_arrow(ctx)->r30,64(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne 0x82322d7c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82322D7C;
loc_8232301C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82323028) PPC_WEAK_FUNC(sub_82323028);
PPC_FUNC_IMPL(__imp__sub_82323028) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -104);
	// stfd f31,-96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x8231fe98
	sub_8231FE98(ctx, base);
	// li ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = 1;
	// mr. ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// beq 0x823230e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823230E8;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 96;
loc_82323078:
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r29, 0, BINARY_OP_U8(ctx_arrow(ctx)->r29, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r22.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r29) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r27.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823230d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823230D4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// lfd f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = 2;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1F;
	// li ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = -1;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,29,3,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 29) & 0x1FFFFFFC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r7.u64;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// frsp f0,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f31
	ctx_arrow(ctx)->r6.compare(f0.f64, f31.f64);
	// beq ctx_arrow(ctx)->r6,0x82323178
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323178;
loc_823230D4:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 2;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 8, xer);
	// blt ctx_arrow(ctx)->r6,0x82323078
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82323078;
loc_823230E8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232366c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232366C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232366c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232366C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// lfs f30,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// beq ctx_arrow(ctx)->r6,0x82323118
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323118;
	// fcmpu ctx_arrow(ctx)->r6,f31,f30
	ctx_arrow(ctx)->r6.compare(f31.f64, f30.f64);
	// bne ctx_arrow(ctx)->r6,0x8232366c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232366C;
loc_82323118:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 96, xer);
	// beq ctx_arrow(ctx)->r6,0x82323130
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323130;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,95
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 95, xer);
	// bne ctx_arrow(ctx)->r6,0x8232366c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232366C;
loc_82323130:
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,31,28,31
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0xF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// beq 0x8232366c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232366C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323140:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323188
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323188;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x82323170
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323170;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,18,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 13952, xer);
	// bne ctx_arrow(ctx)->r6,0x82323170
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323170;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x82323180
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323180;
loc_82323170:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323140
	goto loc_82323140;
loc_82323178:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x82323670
	goto loc_82323670;
loc_82323180:
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r10.u64;
	// b 0x8232318c
	goto loc_8232318C;
loc_82323188:
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
loc_8232318C:
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323230
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323230;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r26,40
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r26.s64 + 40;
loc_823231A0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8232320c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232320C;
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x82323200
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323200;
	// lwz ctx_arrow(ctx)->r5,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82318720
	sub_82318720(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f31,f1
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f1.f64);
	// beq ctx_arrow(ctx)->r6,0x82323214
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323214;
loc_82323200:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// b 0x823231a0
	goto loc_823231A0;
loc_8232320C:
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// b 0x8232321c
	goto loc_8232321C;
loc_82323214:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82323230
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323230;
loc_8232321C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = 2097152;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x380000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232366c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232366C;
loc_82323230:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r27.s64 + -1;
	// fcmpu ctx_arrow(ctx)->r6,f31,f30
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, f30.f64);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// andc ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r27.u64 & ~ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// bne ctx_arrow(ctx)->r6,0x823232a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823232A8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 96, xer);
	// bne ctx_arrow(ctx)->r6,0x82323280
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323280;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + -24;
	// not ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r9,-241
	ctx_arrow(ctx)->r9.s64 = -241;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4,24,27
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 4) & 0xF0) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFF0F);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,0,28,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 0) & 0xF) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFF0);
	// b 0x823232f8
	goto loc_823232F8;
loc_82323280:
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + -20;
	// lis ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -65536;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// not ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r31.u64;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4095
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 4095;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,12,16,19
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 12) & 0xF000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFF0FFF);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,8,20,23
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 8) & 0xF00) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFF0FF);
	// b 0x823232f8
	goto loc_823232F8;
loc_823232A8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,96
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 96, xer);
	// bne ctx_arrow(ctx)->r6,0x823232d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823232D8;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + -24;
	// li ctx_arrow(ctx)->r9,-16
	ctx_arrow(ctx)->r9.s64 = -16;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// not ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r31.u64;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,4,24,27
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 4) & 0xF0) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFF0F);
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r10.u64;
	// b 0x823232fc
	goto loc_823232FC;
loc_823232D8:
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,-20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + -20;
	// not ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ~ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r9,-3841
	ctx_arrow(ctx)->r9.s64 = -3841;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8,20,23
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 8) & 0xF00) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFF0FF);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12,16,19
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 12) & 0xF000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFF0FFF);
loc_823232F8:
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
loc_823232FC:
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r31.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r31.u32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// subfic ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r9,31
	xer.ca = ctx_arrow(ctx)->r9.u32 <= 31;
	ctx_arrow(ctx)->r23.s64 = 31 - ctx_arrow(ctx)->r9.s64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,31,26
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFFFFFFFFFFFFFFE1) | (ctx_arrow(ctx)->r11.u64 & 0x1E);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,17
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFC000;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16384
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16384;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,18,14
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFFFFFFE3FFF) | (ctx_arrow(ctx)->r10.u64 & 0x1C000);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x82323394
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323394;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822a7290
	sub_822A7290(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x8232334c
	goto loc_8232334C;
loc_82323348:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_8232334C:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323348
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323348;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r23,5,22,26
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 5) & 0x3E0;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,25,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFFFFFFFF7F;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,7296
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 7296;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,24,21
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFFFFCFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x82323474
	goto loc_82323474;
loc_82323394:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323474
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323474;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822b6cf8
	sub_822B6CF8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822b7440
	sub_822B7440(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822b6cf8
	sub_822B6CF8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16777216;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323460
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323460;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x82323454
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323454;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82323418
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323418;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323418
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323418;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82323424
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82323424;
loc_82323418:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_82323424:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8388608;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// sth ctx_arrow(ctx)->r11,14(ctx_arrow(ctx)->r31)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r31.u32 + 14, ctx_arrow(ctx)->r11, 0);
	// b 0x82323460
	goto loc_82323460;
loc_82323454:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822b7358
	sub_822B7358(ctx, base);
loc_82323460:
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x82321c20
	sub_82321C20(ctx, base);
loc_82323474:
	// lwz ctx_arrow(ctx)->r10,680(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x82323664
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323664;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323664
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323664;
	// lhz ctx_arrow(ctx)->r11,14(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r28.u32 + 14);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r23.u64;
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,31,28,31
	ctx_arrow(ctx)->r26.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0xF;
loc_823234AC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823234d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823234D4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	// lhz ctx_arrow(ctx)->r10,14(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r28.u32 + 14);
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64 & ~ctx_arrow(ctx)->r11.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 31;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// b 0x823234dc
	goto loc_823234DC;
loc_823234D4:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_823234DC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323558
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323558;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r4.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323548
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323548;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8228c930
	sub_8228C930(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82323510
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323510;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8228cdf8
	sub_8228CDF8(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
loc_82323510:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8228cd50
	sub_8228CD50(ctx, base);
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,58
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 & 0x3F;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,29,3,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 29) & 0x1FFFFFF8;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r3, 0, BINARY_OP_U8(ctx_arrow(ctx)->r3, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r22.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r3) & 0x3F)), 0));
	// sld ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r22.u64 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	// or ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r27.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ldx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
	// stdx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
loc_82323548:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64 & ~ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 - ctx_arrow(ctx)->r11.s64;
	// b 0x823234ac
	goto loc_823234AC;
loc_82323558:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232356c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232356C;
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_8232356C:
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r10,192(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r9.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r29.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x823235c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823235C0;
	// lwz ctx_arrow(ctx)->r11,644(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// bl 0x82270d28
	sub_82270D28(ctx, base);
	// lwz ctx_arrow(ctx)->r11,192(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,27,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x1C;
	// stwx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r11,192(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,28
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFF8) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF00000007);
	// stw ctx_arrow(ctx)->r10,192(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 192);
loc_823235C0:
	// clrldi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,58
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64 & 0x3F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,29,3,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 29) & 0x1FFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ldx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// sld ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r22.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x7F)), 0));
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
	// stdx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,660(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r25.u32);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31,28,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0xF;
loc_823235F0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323618;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// lhz ctx_arrow(ctx)->r10,14(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r28.u32 + 14);
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r11.u64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 31;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// b 0x82323620
	goto loc_82323620;
loc_82323618:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_82323620:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323664
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323664;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323654
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323654;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// clrldi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,58
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64 & 0x3F;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,29,3,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// sld ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r22.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x7F)), 0));
	// ldx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U64(ctx,  ctx);
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r7.u64;
	// stdx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
loc_82323654:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// b 0x823235f0
	goto loc_823235F0;
loc_82323664:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// b 0x82323670
	goto loc_82323670;
loc_8232366C:
	// li ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r3.s64 = 4;
loc_82323670:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// lfd f30,-104(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
}

alias(__imp__sub_82323680) PPC_WEAK_FUNC(sub_82323680);
PPC_FUNC_IMPL(__imp__sub_82323680) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323698:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823236d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823236D8;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x823236c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823236C8;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,18,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 13952, xer);
	// bne ctx_arrow(ctx)->r6,0x823236c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823236C8;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,4,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x823236d0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823236D0;
loc_823236C8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323698
	goto loc_82323698;
loc_823236D0:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64;
	// b 0x823236dc
	goto loc_823236DC;
loc_823236D8:
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_823236DC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323844
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323844;
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
loc_823236F0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232374c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232374C;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323744
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323744;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,7,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 7) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323744
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323744;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323740
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323740;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,27,24,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xFF;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_82323724:
	// srw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u32 & 0x3;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// slw ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r3, 0, BINARY_OP_U8(ctx_arrow(ctx)->r3, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r6.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r3) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r3.u64 | ctx_arrow(ctx)->r8.u64;
	// bne 0x82323724
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323724;
loc_82323740:
	// or ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r4.u64;
loc_82323744:
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x823236f0
	goto loc_823236F0;
loc_8232374C:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,13,29,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 13) & 0x7;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,40
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 40;
loc_8232375C:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82323844
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82323844;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r28.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323784
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323784;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27,30,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x3;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r5.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323790
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323790;
loc_82323784:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// b 0x8232375c
	goto loc_8232375C;
loc_82323790:
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r6.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r4.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82323854
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323854;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,624(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x822c9550
	sub_822C9550(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// beq 0x82323844
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323844;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323830
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323830;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8388608;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// bl 0x8228c8b8
	sub_8228C8B8(&ctx);
	// sth ctx_arrow(ctx)->r3,14(ctx_arrow(ctx)->r31)
	PPC_STORE_U16(ctx_arrow(ctx)->r31.u32 + 14, ctx_arrow(ctx)->r3.u16);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232380c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232380C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232380c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232380C;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82323818
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82323818;
loc_8232380C:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_82323818:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32);
loc_82323830:
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// lwz ctx_arrow(ctx)->r5,624(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82321c20
	sub_82321C20(ctx, base);
loc_82323844:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x822bd950
	sub_822BD950(ctx, base);
loc_82323854:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82323860) PPC_WEAK_FUNC(sub_82323860);
PPC_FUNC_IMPL(__imp__sub_82323860) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r22,4
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r22.s64 + 4;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r8.u64;
	// li ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r21.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r25.u64;
loc_82323890:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x82323ac4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323AC4;
	// lwz ctx_arrow(ctx)->r30,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq 0x82323aa4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323AA4;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82323a54
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323A54;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,24(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r9.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323aa4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323AA4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0x1;
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ 1;
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,24
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x823239c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823239C8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,19,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 19) & 0xFFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x82323978
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82323978;
	// beq ctx_arrow(ctx)->r6,0x82323960
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323960;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x82323950
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82323950;
	// beq ctx_arrow(ctx)->r6,0x82323940
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323940;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// blt ctx_arrow(ctx)->r6,0x82323984
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82323984;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 6, xer);
	// beq ctx_arrow(ctx)->r6,0x8232391c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232391C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 7, xer);
	// bne ctx_arrow(ctx)->r6,0x82323ab8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323AB8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8226ffa0
	sub_8226FFA0(ctx, base);
	// b 0x823239b4
	goto loc_823239B4;
loc_8232391C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 31, xer);
	// blt ctx_arrow(ctx)->r6,0x82323938
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82323938;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,81
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 81, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x823239b0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823239B0;
loc_82323938:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x823239b0
	goto loc_823239B0;
loc_82323940:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-12928
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -12928;
	// b 0x8232396c
	goto loc_8232396C;
loc_82323950:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-12800
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -12800;
	// b 0x8232396c
	goto loc_8232396C;
loc_82323960:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-12416
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -12416;
loc_8232396C:
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// b 0x823239b4
	goto loc_823239B4;
loc_82323978:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232398c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232398C;
loc_82323984:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x823239b4
	goto loc_823239B4;
loc_8232398C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 30, xer);
	// beq ctx_arrow(ctx)->r6,0x823239ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823239AC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,54
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 54, xer);
	// beq ctx_arrow(ctx)->r6,0x823239ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823239AC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,55
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 55, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x823239b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823239B0;
loc_823239AC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_823239B0:
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_823239B4:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323aa4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323AA4;
loc_823239BC:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x82323a2c
	goto loc_82323A2C;
loc_823239C8:
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823239bc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823239BC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x823239f0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823239F0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,101
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 101, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// ble ctx_arrow(ctx)->r6,0x823239f4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823239F4;
loc_823239F0:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_823239F4:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823239bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823239BC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14848
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14848, xer);
	// bne ctx_arrow(ctx)->r6,0x82323a14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323A14;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,112
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 112, xer);
	// beq ctx_arrow(ctx)->r6,0x823239bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823239BC;
loc_82323A14:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822820f0
	sub_822820F0(ctx, base);
	// b 0x82323aa4
	goto loc_82323AA4;
loc_82323A28:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_82323A2C:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323a28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323A28;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4);
	// stw ctx_arrow(ctx)->r26,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// b 0x82323a78
	goto loc_82323A78;
loc_82323A54:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8231aa38
	sub_8231AA38(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323aa4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323AA4;
loc_82323A78:
	// li ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323a98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323A98;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
	// b 0x82323aa4
	goto loc_82323AA4;
loc_82323A98:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,6,4
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFBFFFFFF;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
loc_82323AA4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323890
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323890;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// b 0x82323890
	goto loc_82323890;
loc_82323AB8:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82323AC4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323af8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323AF8;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r21.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323af8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323AF8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82270718
	sub_82270718(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323b04
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323B04;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x82321c20
	sub_82321C20(ctx, base);
loc_82323AF8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed16c
	return;
loc_82323B04:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82323b18
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323B18;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x82323b40
	goto loc_82323B40;
loc_82323B18:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 30, xer);
	// beq ctx_arrow(ctx)->r6,0x82323b38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323B38;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,54
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 54, xer);
	// beq ctx_arrow(ctx)->r6,0x82323b38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323B38;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,55
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 55, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82323b3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323B3C;
loc_82323B38:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_82323B3C:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_82323B40:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323c28
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323C28;
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323B4C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323bb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323BB8;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x82323bb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323BB0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82323b78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323B78;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x82323b7c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323B7C;
loc_82323B78:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82323B7C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323bb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323BB0;
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323B88:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323bb0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323BB0;
	// lwz ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x82323ba8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323BA8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
loc_82323BA8:
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323b88
	goto loc_82323B88;
loc_82323BB0:
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323b4c
	goto loc_82323B4C;
loc_82323BB8:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323BBC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323c28
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323C28;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x82323c20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323C20;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82323be8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323BE8;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x82323bec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323BEC;
loc_82323BE8:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82323BEC:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323c20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323C20;
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323BF8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323c20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323C20;
	// lwz ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x82323c18
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323C18;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
loc_82323C18:
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323bf8
	goto loc_82323BF8;
loc_82323C20:
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323bbc
	goto loc_82323BBC;
loc_82323C28:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8226ffa0
	sub_8226FFA0(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323ce8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323CE8;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82323ce8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323CE8;
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq 0x82323ce8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323CE8;
loc_82323C50:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323ccc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323CCC;
	// lwz ctx_arrow(ctx)->r31,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82323ccc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323CCC;
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x82323ccc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323CCC;
loc_82323C94:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x82323cb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323CB4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
loc_82323CB4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r31,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82323ccc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323CCC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82323c94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323C94;
loc_82323CCC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82323ce8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323CE8;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82323c50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323C50;
loc_82323CE8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r22.u64;
	// bl 0x82270718
	sub_82270718(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82323af8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323AF8;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r22,40
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r22.s64 + 40;
loc_82323D10:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x82323af8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82323AF8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x822c91d8
	sub_822C91D8(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// b 0x82323d10
	goto loc_82323D10;
}

alias(__imp__sub_82323D40) PPC_WEAK_FUNC(sub_82323D40);
PPC_FUNC_IMPL(__imp__sub_82323D40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed110
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r7.u64;
	// stw ctx_arrow(ctx)->r29,112(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 112);
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r29,-4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -4);
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82270688
	sub_82270688(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 | 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// li ctx_arrow(ctx)->r25,4
	ctx_arrow(ctx)->r25.s64 = 4;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_82323DA8:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r23.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323f18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323F18;
	// lwz ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323DB4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323f18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323F18;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r21.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82323e70
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323E70;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x82323e70
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323E70;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r23.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323e70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323E70;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r29.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323f10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323F10;
	// stw ctx_arrow(ctx)->r29,-4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82323e48
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323E48;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82323e48
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323E48;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82323e54
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82323E54;
loc_82323E48:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82323E54:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
	// b 0x82323f10
	goto loc_82323F10;
loc_82323E70:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323f04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323F04;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r27.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323e94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323E94;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323e94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323E94;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r25.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323f10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323F10;
loc_82323E94:
	// lwz ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// li ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = 4;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
loc_82323EA4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323fa4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323FA4;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r21.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82323f90
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323F90;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323efc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323EFC;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82323efc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323EFC;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x82323f9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82323F9C;
loc_82323EFC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82323fc4
	goto loc_82323FC4;
loc_82323F04:
	// lwz ctx_arrow(ctx)->r25,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
loc_82323F10:
	// lwz ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323db4
	goto loc_82323DB4;
loc_82323F18:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82323fb4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323FB4;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82323fb4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82323FB4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x82323da8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82323DA8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
	// b 0x82323da8
	goto loc_82323DA8;
loc_82323F90:
	// lwz ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_82323F9C:
	// lwz ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82323ea4
	goto loc_82323EA4;
loc_82323FA4:
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r20)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r20.u32 + 0);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r19)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r19.u32 + 0);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 0);
	// b 0x82323fc0
	goto loc_82323FC0;
loc_82323FB4:
	// stw ctx_arrow(ctx)->r27,0(ctx_arrow(ctx)->r20)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r20.u32 + 0);
	// stw ctx_arrow(ctx)->r25,0(ctx_arrow(ctx)->r19)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r19.u32 + 0);
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r18)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 0);
loc_82323FC0:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82323FC4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// b 0x823ed160
	return;
}

alias(__imp__sub_82323FD0) PPC_WEAK_FUNC(sub_82323FD0);
PPC_FUNC_IMPL(__imp__sub_82323FD0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// b 0x823240a0
	goto loc_823240A0;
loc_82323FF4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x82324008
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324008;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,123
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 123, xer);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8232400c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232400C;
loc_82324008:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_8232400C:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823240b0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823240B0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 112, xer);
	// beq ctx_arrow(ctx)->r6,0x823240b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823240B0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// beq ctx_arrow(ctx)->r6,0x823240b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823240B0;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x823240b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823240B0;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324054
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324054;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822a2960
	sub_822A2960(ctx, base);
	// b 0x82324080
	goto loc_82324080;
loc_82324054:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_82324058:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823240bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823240BC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	xer.ca = ctx_arrow(ctx)->r11.u32 > 35;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823240bc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823240BC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82324058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324058;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82324080:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823240c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823240C4;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
loc_823240A0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,111
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 111, xer);
	// bne ctx_arrow(ctx)->r6,0x82323ff4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82323FF4;
loc_823240B0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823240B4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
loc_823240BC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82324080
	goto loc_82324080;
loc_823240C4:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82322588
	sub_82322588(ctx, base);
	// b 0x823240b4
	goto loc_823240B4;
}

alias(__imp__sub_823240E0) PPC_WEAK_FUNC(sub_823240E0);
PPC_FUNC_IMPL(__imp__sub_823240E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// clrlwi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r28.u32 & 0xFF;
loc_82324104:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232411c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232411C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822a2960
	sub_822A2960(ctx, base);
	// b 0x82324148
	goto loc_82324148;
loc_8232411C:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_82324120:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232416c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232416C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	xer.ca = ctx_arrow(ctx)->r11.u32 > 35;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232416c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232416C;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82324120
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324120;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82324148:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324174
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324174;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	// b 0x82324104
	goto loc_82324104;
loc_8232416C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82324148
	goto loc_82324148;
loc_82324174:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x823228a8
	sub_823228A8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_82324198) PPC_WEAK_FUNC(sub_82324198);
PPC_FUNC_IMPL(__imp__sub_82324198) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// bl 0x82298570
	sub_82298570(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324228
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324228;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823241dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823241DC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x822a2960
	sub_822A2960(ctx, base);
	// b 0x82324208
	goto loc_82324208;
loc_823241DC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_823241E0:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324230
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324230;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-36
	xer.ca = ctx_arrow(ctx)->r11.u32 > 35;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -36;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324230
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324230;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823241e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823241E0;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82324208:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324228
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324228;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x823240e0
	sub_823240E0(ctx, base);
loc_82324228:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
loc_82324230:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82324208
	goto loc_82324208;
}

alias(__imp__sub_82324238) PPC_WEAK_FUNC(sub_82324238);
PPC_FUNC_IMPL(__imp__sub_82324238) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82270688
	sub_82270688(ctx, base);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r23,1
	ctx_arrow(ctx)->r23.s64 = 1;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64 | 1;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r26.s64 + 4;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 4);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// lwz ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 8);
loc_82324288:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x82324698
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324698;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823244e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823244E8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324504
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324504;
	// lwz ctx_arrow(ctx)->r9,24(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,11,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 11) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x823244e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823244E8;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r27,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,13,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324308
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324308;
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_823242D4:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r11.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324308
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324308;
	// lwz ctx_arrow(ctx)->r27,52(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,13,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x823242d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823242D4;
loc_82324308:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,13,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x823244e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823244E8;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823244e8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823244E8;
	// lwz ctx_arrow(ctx)->r28,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324340:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324ac4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324AC4;
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324350:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324374
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324374;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232436c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232436C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324350
	goto loc_82324350;
loc_8232436C:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// b 0x82324378
	goto loc_82324378;
loc_82324374:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82324378:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823244e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823244E0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,85
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 85, xer);
	// beq ctx_arrow(ctx)->r6,0x823243ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823243AC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,86
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 86, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x823243b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823243B0;
loc_823243AC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_823243B0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324b40
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324B40;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,6,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232441c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232441C;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823243f8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823243F8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823243f8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823243F8;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82324404
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324404;
loc_823243F8:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82324404:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_8232441C:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823244e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823244E0;
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq 0x823244e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823244E0;
loc_82324430:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x823244c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823244C4;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x822e1650
	sub_822E1650(ctx, base);
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823244c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823244C4;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823244a0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823244A0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823244a0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823244A0;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x823244ac
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823244AC;
loc_823244A0:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_823244AC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_823244C4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823244e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823244E0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82324430
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324430;
loc_823244E0:
	// lwz ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324340
	goto loc_82324340;
loc_823244E8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82324504
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324504;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// bne ctx_arrow(ctx)->r6,0x82324508
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324508;
loc_82324504:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82324508:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324698
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324698;
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
loc_8232451C:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324744
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324744;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// lwz ctx_arrow(ctx)->r9,40(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r23.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r9.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232455c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232455C;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232451c
	goto loc_8232451C;
loc_8232455C:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324574
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324574;
	// li ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r5.s64 = 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x822cca50
	sub_822CCA50(ctx, base);
loc_82324574:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232464c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232464C;
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// beq 0x8232464c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232464C;
loc_82324588:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324630
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324630;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324598:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324630
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324630;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x823245b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823245B8;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x823245c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823245C0;
loc_823245B8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324598
	goto loc_82324598;
loc_823245C0:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr. ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq 0x82324630
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324630;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324630
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324630;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,85
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 85, xer);
	// beq ctx_arrow(ctx)->r6,0x82324618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324618;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,86
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 86, xer);
	// beq ctx_arrow(ctx)->r6,0x82324618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324618;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,88
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 88, xer);
	// beq ctx_arrow(ctx)->r6,0x82324618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324618;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,89
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 89, xer);
	// beq ctx_arrow(ctx)->r6,0x82324618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324618;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,83
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 83, xer);
	// beq ctx_arrow(ctx)->r6,0x82324618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324618;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 84, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x8232461c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232461C;
loc_82324618:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_8232461C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324630
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324630;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82324d28
	sub_82324D28(ctx, base);
loc_82324630:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232464c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232464C;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82324588
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324588;
loc_8232464C:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324698
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324698;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324698
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324698;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82324698
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324698;
loc_8232466C:
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82324680
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324680;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,2,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFBFFFFFFF;
	// stw ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 48);
loc_82324680:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324698
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324698;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232466c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232466C;
loc_82324698:
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232469C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324964
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324964;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823246bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823246BC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// beq 0x823246c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823246C0;
loc_823246BC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_823246C0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232495c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232495C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823248f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823248F0;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823248f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823248F0;
	// lwz ctx_arrow(ctx)->r31,24(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_823246DC:
	// lwz ctx_arrow(ctx)->r31,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq 0x823246dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823246DC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10624
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 10624, xer);
	// bne ctx_arrow(ctx)->r6,0x823246dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823246DC;
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,6,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823248f0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823248F0;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 25) & 0x7F;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -12;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82324820
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324820;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// b 0x82324828
	goto loc_82324828;
loc_82324744:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823247d8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823247D8;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r31.u64;
loc_82324750:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324698
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324698;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x823247d0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823247D0;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823247ac
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823247AC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823247ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823247AC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x823247b8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823247B8;
loc_823247AC:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_823247B8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_823247D0:
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324750
	goto loc_82324750;
loc_823247D8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324698
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324698;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x822e1650
	sub_822E1650(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x82324818
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324818;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r5,52(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82322d50
	sub_82322D50(ctx, base);
loc_82324818:
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x823247d8
	goto loc_823247D8;
loc_82324820:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
loc_82324828:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82282060
	sub_82282060(ctx, base);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 | 67108864;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232486c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232486C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x8232486c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232486C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82324878
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324878;
loc_8232486C:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82324878:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823248cc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823248CC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x823248cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823248CC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x823248d8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823248D8;
loc_823248CC:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_823248D8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_823248F0:
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232495c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232495C;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324938
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324938;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82324938
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324938;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82324944
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324944;
loc_82324938:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82324944:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_8232495C:
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232469c
	goto loc_8232469C;
loc_82324964:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,21
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 21, xer);
	// blt ctx_arrow(ctx)->r6,0x82324980
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82324980;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 24, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// ble ctx_arrow(ctx)->r6,0x82324984
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324984;
loc_82324980:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82324984:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324ac4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324AC4;
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324990:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324ac4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324AC4;
	// lwz ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x82324abc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324ABC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82324a08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324A08;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,21
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 21, xer);
	// blt ctx_arrow(ctx)->r6,0x823249cc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823249CC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 24, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// ble ctx_arrow(ctx)->r6,0x823249d0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823249D0;
loc_823249CC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_823249D0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324abc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324ABC;
	// b 0x823249e4
	goto loc_823249E4;
loc_823249DC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_823249E4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// beq ctx_arrow(ctx)->r6,0x823249dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823249DC;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324abc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324ABC;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// b 0x82324a64
	goto loc_82324A64;
loc_82324A08:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324abc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324ABC;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,85
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 85, xer);
	// beq ctx_arrow(ctx)->r6,0x82324a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324A4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,86
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 86, xer);
	// beq ctx_arrow(ctx)->r6,0x82324a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324A4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,88
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 88, xer);
	// beq ctx_arrow(ctx)->r6,0x82324a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324A4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,89
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 89, xer);
	// beq ctx_arrow(ctx)->r6,0x82324a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324A4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,83
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 83, xer);
	// beq ctx_arrow(ctx)->r6,0x82324a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324A4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 84, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x82324a50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324A50;
loc_82324A4C:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_82324A50:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324abc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324ABC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,6,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324abc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324ABC;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | 67108864;
loc_82324A64:
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324a98
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324A98;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82324a98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324A98;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82324aa4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324AA4;
loc_82324A98:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82324AA4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82324ABC:
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324990
	goto loc_82324990;
loc_82324AC4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324b4c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324B4C;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82324b4c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324B4C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x82324b38
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324B38;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
loc_82324B38:
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r31.u64;
	// b 0x82324288
	goto loc_82324288;
loc_82324B40:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_82324B4C:
	// lwz ctx_arrow(ctx)->r11,936(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// stw ctx_arrow(ctx)->r26,936(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 936);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_82324B60) PPC_WEAK_FUNC(sub_82324B60);
PPC_FUNC_IMPL(__imp__sub_82324B60) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82270688
	sub_82270688(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 | 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 | 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lwz ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
loc_82324BA8:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324BAC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324bf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324BF0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324bcc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324BCC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// beq 0x82324bd0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324BD0;
loc_82324BCC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_82324BD0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324be8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324BE8;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82324238
	sub_82324238(ctx, base);
loc_82324BE8:
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324bac
	goto loc_82324BAC;
loc_82324BF0:
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324BF4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324c9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324C9C;
	// lwz ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x82324c94
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324C94;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324c20
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324C20;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// beq 0x82324c24
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324C24;
loc_82324C20:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_82324C24:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82324c94
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324C94;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324c94
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324C94;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324c70
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324C70;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82324c70
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324C70;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82324c7c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324C7C;
loc_82324C70:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82324C7C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82324C94:
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324bf4
	goto loc_82324BF4;
loc_82324C9C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324d14
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324D14;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x82324d14
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324D14;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// bne 0x82324ba8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324BA8;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0xFFFFFFFE;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x8225d2c8
	sub_8225D2C8(ctx, base);
	// b 0x82324ba8
	goto loc_82324BA8;
loc_82324D14:
	// lwz ctx_arrow(ctx)->r11,936(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// stw ctx_arrow(ctx)->r29,936(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 936);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82324D28) PPC_WEAK_FUNC(sub_82324D28);
PPC_FUNC_IMPL(__imp__sub_82324D28) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,83
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 83, xer);
	// bne ctx_arrow(ctx)->r6,0x82324d9c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324D9C;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 13) & 0x7;
	// li ctx_arrow(ctx)->r4,83
	ctx_arrow(ctx)->r4.s64 = 83;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -12;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82324d84
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324D84;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// b 0x82324d8c
	goto loc_82324D8C;
loc_82324D84:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -4;
loc_82324D8C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82282060
	sub_82282060(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x82324dc0
	goto loc_82324DC0;
loc_82324D9C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,84
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 84, xer);
	// bne ctx_arrow(ctx)->r6,0x82324dc0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324DC0;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,84
	ctx_arrow(ctx)->r4.s64 = 84;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,-16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + -16;
	// lwzx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324DC0:
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 | 67108864;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x82324ea4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324EA4;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324e00
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324E00;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82324e00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324E00;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82324e0c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324E0C;
loc_82324E00:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82324E0C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82324E24:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324e9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324E9C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82324e9c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324E9C;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 67108864;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x82324ec8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324EC8;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82324e78
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82324E78;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 3;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x82324e78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82324E78;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x82324e84
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82324E84;
loc_82324E78:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8227bc28
	sub_8227BC28(ctx, base);
loc_82324E84:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stwx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r3.u32);
loc_82324E9C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
loc_82324EA4:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324EA8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324e24
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324E24;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82324238
	sub_82324238(ctx, base);
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324ea8
	goto loc_82324EA8;
loc_82324EC8:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_82324ECC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82324e9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82324E9C;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82324238
	sub_82324238(ctx, base);
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324ecc
	goto loc_82324ECC;
}

alias(__imp__sub_82324EF0) PPC_WEAK_FUNC(sub_82324EF0);
PPC_FUNC_IMPL(__imp__sub_82324EF0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -144);
	// stwu ctx_arrow(ctx)->r1,-272(ctx_arrow(ctx)->r1)
	ea = -272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r17,0
	ctx_arrow(ctx)->r17.s64 = 0;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r4.u64;
	// stw ctx_arrow(ctx)->r17,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r7.u64;
	// stw ctx_arrow(ctx)->r22,340(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 340);
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r17,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r17.u64;
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r17.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823250d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823250D4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,54
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 54, xer);
	// beq ctx_arrow(ctx)->r6,0x82325138
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325138;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,57
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 57, xer);
	// ble ctx_arrow(ctx)->r6,0x823250d4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823250D4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,61
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 61, xer);
	// ble ctx_arrow(ctx)->r6,0x823250b0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_823250B0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,111
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 111, xer);
	// bne ctx_arrow(ctx)->r6,0x823250d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823250D4;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r21,4
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r21.s64 + 4;
loc_82324F68:
	// lwz ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq 0x823250d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823250D4;
	// lwz ctx_arrow(ctx)->r28,16(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq 0x8232509c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232509C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x8232509c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232509C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r22,30
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r22.u32 & 0x3;
	// lfd f1,0(ctx_arrow(ctx)->r23)
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
loc_82324FB0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82325064
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325064;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14208
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 14208, xer);
	// bne ctx_arrow(ctx)->r6,0x8232509c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232509C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8232509c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232509C;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232509c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232509C;
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,18,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 15872, xer);
	// bne ctx_arrow(ctx)->r6,0x8232509c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232509C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,27,30,31
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x3;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82318720
	sub_82318720(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0xFFFFF000;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232503c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232503C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r17.u64;
	// b 0x82325050
	goto loc_82325050;
loc_8232503C:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
loc_82325050:
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// fcmpu ctx_arrow(ctx)->r6,f31,f1
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f1.f64);
	// bne ctx_arrow(ctx)->r6,0x8232509c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232509C;
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82324fb0
	goto loc_82324FB0;
loc_82325064:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8231a688
	sub_8231A688(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// bl 0x8231f040
	sub_8231F040(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x82281928
	sub_82281928(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x822819e0
	sub_822819E0(ctx, base);
loc_8232509C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82324f68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82324F68;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26,8
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r26.s64 + 8;
	// b 0x82324f68
	goto loc_82324F68;
loc_823250B0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,0(ctx_arrow(ctx)->r23)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.s64 = 1;
	// lfd f0,2752(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// beq ctx_arrow(ctx)->r6,0x823250d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823250D0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
loc_823250D0:
	// clrlwi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_823250D4:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r23.u64;
loc_823250E0:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// li ctx_arrow(ctx)->r5,-1
	ctx_arrow(ctx)->r5.s64 = -1;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,340
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 340;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r6.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r5.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r4.u64;
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8232529c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232529C;
	// beq ctx_arrow(ctx)->r6,0x8232528c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232528C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bge ctx_arrow(ctx)->r6,0x823253b8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_823253B8;
	// lfd f0,0(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// b 0x82325294
	goto loc_82325294;
loc_82325138:
	// lwz ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232513C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823253cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823253CC;
	// lwz ctx_arrow(ctx)->r28,16(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq 0x82325284
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325284;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14976
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14976, xer);
	// bne ctx_arrow(ctx)->r6,0x82325284
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325284;
	// lwz ctx_arrow(ctx)->r27,40(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15744
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15744, xer);
	// bne ctx_arrow(ctx)->r6,0x82325284
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325284;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// lfd f31,0(ctx_arrow(ctx)->r23)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,-8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + -8;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13,29,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x7;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,17,18,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 17) & 0x3FFF;
	// bl 0x822701f8
	sub_822701F8(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// fctidz f0,f31
	ctx.fpscr.disableFlushMode();
	f0.s64 = (f31.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f31.f64));
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFF;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// bl 0x8231d040
	sub_8231D040(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq 0x82325284
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325284;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r28.s64 + 4;
loc_823251F4:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x82325284
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325284;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82325270
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325270;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82325224
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325224;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u64;
	// beq 0x82325228
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325228;
loc_82325224:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
loc_82325228:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82325270
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325270;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -8;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,26
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFE0) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF0000001F);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// bl 0x8231aa38
	sub_8231AA38(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325270
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325270;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_82325270:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823251f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823251F4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// b 0x823251f4
	goto loc_823251F4;
loc_82325284:
	// lwz ctx_arrow(ctx)->r26,8(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232513c
	goto loc_8232513C;
loc_8232528C:
	// lfd f0,0(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
loc_82325294:
	// stfiwx f0,0,ctx_arrow(ctx)->r7
	ctx.fpscr.disableFlushMode();
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32);
	// b 0x823252e4
	goto loc_823252E4;
loc_8232529C:
	// lfd f0,0(ctx_arrow(ctx)->r8)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFFFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x823252c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823252C4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,1,8
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x7F800000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
	// beq 0x823252c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823252C8;
loc_823252C4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_823252C8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823252e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823252E0;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lfs f0,84(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_823252E0:
	// stfs f0,0(ctx_arrow(ctx)->r7)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
loc_823252E4:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 8;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,4
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 8, xer);
	// blt ctx_arrow(ctx)->r6,0x823250e0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823250E0;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8231d358
	sub_8231D358(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stb ctx_arrow(ctx)->r17,80(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 80, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r17), 0);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r19.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,228
	ctx_arrow(ctx)->r6.s64 = 228;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82323860
	sub_82323860(ctx, base);
	// lwz ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823253c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823253C8;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r21,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r21.s64 + 4;
loc_82325348:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x823253c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823253C4;
	// lwz ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x823253a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823253A4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82325378
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325378;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x8232537c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232537C;
loc_82325378:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u64;
loc_8232537C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823253a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823253A4;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r18.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x823220c8
	sub_823220C8(ctx, base);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r30.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,0,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 0) & 0xFFFFFFFE) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000001);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
loc_823253A4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325348
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325348;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// b 0x82325348
	goto loc_82325348;
loc_823253B8:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_823253C4:
	// stw ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
loc_823253C8:
	// stw ctx_arrow(ctx)->r29,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
loc_823253CC:
	// ld ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r16.u64;
	// std ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r16)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r16.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// lfd f31,-144(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed158
	return;
}

alias(__imp__sub_823253E8) PPC_WEAK_FUNC(sub_823253E8);
PPC_FUNC_IMPL(__imp__sub_823253E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,27,24,31
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0xFF;
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
loc_82325418:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x82325574
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325574;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,103
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 103, xer);
	// beq ctx_arrow(ctx)->r6,0x823254e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823254E8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,111
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 111, xer);
	// bne ctx_arrow(ctx)->r6,0x82325560
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325560;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r3,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82323d40
	sub_82323D40(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325560
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325560;
	// lwz ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82325560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325560;
	// lwz ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325490
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325490;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325490
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325490;
loc_82325488:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x823254b8
	goto loc_823254B8;
loc_82325490:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823254a0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823254A0;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325488
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325488;
loc_823254A0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823254b4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823254B4;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne 0x823254b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823254B8;
loc_823254B4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_823254B8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325560
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325560;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// or ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r11.u64;
	// b 0x82325658
	goto loc_82325658;
loc_823254E8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82325560
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325560;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325560
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325560;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14976
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14976, xer);
	// beq ctx_arrow(ctx)->r6,0x82325560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325560;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325530
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325530;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325530
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325530;
loc_82325528:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x82325558
	goto loc_82325558;
loc_82325530:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325540
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325540;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325528
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325528;
loc_82325540:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325554
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325554;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne 0x82325558
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325558;
loc_82325554:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_82325558:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232561c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232561C;
loc_82325560:
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed174
	return;
loc_82325574:
	// lwz ctx_arrow(ctx)->r31,40(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,44(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822700e8
	sub_822700E8(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325560
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325560;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325560
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325560;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14976
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14976, xer);
	// beq ctx_arrow(ctx)->r6,0x82325560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325560;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823255c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823255C8;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823255c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823255C8;
loc_823255C0:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x823255f0
	goto loc_823255F0;
loc_823255C8:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823255d8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823255D8;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x823255c0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823255C0;
loc_823255D8:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823255ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823255EC;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne 0x823255f0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823255F0;
loc_823255EC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_823255F0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325560
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325560;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232561c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232561C;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,76(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r7.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325560
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325560;
loc_8232561C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,27,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0xFF;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29,27,29,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 27) & 0x6;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,29,29,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 29) & 0x6;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r8.u64;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29,31,29,30
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 31) & 0x6;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,1,29,30
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 1) & 0x6;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,2,28,29
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 2) & 0xC) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFFFFFFF3);
	// srw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// srw ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFF00000003);
	// rlwimi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r29.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 2) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFF00000003);
loc_82325658:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64;
	// beq 0x8232566c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232566C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232566c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232566C;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -4;
loc_8232566C:
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r30.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325680
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325680;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,-4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r30.s64 + -4;
loc_82325680:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325694
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325694;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325694
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325694;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-2
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -2;
loc_82325694:
	// or ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// b 0x82325418
	goto loc_82325418;
}

alias(__imp__sub_823256A0) PPC_WEAK_FUNC(sub_823256A0);
PPC_FUNC_IMPL(__imp__sub_823256A0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// stw ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x8232575c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232575C;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,7,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232575c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232575C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,25,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x7F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,82
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 82, xer);
	// blt ctx_arrow(ctx)->r6,0x823256f8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823256F8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,94
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 94, xer);
	// bgt ctx_arrow(ctx)->r6,0x823256f8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_823256F8;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
loc_823256F8:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232575c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232575C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 124, xer);
	// beq ctx_arrow(ctx)->r6,0x8232575c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232575C;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8231fe98
	sub_8231FE98(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x7;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325760
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325760;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82324ef0
	sub_82324EF0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// b 0x82325768
	goto loc_82325768;
loc_8232575C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
loc_82325760:
	// ld ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82325768:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82325770) PPC_WEAK_FUNC(sub_82325770);
PPC_FUNC_IMPL(__imp__sub_82325770) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stwu ctx_arrow(ctx)->r1,-352(ctx_arrow(ctx)->r1)
	ea = -352 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r4.u64;
	// stw ctx_arrow(ctx)->r3,372(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 372);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r28,388(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 388);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x7;
	// stw ctx_arrow(ctx)->r31,396(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 396);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r30,404(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 404);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r14.u64;
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x823253e8
	sub_823253E8(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 13952, xer);
	// bne ctx_arrow(ctx)->r6,0x82325cdc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325CDC;
	// li ctx_arrow(ctx)->r15,2
	ctx_arrow(ctx)->r15.s64 = 2;
	// li ctx_arrow(ctx)->r22,-1
	ctx_arrow(ctx)->r22.s64 = -1;
	// b 0x823257ec
	goto loc_823257EC;
loc_823257E0:
	// lwz ctx_arrow(ctx)->r28,388(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,396(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,404(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_823257EC:
	// lwz ctx_arrow(ctx)->r17,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r17.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r16,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r17.u32 & 0x3;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 10;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r31,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
	// lwz ctx_arrow(ctx)->r23,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r23.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,228
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r11.u64 | 228;
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82325b88
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82325B88;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r15.u64;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r1.s64 + 136;
loc_82325854:
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r25, 0, BINARY_OP_U8(ctx_arrow(ctx)->r25, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r17.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r25) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 10;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231f0e8
	sub_8231F0E8(ctx, base);
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// lwz ctx_arrow(ctx)->r21,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r21.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r24,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r19,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r19.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r24.u32, xer);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r25, 0, BINARY_OP_U8(ctx_arrow(ctx)->r25, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r25) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r25, 0, BINARY_OP_U8(ctx_arrow(ctx)->r25, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r21.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r25) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r20.u64 & ~ctx_arrow(ctx)->r11.u64;
	// or ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// beq ctx_arrow(ctx)->r6,0x823259e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823259E8;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 15872, xer);
	// beq ctx_arrow(ctx)->r6,0x823259e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823259E0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8231fe98
	sub_8231FE98(ctx, base);
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r30.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x823259bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823259BC;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 160;
loc_823258F0:
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r30, 0, BINARY_OP_U8(ctx_arrow(ctx)->r30, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r20.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r30) & 0x3F)), 0));
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r26.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x82325cdc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325CDC;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,29,3,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 29) & 0x1FFFFFFC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// lfdx f1,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r15.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r22.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r8.u64;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfd f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,29,3,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,29,3,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 8;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r27.u32, xer);
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r15.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r22.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r5.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r4.u64;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r9.u32);
	// blt ctx_arrow(ctx)->r6,0x823258f0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_823258F0;
	// lwz ctx_arrow(ctx)->r28,388(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_823259BC:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwz ctx_arrow(ctx)->r6,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r3,372(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231d570
	sub_8231D570(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r20,228
	ctx_arrow(ctx)->r20.s64 = 228;
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
loc_823259E0:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r24.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823259f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823259F0;
loc_823259E8:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, ctx_arrow(ctx)->r19.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x82325b70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325B70;
loc_823259F0:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8231fe98
	sub_8231FE98(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r21, 0, BINARY_OP_U8(ctx_arrow(ctx)->r21, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r21) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 & ctx_arrow(ctx)->r11.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325cdc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325CDC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x82325aac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325AAC;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29,0,0,19
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0xFFFFF000;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r27.u64;
loc_82325A30:
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r31, 0, BINARY_OP_U8(ctx_arrow(ctx)->r31, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r20.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r31) & 0x3F)), 0));
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82318720
	sub_82318720(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stfd f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325a6c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325A6C;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// b 0x82325a80
	goto loc_82325A80;
loc_82325A6C:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0xFF;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
loc_82325A80:
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r31.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addic. ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,-1
	xer.ca = ctx_arrow(ctx)->r26.u32 > 0;
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 2;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bne 0x82325a30
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325A30;
loc_82325AAC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r21.u32 | (ctx_arrow(ctx)->r21.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r21,1,0,30
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r21.u32 | (ctx_arrow(ctx)->r21.u64 << 32), 1) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,29,3,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 29) & 0x1FFFFFFC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r19.u64;
	// lfdx f1,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1F;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r15.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r22.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r8.u64;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
	// srw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// bl 0x823184f8
	sub_823184F8(ctx, base);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// lwz ctx_arrow(ctx)->r3,372(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0x1F;
	// stfd f1,0(ctx_arrow(ctx)->r18)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r18.u32 + 0);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,29,3,29
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r25.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,29,3,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// lwzx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r6, 0, BINARY_OP_U8(ctx_arrow(ctx)->r6, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r15.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r6) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r22.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r31.u64;
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r6.u64;
	// srw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r30.u64;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r9.u32);
	// lwz ctx_arrow(ctx)->r6,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8231d570
	sub_8231D570(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r28,388(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,108(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r20,228
	ctx_arrow(ctx)->r20.s64 = 228;
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
loc_82325B70:
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r18,8
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r18.s64 + 8;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,2
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x82325854
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82325854;
loc_82325B88:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325ba0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325BA0;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,27,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325ba0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325BA0;
loc_82325B98:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x82325bc8
	goto loc_82325BC8;
loc_82325BA0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325bb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325BB0;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325b98
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325B98;
loc_82325BB0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325bc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325BC4;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// bne 0x82325bc8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325BC8;
loc_82325BC4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_82325BC8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325cdc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325CDC;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r23,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
	// beq 0x82325bec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325BEC;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82325bec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325BEC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r23.s64 + -4;
loc_82325BEC:
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r31.u64;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82325c00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325C00;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + -4;
loc_82325C00:
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82325c14
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325C14;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x82325c14
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325C14;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -2;
loc_82325C14:
	// or ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r11,396(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// stw ctx_arrow(ctx)->r20,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,404(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82325c74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325C74;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x82325c4c
	goto loc_82325C4C;
loc_82325C48:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_82325C4C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r14.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325c48
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325C48;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,26
	ctx_arrow(ctx)->r6.s64 = 26;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// lwz ctx_arrow(ctx)->r3,372(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r14.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// bl 0x82270940
	sub_82270940(&ctx);
loc_82325C74:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r3,372(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82281810
	sub_82281810(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,25,4,6
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 25) & 0xE000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFF1FFFFFF);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82281410
	sub_82281410(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// lwz ctx_arrow(ctx)->r30,388(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,5,19,26
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r20.u32, 5) & 0x1FE0) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFE01F);
	// lwz ctx_arrow(ctx)->r6,404(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,396(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x823253e8
	sub_823253E8(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,18,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13952
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 13952, xer);
	// beq ctx_arrow(ctx)->r6,0x823257e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823257E0;
loc_82325CDC:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82325d20
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325D20;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r14)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x82325cf8
	goto loc_82325CF8;
loc_82325CF4:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_82325CF8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r14.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325cf4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325CF4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,26
	ctx_arrow(ctx)->r6.s64 = 26;
	// li ctx_arrow(ctx)->r5,20
	ctx_arrow(ctx)->r5.s64 = 20;
	// lwz ctx_arrow(ctx)->r3,372(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r14.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// bl 0x82270940
	sub_82270940(&ctx);
loc_82325D20:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// b 0x823ed150
	return;
}

alias(__imp__sub_82325D28) PPC_WEAK_FUNC(sub_82325D28);
PPC_FUNC_IMPL(__imp__sub_82325D28) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
loc_82325D2C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82325d78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82325D78;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x82325d4c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325D4C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,4,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq 0x82325d50
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325D50;
loc_82325D4C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82325D50:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x82325d64
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82325D64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,7,18
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1FFE000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x82325d68
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325D68;
loc_82325D64:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82325D68:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bnelr 
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) return;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82325d2c
	goto loc_82325D2C;
loc_82325D78:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,7,5
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFDFFFFFF;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_82325D88) PPC_WEAK_FUNC(sub_82325D88);
PPC_FUNC_IMPL(__imp__sub_82325D88) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// b 0x82325d9c
	goto loc_82325D9C;
loc_82325D94:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_82325D9C:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325d94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325D94;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 8);
	// stw ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 12);
	// blr 
	return;
}

alias(__imp__sub_82325DC8) PPC_WEAK_FUNC(sub_82325DC8);
PPC_FUNC_IMPL(__imp__sub_82325DC8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// b 0x82325ddc
	goto loc_82325DDC;
loc_82325DD4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
loc_82325DDC:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325dd4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325DD4;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// stw ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// blr 
	return;
}

alias(__imp__sub_82325E08) PPC_WEAK_FUNC(sub_82325E08);
PPC_FUNC_IMPL(__imp__sub_82325E08) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// b 0x82325e14
	goto loc_82325E14;
loc_82325E10:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_82325E14:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325e10
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325E10;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 8;
	// b 0x82325e3c
	goto loc_82325E3C;
loc_82325E34:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 12;
loc_82325E3C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82325e34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325E34;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82325E58) PPC_WEAK_FUNC(sub_82325E58);
PPC_FUNC_IMPL(__imp__sub_82325E58) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// stb ctx_arrow(ctx)->r11,25(ctx_arrow(ctx)->r3)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r3.u32 + 25, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bnelr 
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) return;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_82325E84:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,48(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,13,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 13) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x82325ea4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325EA4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82325e84
	goto loc_82325E84;
loc_82325EA4:
	// lwz ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// stw ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r9,20(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 20);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// b 0x82325ef0
	goto loc_82325EF0;
loc_82325EC8:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,10,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 10) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x82325ee4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325EE4;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x82325ef8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325EF8;
loc_82325EE4:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
loc_82325EF0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82325ec8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82325EC8;
loc_82325EF8:
	// lbz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stb ctx_arrow(ctx)->r11,25(ctx_arrow(ctx)->r3)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r3.u32 + 25, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// blr 
	return;
}

alias(__imp__sub_82325F08) PPC_WEAK_FUNC(sub_82325F08);
PPC_FUNC_IMPL(__imp__sub_82325F08) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r5,24
	ctx_arrow(ctx)->r5.s64 = 24;
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82325F78) PPC_WEAK_FUNC(sub_82325F78);
PPC_FUNC_IMPL(__imp__sub_82325F78) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r5,24
	ctx_arrow(ctx)->r5.s64 = 24;
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// bl 0x822776c0
	sub_822776C0(ctx, base);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_82325FE8) PPC_WEAK_FUNC(sub_82325FE8);
PPC_FUNC_IMPL(__imp__sub_82325FE8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_82325FEC:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r11.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bnelr 
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) return;
	// lwz ctx_arrow(ctx)->r3,52(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x82325fec
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82325FEC;
	// blr 
	return;
}

alias(__imp__sub_82326028) PPC_WEAK_FUNC(sub_82326028);
PPC_FUNC_IMPL(__imp__sub_82326028) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,23
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r26.s64 + 23;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r6.u64;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82326074
	goto loc_82326074;
loc_82326058:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823260ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823260AC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82281b28
	sub_82281B28(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// beq 0x823260b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823260B8;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_82326074:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r27.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x82326058
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326058;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82281b28
	sub_82281B28(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326104
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326104;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823260f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823260F0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x823260c8
	goto loc_823260C8;
loc_823260AC:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_823260B8:
	// li ctx_arrow(ctx)->r4,4800
	ctx_arrow(ctx)->r4.s64 = 4800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8225d328
	sub_8225D328(ctx, base);
loc_823260C4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_823260C8:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x823260c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823260C4;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4);
	// stw ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// b 0x8232611c
	goto loc_8232611C;
loc_823260F0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822820f0
	sub_822820F0(ctx, base);
	// b 0x8232611c
	goto loc_8232611C;
loc_82326104:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326114
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326114;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x82326118
	goto loc_82326118;
loc_82326114:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_82326118:
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + ctx_arrow(ctx)->r30.u32);
loc_8232611C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326134
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326134;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x822820f0
	sub_822820F0(ctx, base);
loc_82326134:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82325d28
	sub_82325D28(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_82326148) PPC_WEAK_FUNC(sub_82326148);
PPC_FUNC_IMPL(__imp__sub_82326148) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,13
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7FFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 31;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
loc_82326168:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 2;
	// li ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = -1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,12,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFE;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x1F;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64 & ctx_arrow(ctx)->r11.u64;
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r8.u64;
	// srw. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x823261c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823261C4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x823261c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823261C4;
	// lwz ctx_arrow(ctx)->r4,64(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// bne 0x82326168
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82326168;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
loc_823261C4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_823261D0) PPC_WEAK_FUNC(sub_823261D0);
PPC_FUNC_IMPL(__imp__sub_823261D0) {
	PPC_FUNC_PROLOGUE();
	// b 0x823edf70
	sub_823EDF70(ctx, base);
	return;
}

alias(__imp__sub_823261D8) PPC_WEAK_FUNC(sub_823261D8);
PPC_FUNC_IMPL(__imp__sub_823261D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stfd f30,-72(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -72);
	// stfd f31,-64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r4.u64;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x82326208
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82326208;
	// li ctx_arrow(ctx)->r27,43
	ctx_arrow(ctx)->r27.s64 = 43;
	// b 0x82326210
	goto loc_82326210;
loc_82326208:
	// li ctx_arrow(ctx)->r27,45
	ctx_arrow(ctx)->r27.s64 = 45;
	// fneg f1,f1
	ctx.fpscr.disableFlushMode();
	ctx.f1.u64 = ctx.f1.u64 ^ 0x8000000000000000;
loc_82326210:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctiwz f0,f1
	ctx.fpscr.disableFlushMode();
	f0.s64 = (ctx.f1.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f1.f64));
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s32;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,5300
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 5300;
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fsubs f31,f1,f0
	f31.f64 = double(float(ctx.f1.f64 - f0.f64));
	// fctiwz f0,f31
	f0.s64 = (f31.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f31.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f30,2952(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
loc_8232625C:
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s32;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r11.u64;
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fsubs f0,f31,f0
	f0.f64 = double(float(f31.f64 - f0.f64));
	// fmuls f31,f0,f30
	f31.f64 = double(float(f0.f64 * f30.f64));
	// fctiwz f0,f31
	f0.s64 = (f31.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f31.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// lwz ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee998
	sub_823EE998(ctx, base);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 9, xer);
	// blt ctx_arrow(ctx)->r6,0x8232625c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232625C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19296
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19296;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// extsb ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r27.s8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// stb ctx_arrow(ctx)->r11,105(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 105, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x823ee998
	sub_823EE998(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lfd f30,-72(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-64(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed180
	return;
}

alias(__imp__sub_823262E0) PPC_WEAK_FUNC(sub_823262E0);
PPC_FUNC_IMPL(__imp__sub_823262E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82326324
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326324;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,733
	ctx_arrow(ctx)->r7.s64 = 733;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82326324:
	// li ctx_arrow(ctx)->r4,127
	ctx_arrow(ctx)->r4.s64 = 127;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82326394
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326394;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326354
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326354;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326354:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232638c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232638C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232638c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232638C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r6.s64 = 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232638C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823263ec
	goto loc_823263EC;
loc_82326394:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823263b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823263B0;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823263B0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823263e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823263E8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823263e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823263E8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r6.s64 = 4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823263E8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823263EC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823263F8) PPC_WEAK_FUNC(sub_823263F8);
PPC_FUNC_IMPL(__imp__sub_823263F8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232643c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232643C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,817
	ctx_arrow(ctx)->r7.s64 = 817;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232643C:
	// li ctx_arrow(ctx)->r4,163
	ctx_arrow(ctx)->r4.s64 = 163;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,165
	ctx_arrow(ctx)->r4.s64 = 165;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823264c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823264C4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823264c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823264C4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326484
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326484;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,5
	ctx_arrow(ctx)->r4.s64 = 5;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326484:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823264bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823264BC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823264bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823264BC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,7
	ctx_arrow(ctx)->r6.s64 = 7;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823264BC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232651c
	goto loc_8232651C;
loc_823264C4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823264e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823264E0;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,5
	ctx_arrow(ctx)->r4.s64 = 5;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823264E0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326518
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326518;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326518
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326518;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,7
	ctx_arrow(ctx)->r6.s64 = 7;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326518:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232651C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82326528) PPC_WEAK_FUNC(sub_82326528);
PPC_FUNC_IMPL(__imp__sub_82326528) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326560;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,6
	ctx_arrow(ctx)->r4.s64 = 6;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326560:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326598
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326598;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326598
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326598;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,8
	ctx_arrow(ctx)->r6.s64 = 8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326598:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_823265B8) PPC_WEAK_FUNC(sub_823265B8);
PPC_FUNC_IMPL(__imp__sub_823265B8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823265ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823265EC;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,7
	ctx_arrow(ctx)->r4.s64 = 7;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823265EC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326628
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326628;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326628
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326628;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,10
	ctx_arrow(ctx)->r6.s64 = 10;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326628:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_82326638) PPC_WEAK_FUNC(sub_82326638);
PPC_FUNC_IMPL(__imp__sub_82326638) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232667c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232667C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,988
	ctx_arrow(ctx)->r7.s64 = 988;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232667C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326698
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326698;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,38
	ctx_arrow(ctx)->r4.s64 = 38;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326698:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823266d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823266D4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823266d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823266D4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,63
	ctx_arrow(ctx)->r6.s64 = 63;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,252(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823266D4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823266E0) PPC_WEAK_FUNC(sub_823266E0);
PPC_FUNC_IMPL(__imp__sub_823266E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,27
	ctx_arrow(ctx)->r4.s64 = 27;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82326770
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326770;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232672c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232672C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232672C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326768
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326768;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326768
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326768;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,14
	ctx_arrow(ctx)->r6.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326768:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823267cc
	goto loc_823267CC;
loc_82326770:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232678c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232678C;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232678C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823267c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823267C8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823267c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823267C8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,14
	ctx_arrow(ctx)->r6.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823267C8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823267CC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823267D8) PPC_WEAK_FUNC(sub_823267D8);
PPC_FUNC_IMPL(__imp__sub_823267D8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232681c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232681C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1097
	ctx_arrow(ctx)->r7.s64 = 1097;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232681C:
	// li ctx_arrow(ctx)->r4,163
	ctx_arrow(ctx)->r4.s64 = 163;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,165
	ctx_arrow(ctx)->r4.s64 = 165;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823268a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823268A4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823268a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823268A4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326864
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326864;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,9
	ctx_arrow(ctx)->r4.s64 = 9;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326864:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232689c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232689C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232689c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232689C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,15
	ctx_arrow(ctx)->r6.s64 = 15;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,60(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232689C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823268fc
	goto loc_823268FC;
loc_823268A4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823268c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823268C0;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,9
	ctx_arrow(ctx)->r4.s64 = 9;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823268C0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823268f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823268F8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823268f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823268F8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,15
	ctx_arrow(ctx)->r6.s64 = 15;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,60(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823268F8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823268FC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82326908) PPC_WEAK_FUNC(sub_82326908);
PPC_FUNC_IMPL(__imp__sub_82326908) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232694c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232694C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1154
	ctx_arrow(ctx)->r7.s64 = 1154;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232694C:
	// li ctx_arrow(ctx)->r4,934
	ctx_arrow(ctx)->r4.s64 = 934;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq 0x823269bc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_823269BC;
	// beq ctx_arrow(ctx)->r6,0x8232697c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232697C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,10
	ctx_arrow(ctx)->r4.s64 = 10;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232697C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823269b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823269B4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823269b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823269B4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r6.s64 = 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,64(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823269B4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82326a10
	goto loc_82326A10;
loc_823269BC:
	// beq ctx_arrow(ctx)->r6,0x823269d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823269D4;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,10
	ctx_arrow(ctx)->r4.s64 = 10;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823269D4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326a0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326A0C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326a0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326A0C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r6.s64 = 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,64(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326A0C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82326A10:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82326A18) PPC_WEAK_FUNC(sub_82326A18);
PPC_FUNC_IMPL(__imp__sub_82326A18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82326a5c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326A5C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1208
	ctx_arrow(ctx)->r7.s64 = 1208;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82326A5C:
	// li ctx_arrow(ctx)->r4,935
	ctx_arrow(ctx)->r4.s64 = 935;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq 0x82326acc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_82326ACC;
	// beq ctx_arrow(ctx)->r6,0x82326a8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326A8C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,11
	ctx_arrow(ctx)->r4.s64 = 11;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326A8C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326ac4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326AC4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326ac4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326AC4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,17
	ctx_arrow(ctx)->r6.s64 = 17;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,68(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326AC4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82326b20
	goto loc_82326B20;
loc_82326ACC:
	// beq ctx_arrow(ctx)->r6,0x82326ae4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326AE4;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,11
	ctx_arrow(ctx)->r4.s64 = 11;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326AE4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326b1c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326B1C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326b1c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326B1C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,17
	ctx_arrow(ctx)->r6.s64 = 17;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,68(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326B1C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82326B20:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82326B28) PPC_WEAK_FUNC(sub_82326B28);
PPC_FUNC_IMPL(__imp__sub_82326B28) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82326b6c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326B6C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1262
	ctx_arrow(ctx)->r7.s64 = 1262;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82326B6C:
	// li ctx_arrow(ctx)->r4,170
	ctx_arrow(ctx)->r4.s64 = 170;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82326bdc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326BDC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326b9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326B9C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326B9C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326bd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326BD4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326bd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326BD4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,18
	ctx_arrow(ctx)->r6.s64 = 18;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,72(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326BD4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82326c34
	goto loc_82326C34;
loc_82326BDC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326bf8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326BF8;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326BF8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326c30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326C30;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326c30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326C30;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,18
	ctx_arrow(ctx)->r6.s64 = 18;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,72(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326C30:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82326C34:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82326C40) PPC_WEAK_FUNC(sub_82326C40);
PPC_FUNC_IMPL(__imp__sub_82326C40) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82326c84
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326C84;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1316
	ctx_arrow(ctx)->r7.s64 = 1316;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82326C84:
	// li ctx_arrow(ctx)->r4,170
	ctx_arrow(ctx)->r4.s64 = 170;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne 0x82326cf4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82326CF4;
	// beq ctx_arrow(ctx)->r6,0x82326cb4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326CB4;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,13
	ctx_arrow(ctx)->r4.s64 = 13;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326CB4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326cec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326CEC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326cec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326CEC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,19
	ctx_arrow(ctx)->r6.s64 = 19;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326CEC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82326d48
	goto loc_82326D48;
loc_82326CF4:
	// beq ctx_arrow(ctx)->r6,0x82326d0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326D0C;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,13
	ctx_arrow(ctx)->r4.s64 = 13;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326D0C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326d44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326D44;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326d44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326D44;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,19
	ctx_arrow(ctx)->r6.s64 = 19;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,76(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326D44:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82326D48:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82326D50) PPC_WEAK_FUNC(sub_82326D50);
PPC_FUNC_IMPL(__imp__sub_82326D50) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82326d94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326D94;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1367
	ctx_arrow(ctx)->r7.s64 = 1367;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82326D94:
	// li ctx_arrow(ctx)->r4,170
	ctx_arrow(ctx)->r4.s64 = 170;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82326e04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326E04;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326dc4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326DC4;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r4.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326DC4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326DFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326dfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326DFC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326DFC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82326e5c
	goto loc_82326E5C;
loc_82326E04:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326e20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326E20;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r4.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326E20:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326e58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326E58;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326e58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326E58;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.s64 = 20;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326E58:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82326E5C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82326E68) PPC_WEAK_FUNC(sub_82326E68);
PPC_FUNC_IMPL(__imp__sub_82326E68) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82326eac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326EAC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1421
	ctx_arrow(ctx)->r7.s64 = 1421;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82326EAC:
	// li ctx_arrow(ctx)->r4,171
	ctx_arrow(ctx)->r4.s64 = 171;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82326f1c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326F1C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326edc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326EDC;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,40
	ctx_arrow(ctx)->r4.s64 = 40;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326EDC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326f14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326F14;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326f14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326F14;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,92
	ctx_arrow(ctx)->r6.s64 = 92;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,368(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326F14:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82326f74
	goto loc_82326F74;
loc_82326F1C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326f38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326F38;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,40
	ctx_arrow(ctx)->r4.s64 = 40;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326F38:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326f70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326F70;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326f70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326F70;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,92
	ctx_arrow(ctx)->r6.s64 = 92;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,368(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82326F70:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82326F74:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82326F80) PPC_WEAK_FUNC(sub_82326F80);
PPC_FUNC_IMPL(__imp__sub_82326F80) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82326fc4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82326FC4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1471
	ctx_arrow(ctx)->r7.s64 = 1471;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82326FC4:
	// li ctx_arrow(ctx)->r4,165
	ctx_arrow(ctx)->r4.s64 = 165;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82327034
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327034;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82326ff4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82326FF4;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82326FF4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232702c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232702C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232702c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232702C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,21
	ctx_arrow(ctx)->r6.s64 = 21;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232702C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232708c
	goto loc_8232708C;
loc_82327034:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327050
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327050;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327050:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327088
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327088;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327088
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327088;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,21
	ctx_arrow(ctx)->r6.s64 = 21;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327088:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232708C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82327098) PPC_WEAK_FUNC(sub_82327098);
PPC_FUNC_IMPL(__imp__sub_82327098) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823270dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823270DC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1521
	ctx_arrow(ctx)->r7.s64 = 1521;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823270DC:
	// li ctx_arrow(ctx)->r4,165
	ctx_arrow(ctx)->r4.s64 = 165;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232714c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232714C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232710c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232710C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232710C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327144
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327144;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327144
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327144;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,22
	ctx_arrow(ctx)->r6.s64 = 22;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327144:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823271a4
	goto loc_823271A4;
loc_8232714C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327168
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327168;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327168:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823271a0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823271A0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823271a0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823271A0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,22
	ctx_arrow(ctx)->r6.s64 = 22;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823271A0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823271A4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823271B0) PPC_WEAK_FUNC(sub_823271B0);
PPC_FUNC_IMPL(__imp__sub_823271B0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823271f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823271F4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1571
	ctx_arrow(ctx)->r7.s64 = 1571;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823271F4:
	// li ctx_arrow(ctx)->r4,165
	ctx_arrow(ctx)->r4.s64 = 165;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82327264
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327264;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327224
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327224;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,17
	ctx_arrow(ctx)->r4.s64 = 17;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327224:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232725c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232725C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232725c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232725C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,23
	ctx_arrow(ctx)->r6.s64 = 23;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,92(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232725C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823272bc
	goto loc_823272BC;
loc_82327264:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327280
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327280;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,17
	ctx_arrow(ctx)->r4.s64 = 17;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327280:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823272b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823272B8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823272b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823272B8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,23
	ctx_arrow(ctx)->r6.s64 = 23;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,92(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823272B8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823272BC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823272C8) PPC_WEAK_FUNC(sub_823272C8);
PPC_FUNC_IMPL(__imp__sub_823272C8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232730c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232730C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1622
	ctx_arrow(ctx)->r7.s64 = 1622;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232730C:
	// li ctx_arrow(ctx)->r4,615
	ctx_arrow(ctx)->r4.s64 = 615;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232737c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232737C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232733c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232733C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,18
	ctx_arrow(ctx)->r4.s64 = 18;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232733C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327374
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327374;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327374
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327374;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,32
	ctx_arrow(ctx)->r6.s64 = 32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,128(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327374:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823273d4
	goto loc_823273D4;
loc_8232737C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327398
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327398;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,18
	ctx_arrow(ctx)->r4.s64 = 18;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327398:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823273d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823273D0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823273d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823273D0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,32
	ctx_arrow(ctx)->r6.s64 = 32;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,128(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823273D0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823273D4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823273E0) PPC_WEAK_FUNC(sub_823273E0);
PPC_FUNC_IMPL(__imp__sub_823273E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327428
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327428;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1676
	ctx_arrow(ctx)->r7.s64 = 1676;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327428:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r4.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x823274a0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823274A0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232745c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232745C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,19
	ctx_arrow(ctx)->r4.s64 = 19;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232745C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327498
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327498;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327498
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327498;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,33
	ctx_arrow(ctx)->r6.s64 = 33;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,132(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327498:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823274fc
	goto loc_823274FC;
loc_823274A0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823274bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823274BC;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,19
	ctx_arrow(ctx)->r4.s64 = 19;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823274BC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823274f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823274F8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823274f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823274F8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,33
	ctx_arrow(ctx)->r6.s64 = 33;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,132(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823274F8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823274FC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82327508) PPC_WEAK_FUNC(sub_82327508);
PPC_FUNC_IMPL(__imp__sub_82327508) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327550
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327550;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1726
	ctx_arrow(ctx)->r7.s64 = 1726;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327550:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r4.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x823275c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823275C8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327584
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327584;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327584:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823275c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823275C0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823275c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823275C0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,34
	ctx_arrow(ctx)->r6.s64 = 34;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,136(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823275C0:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82327624
	goto loc_82327624;
loc_823275C8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823275e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823275E4;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823275E4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327620
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327620;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327620
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327620;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,34
	ctx_arrow(ctx)->r6.s64 = 34;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,136(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327620:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82327624:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82327630) PPC_WEAK_FUNC(sub_82327630);
PPC_FUNC_IMPL(__imp__sub_82327630) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327678
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327678;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1777
	ctx_arrow(ctx)->r7.s64 = 1777;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327678:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r4.s64 = 14;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x823276f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823276F0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823276ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823276AC;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,21
	ctx_arrow(ctx)->r4.s64 = 21;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823276AC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823276e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823276E8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823276e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823276E8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,35
	ctx_arrow(ctx)->r6.s64 = 35;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,140(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823276E8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232774c
	goto loc_8232774C;
loc_823276F0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232770c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232770C;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,21
	ctx_arrow(ctx)->r4.s64 = 21;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232770C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327748
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327748;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327748
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327748;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,35
	ctx_arrow(ctx)->r6.s64 = 35;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,140(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327748:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232774C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82327758) PPC_WEAK_FUNC(sub_82327758);
PPC_FUNC_IMPL(__imp__sub_82327758) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232779c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232779C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1828
	ctx_arrow(ctx)->r7.s64 = 1828;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232779C:
	// li ctx_arrow(ctx)->r4,582
	ctx_arrow(ctx)->r4.s64 = 582;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232780c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232780C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823277cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823277CC;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823277CC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327804
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327804;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327804
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327804;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,38
	ctx_arrow(ctx)->r6.s64 = 38;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,152(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327804:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82327864
	goto loc_82327864;
loc_8232780C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327828
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327828;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327828:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327860
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327860;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327860
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327860;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,38
	ctx_arrow(ctx)->r6.s64 = 38;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,152(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327860:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82327864:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82327870) PPC_WEAK_FUNC(sub_82327870);
PPC_FUNC_IMPL(__imp__sub_82327870) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823278b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823278B4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1877
	ctx_arrow(ctx)->r7.s64 = 1877;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823278B4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823278d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823278D0;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,24
	ctx_arrow(ctx)->r4.s64 = 24;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823278D0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232790c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232790C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232790c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232790C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,39
	ctx_arrow(ctx)->r6.s64 = 39;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,156(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232790C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82327918) PPC_WEAK_FUNC(sub_82327918);
PPC_FUNC_IMPL(__imp__sub_82327918) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327960
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327960;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1932
	ctx_arrow(ctx)->r7.s64 = 1932;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327960:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x823279f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823279F4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x823279f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823279F4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823279b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823279B0;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,25
	ctx_arrow(ctx)->r4.s64 = 25;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823279B0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823279ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823279EC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823279ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823279EC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,44
	ctx_arrow(ctx)->r6.s64 = 44;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,176(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823279EC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82327a50
	goto loc_82327A50;
loc_823279F4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327a10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327A10;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,25
	ctx_arrow(ctx)->r4.s64 = 25;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327A10:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327A4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327A4C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,44
	ctx_arrow(ctx)->r6.s64 = 44;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,176(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327A4C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82327A50:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_82327A58) PPC_WEAK_FUNC(sub_82327A58);
PPC_FUNC_IMPL(__imp__sub_82327A58) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327aa0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327AA0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1991
	ctx_arrow(ctx)->r7.s64 = 1991;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327AA0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,21
	ctx_arrow(ctx)->r4.s64 = 21;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x82327b34
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82327B34;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82327b34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327B34;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327af0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327AF0;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,26
	ctx_arrow(ctx)->r4.s64 = 26;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327AF0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327b2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327B2C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327b2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327B2C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,45
	ctx_arrow(ctx)->r6.s64 = 45;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,180(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327B2C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82327b90
	goto loc_82327B90;
loc_82327B34:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327b50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327B50;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,26
	ctx_arrow(ctx)->r4.s64 = 26;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327B50:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327b8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327B8C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327b8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327B8C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,45
	ctx_arrow(ctx)->r6.s64 = 45;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,180(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327B8C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82327B90:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_82327B98) PPC_WEAK_FUNC(sub_82327B98);
PPC_FUNC_IMPL(__imp__sub_82327B98) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327be0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327BE0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2047
	ctx_arrow(ctx)->r7.s64 = 2047;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327BE0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// bne 0x82327c58
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82327C58;
	// beq ctx_arrow(ctx)->r6,0x82327c14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327C14;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,27
	ctx_arrow(ctx)->r4.s64 = 27;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327C14:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327c50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327C50;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327c50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327C50;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,46
	ctx_arrow(ctx)->r6.s64 = 46;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,184(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327C50:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82327cb0
	goto loc_82327CB0;
loc_82327C58:
	// beq ctx_arrow(ctx)->r6,0x82327c70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327C70;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,27
	ctx_arrow(ctx)->r4.s64 = 27;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327C70:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327cac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327CAC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327cac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327CAC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,46
	ctx_arrow(ctx)->r6.s64 = 46;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,184(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327CAC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82327CB0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82327CB8) PPC_WEAK_FUNC(sub_82327CB8);
PPC_FUNC_IMPL(__imp__sub_82327CB8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327d00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327D00;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2102
	ctx_arrow(ctx)->r7.s64 = 2102;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327D00:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82327d78
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327D78;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327d34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327D34;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,28
	ctx_arrow(ctx)->r4.s64 = 28;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327D34:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327d70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327D70;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327d70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327D70;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,47
	ctx_arrow(ctx)->r6.s64 = 47;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,188(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327D70:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82327dd4
	goto loc_82327DD4;
loc_82327D78:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327d94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327D94;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,28
	ctx_arrow(ctx)->r4.s64 = 28;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327D94:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327dd0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327DD0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327dd0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327DD0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,47
	ctx_arrow(ctx)->r6.s64 = 47;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,188(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327DD0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82327DD4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82327DE0) PPC_WEAK_FUNC(sub_82327DE0);
PPC_FUNC_IMPL(__imp__sub_82327DE0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327e28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327E28;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2155
	ctx_arrow(ctx)->r7.s64 = 2155;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327E28:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,22
	ctx_arrow(ctx)->r4.s64 = 22;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82327ea0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327EA0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327e5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327E5C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,29
	ctx_arrow(ctx)->r4.s64 = 29;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327E5C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327e98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327E98;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327e98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327E98;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,48
	ctx_arrow(ctx)->r6.s64 = 48;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,192(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327E98:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82327efc
	goto loc_82327EFC;
loc_82327EA0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327ebc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327EBC;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,29
	ctx_arrow(ctx)->r4.s64 = 29;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327EBC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327ef8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327EF8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327ef8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327EF8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,48
	ctx_arrow(ctx)->r6.s64 = 48;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,192(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327EF8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82327EFC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82327F08) PPC_WEAK_FUNC(sub_82327F08);
PPC_FUNC_IMPL(__imp__sub_82327F08) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82327f50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327F50;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2208
	ctx_arrow(ctx)->r7.s64 = 2208;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82327F50:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,22
	ctx_arrow(ctx)->r4.s64 = 22;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82327fc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82327FC8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327f84
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327F84;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327F84:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327fc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327FC0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327fc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327FC0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,49
	ctx_arrow(ctx)->r6.s64 = 49;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,196(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82327FC0:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82328024
	goto loc_82328024;
loc_82327FC8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82327fe4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82327FE4;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82327FE4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328020
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328020;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328020
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328020;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,49
	ctx_arrow(ctx)->r6.s64 = 49;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,196(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328020:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82328024:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82328030) PPC_WEAK_FUNC(sub_82328030);
PPC_FUNC_IMPL(__imp__sub_82328030) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82328078
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328078;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2261
	ctx_arrow(ctx)->r7.s64 = 2261;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328078:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,22
	ctx_arrow(ctx)->r4.s64 = 22;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// bne 0x823280f0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_823280F0;
	// beq ctx_arrow(ctx)->r6,0x823280ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823280AC;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823280AC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823280e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823280E8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823280e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823280E8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,49
	ctx_arrow(ctx)->r6.s64 = 49;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,196(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823280E8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82328148
	goto loc_82328148;
loc_823280F0:
	// beq ctx_arrow(ctx)->r6,0x82328108
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328108;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,30
	ctx_arrow(ctx)->r4.s64 = 30;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328108:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328144
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328144;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328144
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328144;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,49
	ctx_arrow(ctx)->r6.s64 = 49;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,196(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328144:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82328148:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82328150) PPC_WEAK_FUNC(sub_82328150);
PPC_FUNC_IMPL(__imp__sub_82328150) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82328198
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328198;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2316
	ctx_arrow(ctx)->r7.s64 = 2316;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328198:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,37
	ctx_arrow(ctx)->r4.s64 = 37;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// bne 0x82328210
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82328210;
	// beq ctx_arrow(ctx)->r6,0x823281cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823281CC;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,34
	ctx_arrow(ctx)->r4.s64 = 34;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823281CC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328208
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328208;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328208
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328208;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,57
	ctx_arrow(ctx)->r6.s64 = 57;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,228(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328208:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x82328268
	goto loc_82328268;
loc_82328210:
	// beq ctx_arrow(ctx)->r6,0x82328228
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328228;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,34
	ctx_arrow(ctx)->r4.s64 = 34;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328228:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328264
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328264;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328264
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328264;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,57
	ctx_arrow(ctx)->r6.s64 = 57;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,228(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328264:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_82328268:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82328270) PPC_WEAK_FUNC(sub_82328270);
PPC_FUNC_IMPL(__imp__sub_82328270) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823282b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823282B8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2371
	ctx_arrow(ctx)->r7.s64 = 2371;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823282B8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,37
	ctx_arrow(ctx)->r4.s64 = 37;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82328330
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328330;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823282ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823282EC;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,35
	ctx_arrow(ctx)->r4.s64 = 35;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823282EC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328328
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328328;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328328
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328328;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,58
	ctx_arrow(ctx)->r6.s64 = 58;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,232(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328328:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232838c
	goto loc_8232838C;
loc_82328330:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232834c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232834C;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,35
	ctx_arrow(ctx)->r4.s64 = 35;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232834C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328388
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328388;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328388
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328388;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,58
	ctx_arrow(ctx)->r6.s64 = 58;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,232(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328388:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232838C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82328398) PPC_WEAK_FUNC(sub_82328398);
PPC_FUNC_IMPL(__imp__sub_82328398) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823283e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823283E0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2426
	ctx_arrow(ctx)->r7.s64 = 2426;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823283E0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,37
	ctx_arrow(ctx)->r4.s64 = 37;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82328458
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328458;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328414
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328414;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,36
	ctx_arrow(ctx)->r4.s64 = 36;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328414:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328450
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328450;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328450
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328450;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,59
	ctx_arrow(ctx)->r6.s64 = 59;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,236(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328450:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823284b4
	goto loc_823284B4;
loc_82328458:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328474
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328474;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,36
	ctx_arrow(ctx)->r4.s64 = 36;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328474:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823284b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823284B0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823284b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823284B0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,59
	ctx_arrow(ctx)->r6.s64 = 59;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,236(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823284B0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823284B4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_823284C0) PPC_WEAK_FUNC(sub_823284C0);
PPC_FUNC_IMPL(__imp__sub_823284C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r4,971
	ctx_arrow(ctx)->r4.s64 = 971;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82328544
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328544;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328504
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328504;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,37
	ctx_arrow(ctx)->r4.s64 = 37;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328504:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232853c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232853C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232853c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232853C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,60
	ctx_arrow(ctx)->r6.s64 = 60;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,240(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232853C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232859c
	goto loc_8232859C;
loc_82328544:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328560;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,37
	ctx_arrow(ctx)->r4.s64 = 37;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328560:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328598
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328598;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328598
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328598;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,60
	ctx_arrow(ctx)->r6.s64 = 60;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,240(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328598:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232859C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_823285A8) PPC_WEAK_FUNC(sub_823285A8);
PPC_FUNC_IMPL(__imp__sub_823285A8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823285ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823285EC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2527
	ctx_arrow(ctx)->r7.s64 = 2527;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823285EC:
	// li ctx_arrow(ctx)->r4,926
	ctx_arrow(ctx)->r4.s64 = 926;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232865c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232865C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232861c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232861C;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,22
	ctx_arrow(ctx)->r4.s64 = 22;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232861C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328654
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328654;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328654
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328654;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,36
	ctx_arrow(ctx)->r6.s64 = 36;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,144(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328654:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x823286b4
	goto loc_823286B4;
loc_8232865C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328678
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328678;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,22
	ctx_arrow(ctx)->r4.s64 = 22;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328678:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823286b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823286B0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823286b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823286B0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,36
	ctx_arrow(ctx)->r6.s64 = 36;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,144(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823286B0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_823286B4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823286C0) PPC_WEAK_FUNC(sub_823286C0);
PPC_FUNC_IMPL(__imp__sub_823286C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82328704
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328704;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2576
	ctx_arrow(ctx)->r7.s64 = 2576;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328704:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328720
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328720;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328720:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232875c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232875C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232875c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232875C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,52
	ctx_arrow(ctx)->r6.s64 = 52;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,208(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232875C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82328768) PPC_WEAK_FUNC(sub_82328768);
PPC_FUNC_IMPL(__imp__sub_82328768) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823287b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823287B0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2631
	ctx_arrow(ctx)->r7.s64 = 2631;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823287B0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,48
	ctx_arrow(ctx)->r4.s64 = 48;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x82328828
	if (ctx_arrow(ctx)->r6.gt()) goto loc_82328828;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823287e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823287E4;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,33
	ctx_arrow(ctx)->r4.s64 = 33;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_823287E4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328820
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328820;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328820
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328820;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,53
	ctx_arrow(ctx)->r6.s64 = 53;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,212(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328820:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x82328884
	goto loc_82328884;
loc_82328828:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328844
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328844;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,33
	ctx_arrow(ctx)->r4.s64 = 33;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328844:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328880
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328880;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328880
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328880;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,53
	ctx_arrow(ctx)->r6.s64 = 53;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,212(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328880:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_82328884:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82328890) PPC_WEAK_FUNC(sub_82328890);
PPC_FUNC_IMPL(__imp__sub_82328890) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823288d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823288D8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2690
	ctx_arrow(ctx)->r7.s64 = 2690;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823288D8:
	// li ctx_arrow(ctx)->r4,157
	ctx_arrow(ctx)->r4.s64 = 157;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232894c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232894C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328908
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328908;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,39
	ctx_arrow(ctx)->r4.s64 = 39;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328908:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328944
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328944;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328944
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328944;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,91
	ctx_arrow(ctx)->r6.s64 = 91;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328944:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x823289a8
	goto loc_823289A8;
loc_8232894C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328968
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328968;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,39
	ctx_arrow(ctx)->r4.s64 = 39;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328968:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823289a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823289A4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823289a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823289A4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,91
	ctx_arrow(ctx)->r6.s64 = 91;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,364(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823289A4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_823289A8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_823289B0) PPC_WEAK_FUNC(sub_823289B0);
PPC_FUNC_IMPL(__imp__sub_823289B0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823289f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823289F4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2744
	ctx_arrow(ctx)->r7.s64 = 2744;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823289F4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328a10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328A10;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,41
	ctx_arrow(ctx)->r4.s64 = 41;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_82328A10:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328A4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328a4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328A4C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,101
	ctx_arrow(ctx)->r6.s64 = 101;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,404(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328A4C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82328A58) PPC_WEAK_FUNC(sub_82328A58);
PPC_FUNC_IMPL(__imp__sub_82328A58) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,567
	ctx_arrow(ctx)->r4.s64 = 567;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,974
	ctx_arrow(ctx)->r4.s64 = 974;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82328ad8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328AD8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82328aa4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328AA4;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// b 0x82328ad0
	goto loc_82328AD0;
loc_82328AA4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x82328ab4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328AB4;
	// li ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = 5;
	// b 0x82328ad0
	goto loc_82328AD0;
loc_82328AB4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82328ac4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328AC4;
	// li ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = 8;
	// b 0x82328ad0
	goto loc_82328AD0;
loc_82328AC4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x82328ad8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328AD8;
	// li ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r11.s64 = 11;
loc_82328AD0:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// b 0x82328afc
	goto loc_82328AFC;
loc_82328AD8:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2816
	ctx_arrow(ctx)->r7.s64 = 2816;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13944
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 13944;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328AFC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328b34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328B34;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328b34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328B34;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,61
	ctx_arrow(ctx)->r6.s64 = 61;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// lwz ctx_arrow(ctx)->r5,244(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r28
	ctr.u64 = ctx_arrow(ctx)->r28.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328B34:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82328B40) PPC_WEAK_FUNC(sub_82328B40);
PPC_FUNC_IMPL(__imp__sub_82328B40) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 4) & 0xFFFFFFF0;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r5.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82328B58) PPC_WEAK_FUNC(sub_82328B58);
PPC_FUNC_IMPL(__imp__sub_82328B58) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,7,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 7) & 0xFFFFFF80;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r5.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82328B70) PPC_WEAK_FUNC(sub_82328B70);
PPC_FUNC_IMPL(__imp__sub_82328B70) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82328B80) PPC_WEAK_FUNC(sub_82328B80);
PPC_FUNC_IMPL(__imp__sub_82328B80) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82328bc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328BC8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2877
	ctx_arrow(ctx)->r7.s64 = 2877;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328BC8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 16, xer);
	// bge ctx_arrow(ctx)->r6,0x82328bf0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_82328BF0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x82328bf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328BF0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,15
	ctx_arrow(ctx)->r4.s64 = 15;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x82328bf4
	goto loc_82328BF4;
loc_82328BF0:
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
loc_82328BF4:
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// li ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = 7;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// stw ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stw ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stw ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// stw ctx_arrow(ctx)->r9,36(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// beq ctx_arrow(ctx)->r6,0x82328c64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328C64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328c64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328C64;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,31
	ctx_arrow(ctx)->r6.s64 = 31;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r5,124(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328C64:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82328C70) PPC_WEAK_FUNC(sub_82328C70);
PPC_FUNC_IMPL(__imp__sub_82328C70) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed10c
	// stwu ctx_arrow(ctx)->r1,-272(ctx_arrow(ctx)->r1)
	ea = -272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r8.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// addi ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r17.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x82328cc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328CC8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2967
	ctx_arrow(ctx)->r7.s64 = 2967;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r17.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r18.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328CC8:
	// li ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r20.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, -1, xer);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bne ctx_arrow(ctx)->r6,0x82328d08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328D08;
	// li ctx_arrow(ctx)->r4,928
	ctx_arrow(ctx)->r4.s64 = 928;
	// li ctx_arrow(ctx)->r28,23
	ctx_arrow(ctx)->r28.s64 = 23;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r20.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,927
	ctx_arrow(ctx)->r4.s64 = 927;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r24,-1
	ctx_arrow(ctx)->r24.s64 = -1;
	// b 0x82328d7c
	goto loc_82328D7C;
loc_82328D08:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,43
	ctx_arrow(ctx)->r4.s64 = 43;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,45
	ctx_arrow(ctx)->r4.s64 = 45;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,46
	ctx_arrow(ctx)->r4.s64 = 46;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,42
	ctx_arrow(ctx)->r4.s64 = 42;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,41
	ctx_arrow(ctx)->r4.s64 = 41;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,40
	ctx_arrow(ctx)->r4.s64 = 40;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
loc_82328D7C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82328d98
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82328D98;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r22.u64;
	// bl 0x82300d48
	sub_82300D48(ctx, base);
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x82328d9c
	goto loc_82328D9C;
loc_82328D98:
	// li ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = 1;
loc_82328D9C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// beq ctx_arrow(ctx)->r6,0x82328db4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328DB4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18720
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 18720;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-576
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -576;
	// b 0x82328db8
	goto loc_82328DB8;
loc_82328DB4:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,18720
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 18720;
loc_82328DB8:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 * 24;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// bne ctx_arrow(ctx)->r6,0x82328de8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328DE8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + -1;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_82328DE8:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// bne ctx_arrow(ctx)->r6,0x82328e04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328E04;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r23.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
loc_82328E04:
	// stw ctx_arrow(ctx)->r20,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stw ctx_arrow(ctx)->r20,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// bne ctx_arrow(ctx)->r6,0x82328e3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328E3C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,44
	ctx_arrow(ctx)->r4.s64 = 44;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
loc_82328E3C:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82328e64
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328E64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r7,3048
	ctx_arrow(ctx)->r7.s64 = 3048;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13944
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 13944;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r17.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r18.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328E64:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// stw ctx_arrow(ctx)->r20,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stw ctx_arrow(ctx)->r26,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stw ctx_arrow(ctx)->r25,32(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// stw ctx_arrow(ctx)->r24,36(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// beq ctx_arrow(ctx)->r6,0x82328f00
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328F00;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82328f00
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328F00;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r30,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r28,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19436
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19436;
	// lwz ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,30
	ctx_arrow(ctx)->r6.s64 = 30;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// stw ctx_arrow(ctx)->r24,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r19.u64;
	// stw ctx_arrow(ctx)->r25,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stw ctx_arrow(ctx)->r26,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// stw ctx_arrow(ctx)->r20,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// lwz ctx_arrow(ctx)->r5,120(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r28,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r27,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mtctr ctx_arrow(ctx)->r21
	ctr.u64 = ctx_arrow(ctx)->r21.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r5,396(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r22.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// li ctx_arrow(ctx)->r6,99
	ctx_arrow(ctx)->r6.s64 = 99;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r19.u64;
	// mtctr ctx_arrow(ctx)->r21
	ctr.u64 = ctx_arrow(ctx)->r21.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82328F00:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// b 0x823ed15c
	return;
}

alias(__imp__sub_82328F10) PPC_WEAK_FUNC(sub_82328F10);
PPC_FUNC_IMPL(__imp__sub_82328F10) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r9.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x82328f6c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328F6C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3110
	ctx_arrow(ctx)->r7.s64 = 3110;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82328F6C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82328f80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82328F80;
	// li ctx_arrow(ctx)->r29,23
	ctx_arrow(ctx)->r29.s64 = 23;
	// li ctx_arrow(ctx)->r22,1
	ctx_arrow(ctx)->r22.s64 = 1;
	// b 0x82328fa8
	goto loc_82328FA8;
loc_82328F80:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r4,43
	ctx_arrow(ctx)->r4.s64 = 43;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r4,44
	ctx_arrow(ctx)->r4.s64 = 44;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r3.u64;
loc_82328FA8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82328fc4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82328FC4;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82300d48
	sub_82300D48(ctx, base);
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x82328fc8
	goto loc_82328FC8;
loc_82328FC4:
	// li ctx_arrow(ctx)->r21,1
	ctx_arrow(ctx)->r21.s64 = 1;
loc_82328FC8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// beq ctx_arrow(ctx)->r6,0x82328fe0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82328FE0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18720
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 18720;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-576
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -576;
	// b 0x82328fe4
	goto loc_82328FE4;
loc_82328FE0:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,18720
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 18720;
loc_82328FE4:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 * 24;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// bne 0x82329094
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82329094;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,-17
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + -17;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31520
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31520;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne 0x82329030
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82329030;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3140
	ctx_arrow(ctx)->r7.s64 = 3140;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19568
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19568;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329030:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r22.u32 | (ctx_arrow(ctx)->r22.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x82329048
	if (ctx_arrow(ctx)->r0.lt()) goto loc_82329048;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 24, xer);
	// blt ctx_arrow(ctx)->r6,0x82329064
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82329064;
loc_82329048:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3142
	ctx_arrow(ctx)->r7.s64 = 3142;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19528
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19528;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329064:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 * 24;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// bne 0x82329094
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82329094;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3144
	ctx_arrow(ctx)->r7.s64 = 3144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19516
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19516;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329094:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x82329104
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329104;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329104
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329104;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19492
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19492;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r22.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r6,29
	ctx_arrow(ctx)->r6.s64 = 29;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// lwz ctx_arrow(ctx)->r5,116(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r28
	ctr.u64 = ctx_arrow(ctx)->r28.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r5,396(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r21.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// li ctx_arrow(ctx)->r6,99
	ctx_arrow(ctx)->r6.s64 = 99;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// mtctr ctx_arrow(ctx)->r28
	ctr.u64 = ctx_arrow(ctx)->r28.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329104:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed168
	return;
}

alias(__imp__sub_82329110) PPC_WEAK_FUNC(sub_82329110);
PPC_FUNC_IMPL(__imp__sub_82329110) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r8.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x82329168
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329168;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3188
	ctx_arrow(ctx)->r7.s64 = 3188;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329168:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232917c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232917C;
	// li ctx_arrow(ctx)->r30,23
	ctx_arrow(ctx)->r30.s64 = 23;
	// li ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = 1;
	// b 0x823291a4
	goto loc_823291A4;
loc_8232917C:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r4,43
	ctx_arrow(ctx)->r4.s64 = 43;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r4,44
	ctx_arrow(ctx)->r4.s64 = 44;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
loc_823291A4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823291bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823291BC;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82300d48
	sub_82300D48(ctx, base);
	// b 0x823291c0
	goto loc_823291C0;
loc_823291BC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_823291C0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// beq ctx_arrow(ctx)->r6,0x823291d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823291D8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18720
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 18720;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-576
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -576;
	// b 0x823291dc
	goto loc_823291DC;
loc_823291D8:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,18720
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 18720;
loc_823291DC:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 * 24;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329298
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329298;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,-17
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + -17;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31520
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31520;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne 0x82329230
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82329230;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3219
	ctx_arrow(ctx)->r7.s64 = 3219;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19568
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19568;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329230:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x82329248
	if (ctx_arrow(ctx)->r0.lt()) goto loc_82329248;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 24, xer);
	// blt ctx_arrow(ctx)->r6,0x82329264
	if (ctx_arrow(ctx)->r6.lt()) goto loc_82329264;
loc_82329248:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3221
	ctx_arrow(ctx)->r7.s64 = 3221;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19528
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19528;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329264:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 * 24;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// lhz ctx_arrow(ctx)->r11,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// cmpwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// bne 0x82329298
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_82329298;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3223
	ctx_arrow(ctx)->r7.s64 = 3223;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19584
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19584;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329298:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823292d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823292D4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823292d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823292D4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,100
	ctx_arrow(ctx)->r6.s64 = 100;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r5,400(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r23
	ctr.u64 = ctx_arrow(ctx)->r23.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823292D4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_823292E0) PPC_WEAK_FUNC(sub_823292E0);
PPC_FUNC_IMPL(__imp__sub_823292E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r8.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232932c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232932C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3264
	ctx_arrow(ctx)->r7.s64 = 3264;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232932C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x82329340
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329340;
	// li ctx_arrow(ctx)->r31,23
	ctx_arrow(ctx)->r31.s64 = 23;
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// b 0x82329368
	goto loc_82329368;
loc_82329340:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,43
	ctx_arrow(ctx)->r4.s64 = 43;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,44
	ctx_arrow(ctx)->r4.s64 = 44;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
loc_82329368:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x82329384
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_82329384;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82300d48
	sub_82300D48(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x82329388
	goto loc_82329388;
loc_82329384:
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
loc_82329388:
	// lis ctx_arrow(ctx)->r10,-32251
	ctx_arrow(ctx)->r10.s64 = -2113601536;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 * 24;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18720
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 18720;
	// beq ctx_arrow(ctx)->r6,0x823293ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823293AC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-576
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -576;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-576
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -576;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// b 0x823293b0
	goto loc_823293B0;
loc_823293AC:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
loc_823293B0:
	// lhzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823293dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823293DC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823293d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823293D8;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// b 0x823293dc
	goto loc_823293DC;
loc_823293D8:
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
loc_823293DC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329438
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329438;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329438
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329438;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,28
	ctx_arrow(ctx)->r6.s64 = 28;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r5,112(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r26
	ctr.u64 = ctx_arrow(ctx)->r26.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r5,396(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19304;
	// li ctx_arrow(ctx)->r6,99
	ctx_arrow(ctx)->r6.s64 = 99;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// mtctr ctx_arrow(ctx)->r26
	ctr.u64 = ctx_arrow(ctx)->r26.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329438:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_82329448) PPC_WEAK_FUNC(sub_82329448);
PPC_FUNC_IMPL(__imp__sub_82329448) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,82
	ctx_arrow(ctx)->r4.s64 = 82;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r9.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,83
	ctx_arrow(ctx)->r4.s64 = 83;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,84
	ctx_arrow(ctx)->r4.s64 = 84;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x823294f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823294F4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823294f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823294F4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19612
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19612;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,12
	ctx_arrow(ctx)->r6.s64 = 12;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823294F4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
}

alias(__imp__sub_82329500) PPC_WEAK_FUNC(sub_82329500);
PPC_FUNC_IMPL(__imp__sub_82329500) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329544
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329544;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3379
	ctx_arrow(ctx)->r7.s64 = 3379;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329544:
	// li ctx_arrow(ctx)->r4,130
	ctx_arrow(ctx)->r4.s64 = 130;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329594
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329594;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329594
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329594;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,103
	ctx_arrow(ctx)->r6.s64 = 103;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,412(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329594:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823295A0) PPC_WEAK_FUNC(sub_823295A0);
PPC_FUNC_IMPL(__imp__sub_823295A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823295e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823295E4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3411
	ctx_arrow(ctx)->r7.s64 = 3411;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823295E4:
	// li ctx_arrow(ctx)->r4,129
	ctx_arrow(ctx)->r4.s64 = 129;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329634
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329634;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329634
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329634;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,104
	ctx_arrow(ctx)->r6.s64 = 104;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,416(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329634:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82329640) PPC_WEAK_FUNC(sub_82329640);
PPC_FUNC_IMPL(__imp__sub_82329640) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,19656(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82329658) PPC_WEAK_FUNC(sub_82329658);
PPC_FUNC_IMPL(__imp__sub_82329658) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232969c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232969C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3457
	ctx_arrow(ctx)->r7.s64 = 3457;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232969C:
	// li ctx_arrow(ctx)->r4,580
	ctx_arrow(ctx)->r4.s64 = 580;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,581
	ctx_arrow(ctx)->r4.s64 = 581;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x823296e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823296E8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,19660(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// b 0x823296f0
	goto loc_823296F0;
loc_823296E8:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfs f0,19656(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_823296F0:
	// stfs f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329738
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329738;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329738
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329738;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// fmr f1,f0
	ctx.f1.f64 = f0.f64;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,67
	ctx_arrow(ctx)->r6.s64 = 67;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r5,268(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r28
	ctr.u64 = ctx_arrow(ctx)->r28.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329738:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82329748) PPC_WEAK_FUNC(sub_82329748);
PPC_FUNC_IMPL(__imp__sub_82329748) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,19664(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82329760) PPC_WEAK_FUNC(sub_82329760);
PPC_FUNC_IMPL(__imp__sub_82329760) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823297a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823297A4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3516
	ctx_arrow(ctx)->r7.s64 = 3516;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823297A4:
	// li ctx_arrow(ctx)->r4,1000
	ctx_arrow(ctx)->r4.s64 = 1000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823297f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823297F4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823297f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823297F4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,9
	ctx_arrow(ctx)->r6.s64 = 9;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823297F4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82329800) PPC_WEAK_FUNC(sub_82329800);
PPC_FUNC_IMPL(__imp__sub_82329800) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329844
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329844;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3546
	ctx_arrow(ctx)->r7.s64 = 3546;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329844:
	// li ctx_arrow(ctx)->r4,1001
	ctx_arrow(ctx)->r4.s64 = 1001;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329894
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329894;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329894
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329894;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,69
	ctx_arrow(ctx)->r6.s64 = 69;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,276(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329894:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_823298A0) PPC_WEAK_FUNC(sub_823298A0);
PPC_FUNC_IMPL(__imp__sub_823298A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823298e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823298E4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3577
	ctx_arrow(ctx)->r7.s64 = 3577;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823298E4:
	// li ctx_arrow(ctx)->r4,1002
	ctx_arrow(ctx)->r4.s64 = 1002;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329934
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329934;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329934
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329934;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,70
	ctx_arrow(ctx)->r6.s64 = 70;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,280(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329934:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82329940) PPC_WEAK_FUNC(sub_82329940);
PPC_FUNC_IMPL(__imp__sub_82329940) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82329958) PPC_WEAK_FUNC(sub_82329958);
PPC_FUNC_IMPL(__imp__sub_82329958) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x823299a0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_823299A0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3620
	ctx_arrow(ctx)->r7.s64 = 3620;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_823299A0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82306538
	sub_82306538(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823299f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823299F8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x823299f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_823299F8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,11
	ctx_arrow(ctx)->r6.s64 = 11;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,44(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_823299F8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82329A08) PPC_WEAK_FUNC(sub_82329A08);
PPC_FUNC_IMPL(__imp__sub_82329A08) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329a50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329A50;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3654
	ctx_arrow(ctx)->r7.s64 = 3654;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329A50:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,17
	ctx_arrow(ctx)->r4.s64 = 17;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82306538
	sub_82306538(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329aa8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329AA8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329aa8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329AA8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,72
	ctx_arrow(ctx)->r6.s64 = 72;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,288(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329AA8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82329AB8) PPC_WEAK_FUNC(sub_82329AB8);
PPC_FUNC_IMPL(__imp__sub_82329AB8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329b00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329B00;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3688
	ctx_arrow(ctx)->r7.s64 = 3688;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329B00:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,18
	ctx_arrow(ctx)->r4.s64 = 18;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82306538
	sub_82306538(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329b58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329B58;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329b58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329B58;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,73
	ctx_arrow(ctx)->r6.s64 = 73;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,292(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329B58:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82329B68) PPC_WEAK_FUNC(sub_82329B68);
PPC_FUNC_IMPL(__imp__sub_82329B68) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329bb0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329BB0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3721
	ctx_arrow(ctx)->r7.s64 = 3721;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329BB0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,19
	ctx_arrow(ctx)->r4.s64 = 19;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82306538
	sub_82306538(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329C08;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329c08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329C08;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,74
	ctx_arrow(ctx)->r6.s64 = 74;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,296(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329C08:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_82329C18) PPC_WEAK_FUNC(sub_82329C18);
PPC_FUNC_IMPL(__imp__sub_82329C18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x82329c68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329C68;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3754
	ctx_arrow(ctx)->r7.s64 = 3754;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329C68:
	// li ctx_arrow(ctx)->r4,165
	ctx_arrow(ctx)->r4.s64 = 165;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x82329c90
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329C90;
	// li ctx_arrow(ctx)->r4,166
	ctx_arrow(ctx)->r4.s64 = 166;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// b 0x82329c9c
	goto loc_82329C9C;
loc_82329C90:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r28)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
loc_82329C9C:
	// li ctx_arrow(ctx)->r4,170
	ctx_arrow(ctx)->r4.s64 = 170;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x82329ccc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329CCC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3767
	ctx_arrow(ctx)->r7.s64 = 3767;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19688
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19688;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329CCC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329d10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329D10;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329d10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329D10;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,26
	ctx_arrow(ctx)->r6.s64 = 26;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,104(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329D10:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed180
	return;
}

alias(__imp__sub_82329D20) PPC_WEAK_FUNC(sub_82329D20);
PPC_FUNC_IMPL(__imp__sub_82329D20) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -64);
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x82329d74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329D74;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3800
	ctx_arrow(ctx)->r7.s64 = 3800;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329D74:
	// li ctx_arrow(ctx)->r4,165
	ctx_arrow(ctx)->r4.s64 = 165;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 3, xer);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bne ctx_arrow(ctx)->r6,0x82329dd8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329DD8;
	// li ctx_arrow(ctx)->r4,166
	ctx_arrow(ctx)->r4.s64 = 166;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// li ctx_arrow(ctx)->r4,167
	ctx_arrow(ctx)->r4.s64 = 167;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// fsubs f0,f1,f31
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f1.f64 - f31.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bne ctx_arrow(ctx)->r6,0x82329dc8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329DC8;
	// lis ctx_arrow(ctx)->r11,32639
	ctx_arrow(ctx)->r11.s64 = 2139029504;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x82329dfc
	goto loc_82329DFC;
loc_82329DC8:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fdivs f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 / f0.f64));
	// b 0x82329df8
	goto loc_82329DF8;
loc_82329DD8:
	// li ctx_arrow(ctx)->r4,168
	ctx_arrow(ctx)->r4.s64 = 168;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// lfs f0,7544(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fdivs f13,f0,f1
	ctx.f13.f64 = double(float(f0.f64 / ctx.f1.f64));
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fdivs f0,f0,f13
	f0.f64 = double(float(f0.f64 / ctx.f13.f64));
loc_82329DF8:
	// stfs f0,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_82329DFC:
	// li ctx_arrow(ctx)->r4,170
	ctx_arrow(ctx)->r4.s64 = 170;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x82329e2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329E2C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3827
	ctx_arrow(ctx)->r7.s64 = 3827;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19832
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19832;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329E2C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329e70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329E70;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329e70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329E70;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,27
	ctx_arrow(ctx)->r6.s64 = 27;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,108(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329E70:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// lfd f31,-64(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed180
	return;
}

alias(__imp__sub_82329E80) PPC_WEAK_FUNC(sub_82329E80);
PPC_FUNC_IMPL(__imp__sub_82329E80) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329ec4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329EC4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3857
	ctx_arrow(ctx)->r7.s64 = 3857;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329EC4:
	// li ctx_arrow(ctx)->r4,998
	ctx_arrow(ctx)->r4.s64 = 998;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329f14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329F14;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329f14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329F14;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,93
	ctx_arrow(ctx)->r6.s64 = 93;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,372(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329F14:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82329F20) PPC_WEAK_FUNC(sub_82329F20);
PPC_FUNC_IMPL(__imp__sub_82329F20) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x82329f64
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_82329F64;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,3889
	ctx_arrow(ctx)->r7.s64 = 3889;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_82329F64:
	// li ctx_arrow(ctx)->r4,999
	ctx_arrow(ctx)->r4.s64 = 999;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329fb4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329FB4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x82329fb4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_82329FB4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,94
	ctx_arrow(ctx)->r6.s64 = 94;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,376(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_82329FB4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_82329FC0) PPC_WEAK_FUNC(sub_82329FC0);
PPC_FUNC_IMPL(__imp__sub_82329FC0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9560(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82329FD8) PPC_WEAK_FUNC(sub_82329FD8);
PPC_FUNC_IMPL(__imp__sub_82329FD8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9556(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_82329FF0) PPC_WEAK_FUNC(sub_82329FF0);
PPC_FUNC_IMPL(__imp__sub_82329FF0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9552(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8232A008) PPC_WEAK_FUNC(sub_8232A008);
PPC_FUNC_IMPL(__imp__sub_8232A008) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9548(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8232A020) PPC_WEAK_FUNC(sub_8232A020);
PPC_FUNC_IMPL(__imp__sub_8232A020) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8232A038) PPC_WEAK_FUNC(sub_8232A038);
PPC_FUNC_IMPL(__imp__sub_8232A038) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9544(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8232A050) PPC_WEAK_FUNC(sub_8232A050);
PPC_FUNC_IMPL(__imp__sub_8232A050) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9540(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8232A068) PPC_WEAK_FUNC(sub_8232A068);
PPC_FUNC_IMPL(__imp__sub_8232A068) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9536(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8232A080) PPC_WEAK_FUNC(sub_8232A080);
PPC_FUNC_IMPL(__imp__sub_8232A080) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// lfs f0,9532(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stfs f0,0(ctx_arrow(ctx)->r5)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8232A098) PPC_WEAK_FUNC(sub_8232A098);
PPC_FUNC_IMPL(__imp__sub_8232A098) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a0e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A0E0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4098
	ctx_arrow(ctx)->r7.s64 = 4098;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A0E0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,86
	ctx_arrow(ctx)->r4.s64 = 86;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82306538
	sub_82306538(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a138
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A138;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a138
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A138;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,51
	ctx_arrow(ctx)->r6.s64 = 51;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,204(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A138:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232A148) PPC_WEAK_FUNC(sub_8232A148);
PPC_FUNC_IMPL(__imp__sub_8232A148) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a190
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A190;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4133
	ctx_arrow(ctx)->r7.s64 = 4133;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A190:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,48
	ctx_arrow(ctx)->r4.s64 = 48;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 & 0xFFFFFFFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f1,f0
	ctx.f1.f64 = double(float(f0.f64));
	// stfs f1,0(ctx_arrow(ctx)->r28)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8232a1f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A1F8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a1f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A1F8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,54
	ctx_arrow(ctx)->r6.s64 = 54;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r5,216(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A1F8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232A208) PPC_WEAK_FUNC(sub_8232A208);
PPC_FUNC_IMPL(__imp__sub_8232A208) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a24c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A24C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4163
	ctx_arrow(ctx)->r7.s64 = 4163;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A24C:
	// li ctx_arrow(ctx)->r4,166
	ctx_arrow(ctx)->r4.s64 = 166;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a29c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A29C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a29c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A29C;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,24
	ctx_arrow(ctx)->r6.s64 = 24;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,96(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A29C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8232A2A8) PPC_WEAK_FUNC(sub_8232A2A8);
PPC_FUNC_IMPL(__imp__sub_8232A2A8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a2ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A2EC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4195
	ctx_arrow(ctx)->r7.s64 = 4195;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A2EC:
	// li ctx_arrow(ctx)->r4,167
	ctx_arrow(ctx)->r4.s64 = 167;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a33c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A33C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a33c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A33C;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,75
	ctx_arrow(ctx)->r6.s64 = 75;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,300(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A33C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8232A348) PPC_WEAK_FUNC(sub_8232A348);
PPC_FUNC_IMPL(__imp__sub_8232A348) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a38c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A38C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4225
	ctx_arrow(ctx)->r7.s64 = 4225;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A38C:
	// li ctx_arrow(ctx)->r4,168
	ctx_arrow(ctx)->r4.s64 = 168;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82305568
	sub_82305568(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a3dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A3DC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a3dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A3DC;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19640;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// li ctx_arrow(ctx)->r6,25
	ctx_arrow(ctx)->r6.s64 = 25;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,100(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A3DC:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8232A3E8) PPC_WEAK_FUNC(sub_8232A3E8);
PPC_FUNC_IMPL(__imp__sub_8232A3E8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a42c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A42C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4257
	ctx_arrow(ctx)->r7.s64 = 4257;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A42C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// lfs f1,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// stfs f1,0(ctx_arrow(ctx)->r28)
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8232a47c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A47C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a47c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A47C;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,64
	ctx_arrow(ctx)->r6.s64 = 64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,256(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A47C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8232A488) PPC_WEAK_FUNC(sub_8232A488);
PPC_FUNC_IMPL(__imp__sub_8232A488) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a4d0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A4D0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4293
	ctx_arrow(ctx)->r7.s64 = 4293;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A4D0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,26
	ctx_arrow(ctx)->r4.s64 = 26;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82306538
	sub_82306538(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a528
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A528;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a528
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A528;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,65
	ctx_arrow(ctx)->r6.s64 = 65;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,260(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A528:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232A538) PPC_WEAK_FUNC(sub_8232A538);
PPC_FUNC_IMPL(__imp__sub_8232A538) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a580
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A580;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4327
	ctx_arrow(ctx)->r7.s64 = 4327;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A580:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,25
	ctx_arrow(ctx)->r4.s64 = 25;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82306538
	sub_82306538(ctx, base);
	// stfs f1,0(ctx_arrow(ctx)->r27)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a5d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A5D8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a5d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A5D8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,66
	ctx_arrow(ctx)->r6.s64 = 66;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,264(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A5D8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232A5E8) PPC_WEAK_FUNC(sub_8232A5E8);
PPC_FUNC_IMPL(__imp__sub_8232A5E8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a630
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A630;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4363
	ctx_arrow(ctx)->r7.s64 = 4363;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A630:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,89
	ctx_arrow(ctx)->r4.s64 = 89;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// lis ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.s64 = 1073741824;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,30,2,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r3.u32, 30) & 0x3FFFFFFF) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFC0000000);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8232a694
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A694;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a694
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A694;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,62
	ctx_arrow(ctx)->r6.s64 = 62;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r5,248(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A694:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232A6A0) PPC_WEAK_FUNC(sub_8232A6A0);
PPC_FUNC_IMPL(__imp__sub_8232A6A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,19200
	ctx_arrow(ctx)->r11.s64 = 1258291200;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8232a708
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A708;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a708
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A708;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f1,0(ctx_arrow(ctx)->r5)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,88
	ctx_arrow(ctx)->r6.s64 = 88;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,352(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A708:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8232A718) PPC_WEAK_FUNC(sub_8232A718);
PPC_FUNC_IMPL(__imp__sub_8232A718) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x8232a76c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A76C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4437
	ctx_arrow(ctx)->r7.s64 = 4437;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A76C:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,91
	ctx_arrow(ctx)->r4.s64 = 91;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,92
	ctx_arrow(ctx)->r4.s64 = 92;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31496
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31496;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 2, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r31,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// beq ctx_arrow(ctx)->r6,0x8232a7f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A7F0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a7f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A7F0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a7e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A7E8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a7e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A7E8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4450
	ctx_arrow(ctx)->r7.s64 = 4450;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,14792
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 14792;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A7E8:
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// b 0x8232a7f4
	goto loc_8232A7F4;
loc_8232A7F0:
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
loc_8232A7F4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 8) & 0xFFFFFF00;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,75
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4915200;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 8) & 0xFFFFFF00;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8232a850
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A850;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a850
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A850;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f1,0(ctx_arrow(ctx)->r26)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,89
	ctx_arrow(ctx)->r6.s64 = 89;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r5,356(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r25
	ctr.u64 = ctx_arrow(ctx)->r25.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A850:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8232A860) PPC_WEAK_FUNC(sub_8232A860);
PPC_FUNC_IMPL(__imp__sub_8232A860) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a8a8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A8A8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,4490
	ctx_arrow(ctx)->r7.s64 = 4490;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A8A8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,90
	ctx_arrow(ctx)->r4.s64 = 90;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,19200
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 | 1258291200;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8232a908
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A908;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a908
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A908;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x823261d8
	sub_823261D8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19668;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,90
	ctx_arrow(ctx)->r6.s64 = 90;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r5,360(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r29
	ctr.u64 = ctx_arrow(ctx)->r29.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A908:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232A918) PPC_WEAK_FUNC(sub_8232A918);
PPC_FUNC_IMPL(__imp__sub_8232A918) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a960
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A960;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,447
	ctx_arrow(ctx)->r7.s64 = 447;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232A960:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,7
	ctx_arrow(ctx)->r4.s64 = 7;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232a9d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232A9D8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a994
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A994;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,43
	ctx_arrow(ctx)->r4.s64 = 43;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232A994:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a9d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A9D0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a9d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A9D0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,105
	ctx_arrow(ctx)->r6.s64 = 105;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,420(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232A9D0:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232aa34
	goto loc_8232AA34;
loc_8232A9D8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232a9f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232A9F4;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232A9F4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aa30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AA30;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aa30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AA30;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,105
	ctx_arrow(ctx)->r6.s64 = 105;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,420(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232AA30:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232AA34:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232AA40) PPC_WEAK_FUNC(sub_8232AA40);
PPC_FUNC_IMPL(__imp__sub_8232AA40) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x8232aa94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AA94;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,504
	ctx_arrow(ctx)->r7.s64 = 504;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AA94:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 16, xer);
	// blt ctx_arrow(ctx)->r6,0x8232aab8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232AAB8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,505
	ctx_arrow(ctx)->r7.s64 = 505;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19988
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19988;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AAB8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8232aadc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232AADC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,506
	ctx_arrow(ctx)->r7.s64 = 506;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19976
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19976;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AADC:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ab50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AB50;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ab10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AB10;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232AB10:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ab48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AB48;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ab48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AB48;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,-31944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232AB48:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232aba8
	goto loc_8232ABA8;
loc_8232AB50:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ab6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AB6C;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232AB6C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aba4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232ABA4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aba4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232ABA4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,-31944(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232ABA4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232ABA8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8232ABB0) PPC_WEAK_FUNC(sub_8232ABB0);
PPC_FUNC_IMPL(__imp__sub_8232ABB0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x8232ac04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AC04;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,561
	ctx_arrow(ctx)->r7.s64 = 561;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AC04:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 16, xer);
	// blt ctx_arrow(ctx)->r6,0x8232ac28
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232AC28;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,562
	ctx_arrow(ctx)->r7.s64 = 562;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19988
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19988;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AC28:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8232ac4c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232AC4C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,563
	ctx_arrow(ctx)->r7.s64 = 563;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19976
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19976;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AC4C:
	// li ctx_arrow(ctx)->r4,135
	ctx_arrow(ctx)->r4.s64 = 135;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232acdc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232ACDC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232acdc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232ACDC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ac98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AC98;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232AC98:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232acd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232ACD4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232acd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232ACD4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232ACD4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232ad38
	goto loc_8232AD38;
loc_8232ACDC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232acf8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232ACF8;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232ACF8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ad34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AD34;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ad34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AD34;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232AD34:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232AD38:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8232AD40) PPC_WEAK_FUNC(sub_8232AD40);
PPC_FUNC_IMPL(__imp__sub_8232AD40) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x8232ad94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AD94;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,619
	ctx_arrow(ctx)->r7.s64 = 619;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AD94:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 16, xer);
	// blt ctx_arrow(ctx)->r6,0x8232adb8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232ADB8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,620
	ctx_arrow(ctx)->r7.s64 = 620;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19988
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19988;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232ADB8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8232addc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232ADDC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,621
	ctx_arrow(ctx)->r7.s64 = 621;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19976
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19976;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232ADDC:
	// li ctx_arrow(ctx)->r4,135
	ctx_arrow(ctx)->r4.s64 = 135;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232ae6c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AE6C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232ae6c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AE6C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ae28
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AE28;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232AE28:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ae64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AE64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ae64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AE64;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232AE64:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232aec8
	goto loc_8232AEC8;
loc_8232AE6C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ae88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AE88;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232AE88:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aec4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AEC4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aec4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AEC4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232AEC4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232AEC8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8232AED0) PPC_WEAK_FUNC(sub_8232AED0);
PPC_FUNC_IMPL(__imp__sub_8232AED0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,19320
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 19320;
	// bne ctx_arrow(ctx)->r6,0x8232af24
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AF24;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,677
	ctx_arrow(ctx)->r7.s64 = 677;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-19872
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -19872;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AF24:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 16, xer);
	// blt ctx_arrow(ctx)->r6,0x8232af48
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232AF48;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,678
	ctx_arrow(ctx)->r7.s64 = 678;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19988
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19988;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AF48:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8232af6c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232AF6C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,679
	ctx_arrow(ctx)->r7.s64 = 679;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19976
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19976;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232AF6C:
	// li ctx_arrow(ctx)->r4,135
	ctx_arrow(ctx)->r4.s64 = 135;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232affc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AFFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8232affc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232AFFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232afb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AFB8;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232AFB8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aff4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AFF4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232aff4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232AFF4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r6.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232AFF4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x8232b058
	goto loc_8232B058;
loc_8232AFFC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b018
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B018;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x82269d78
	sub_82269D78(ctx, base);
loc_8232B018:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b054
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B054;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b054
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B054;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,19416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 19416;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// li ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r6.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r27
	ctr.u64 = ctx_arrow(ctx)->r27.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232B054:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232B058:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8232B060) PPC_WEAK_FUNC(sub_8232B060);
PPC_FUNC_IMPL(__imp__sub_8232B060) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b0ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B0AC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,683
	ctx_arrow(ctx)->r7.s64 = 683;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,20008
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 20008;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,20000
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 20000;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B0AC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x8232b0c0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B0C0;
loc_8232B0B8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8232b0fc
	goto loc_8232B0FC;
loc_8232B0C0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b0b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B0B8;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
loc_8232B0CC:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b104
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B104;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r28.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b114
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B114;
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
loc_8232B0F8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
loc_8232B0FC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
loc_8232B104:
	// bge ctx_arrow(ctx)->r6,0x8232b110
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232B110;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232b114
	goto loc_8232B114;
loc_8232B110:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232B114:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b0cc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B0CC;
	// b 0x8232b0f8
	goto loc_8232B0F8;
}

alias(__imp__sub_8232B120) PPC_WEAK_FUNC(sub_8232B120);
PPC_FUNC_IMPL(__imp__sub_8232B120) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b130
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B130;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
loc_8232B130:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_8232B138) PPC_WEAK_FUNC(sub_8232B138);
PPC_FUNC_IMPL(__imp__sub_8232B138) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x82302530
	sub_82302530(ctx, base);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stw ctx_arrow(ctx)->r30,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232B190) PPC_WEAK_FUNC(sub_8232B190);
PPC_FUNC_IMPL(__imp__sub_8232B190) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r6.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,20008
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 20008;
	// bne ctx_arrow(ctx)->r6,0x8232b1e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B1E0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,66
	ctx_arrow(ctx)->r7.s64 = 66;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-4752
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -4752;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B1E0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b204
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B204;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,67
	ctx_arrow(ctx)->r7.s64 = 67;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-4764
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -4764;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B204:
	// li ctx_arrow(ctx)->r4,28
	ctx_arrow(ctx)->r4.s64 = 28;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne 0x8232b238
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B238;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,70
	ctx_arrow(ctx)->r7.s64 = 70;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,20112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 20112;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B238:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// stw ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r26,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// bl 0x82302400
	sub_82302400(&ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// bne 0x8232b294
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B294;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,88
	ctx_arrow(ctx)->r7.s64 = 88;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,20088
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 20088;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B294:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8232B2A0) PPC_WEAK_FUNC(sub_8232B2A0);
PPC_FUNC_IMPL(__imp__sub_8232B2A0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r6.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// lwz ctx_arrow(ctx)->r24,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b40c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B40C;
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne 0x8232b2fc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B2FC;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8232b138
	sub_8232B138(ctx, base);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
loc_8232B2FC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b3c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B3C4;
loc_8232B304:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b358
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B358;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r27.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b3c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B3C4;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b350
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B350;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232b138
	sub_8232B138(ctx, base);
	// stw ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
loc_8232B350:
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232b3b8
	goto loc_8232B3B8;
loc_8232B358:
	// bge ctx_arrow(ctx)->r6,0x8232b38c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232B38C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b384
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B384;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232b138
	sub_8232B138(ctx, base);
	// stw ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
loc_8232B384:
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232b3b8
	goto loc_8232B3B8;
loc_8232B38C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b3b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B3B4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232b138
	sub_8232B138(ctx, base);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
loc_8232B3B4:
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232B3B8:
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r27.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8232b304
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232B304;
loc_8232B3C4:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8232b40c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232B40C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232b138
	sub_8232B138(ctx, base);
	// stw ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// lwz ctx_arrow(ctx)->r9,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// stw ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// ble ctx_arrow(ctx)->r6,0x8232b404
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232B404;
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
loc_8232B404:
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232b410
	goto loc_8232B410;
loc_8232B40C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8232B410:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8232B418) PPC_WEAK_FUNC(sub_8232B418);
PPC_FUNC_IMPL(__imp__sub_8232B418) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,20008
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 20008;
	// bne ctx_arrow(ctx)->r6,0x8232b45c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B45C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,572
	ctx_arrow(ctx)->r7.s64 = 572;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,20000
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 20000;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B45C:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8232b51c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232B51C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,20124
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 20124;
loc_8232B478:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x8232b49c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B49C;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x8232b49c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B49C;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8232b4a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232B4A4;
loc_8232B49C:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64;
	// b 0x8232b478
	goto loc_8232B478;
loc_8232B4A4:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82302630
	sub_82302630(ctx, base);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 20);
	// beq 0x8232b518
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232B518;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne 0x8232b4e8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B4E8;
	// li ctx_arrow(ctx)->r7,616
	ctx_arrow(ctx)->r7.s64 = 616;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B4E8:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b4fc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B4FC;
	// stw ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// b 0x8232b478
	goto loc_8232B478;
loc_8232B4FC:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b510
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B510;
	// stw ctx_arrow(ctx)->r28,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// b 0x8232b478
	goto loc_8232B478;
loc_8232B510:
	// stw ctx_arrow(ctx)->r28,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// b 0x8232b478
	goto loc_8232B478;
loc_8232B518:
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
loc_8232B51C:
	// stw ctx_arrow(ctx)->r28,24(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 24);
	// stw ctx_arrow(ctx)->r28,20(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 20);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8232B530) PPC_WEAK_FUNC(sub_8232B530);
PPC_FUNC_IMPL(__imp__sub_8232B530) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b56c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B56C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,109
	ctx_arrow(ctx)->r7.s64 = 109;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,20008
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 20008;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,20000
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 20000;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B56C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232b418
	sub_8232B418(ctx, base);
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823024c0
	sub_823024C0(ctx, base);
	// lwz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232B5A8) PPC_WEAK_FUNC(sub_8232B5A8);
PPC_FUNC_IMPL(__imp__sub_8232B5A8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-25033
	ctx_arrow(ctx)->r11.s64 = -1640562688;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31161
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 | 31161;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8232b684
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232B684;
	// li ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 3;
	// divwu ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u32 = ctx_arrow(ctx)->r4.u32 / ctx_arrow(ctx)->r8.u32;
loc_8232B5CC:
	// lwz ctx_arrow(ctx)->r5,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	xer.ca = ctx_arrow(ctx)->r8.u32 > 0;
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-3
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -3;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,19,13,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 19) & 0x7FFFF;
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r5.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 8) & 0xFFFFFF00;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,19,13,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 19) & 0x7FFFF;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// xor ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,20,12,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 20) & 0xFFFFF;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xFFFF0000;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,27,5,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x7FFFFFF;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// xor ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,29,3,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFF;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10,0,21
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 10) & 0xFFFFFC00;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r6.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,17,15,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 17) & 0x1FFFF;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// xor ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ ctx_arrow(ctx)->r6.u64;
	// bne 0x8232b5cc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B5CC;
loc_8232B684:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 1, xer);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r9.u64;
	// beq ctx_arrow(ctx)->r6,0x8232b6a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B6A4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8232b6ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B6AC;
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r10.u64;
loc_8232B6A4:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r11.u64;
loc_8232B6AC:
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,19,13,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 19) & 0x7FFFF;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,8,0,23
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 8) & 0xFFFFFF00;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,19,13,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 19) & 0x7FFFF;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// xor ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,20,12,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 20) & 0xFFFFF;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xFFFF0000;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,27,5,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x7FFFFFF;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// xor ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,29,3,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFF;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,10,0,21
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 10) & 0xFFFFFC00;
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17,15,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 17) & 0x1FFFF;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// xor ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r10.u64;
	// blr 
	return;
}

alias(__imp__sub_8232B740) PPC_WEAK_FUNC(sub_8232B740);
PPC_FUNC_IMPL(__imp__sub_8232B740) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32018
	ctx_arrow(ctx)->r11.s64 = -2098331648;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30952
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 30952;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// lwz ctx_arrow(ctx)->r26,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,21232
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 21232;
	// bne ctx_arrow(ctx)->r6,0x8232b798
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B798;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1690
	ctx_arrow(ctx)->r7.s64 = 1690;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,6656
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 6656;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B798:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82316e28
	sub_82316E28(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x8232b7c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B7C4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1691
	ctx_arrow(ctx)->r7.s64 = 1691;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,21324
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 21324;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B7C4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 4) & 0xFFFFFFF0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82316e28
	sub_82316E28(ctx, base);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r9.u64;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82316e28
	sub_82316E28(ctx, base);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 + ctx_arrow(ctx)->r11.u64;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r27.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_8232B838) PPC_WEAK_FUNC(sub_8232B838);
PPC_FUNC_IMPL(__imp__sub_8232B838) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed114
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r8.u64;
	// bl 0x82348b40
	sub_82348B40(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,21232
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 21232;
	// mr. ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r19.s32, 0, xer);
	// bne 0x8232b898
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B898;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1730
	ctx_arrow(ctx)->r7.s64 = 1730;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,21364
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 21364;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B898:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x8232b8d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B8D8;
	// lfs f13,4(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x8232b8d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B8D8;
	// lfs f13,8(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x8232b8d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B8D8;
	// lfs f13,12(ctx_arrow(ctx)->r30)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x8232b8d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232B8D8;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8232ba00
	goto loc_8232BA00;
loc_8232B8D8:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x82348da0
	sub_82348DA0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,21344
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + 21344;
	// mr. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// bgt 0x8232b90c
	if (ctx_arrow(ctx)->r0.gt()) goto loc_8232B90C;
	// li ctx_arrow(ctx)->r7,1750
	ctx_arrow(ctx)->r7.s64 = 1750;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B90C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8232b948
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232B948;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// subf ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r30.s64;
	// subf ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r30.s64;
loc_8232B924:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,128
	ctx_arrow(ctx)->r4.s64 = 128;
	// lfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x82349228
	sub_82349228(ctx, base);
	// stwx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + ctx_arrow(ctx)->r30.u32);
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// bne 0x8232b924
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232B924;
loc_8232B948:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823490c0
	sub_823490C0(ctx, base);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82349088
	sub_82349088(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bgt 0x8232b98c
	if (ctx_arrow(ctx)->r0.gt()) goto loc_8232B98C;
	// li ctx_arrow(ctx)->r7,1763
	ctx_arrow(ctx)->r7.s64 = 1763;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232B98C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b9e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B9E0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b9c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B9C4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8232b9bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232B9BC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 8, xer);
	// bne ctx_arrow(ctx)->r6,0x8232ba10
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BA10;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// b 0x8232ba0c
	goto loc_8232BA0C;
loc_8232B9BC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232ba04
	goto loc_8232BA04;
loc_8232B9C4:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// sth ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r31.u32 + 0, ctx_arrow(ctx)->r11, 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xFFFF0000;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// b 0x8232ba00
	goto loc_8232BA00;
loc_8232B9E0:
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 8);
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 8) & 0xFFFFFF00;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 8) & 0xFFFFFF00;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
loc_8232BA00:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_8232BA04:
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
loc_8232BA0C:
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
loc_8232BA10:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r19.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// b 0x823ed164
	return;
}

alias(__imp__sub_8232BA20) PPC_WEAK_FUNC(sub_8232BA20);
PPC_FUNC_IMPL(__imp__sub_8232BA20) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ba7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BA7C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,34
	ctx_arrow(ctx)->r4.s64 = 34;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,35
	ctx_arrow(ctx)->r4.s64 = 35;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,36
	ctx_arrow(ctx)->r4.s64 = 36;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x8232baa0
	goto loc_8232BAA0;
loc_8232BA7C:
	// li ctx_arrow(ctx)->r4,960
	ctx_arrow(ctx)->r4.s64 = 960;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,961
	ctx_arrow(ctx)->r4.s64 = 961;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269768
	sub_82269768(ctx, base);
	// lis ctx_arrow(ctx)->r24,770
	ctx_arrow(ctx)->r24.s64 = 50462720;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// ori ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r24,256
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r24.u64 | 256;
loc_8232BAA0:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,21232
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 21232;
	// beq ctx_arrow(ctx)->r6,0x8232bac0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BAC0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 17, xer);
	// blt ctx_arrow(ctx)->r6,0x8232badc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BADC;
loc_8232BAC0:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,321
	ctx_arrow(ctx)->r7.s64 = 321;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23288
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23288;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BADC:
	// clrlwi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r27.u32 & 0xFF;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mulli ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,12
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 * 12;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,64
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 64, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,20136
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 20136;
	// bne ctx_arrow(ctx)->r6,0x8232bb38
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BB38;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4);
	// bne ctx_arrow(ctx)->r6,0x8232bb24
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BB24;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,331
	ctx_arrow(ctx)->r7.s64 = 331;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23260
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23260;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BB24:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bb54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BB54;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232bb50
	goto loc_8232BB50;
loc_8232BB38:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4);
	// bne ctx_arrow(ctx)->r6,0x8232bb54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BB54;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232BB50:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 4);
loc_8232BB54:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// lwzx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 2, xer);
	// blt ctx_arrow(ctx)->r6,0x8232bb8c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BB8C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,24,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 24) & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bb8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BB8C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,369
	ctx_arrow(ctx)->r7.s64 = 369;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23144
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23144;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BB8C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8232bbbc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BBBC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,16,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 16) & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bbbc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BBBC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,372
	ctx_arrow(ctx)->r7.s64 = 372;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23024
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23024;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BBBC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x8232bbec
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BBEC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,8,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 8) & 0xFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bbec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BBEC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,375
	ctx_arrow(ctx)->r7.s64 = 375;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22904
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22904;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BBEC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,34
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 34, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bc10
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BC10;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,383
	ctx_arrow(ctx)->r7.s64 = 383;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22824
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22824;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BC10:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,35
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 35, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bc34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BC34;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,385
	ctx_arrow(ctx)->r7.s64 = 385;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22744
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22744;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BC34:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 17, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bc58
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BC58;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,387
	ctx_arrow(ctx)->r7.s64 = 387;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22664
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22664;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BC58:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bc7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BC7C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,389
	ctx_arrow(ctx)->r7.s64 = 389;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22576
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22576;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BC7C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,18
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 18, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bca0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BCA0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,391
	ctx_arrow(ctx)->r7.s64 = 391;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22488
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22488;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BCA0:
	// li ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8232bcf8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BCF8;
	// beq ctx_arrow(ctx)->r6,0x8232bcf0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BCF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bce8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BCE8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,32
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bce0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BCE0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,33
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 33, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bcd8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BCD8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,64
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 64, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bcf8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BCF8;
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// b 0x8232bcfc
	goto loc_8232BCFC;
loc_8232BCD8:
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// b 0x8232bcfc
	goto loc_8232BCFC;
loc_8232BCE0:
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// b 0x8232bcfc
	goto loc_8232BCFC;
loc_8232BCE8:
	// li ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 4;
	// b 0x8232bcfc
	goto loc_8232BCFC;
loc_8232BCF0:
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 8);
	// b 0x8232bd00
	goto loc_8232BD00;
loc_8232BCF8:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_8232BCFC:
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 8);
loc_8232BD00:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232bdb4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232BDB4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 2, xer);
	// blt ctx_arrow(ctx)->r6,0x8232bd48
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BD48;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,24,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 24) & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bd48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BD48;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bd48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BD48;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bd48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BD48;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,450
	ctx_arrow(ctx)->r7.s64 = 450;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22232
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22232;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BD48:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8232bd88
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BD88;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,16,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 16) & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bd88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BD88;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bd88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BD88;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bd88
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BD88;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,454
	ctx_arrow(ctx)->r7.s64 = 454;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,21976
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 21976;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BD88:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BE94;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,8,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 8) & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE94;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE94;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE94;
	// li ctx_arrow(ctx)->r7,458
	ctx_arrow(ctx)->r7.s64 = 458;
	// b 0x8232be7c
	goto loc_8232BE7C;
loc_8232BDB4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bdd8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BDD8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,466
	ctx_arrow(ctx)->r7.s64 = 466;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,21896
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 21896;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BDD8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 2, xer);
	// blt ctx_arrow(ctx)->r6,0x8232be18
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BE18;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,24,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 24) & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE18;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE18;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE18;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,472
	ctx_arrow(ctx)->r7.s64 = 472;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,22232
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 22232;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BE18:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 3, xer);
	// blt ctx_arrow(ctx)->r6,0x8232be54
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BE54;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,16,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 16) & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232be54
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232BE54;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE54;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE54;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,476
	ctx_arrow(ctx)->r7.s64 = 476;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,21640
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 21640;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BE54:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BE94;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,8,24,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r24.u32 | (ctx_arrow(ctx)->r24.u64 << 32), 8) & 0xFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE94;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE94;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x8232be94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BE94;
	// li ctx_arrow(ctx)->r7,480
	ctx_arrow(ctx)->r7.s64 = 480;
loc_8232BE7C:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,21384
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 21384;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BE94:
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8232BEA0) PPC_WEAK_FUNC(sub_8232BEA0);
PPC_FUNC_IMPL(__imp__sub_8232BEA0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,34
	ctx_arrow(ctx)->r4.s64 = 34;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,35
	ctx_arrow(ctx)->r4.s64 = 35;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,36
	ctx_arrow(ctx)->r4.s64 = 36;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82269a70
	sub_82269A70(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,21232
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 21232;
	// beq ctx_arrow(ctx)->r6,0x8232bf0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BF0C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 17, xer);
	// blt ctx_arrow(ctx)->r6,0x8232bf28
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232BF28;
loc_8232BF0C:
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,553
	ctx_arrow(ctx)->r7.s64 = 553;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23348
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23348;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BF28:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u32 & 0xFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,4,0,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 4) & 0xFFFFFFF0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,64
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 64, xer);
	// bne ctx_arrow(ctx)->r6,0x8232bf64
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BF64;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20344
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 20344;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// bne 0x8232bfcc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232BFCC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,564
	ctx_arrow(ctx)->r7.s64 = 564;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23332
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23332;
	// b 0x8232bfbc
	goto loc_8232BFBC;
loc_8232BF64:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20344
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 20344;
	// bne ctx_arrow(ctx)->r6,0x8232bf98
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232BF98;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// bne 0x8232bfcc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232BFCC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,572
	ctx_arrow(ctx)->r7.s64 = 572;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23332
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23332;
	// b 0x8232bfbc
	goto loc_8232BFBC;
loc_8232BF98:
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// bne 0x8232bfcc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232BFCC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232bfcc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232BFCC;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r7,585
	ctx_arrow(ctx)->r7.s64 = 585;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,13944
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 13944;
loc_8232BFBC:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232BFCC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232BFD8) PPC_WEAK_FUNC(sub_8232BFD8);
PPC_FUNC_IMPL(__imp__sub_8232BFD8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c020
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C020;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,244
	ctx_arrow(ctx)->r7.s64 = 244;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23436
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23436;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C020:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82349790
	sub_82349790(ctx, base);
	// stw ctx_arrow(ctx)->r29,16(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8232C038) PPC_WEAK_FUNC(sub_8232C038);
PPC_FUNC_IMPL(__imp__sub_8232C038) {
	PPC_FUNC_PROLOGUE();
	// lbz ctx_arrow(ctx)->r3,2144(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U8(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C040) PPC_WEAK_FUNC(sub_8232C040);
PPC_FUNC_IMPL(__imp__sub_8232C040) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233ba98
	sub_8233BA98(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stb ctx_arrow(ctx)->r10,1394(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 1394));
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C080) PPC_WEAK_FUNC(sub_8232C080);
PPC_FUNC_IMPL(__imp__sub_8232C080) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 2;
	// li ctx_arrow(ctx)->r4,8
	ctx_arrow(ctx)->r4.s64 = 8;
	// stw ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x82313588
	sub_82313588(&ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C0D8) PPC_WEAK_FUNC(sub_8232C0D8);
PPC_FUNC_IMPL(__imp__sub_8232C0D8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3,184
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r3.s64 + 184;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82347d78
	sub_82347D78(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82347df8
	sub_82347DF8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C120) PPC_WEAK_FUNC(sub_8232C120);
PPC_FUNC_IMPL(__imp__sub_8232C120) {
	PPC_FUNC_PROLOGUE();
	// lbz ctx_arrow(ctx)->r3,2072(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U8(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C128) PPC_WEAK_FUNC(sub_8232C128);
PPC_FUNC_IMPL(__imp__sub_8232C128) {
	PPC_FUNC_PROLOGUE();
	// lwz ctx_arrow(ctx)->r3,2076(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C130) PPC_WEAK_FUNC(sub_8232C130);
PPC_FUNC_IMPL(__imp__sub_8232C130) {
	PPC_FUNC_PROLOGUE();
	// lbz ctx_arrow(ctx)->r3,2073(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U8(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C138) PPC_WEAK_FUNC(sub_8232C138);
PPC_FUNC_IMPL(__imp__sub_8232C138) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,23,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 23) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232c17c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232C17C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1902
	ctx_arrow(ctx)->r7.s64 = 1902;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,23632
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 23632;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23608
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23608;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C17C:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,58
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 58;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C1A0) PPC_WEAK_FUNC(sub_8232C1A0);
PPC_FUNC_IMPL(__imp__sub_8232C1A0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,23,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 23) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232c1e4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232C1E4;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1909
	ctx_arrow(ctx)->r7.s64 = 1909;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,23632
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 23632;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23608
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23608;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C1E4:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,58
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 58;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,23,21
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFFFFFDFF;
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stw ctx_arrow(ctx)->r10,228(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 228);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C228) PPC_WEAK_FUNC(sub_8232C228);
PPC_FUNC_IMPL(__imp__sub_8232C228) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c270
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C270;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1919
	ctx_arrow(ctx)->r7.s64 = 1919;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,23632
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 23632;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23712
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23712;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C270:
	// lwz ctx_arrow(ctx)->r10,228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,23,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 23) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8232c2ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C2AC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,57
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 57;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,58
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 58;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,57
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 57;
	// b 0x8232c2b0
	goto loc_8232C2B0;
loc_8232C2AC:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,58
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 58;
loc_8232C2B0:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C2D0) PPC_WEAK_FUNC(sub_8232C2D0);
PPC_FUNC_IMPL(__imp__sub_8232C2D0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r11.s32, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,23632
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 23632;
	// ble ctx_arrow(ctx)->r6,0x8232c320
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232C320;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1945
	ctx_arrow(ctx)->r7.s64 = 1945;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23800
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23800;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C320:
	// lwz ctx_arrow(ctx)->r11,952(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,1393(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8232c364
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C364;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c364
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C364;
	// lwz ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,23,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 23) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232c364
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C364;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1948
	ctx_arrow(ctx)->r7.s64 = 1948;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23728
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23728;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C364:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,58
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 58;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232C378) PPC_WEAK_FUNC(sub_8232C378);
PPC_FUNC_IMPL(__imp__sub_8232C378) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r3,2068(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82349a70
	sub_82349A70(ctx, base);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C3B0) PPC_WEAK_FUNC(sub_8232C3B0);
PPC_FUNC_IMPL(__imp__sub_8232C3B0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,2068(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8232c42c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232C42C;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_8232C3DC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8232c3f4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232C3F4;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// b 0x8232c3fc
	goto loc_8232C3FC;
loc_8232C3F4:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82349a70
	sub_82349A70(ctx, base);
loc_8232C3FC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r28.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c414
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C414;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r3,2068(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823499a8
	sub_823499A8(ctx, base);
loc_8232C414:
	// lwz ctx_arrow(ctx)->r3,2068(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8232c3dc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232C3DC;
loc_8232C42C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8232C438) PPC_WEAK_FUNC(sub_8232C438);
PPC_FUNC_IMPL(__imp__sub_8232C438) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r24,136(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c5d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C5D8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,23820
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 23820;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
loc_8232C470:
	// lwz ctx_arrow(ctx)->r31,28(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232c5bc
	goto loc_8232C5BC;
loc_8232C478:
	// lwz ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232c5b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C5B8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8232c530
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232C530;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,84
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 84;
loc_8232C4A8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,35
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 35, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c4f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C4F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,36
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 36, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c4f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C4F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 37, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c4f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C4F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,38
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 38, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c4f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C4F4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r3.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8232c4a8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232C4A8;
	// b 0x8232c530
	goto loc_8232C530;
loc_8232C4F4:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r4.s64 = 31;
	// bl 0x8233b2e0
	sub_8233B2E0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne 0x8232c524
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232C524;
	// li ctx_arrow(ctx)->r7,306
	ctx_arrow(ctx)->r7.s64 = 306;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C524:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234ce48
	sub_8234CE48(ctx, base);
loc_8232C530:
	// lwz ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232c570
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C570;
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234c930
	sub_8234C930(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 8, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c570
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C570;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r4.s64 = 31;
	// bl 0x8233b2e0
	sub_8233B2E0(ctx, base);
	// mr. ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq 0x8232c570
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C570;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234ce48
	sub_8234CE48(ctx, base);
loc_8232C570:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c5b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C5B8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234be30
	sub_8234BE30(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232c5b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C5B8;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,42
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 42, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c5b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C5B8;
	// lwz ctx_arrow(ctx)->r30,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234ce48
	sub_8234CE48(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234a3f8
	sub_8234A3F8(ctx, base);
loc_8232C5B8:
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232C5BC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c478
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C478;
	// lwz ctx_arrow(ctx)->r24,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c470
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C470;
loc_8232C5D8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8232C5E0) PPC_WEAK_FUNC(sub_8232C5E0);
PPC_FUNC_IMPL(__imp__sub_8232C5E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r4,152(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8232c610
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C610;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,1452(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823136b8
	sub_823136B8(ctx, base);
loc_8232C610:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r3,1452(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82313588
	sub_82313588(ctx, base);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r3,152(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 152);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 1;
loc_8232C630:
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r8,152(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r8.u32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bne 0x8232c630
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232C630;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8232C650) PPC_WEAK_FUNC(sub_8232C650);
PPC_FUNC_IMPL(__imp__sub_8232C650) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-400(ctx_arrow(ctx)->r1)
	ea = -400 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,1360(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x8232c6d4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232C6D4;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 80;
loc_8232C67C:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// lwz ctx_arrow(ctx)->r29,1456(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82313588
	sub_82313588(ctx, base);
	// addic. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,4
	xer.ca = ctx_arrow(ctx)->r3.u32 > 4294967291;
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// beq 0x8232c6b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232C6B0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,1456(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8232c080
	sub_8232C080(ctx, base);
	// b 0x8232c6b4
	goto loc_8232C6B4;
loc_8232C6B0:
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_8232C6B4:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// lwz ctx_arrow(ctx)->r11,1360(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, ctx_arrow(ctx)->r11.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8232c67c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232C67C;
loc_8232C6D4:
	// lwz ctx_arrow(ctx)->r30,136(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232c6fc
	goto loc_8232C6FC;
loc_8232C6DC:
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82349a70
	sub_82349A70(ctx, base);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232C6FC:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c6dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C6DC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 128;
	// bl 0x82349808
	sub_82349808(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,1452(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x82313588
	sub_82313588(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,160(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 160);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,1360(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// blt ctx_arrow(ctx)->r6,0x8232c7a4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232C7A4;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 80;
loc_8232C74C:
	// lwz ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232c788
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C788;
	// rotlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r26.u32, 0);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
loc_8232C764:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x82337948
	sub_82337948(ctx, base);
	// lwz ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// stwx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + ctx_arrow(ctx)->r11.u32);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -4;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c764
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C764;
loc_8232C788:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// lwz ctx_arrow(ctx)->r11,1360(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r25.s32, ctx_arrow(ctx)->r11.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8232c74c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232C74C;
loc_8232C7A4:
	// lwz ctx_arrow(ctx)->r3,160(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,400
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 400;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8232C7B0) PPC_WEAK_FUNC(sub_8232C7B0);
PPC_FUNC_IMPL(__imp__sub_8232C7B0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,18
	ctx_arrow(ctx)->r4.s64 = 18;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stb ctx_arrow(ctx)->r11,2072(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 2072, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,2076(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 2076);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232C7F8) PPC_WEAK_FUNC(sub_8232C7F8);
PPC_FUNC_IMPL(__imp__sub_8232C7F8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8232c7b0
	sub_8232C7B0(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lwz ctx_arrow(ctx)->r10,172(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stb ctx_arrow(ctx)->r11,2073(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 2073, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234a048
	sub_8234A048(ctx, base);
	// b 0x8232c908
	goto loc_8232C908;
loc_8232C82C:
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 32;
loc_8232C834:
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r26.u32);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,21
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 21;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, ctx_arrow(ctx)->r27.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c8f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C8F4;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c8f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C8F4;
	// li ctx_arrow(ctx)->r3,38
	ctx_arrow(ctx)->r3.s64 = 38;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
loc_8232C88C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x8232c88c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232C88C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
loc_8232C8F4:
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 2, xer);
	// blt ctx_arrow(ctx)->r6,0x8232c834
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232C834;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82349f88
	sub_82349F88(ctx, base);
loc_8232C908:
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// bne ctx_arrow(ctx)->r6,0x8232c82c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C82C;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8232C928) PPC_WEAK_FUNC(sub_8232C928);
PPC_FUNC_IMPL(__imp__sub_8232C928) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
	// beq ctx_arrow(ctx)->r6,0x8232c9f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232C9F4;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233b2a8
	sub_8233B2A8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x8232c99c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232C99C;
	// lwz ctx_arrow(ctx)->r5,56(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233b300
	sub_8233B300(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r4,128(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// b 0x8232c9b4
	goto loc_8232C9B4;
loc_8232C99C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r4,128(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232C9B4:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232c9d8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232C9D8;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,649
	ctx_arrow(ctx)->r7.s64 = 649;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23848
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23848;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r21.u64;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232C9D8:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234a3a8
	sub_8234A3A8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
loc_8232C9F4:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8232ccac
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232CCAC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r27,84
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r27.s64 + 84;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,23424
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 23424;
	// lis ctx_arrow(ctx)->r11,-32017
	ctx_arrow(ctx)->r11.s64 = -2098266112;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,-25104
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + -25104;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,23832
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + 23832;
loc_8232CA20:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,26
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 26, xer);
	// beq ctx_arrow(ctx)->r6,0x8232ca34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232CA34;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,27
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 27, xer);
	// bne ctx_arrow(ctx)->r6,0x8232ca4c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232CA4C;
loc_8232CA34:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,1508(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// stw ctx_arrow(ctx)->r10,1508(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 1508);
	// stw ctx_arrow(ctx)->r10,-24(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + -24);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
loc_8232CA4C:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8233b2a8
	sub_8233B2A8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x8232ca94
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232CA94;
	// lwz ctx_arrow(ctx)->r5,-24(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233b300
	sub_8233B300(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,-16(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// b 0x8232caac
	goto loc_8232CAAC;
loc_8232CA94:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r4,-16(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8232CAAC:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234a3f8
	sub_8234A3F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,26
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 26, xer);
	// bne ctx_arrow(ctx)->r6,0x8232cb50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232CB50;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c7b0
	sub_8232C7B0(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,62
	ctx_arrow(ctx)->r3.s64 = 62;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stb ctx_arrow(ctx)->r11,2073(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 2073, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 132);
	// bl 0x8232c928
	sub_8232C928(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232cc10
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232CC10;
	// li ctx_arrow(ctx)->r7,704
	ctx_arrow(ctx)->r7.s64 = 704;
	// b 0x8232cbfc
	goto loc_8232CBFC;
loc_8232CB50:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 27, xer);
	// bne ctx_arrow(ctx)->r6,0x8232cc10
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232CC10;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c7b0
	sub_8232C7B0(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,49
	ctx_arrow(ctx)->r3.s64 = 49;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.s64 = 2;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r6.s64 = 3;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c928
	sub_8232C928(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232cc10
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232CC10;
	// li ctx_arrow(ctx)->r7,718
	ctx_arrow(ctx)->r7.s64 = 718;
loc_8232CBFC:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r21.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232CC10:
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,52
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 52;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 26) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232cc98
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232CC98;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232cc98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232CC98;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 11, xer);
	// beq ctx_arrow(ctx)->r6,0x8232cc98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232CC98;
	// lbz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// beq ctx_arrow(ctx)->r6,0x8232cc4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232CC4C;
	// lbz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_8232CC4C:
	// stb ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r26)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r26.u32 + 48, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lbz ctx_arrow(ctx)->r11,129(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// beq ctx_arrow(ctx)->r6,0x8232cc64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232CC64;
	// lbz ctx_arrow(ctx)->r11,49(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_8232CC64:
	// stb ctx_arrow(ctx)->r11,49(ctx_arrow(ctx)->r26)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r26.u32 + 49, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lbz ctx_arrow(ctx)->r11,130(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// beq ctx_arrow(ctx)->r6,0x8232cc7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232CC7C;
	// lbz ctx_arrow(ctx)->r11,50(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_8232CC7C:
	// stb ctx_arrow(ctx)->r11,50(ctx_arrow(ctx)->r26)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r26.u32 + 50, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lbz ctx_arrow(ctx)->r11,131(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// beq ctx_arrow(ctx)->r6,0x8232cc94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232CC94;
	// lbz ctx_arrow(ctx)->r11,51(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_8232CC94:
	// stb ctx_arrow(ctx)->r11,51(ctx_arrow(ctx)->r26)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r26.u32 + 51, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_8232CC98:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r24.s64 + 1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, ctx_arrow(ctx)->r11.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8232ca20
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232CA20;
loc_8232CCAC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed168
	return;
}

alias(__imp__sub_8232CCB8) PPC_WEAK_FUNC(sub_8232CCB8);
PPC_FUNC_IMPL(__imp__sub_8232CCB8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r31,136(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232cce4
	goto loc_8232CCE4;
loc_8232CCD0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234f078
	sub_8234F078(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232cd08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232CD08;
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232CCE4:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232ccd0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232CCD0;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_8232CCF4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_8232CD08:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8232ccf4
	goto loc_8232CCF4;
}

alias(__imp__sub_8232CD10) PPC_WEAK_FUNC(sub_8232CD10);
PPC_FUNC_IMPL(__imp__sub_8232CD10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 31;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x82313588
	sub_82313588(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x8232cd78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232CD78;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_8232CD5C:
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r8.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8232cd5c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232CD5C;
loc_8232CD78:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8232CD88) PPC_WEAK_FUNC(sub_8232CD88);
PPC_FUNC_IMPL(__imp__sub_8232CD88) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,964
	ctx_arrow(ctx)->r4.s64 = 964;
	// lwz ctx_arrow(ctx)->r30,1452(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r27,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r28,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82313588
	sub_82313588(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,4
	xer.ca = ctx_arrow(ctx)->r11.u32 > 4294967291;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// beq 0x8232cdec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232CDEC;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234d7b8
	sub_8234D7B8(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x8232cdf0
	goto loc_8232CDF0;
loc_8232CDEC:
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
loc_8232CDF0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
loc_8232CE24:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x8232ce24
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232CE24;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,108(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234a750
	sub_8234A750(ctx, base);
	// lwz ctx_arrow(ctx)->r3,108(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234c850
	sub_8234C850(ctx, base);
	// lwz ctx_arrow(ctx)->r3,108(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232cebc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232CEBC;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1198
	ctx_arrow(ctx)->r7.s64 = 1198;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23856
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23856;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232CEBC:
	// lwz ctx_arrow(ctx)->r3,96(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,108(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 108);
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82349a70
	sub_82349A70(ctx, base);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8232CED8) PPC_WEAK_FUNC(sub_8232CED8);
PPC_FUNC_IMPL(__imp__sub_8232CED8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82329760
	sub_82329760(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82329800
	sub_82329800(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x823298a0
	sub_823298A0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82329940
	sub_82329940(ctx, base);
	// lwz ctx_arrow(ctx)->r11,108(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,18
	ctx_arrow(ctx)->r3.s64 = 18;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234e340
	sub_8234E340(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f4,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lfs f3,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f1,92(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// stb ctx_arrow(ctx)->r11,154(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 154, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lwz ctx_arrow(ctx)->r4,108(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,948(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234efd0
	sub_8234EFD0(ctx, base);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,23
	ctx_arrow(ctx)->r4.s64 = 23;
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234dd10
	sub_8234DD10(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
loc_8232D028:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x8232d028
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232D028;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f4,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lfs f3,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// lfs f2,88(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lfs f1,92(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r4,108(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,948(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234efd0
	sub_8234EFD0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8232D0C0) PPC_WEAK_FUNC(sub_8232D0C0);
PPC_FUNC_IMPL(__imp__sub_8232D0C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,1488(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82326b28
	sub_82326B28(ctx, base);
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,1488(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82326c40
	sub_82326C40(ctx, base);
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,1488(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82326d50
	sub_82326D50(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,1508(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// stw ctx_arrow(ctx)->r5,1508(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 1508);
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234f468
	sub_8234F468(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
	// beq ctx_arrow(ctx)->r6,0x8232d1e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D1E0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1338
	ctx_arrow(ctx)->r7.s64 = 1338;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23924
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23924;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D1E0:
	// lwz ctx_arrow(ctx)->r9,168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// lwz ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r9,60(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232D200:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r6.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8232d210
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232D210;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r25.u64;
	// b 0x8232d21c
	goto loc_8232D21C;
loc_8232D210:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232D21C:
	// clrlwi. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x8232d234
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232D234;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x8232d200
	goto loc_8232D200;
loc_8232D234:
	// lwz ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 1, xer);
	// lwz ctx_arrow(ctx)->r27,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x8232d47c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232D47C;
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,1488(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82326e68
	sub_82326E68(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x8232d3fc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D3FC;
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82329c18
	sub_82329C18(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82329d20
	sub_82329D20(ctx, base);
	// li ctx_arrow(ctx)->r3,18
	ctx_arrow(ctx)->r3.s64 = 18;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234e340
	sub_8234E340(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,23428
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 23428;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 128);
	// lfs f4,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// fmr f3,f4
	ctx.f3.f64 = ctx.f4.f64;
	// fmr f2,f4
	ctx.f2.f64 = ctx.f4.f64;
	// fmr f1,f4
	ctx.f1.f64 = ctx.f4.f64;
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stb ctx_arrow(ctx)->r11,153(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 153, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 136);
	// bl 0x8232c928
	sub_8232C928(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232d36c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D36C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1372
	ctx_arrow(ctx)->r7.s64 = 1372;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23908
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23908;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D36C:
	// li ctx_arrow(ctx)->r3,19
	ctx_arrow(ctx)->r3.s64 = 19;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234e340
	sub_8234E340(ctx, base);
	// lwz ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r10,23
	ctx_arrow(ctx)->r10.s64 = 23;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r25,56(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 56);
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 80);
	// stw ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 128);
	// bl 0x8234c2f8
	sub_8234C2F8(&ctx);
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 132);
	// lfs f4,84(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// fmr f3,f4
	ctx.f3.f64 = ctx.f4.f64;
	// fmr f2,f4
	ctx.f2.f64 = ctx.f4.f64;
	// fmr f1,f4
	ctx.f1.f64 = ctx.f4.f64;
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c928
	sub_8232C928(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232d664
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D664;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1383
	ctx_arrow(ctx)->r7.s64 = 1383;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23892
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23892;
	// b 0x8232d654
	goto loc_8232D654;
loc_8232D3FC:
	// li ctx_arrow(ctx)->r3,49
	ctx_arrow(ctx)->r3.s64 = 49;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,23428
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 23428;
	// li ctx_arrow(ctx)->r10,23
	ctx_arrow(ctx)->r10.s64 = 23;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r25,56(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 56);
	// lwz ctx_arrow(ctx)->r11,-16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 80);
	// stw ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 128);
	// bl 0x8234c2f8
	sub_8234C2F8(&ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 132);
	// bl 0x8232c928
	sub_8232C928(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232d664
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D664;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1394
	ctx_arrow(ctx)->r7.s64 = 1394;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23832
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23832;
	// b 0x8232d654
	goto loc_8232D654;
loc_8232D47C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d640
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D640;
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82329f20
	sub_82329F20(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82329e80
	sub_82329E80(ctx, base);
	// li ctx_arrow(ctx)->r3,64
	ctx_arrow(ctx)->r3.s64 = 64;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234dc30
	sub_8234DC30(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r29,23
	ctx_arrow(ctx)->r29.s64 = 23;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r25,56(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 56);
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 80);
	// bl 0x8234c2f8
	sub_8234C2F8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,23428
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 23428;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 132);
	// bl 0x8232c928
	sub_8232C928(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,23892
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 23892;
	// bne 0x8232d53c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D53C;
	// li ctx_arrow(ctx)->r7,1412
	ctx_arrow(ctx)->r7.s64 = 1412;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D53C:
	// li ctx_arrow(ctx)->r3,19
	ctx_arrow(ctx)->r3.s64 = 19;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234e340
	sub_8234E340(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r25,56(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 56);
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 80);
	// stw ctx_arrow(ctx)->r25,60(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 60);
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 84);
	// lfs f4,84(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// fmr f3,f4
	ctx.f3.f64 = ctx.f4.f64;
	// fmr f2,f4
	ctx.f2.f64 = ctx.f4.f64;
	// fmr f1,f4
	ctx.f1.f64 = ctx.f4.f64;
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c928
	sub_8232C928(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232d5b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D5B8;
	// li ctx_arrow(ctx)->r7,1420
	ctx_arrow(ctx)->r7.s64 = 1420;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D5B8:
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234dd10
	sub_8234DD10(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// stw ctx_arrow(ctx)->r25,56(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 56);
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 80);
	// stw ctx_arrow(ctx)->r25,60(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 60);
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 84);
	// bl 0x8234c2f8
	sub_8234C2F8(&ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 136);
	// lfs f4,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// fmr f3,f4
	ctx.f3.f64 = ctx.f4.f64;
	// fmr f2,f4
	ctx.f2.f64 = ctx.f4.f64;
	// fmr f1,f4
	ctx.f1.f64 = ctx.f4.f64;
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c928
	sub_8232C928(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232d664
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D664;
	// li ctx_arrow(ctx)->r7,1430
	ctx_arrow(ctx)->r7.s64 = 1430;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// b 0x8232d654
	goto loc_8232D654;
loc_8232D640:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232d664
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232D664;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1432
	ctx_arrow(ctx)->r7.s64 = 1432;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23876
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23876;
loc_8232D654:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D664:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_8232D670) PPC_WEAK_FUNC(sub_8232D670);
PPC_FUNC_IMPL(__imp__sub_8232D670) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,49
	ctx_arrow(ctx)->r3.s64 = 49;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// li ctx_arrow(ctx)->r9,23
	ctx_arrow(ctx)->r9.s64 = 23;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lfs f4,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// stw ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// lfs f3,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// fmr f2,f3
	ctx.f2.f64 = ctx.f3.f64;
	// fmr f1,f3
	ctx.f1.f64 = ctx.f3.f64;
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8232c928
	sub_8232C928(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r3,168(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232d718
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D718;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1445
	ctx_arrow(ctx)->r7.s64 = 1445;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23832
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23832;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D718:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8232D730) PPC_WEAK_FUNC(sub_8232D730);
PPC_FUNC_IMPL(__imp__sub_8232D730) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed114
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r19,136(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r19.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d90c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D90C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,23960
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + 23960;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
loc_8232D768:
	// lwz ctx_arrow(ctx)->r30,28(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8232d8f0
	goto loc_8232D8F0;
loc_8232D770:
	// lwz ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232d8ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232D8EC;
	// lwz ctx_arrow(ctx)->r23,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r23.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r23.s32, 0, xer);
	// ble 0x8232d8ec
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_8232D8EC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,84
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 84;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r23.u64;
loc_8232D798:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d7c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D7C4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d7c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D7C4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d7c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D7C4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 11, xer);
	// bne ctx_arrow(ctx)->r6,0x8232d7c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232D7C8;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// b 0x8232d7c8
	goto loc_8232D7C8;
loc_8232D7C4:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
loc_8232D7C8:
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 0;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bne 0x8232d798
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D798;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d8ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D8EC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d8ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D8EC;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r8.s32, xer);
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// bgt ctx_arrow(ctx)->r6,0x8232d7f4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8232D7F4;
	// li ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = 1;
loc_8232D7F4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d81c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D81C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d81c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D81C;
	// li ctx_arrow(ctx)->r7,1915
	ctx_arrow(ctx)->r7.s64 = 1915;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D81C:
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30,32
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r30.s64 + 32;
loc_8232D824:
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d840
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D840;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8232d840
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232D840;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x8232d848
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232D848;
loc_8232D840:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8232d858
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D858;
loc_8232D848:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 11, xer);
	// bne ctx_arrow(ctx)->r6,0x8232d8dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232D8DC;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232d8dc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D8DC;
loc_8232D858:
	// li ctx_arrow(ctx)->r3,49
	ctx_arrow(ctx)->r3.s64 = 49;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,1508(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// stw ctx_arrow(ctx)->r5,1508(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 1508);
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8234a750
	sub_8234A750(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,948(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234efd0
	sub_8234EFD0(ctx, base);
loc_8232D8DC:
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, ctx_arrow(ctx)->r23.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8232d824
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232D824;
loc_8232D8EC:
	// lwz ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232D8F0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232d770
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232D770;
	// lwz ctx_arrow(ctx)->r19,8(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r19.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r19)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8232d768
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232D768;
loc_8232D90C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed164
	return;
}

alias(__imp__sub_8232D918) PPC_WEAK_FUNC(sub_8232D918);
PPC_FUNC_IMPL(__imp__sub_8232D918) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,184
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 184;
	// bl 0x82348230
	sub_82348230(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232dddc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232DDDC;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,23464
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 23464;
	// bne 0x8232d99c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232D99C;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1977
	ctx_arrow(ctx)->r7.s64 = 1977;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,24056
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 24056;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232D99C:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,20
	ctx_arrow(ctx)->r4.s64 = 20;
	// lwz ctx_arrow(ctx)->r29,1452(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82313588
	sub_82313588(ctx, base);
	// addic. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,4
	xer.ca = ctx_arrow(ctx)->r3.u32 > 4294967291;
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// beq 0x8232d9d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232D9D4;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,1452(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8232c080
	sub_8232C080(ctx, base);
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r30.u64;
	// b 0x8232d9d8
	goto loc_8232D9D8;
loc_8232D9D4:
	// li ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r21.s64 = 0;
loc_8232D9D8:
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r24.u64;
loc_8232D9E8:
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8232da00
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232DA00;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8232da0c
	goto loc_8232DA0C;
loc_8232DA00:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64;
	// lwzx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_8232DA0C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232da70
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232DA70;
	// lwz ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8232da64
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232DA64;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x8232da64
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232DA64;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,84
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r30.s64 + 84;
loc_8232DA34:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232da50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232DA50;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82349a70
	sub_82349A70(ctx, base);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
loc_8232DA50:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, ctx_arrow(ctx)->r11.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8232da34
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232DA34;
loc_8232DA64:
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + 1;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 4;
	// b 0x8232d9e8
	goto loc_8232D9E8;
loc_8232DA70:
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// stb ctx_arrow(ctx)->r24,2073(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 2073, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r24), 0);
	// lwz ctx_arrow(ctx)->r10,1508(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// stw ctx_arrow(ctx)->r5,1508(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 1508);
	// lwz ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8233bb58
	sub_8233BB58(ctx, base);
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8232dac0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232DAC0;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,1996
	ctx_arrow(ctx)->r7.s64 = 1996;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,24016
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 24016;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232DAC0:
	// li ctx_arrow(ctx)->r3,49
	ctx_arrow(ctx)->r3.s64 = 49;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c928
	sub_8232C928(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234bf18
	sub_8234BF18(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8232db70
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8232DB70;
	// lis ctx_arrow(ctx)->r11,-32251
	ctx_arrow(ctx)->r11.s64 = -2113601536;
	// li ctx_arrow(ctx)->r7,2008
	ctx_arrow(ctx)->r7.s64 = 2008;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,23832
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 23832;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x82263fb8
	sub_82263FB8(ctx, base);
loc_8232DB70:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8232c7b0
	sub_8232C7B0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8232dcd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8232DCD4;
	// li ctx_arrow(ctx)->r3,18
	ctx_arrow(ctx)->r3.s64 = 18;
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stb ctx_arrow(ctx)->r24,159(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 159, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r24), 0);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82329640
	sub_82329640(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32207
	ctx_arrow(ctx)->r11.s64 = -2110717952;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16480
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16480;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x82329658
	sub_82329658(ctx, base);
	// lfs f4,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f4.f64 = double(temp.f32);
	// lfs f3,84(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f3.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// fmr f2,f4
	ctx.f2.f64 = ctx.f4.f64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f3
	ctx.f1.f64 = ctx.f3.f64;
	// bl 0x8234cef8
	sub_8234CEF8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// stb ctx_arrow(ctx)->r24,154(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 154, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r24), 0);
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// li ctx_arrow(ctx)->r3,49
	ctx_arrow(ctx)->r3.s64 = 49;
	// lwz ctx_arrow(ctx)->r4,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// stb ctx_arrow(ctx)->r24,153(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 153, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r24), 0);
	// b 0x8232dd40
	goto loc_8232DD40;
loc_8232DCD4:
	// li ctx_arrow(ctx)->r3,49
	ctx_arrow(ctx)->r3.s64 = 49;
	// bl 0x8234be70
	sub_8234BE70(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stb ctx_arrow(ctx)->r24,159(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 159, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r24), 0);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
loc_8232DD40:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8234eee0
	sub_8234EEE0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8232dddc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8232DDDC;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8232dd74
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8232DD74;
loc_8232DD68:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// b 0x8232dd80
	goto loc_8232DD80;
loc_8232DD74:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// bl 0x82349a70
	sub_82349A70(ctx, base);
loc_8232DD80:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x8232ddc8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232DDC8;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,84
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 84;
loc_8232DD98:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 32, xer);
	// bne ctx_arrow(ctx)->r6,0x8232ddb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8232DDB4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8234c2f8
	sub_8234C2F8(ctx, base);
loc_8232DDB4:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// ble ctx_arrow(ctx)->r6,0x8232dd98
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8232DD98;
loc_8232DDC8:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8232dd68
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8232DD68;
loc_8232DDDC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
}

