#include "ppc_recomp_patch.h"
#include "../include/ppc/ppc_recomp_fix.h"
#include "../include/ppc/ppc_recomp_wrappers.h"
#include "ppc_recomp_shared.h"
#include "../include/ppc/ppc_register.h"




#include "../include/ppc/ppc_recomp_macros.h"



alias(__imp__sub_8219B0D0) PPC_WEAK_FUNC(sub_8219B0D0);
PPC_FUNC_IMPL(__imp__sub_8219B0D0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b12c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B12C;
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,23,30,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 23) & 0x3;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b0f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B0F8;
	// li ctx_arrow(ctx)->r11,18
	ctx_arrow(ctx)->r11.s64 = 18;
	// b 0x8219b154
	goto loc_8219B154;
loc_8219B0F8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b108
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B108;
	// li ctx_arrow(ctx)->r11,17
	ctx_arrow(ctx)->r11.s64 = 17;
	// b 0x8219b154
	goto loc_8219B154;
loc_8219B108:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b118
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B118;
	// li ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = 20;
	// b 0x8219b154
	goto loc_8219B154;
loc_8219B118:
	// lwz ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,21,21
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x400;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219b154
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B154;
	// li ctx_arrow(ctx)->r11,19
	ctx_arrow(ctx)->r11.s64 = 19;
	// b 0x8219b154
	goto loc_8219B154;
loc_8219B12C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b154
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B154;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219b154
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B154;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,21,22
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x600;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1024
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1024, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b154
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B154;
	// li ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = 16;
loc_8219B154:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// blr 
	return;
}

alias(__imp__sub_8219B160) PPC_WEAK_FUNC(sub_8219B160);
PPC_FUNC_IMPL(__imp__sub_8219B160) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,1768(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 8, xer);
	// bgt ctx_arrow(ctx)->r6,0x8219b330
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219B330;
	// lis ctx_arrow(ctx)->r12,-32254
	ctx_arrow(ctx)->r12.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-17608
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -17608;
	// lbzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r0,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r0.u32 | (ctx_arrow(ctx)->r0.u64 << 32), 2) & 0xFFFFFFFC;
	// lis ctx_arrow(ctx)->r12,-32230
	ctx_arrow(ctx)->r12.s64 = -2112225280;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-20040
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -20040;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r10.u64) {
	case 0:
		goto loc_8219B248;
	case 1:
		goto loc_8219B278;
	case 2:
		goto loc_8219B1FC;
	case 3:
		goto loc_8219B1B8;
	case 4:
		goto loc_8219B330;
	case 5:
		goto loc_8219B2A4;
	case 6:
		goto loc_8219B2D0;
	case 7:
		goto loc_8219B2EC;
	case 8:
		goto loc_8219B308;
	default:
		__builtin_unreachable();
	}
loc_8219B1B8:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8219b330
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B330;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219b1e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B1E0;
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,5120
	ctx_arrow(ctx)->r9.s64 = 5120;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// divwu ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r9.u32;
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,20
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFF;
	// bl 0x8219c0f8
	sub_8219C0F8(ctx, base);
loc_8219B1E0:
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219b330
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B330;
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,-31440(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -31440);
	// b 0x8219b330
	goto loc_8219B330;
loc_8219B1FC:
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219b21c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B21C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b21c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B21C;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,13
	ctx_arrow(ctx)->r5.s64 = 13;
	// bl 0x8219d060
	sub_8219D060(ctx, base);
loc_8219B21C:
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r29,-20096
	ctx_arrow(ctx)->r29.s64 = -1317011456;
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,0,0,19
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFF000;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,0,0,19
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFF000;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
loc_8219B240:
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// b 0x8219b330
	goto loc_8219B330;
loc_8219B248:
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219b268
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B268;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b268
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B268;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,9
	ctx_arrow(ctx)->r5.s64 = 9;
	// bl 0x8219d060
	sub_8219D060(ctx, base);
loc_8219B268:
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,0,0,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFC;
	// b 0x8219b240
	goto loc_8219B240;
loc_8219B278:
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219b298
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B298;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b298
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B298;
	// li ctx_arrow(ctx)->r5,11
	ctx_arrow(ctx)->r5.s64 = 11;
loc_8219B290:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d060
	sub_8219D060(ctx, base);
loc_8219B298:
	// lwz ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// b 0x8219b240
	goto loc_8219B240;
loc_8219B2A4:
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219b2c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B2C4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b2c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B2C4;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,7
	ctx_arrow(ctx)->r5.s64 = 7;
	// bl 0x8219d060
	sub_8219D060(ctx, base);
loc_8219B2C4:
	// lwz ctx_arrow(ctx)->r3,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// b 0x8219b240
	goto loc_8219B240;
loc_8219B2D0:
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219b298
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B298;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b298
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B298;
	// li ctx_arrow(ctx)->r5,8
	ctx_arrow(ctx)->r5.s64 = 8;
	// b 0x8219b290
	goto loc_8219B290;
loc_8219B2EC:
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219b298
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B298;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b298
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B298;
	// li ctx_arrow(ctx)->r5,17
	ctx_arrow(ctx)->r5.s64 = 17;
	// b 0x8219b290
	goto loc_8219B290;
loc_8219B308:
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219b328
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B328;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b328
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B328;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r5,15
	ctx_arrow(ctx)->r5.s64 = 15;
	// bl 0x8219d060
	sub_8219D060(ctx, base);
loc_8219B328:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219bd60
	sub_8219BD60(ctx, base);
loc_8219B330:
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219B348) PPC_WEAK_FUNC(sub_8219B348);
PPC_FUNC_IMPL(__imp__sub_8219B348) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r8.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b39c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B39C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219b39c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B39C;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219b39c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B39C;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_8219B39C:
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,4112
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64 & 4112;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219b3b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B3B0;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8219b3b4
	goto loc_8219B3B4;
loc_8219B3B0:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8219B3B4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r31,-32256
	ctx_arrow(ctx)->r31.s64 = -2113929216;
	// beq ctx_arrow(ctx)->r6,0x8219b3d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B3D8;
	// lwz ctx_arrow(ctx)->r10,1768(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219d060
	sub_8219D060(ctx, base);
loc_8219B3D8:
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,18
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64 & 18;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x8219b4b0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B4B0;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1FFFFFFF;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r26.u64;
	// bl 0x8235eaa8
	sub_8235EAA8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,10888(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r3.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b428
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B428;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,11816
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 11816;
	// bl 0x8219c570
	sub_8219C570(ctx, base);
	// b 0x8219b4b0
	goto loc_8219B4B0;
loc_8219B428:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219b444
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219B444;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219B444:
	// li ctx_arrow(ctx)->r9,2609
	ctx_arrow(ctx)->r9.s64 = 2609;
	// lwz ctx_arrow(ctx)->r8,260(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 65536;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,4095
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r29.s64 + 4095;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,2607
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 2607;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,0,0,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0xFFFFF000;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,0,0,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 0) & 0xFFFFF000;
	// lis ctx_arrow(ctx)->r6,-16380
	ctx_arrow(ctx)->r6.s64 = -1073479680;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,15360
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 15360;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r4,2609
	ctx_arrow(ctx)->r4.s64 = 2609;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lis ctx_arrow(ctx)->r30,-32768
	ctx_arrow(ctx)->r30.s64 = -2147483648;
	// li ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r29.s64 = 8;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
loc_8219B4B0:
	// rlwinm. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0,27,27
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// bne 0x8219b4c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B4C4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,10
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x200000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219b550
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B550;
loc_8219B4C4:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8219b530
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B530;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b4e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B4E8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b4e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B4E8;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r24.s64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r27.s64 + 24;
	// b 0x8219b4f0
	goto loc_8219B4F0;
loc_8219B4E8:
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r23.s64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27,20
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r27.s64 + 20;
loc_8219B4F0:
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,25,7,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x1FFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,127
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 127;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25,7,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 25) & 0x1FFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16,16,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 16) & 0xFFFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x8219b518
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219B518;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64;
loc_8219B518:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219b524
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219B524;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u64;
loc_8219B524:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16,0,15
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 16) & 0xFFFF0000;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
loc_8219B530:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b550
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B550;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addis ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + -1073741824;
loc_8219B550:
	// li ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.s64 = 256;
loc_8219B554:
	// mfmsr ctx_arrow(ctx)->r8
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r27
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r27.u32);
	ctx_arrow(ctx)->r10.u64 = __builtin_bswap32(reserved.u32);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stwcx. ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r27.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r9.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r8,1
	// bne 0x8219b554
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B554;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_8219B580) PPC_WEAK_FUNC(sub_8219B580);
PPC_FUNC_IMPL(__imp__sub_8219B580) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r10,-256
	ctx_arrow(ctx)->r10.s64 = -256;
loc_8219B59C:
	// mfmsr ctx_arrow(ctx)->r7
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r31
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r31.u32);
	ctx_arrow(ctx)->r9.u64 = __builtin_bswap32(reserved.u32);
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwcx. ctx_arrow(ctx)->r8,0,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r31.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r8.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r7,1
	// bne 0x8219b59c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B59C;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,20,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xF00;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,256
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 256, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b680
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B680;
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r30.s64 = -65536;
	// lis ctx_arrow(ctx)->r28,16384
	ctx_arrow(ctx)->r28.s64 = 1073741824;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r30.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b624
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B624;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,16,16,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 16) & 0xFFFF;
	// stw ctx_arrow(ctx)->r30,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFF;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,10,10
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x200000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x8219b60c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B60C;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
loc_8219B60C:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,7,0,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 7) & 0xFFFFFF80;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,7,0,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 7) & 0xFFFFFF80;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
loc_8219B624:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b680
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B680;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8219b680
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219B680;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,16,16,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xFFFF;
	// stw ctx_arrow(ctx)->r30,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,10,10
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x200000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8219b668
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B668;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
loc_8219B668:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,7,0,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 7) & 0xFFFFFF80;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,7,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 7) & 0xFFFFFF80;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r29.u64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
loc_8219B680:
	// sync 
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8219B690) PPC_WEAK_FUNC(sub_8219B690);
PPC_FUNC_IMPL(__imp__sub_8219B690) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 4;
loc_8219B6A4:
	// mfmsr ctx_arrow(ctx)->r9
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r11
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r11.u32);
	ctx_arrow(ctx)->r10.u64 = __builtin_bswap32(reserved.u32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// stwcx. ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r11.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r10.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r9,1
	// bne 0x8219b6a4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B6A4;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b6ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B6EC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b6ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B6EC;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219b6ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B6EC;
	// lwz ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219b690
	sub_8219B690(ctx, base);
loc_8219B6EC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219B708) PPC_WEAK_FUNC(sub_8219B708);
PPC_FUNC_IMPL(__imp__sub_8219B708) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 4;
loc_8219B720:
	// mfmsr ctx_arrow(ctx)->r9
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r11
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r11.u32);
	ctx_arrow(ctx)->r10.u64 = __builtin_bswap32(reserved.u32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// stwcx. ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r11.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r10.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r9,1
	// bne 0x8219b720
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B720;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b774
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B774;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x8219b768
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219B768;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219b768
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B768;
	// lwz ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219b708
	sub_8219B708(ctx, base);
loc_8219B768:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219b160
	sub_8219B160(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_8219B774:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219B788) PPC_WEAK_FUNC(sub_8219B788);
PPC_FUNC_IMPL(__imp__sub_8219B788) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,25728
	ctx_arrow(ctx)->r4.s64 = 1686110208;
	// li ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r3.s64 = 32;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne 0x8219b7b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B7B8;
loc_8219B7B0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8219b848
	goto loc_8219B848;
loc_8219B7B8:
	// lis ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r30.s64 = 1048576;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 1;
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// beq 0x8219b7d8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B7D8;
	// lis ctx_arrow(ctx)->r30,48
	ctx_arrow(ctx)->r30.s64 = 3145728;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 1;
loc_8219B7D8:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,0,22,22
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x200;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219b7e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B7E4;
	// oris ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,64
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 4194304;
loc_8219B7E4:
	// lis ctx_arrow(ctx)->r4,-32128
	ctx_arrow(ctx)->r4.s64 = -2105540608;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwimi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,28,1,3
	ctx_arrow(ctx)->r4.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 28) & 0x70000000) | (ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF8FFFFFFF);
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x8219b80c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B80C;
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// b 0x8219b7b0
	goto loc_8219B7B0;
loc_8219B80C:
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,0,6,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0x3FFFFFC;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r3.u64 | 3;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,4
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8000000;
	// lis ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -65536;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4096
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 268435456;
	// stw ctx_arrow(ctx)->r8,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2;
	// stw ctx_arrow(ctx)->r9,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
loc_8219B848:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8219B850) PPC_WEAK_FUNC(sub_8219B850);
PPC_FUNC_IMPL(__imp__sub_8219B850) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r8,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r6,768
	ctx_arrow(ctx)->r6.s64 = 50331648;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r5,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,6,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3FFFFFC;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stw ctx_arrow(ctx)->r6,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// li ctx_arrow(ctx)->r4,10
	ctx_arrow(ctx)->r4.s64 = 10;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r8.u64;
	// bl 0x8219b348
	sub_8219B348(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8219B8A0) PPC_WEAK_FUNC(sub_8219B8A0);
PPC_FUNC_IMPL(__imp__sub_8219B8A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,0,0,29
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFC;
	// b 0x8219b580
	sub_8219B580(ctx, base);
	return;
}

alias(__imp__sub_8219B8B0) PPC_WEAK_FUNC(sub_8219B8B0);
PPC_FUNC_IMPL(__imp__sub_8219B8B0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,25728
	ctx_arrow(ctx)->r4.s64 = 1686110208;
	// li ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r3.s64 = 32;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne 0x8219b8e4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B8E4;
loc_8219B8DC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8219b954
	goto loc_8219B954;
loc_8219B8E4:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,29,0,2
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 29) & 0xE0000000;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,0,29,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// oris ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64 | 1048576;
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 2;
	// beq 0x8219b904
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B904;
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// oris ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,32
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 2097152;
loc_8219B904:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,0,22,22
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x200;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219b910
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219B910;
	// oris ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,64
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 4194304;
loc_8219B910:
	// lis ctx_arrow(ctx)->r4,-32128
	ctx_arrow(ctx)->r4.s64 = -2105540608;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwimi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,28,1,3
	ctx_arrow(ctx)->r4.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 28) & 0x70000000) | (ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF8FFFFFFF);
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// mr. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bne 0x8219b938
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B938;
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// b 0x8219b8dc
	goto loc_8219B8DC;
loc_8219B938:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stw ctx_arrow(ctx)->r28,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// lis ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -65536;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r9,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
loc_8219B954:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8219B960) PPC_WEAK_FUNC(sub_8219B960);
PPC_FUNC_IMPL(__imp__sub_8219B960) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lwz ctx_arrow(ctx)->r8,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r5,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,28(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8219b348
	sub_8219B348(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8219B9A8) PPC_WEAK_FUNC(sub_8219B9A8);
PPC_FUNC_IMPL(__imp__sub_8219B9A8) {
	PPC_FUNC_PROLOGUE();
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// b 0x8219b580
	sub_8219B580(ctx, base);
	return;
}

alias(__imp__sub_8219B9B8) PPC_WEAK_FUNC(sub_8219B9B8);
PPC_FUNC_IMPL(__imp__sub_8219B9B8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r9,13500(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8219ba40
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219BA40;
	// lwz ctx_arrow(ctx)->r10,14900(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,30,2,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 30) & 0x3FFFFFFF;
	// bne 0x8219b9ec
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219B9EC;
	// lwz ctx_arrow(ctx)->r10,156(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,152(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
loc_8219B9EC:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r9,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r6.s64 + -1;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r8.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,164
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 164;
	// andc ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r7.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219ba14
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219BA14;
loc_8219BA0C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
loc_8219BA14:
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r3.s64;
	// lwz ctx_arrow(ctx)->r9,52(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 2;
	// stw ctx_arrow(ctx)->r3,14900(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 14900);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// stw ctx_arrow(ctx)->r9,52(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 52);
	// stw ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 56);
	// blr 
	return;
loc_8219BA40:
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219ba0c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BA0C;
	// lwz ctx_arrow(ctx)->r10,152(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,14912(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 14912);
	// lwz ctx_arrow(ctx)->r11,156(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,152(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219BA68) PPC_WEAK_FUNC(sub_8219BA68);
PPC_FUNC_IMPL(__imp__sub_8219BA68) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r9,156(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beqlr 
	if (ctx_arrow(ctx)->r0.eq()) return;
	// lis ctx_arrow(ctx)->r10,16384
	ctx_arrow(ctx)->r10.s64 = 1073741824;
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r7.s64;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r6.s64;
	// b 0x821a39a0
	sub_821A39A0(ctx, base);
	return;
}

alias(__imp__sub_8219BAC4) PPC_WEAK_FUNC(sub_8219BAC4);
PPC_FUNC_IMPL(__imp__sub_8219BAC4) {
	PPC_FUNC_PROLOGUE();
	// blr 
	return;
}

alias(__imp__sub_8219BAC8) PPC_WEAK_FUNC(sub_8219BAC8);
PPC_FUNC_IMPL(__imp__sub_8219BAC8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,128
	ctx_arrow(ctx)->r5.s64 = 128;
	// li ctx_arrow(ctx)->r4,502
	ctx_arrow(ctx)->r4.s64 = 502;
	// lwz ctx_arrow(ctx)->r29,13504(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219ca10
	sub_8219CA10(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219bb00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219BB00;
	// lwz ctx_arrow(ctx)->r31,16712(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8219bb5c
	goto loc_8219BB5C;
loc_8219BB00:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 12) & 0xFFF;
	// stw ctx_arrow(ctx)->r31,13504(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 13504);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addis ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -1073741824;
	// bne ctx_arrow(ctx)->r6,0x8219bb38
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BB38;
	// lwz ctx_arrow(ctx)->r11,13500(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 112);
	// b 0x8219bb50
	goto loc_8219BB50;
loc_8219BB38:
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,13508(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r29.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -8;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x7) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 3;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4);
loc_8219BB50:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,2008
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r3.s64 + 2008;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
loc_8219BB5C:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,2008
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 2008;
	// stw ctx_arrow(ctx)->r3,13508(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 13508);
	// stw ctx_arrow(ctx)->r11,13512(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 13512);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219BB78) PPC_WEAK_FUNC(sub_8219BB78);
PPC_FUNC_IMPL(__imp__sub_8219BB78) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,128
	ctx_arrow(ctx)->r5.s64 = 128;
	// li ctx_arrow(ctx)->r4,136
	ctx_arrow(ctx)->r4.s64 = 136;
	// lwz ctx_arrow(ctx)->r29,13516(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219ca10
	sub_8219CA10(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219bbb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219BBB0;
	// lwz ctx_arrow(ctx)->r31,16712(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8219bc0c
	goto loc_8219BC0C;
loc_8219BBB0:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 12) & 0xFFF;
	// stw ctx_arrow(ctx)->r31,13516(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 13516);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addis ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -1073741824;
	// bne ctx_arrow(ctx)->r6,0x8219bbe8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BBE8;
	// lwz ctx_arrow(ctx)->r11,13500(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,116(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 116);
	// b 0x8219bc00
	goto loc_8219BC00;
loc_8219BBE8:
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,13520(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r29.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -8;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x7) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 3;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 4);
loc_8219BC00:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,136
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r3.s64 + 136;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
loc_8219BC0C:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,136
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 136;
	// stw ctx_arrow(ctx)->r3,13520(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 13520);
	// stw ctx_arrow(ctx)->r11,13524(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 13524);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219BC28) PPC_WEAK_FUNC(sub_8219BC28);
PPC_FUNC_IMPL(__imp__sub_8219BC28) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r10,1768(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// bge ctx_arrow(ctx)->r6,0x8219bc64
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219BC64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_8219BC64:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,14956
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s64 + 14956;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8240f8bc
	__imp__RtlEnterCriticalSection(ctx, base);
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8240f8ac
	__imp__RtlLeaveCriticalSection(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_8219BCA8) PPC_WEAK_FUNC(sub_8219BCA8);
PPC_FUNC_IMPL(__imp__sub_8219BCA8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,14956
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 14956;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f8bc
	__imp__RtlEnterCriticalSection(ctx, base);
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f8ac
	__imp__RtlLeaveCriticalSection(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219BD08) PPC_WEAK_FUNC(sub_8219BD08);
PPC_FUNC_IMPL(__imp__sub_8219BD08) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,14956
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 14956;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f8bc
	__imp__RtlEnterCriticalSection(ctx, base);
	// lwz ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,180(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f8ac
	__imp__RtlLeaveCriticalSection(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8219BD60) PPC_WEAK_FUNC(sub_8219BD60);
PPC_FUNC_IMPL(__imp__sub_8219BD60) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219bd88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BD88;
	// bl 0x8219bca8
	sub_8219BCA8(ctx, base);
	// b 0x8219bd98
	goto loc_8219BD98;
loc_8219BD88:
	// bl 0x8219ba68
	sub_8219BA68(ctx, base);
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// lwz ctx_arrow(ctx)->r3,152(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_8219BD98:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219BDB0) PPC_WEAK_FUNC(sub_8219BDB0);
PPC_FUNC_IMPL(__imp__sub_8219BDB0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r8,13216(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// cmplwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beq 0x8219be54
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219BE54;
	// lbz ctx_arrow(ctx)->r7,10941(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,14888(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,14892(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 2;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,0,26,26
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// beq 0x8219be18
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219BE18;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u64;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8219bebc
	goto loc_8219BEBC;
loc_8219BE18:
	// lwz ctx_arrow(ctx)->r10,14904(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,13220(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219be40
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BE40;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r11.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r10.s64;
	// b 0x8219bebc
	goto loc_8219BEBC;
loc_8219BE40:
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r8.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r9.s64;
	// b 0x8219bebc
	goto loc_8219BEBC;
loc_8219BE54:
	// lbz ctx_arrow(ctx)->r8,10940(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,0,24
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x8219bebc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219BEBC;
	// lwz ctx_arrow(ctx)->r3,13500(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,152(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219be88
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BE88;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x8219bd08
	sub_8219BD08(ctx, base);
	// lwz ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8219bebc
	goto loc_8219BEBC;
loc_8219BE88:
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219be9c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219BE9C;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// b 0x8219beb0
	goto loc_8219BEB0;
loc_8219BE9C:
	// lwz ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
loc_8219BEB0:
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwz ctx_arrow(ctx)->r11,156(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
loc_8219BEBC:
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219BEE0) PPC_WEAK_FUNC(sub_8219BEE0);
PPC_FUNC_IMPL(__imp__sub_8219BEE0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r3.s64 + 32;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,800
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r3.s64 + 800;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,29,3,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r7.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r6.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219bf04
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BF04;
loc_8219BEFC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
loc_8219BF04:
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1F;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r9.u64;
	// cntlzw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,32
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219bf48
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BF48;
loc_8219BF24:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8219bf24
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219BF24;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r6.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x8219befc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219BEFC;
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0);
	// not ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ~ctx_arrow(ctx)->r9.u64;
	// cntlzw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
loc_8219BF48:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// srw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r5.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 & ctx_arrow(ctx)->r9.u64;
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,32
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219bf94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BF94;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x8219bf70
	goto loc_8219BF70;
loc_8219BF6C:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
loc_8219BF70:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219bf6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219BF6C;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r6.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219bf8c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219BF8C;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// b 0x8219bf94
	goto loc_8219BF94;
loc_8219BF8C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
loc_8219BF94:
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r7.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r7.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 2;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0xFFFFFFE0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5,0,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 5) & 0xFFFFFFE0;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r8.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8219BFC0) PPC_WEAK_FUNC(sub_8219BFC0);
PPC_FUNC_IMPL(__imp__sub_8219BFC0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,27,5,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 27) & 0x7FFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,27,5,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 27) & 0x7FFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 + 8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4,27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r4.u32 & 0x1F;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x1F;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r3.u64;
	// beq ctx_arrow(ctx)->r6,0x8219c070
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C070;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r8.u32, xer);
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// bne ctx_arrow(ctx)->r6,0x8219c014
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C014;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ~ctx_arrow(ctx)->r8.u64;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r9.u64;
	// b 0x8219c0f0
	goto loc_8219C0F0;
loc_8219C014:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c060
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C060;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,30,2,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 30) & 0x3FFFFFFF;
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 4294967294;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8219c058
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C058;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_8219C04C:
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// bdnz 0x8219c04c
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8219C04C;
loc_8219C058:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
loc_8219C060:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// orc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | ~ctx_arrow(ctx)->r10.u64;
	// b 0x8219c0f0
	goto loc_8219C0F0;
loc_8219C070:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r8.u32, xer);
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// bne ctx_arrow(ctx)->r6,0x8219c094
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C094;
	// srw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ~ctx_arrow(ctx)->r8.u64;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ~ctx_arrow(ctx)->r10.u64;
	// b 0x8219c0f0
	goto loc_8219C0F0;
loc_8219C094:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r7.u64;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c0e4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C0E4;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,30,2,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 30) & 0x3FFFFFFF;
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 4294967294;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x8219c0dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C0DC;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_8219C0D0:
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// bdnz 0x8219c0d0
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8219C0D0;
loc_8219C0DC:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
loc_8219C0E4:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// srw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r5, 0, BINARY_OP_U8(ctx_arrow(ctx)->r5, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 >> (ctx.PPCRegister_u8(ctx_arrow(ctx)->r5) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r9.u64;
loc_8219C0F0:
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8219C0F8) PPC_WEAK_FUNC(sub_8219C0F8);
PPC_FUNC_IMPL(__imp__sub_8219C0F8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r31,-31400(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8240f8bc
	__imp__RtlEnterCriticalSection(ctx, base);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// bl 0x8219bfc0
	sub_8219BFC0(&ctx);
	// bl 0x8240f8ac
	__imp__RtlLeaveCriticalSection(ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219C148) PPC_WEAK_FUNC(sub_8219C148);
PPC_FUNC_IMPL(__imp__sub_8219C148) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// li ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r27.s64 = -1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-31400
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -31400;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne 0x8219c200
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C200;
	// lis ctx_arrow(ctx)->r4,25728
	ctx_arrow(ctx)->r4.s64 = 1686110208;
	// li ctx_arrow(ctx)->r3,804
	ctx_arrow(ctx)->r3.s64 = 804;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne 0x8219c198
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C198;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8219c2b4
	goto loc_8219C2B4;
loc_8219C198:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8240f94c
	__imp__RtlInitializeCriticalSection(ctx, base);
	// lis ctx_arrow(ctx)->r10,21845
	ctx_arrow(ctx)->r10.s64 = 1431633920;
	// li ctx_arrow(ctx)->r11,6144
	ctx_arrow(ctx)->r11.s64 = 6144;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,21845
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 21845;
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stw ctx_arrow(ctx)->r10,800(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 800);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
loc_8219C1B8:
	// mfmsr ctx_arrow(ctx)->r8
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r10
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r10.u32);
	ctx_arrow(ctx)->r9.u64 = __builtin_bswap32(reserved.u32);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r29.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c1dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C1DC;
	// stwcx. ctx_arrow(ctx)->r31,0,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r10.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r31.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r8,1
	// bne 0x8219c1b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C1B8;
	// b 0x8219c1e4
	goto loc_8219C1E4;
loc_8219C1DC:
	// stwcx. ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r10.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r9.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r8,1
loc_8219C1E4:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219c200
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C200;
	// lis ctx_arrow(ctx)->r4,25728
	ctx_arrow(ctx)->r4.s64 = 1686110208;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_8219C200:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8240f8bc
	__imp__RtlEnterCriticalSection(ctx, base);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x8219c298
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219C298;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8219bee0
	sub_8219BEE0(ctx, base);
	// mr. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219c298
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C298;
loc_8219C234:
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r28.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8219c250
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219C250;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c250
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C250;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64;
loc_8219C250:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8219bee0
	sub_8219BEE0(&ctx);
	// mr. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8219c234
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C234;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8219c298
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C298;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r28.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// bl 0x8219bfc0
	sub_8219BFC0(&ctx);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r30.u64;
loc_8219C298:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8240f8ac
	__imp__RtlLeaveCriticalSection(ctx, base);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 - ctx_arrow(ctx)->r26.s64;
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r25)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r25.u32 + 0);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
loc_8219C2B4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_8219C2C0) PPC_WEAK_FUNC(sub_8219C2C0);
PPC_FUNC_IMPL(__imp__sub_8219C2C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,14912(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,14908(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,14900(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,14904(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,13392(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 13392);
	// stw ctx_arrow(ctx)->r10,13396(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 13396);
	// stw ctx_arrow(ctx)->r9,13400(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 13400);
	// stw ctx_arrow(ctx)->r8,13404(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 13404);
	// stw ctx_arrow(ctx)->r7,13408(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 13408);
	// stw ctx_arrow(ctx)->r6,13412(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 13412);
	// blr 
	return;
}

alias(__imp__sub_8219C2F8) PPC_WEAK_FUNC(sub_8219C2F8);
PPC_FUNC_IMPL(__imp__sub_8219C2F8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,13392(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,13396(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,13400(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,13404(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,13408(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 48);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-160
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -160;
	// lwz ctx_arrow(ctx)->r6,13412(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,14912(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14912);
	// stw ctx_arrow(ctx)->r8,14908(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14908);
	// stw ctx_arrow(ctx)->r7,14900(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14900);
	// stw ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 52);
	// stw ctx_arrow(ctx)->r6,14904(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14904);
	// stw ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8219C338) PPC_WEAK_FUNC(sub_8219C338);
PPC_FUNC_IMPL(__imp__sub_8219C338) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r11.s64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219c3c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C3C8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c378
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C378;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219c3c8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219C3C8;
loc_8219C378:
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198a90
	sub_82198A90(ctx, base);
loc_8219C388:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198c28
	sub_82198C28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x8219c3c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C3C0;
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r11.s64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219c3c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C3C0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c388
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C388;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x8219c388
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219C388;
loc_8219C3C0:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198ac0
	sub_82198AC0(ctx, base);
loc_8219C3C8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219C3D0) PPC_WEAK_FUNC(sub_8219C3D0);
PPC_FUNC_IMPL(__imp__sub_8219C3D0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,14884(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,10896(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r11.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r30.u32, xer);
	// lwz ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bge ctx_arrow(ctx)->r6,0x8219c414
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C414;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c470
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C470;
loc_8219C408:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219c41c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219C41C;
	// b 0x8219c470
	goto loc_8219C470;
loc_8219C414:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c408
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C408;
loc_8219C41C:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198a90
	sub_82198A90(ctx, base);
loc_8219C42C:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198c28
	sub_82198C28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x8219c468
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C468;
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r30.u32, xer);
	// lwz ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bge ctx_arrow(ctx)->r6,0x8219c458
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C458;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c468
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C468;
	// b 0x8219c460
	goto loc_8219C460;
loc_8219C458:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8219c42c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219C42C;
loc_8219C460:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219c42c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219C42C;
loc_8219C468:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198ac0
	sub_82198AC0(ctx, base);
loc_8219C470:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219C480) PPC_WEAK_FUNC(sub_8219C480);
PPC_FUNC_IMPL(__imp__sub_8219C480) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r3,21516(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x8219c4b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C4B8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219C4B8:
	// lwz ctx_arrow(ctx)->r11,21656(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219c4dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C4DC;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219C4DC:
	// lwz ctx_arrow(ctx)->r31,10952(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r27,14884(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r26,14880(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219c3d0
	sub_8219C3D0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219c524
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C524;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_8219C504:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// and ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r27.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r26.u32);
	// bne 0x8219c504
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C504;
loc_8219C524:
	// lwz ctx_arrow(ctx)->r3,21516(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,10952(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10952);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x8219c544
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C544;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219C544:
	// lwz ctx_arrow(ctx)->r11,21656(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219c568
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C568;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219C568:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_8219C570) PPC_WEAK_FUNC(sub_8219C570);
PPC_FUNC_IMPL(__imp__sub_8219C570) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
loc_8219C570:
	// ld ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c584
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C584;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64;
loc_8219C584:
	// rldicl ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,32,32
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 32) & 0xFFFFFFFF;
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, ctx_arrow(ctx)->r9.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219c598
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219C598;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64;
loc_8219C598:
	// rldicr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,32,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u64, 32) & 0xFFFFFFFF00000000;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
loc_8219C5A4:
	// mfmsr ctx_arrow(ctx)->r7
	// mtmsrd ctx_arrow(ctx)->r13,1
	// ldarx ctx_arrow(ctx)->r8,0,ctx_arrow(ctx)->r3
	reserved.u64 = *(uint64_t*)(base + ctx_arrow(ctx)->r3.u32);
	ctx_arrow(ctx)->r8.u64 = __builtin_bswap64(reserved.u64);
	// cmpd ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int64_t>(ctx_arrow(ctx)->r8.s64, ctx_arrow(ctx)->r11.s64, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c5c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C5C8;
	// stdcx. ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint64_t*>(base + ctx_arrow(ctx)->r3.u32), reserved.s64, __builtin_bswap64(ctx_arrow(ctx)->r10.s64));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r7,1
	// bne 0x8219c5a4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C5A4;
	// b 0x8219c5d0
	goto loc_8219C5D0;
loc_8219C5C8:
	// stdcx. ctx_arrow(ctx)->r8,0,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint64_t*>(base + ctx_arrow(ctx)->r3.u32), reserved.s64, __builtin_bswap64(ctx_arrow(ctx)->r8.s64));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r7,1
loc_8219C5D0:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, ctx_arrow(ctx)->r11.u64, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c570
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C570;
	// blr 
	return;
}

alias(__imp__sub_8219C5E0) PPC_WEAK_FUNC(sub_8219C5E0);
PPC_FUNC_IMPL(__imp__sub_8219C5E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
loc_8219C5E0:
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// ld ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF;
loc_8219C5EC:
	// mfmsr ctx_arrow(ctx)->r8
	// mtmsrd ctx_arrow(ctx)->r13,1
	// ldarx ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r3
	reserved.u64 = *(uint64_t*)(base + ctx_arrow(ctx)->r3.u32);
	ctx_arrow(ctx)->r9.u64 = __builtin_bswap64(reserved.u64);
	// cmpd ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int64_t>(ctx_arrow(ctx)->r9.s64, ctx_arrow(ctx)->r11.s64, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c610
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C610;
	// stdcx. ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint64_t*>(base + ctx_arrow(ctx)->r3.u32), reserved.s64, __builtin_bswap64(ctx_arrow(ctx)->r10.s64));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r8,1
	// bne 0x8219c5ec
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C5EC;
	// b 0x8219c618
	goto loc_8219C618;
loc_8219C610:
	// stdcx. ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint64_t*>(base + ctx_arrow(ctx)->r3.u32), reserved.s64, __builtin_bswap64(ctx_arrow(ctx)->r9.s64));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r8,1
loc_8219C618:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, ctx_arrow(ctx)->r11.u64, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c5e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C5E0;
	// rldicl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,32,32
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 32) & 0xFFFFFFFF;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// blr 
	return;
}

alias(__imp__sub_8219C638) PPC_WEAK_FUNC(sub_8219C638);
PPC_FUNC_IMPL(__imp__sub_8219C638) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c6c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C6C8;
	// lwz ctx_arrow(ctx)->r11,10900(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,2989
	ctx_arrow(ctx)->r10.s64 = 195887104;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,61453
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 61453;
	// lwz ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c678
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C678;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-17560
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -17560;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
	// twi 31,ctx_arrow(ctx)->r0,22
loc_8219C678:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219c690
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C690;
	// lwz ctx_arrow(ctx)->r11,10900(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,20(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219C690:
	// lbz ctx_arrow(ctx)->r10,268(ctx_arrow(ctx)->r13)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,10904
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 + 10904;
	// lwz ctx_arrow(ctx)->r30,10900(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// slw ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// bl 0x8240f96c
	__imp__KeAcquireSpinLockAtRaisedIrql(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r29.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3F;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// bl 0x8240f95c
	__imp__KeReleaseSpinLockFromRaisedIrql(ctx);
	// b 0x8219c6e8
	goto loc_8219C6E8;
loc_8219C6C8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c6e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C6E8;
	// lis ctx_arrow(ctx)->r11,32712
	ctx_arrow(ctx)->r11.s64 = 2143813632;
	// lwz ctx_arrow(ctx)->r11,25924(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219c6e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C6E8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82198fb8
	sub_82198FB8(ctx, base);
loc_8219C6E8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219C6F0) PPC_WEAK_FUNC(sub_8219C6F0);
PPC_FUNC_IMPL(__imp__sub_8219C6F0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beq 0x8219c728
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C728;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r7,-16384
	ctx_arrow(ctx)->r7.s64 = -1073741824;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addis ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1073741824;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
loc_8219C728:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// blr 
	return;
}

alias(__imp__sub_8219C738) PPC_WEAK_FUNC(sub_8219C738);
PPC_FUNC_IMPL(__imp__sub_8219C738) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 12) & 0xFFF;
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r5.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// lis ctx_arrow(ctx)->r10,16384
	ctx_arrow(ctx)->r10.s64 = 1073741824;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r7.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5,-4
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r5.s64 + -4;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// subf ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r31.u32 & 0x1FFFFFFF;
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// subf ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r8.s64;
	// eieio 
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	PPC_MM_STORE_U32(ctx_arrow(ctx)->r31.u32 + 0, ctx_arrow(ctx)->r30.u32);
	// eieio 
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219C7E0) PPC_WEAK_FUNC(sub_8219C7E0);
PPC_FUNC_IMPL(__imp__sub_8219C7E0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,16712(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 32;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 48);
	// stb ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r3)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 10941));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4800
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4800;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-160
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -160;
	// stw ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 52);
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 56);
	// blr 
	return;
}

alias(__imp__sub_8219C808) PPC_WEAK_FUNC(sub_8219C808);
PPC_FUNC_IMPL(__imp__sub_8219C808) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,30,2,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x3FFFFFFF;
	// lwz ctx_arrow(ctx)->r11,14900(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8219c908
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C908;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x8219c83c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C83C;
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 60;
loc_8219C83C:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r6.s64 + -1;
	// lwz ctx_arrow(ctx)->r8,14892(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r5,14904(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 2) & 0xFFFFFFFC;
	// and ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x8219c8a4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219C8A4;
	// lwz ctx_arrow(ctx)->r10,13216(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x8219c89c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C89C;
	// lwz ctx_arrow(ctx)->r11,13220(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r5.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8219c894
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C894;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c89c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C89C;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c89c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C89C;
loc_8219C894:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8219ca04
	goto loc_8219CA04;
loc_8219C89C:
	// stw ctx_arrow(ctx)->r4,14900(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14900);
	// b 0x8219c8fc
	goto loc_8219C8FC;
loc_8219C8A4:
	// lwz ctx_arrow(ctx)->r9,14908(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,13216(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// cmplwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// and ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// beq 0x8219c8e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C8E8;
	// lwz ctx_arrow(ctx)->r11,13220(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r5.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8219c894
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C894;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c8e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C8E8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r4.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8219c894
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219C894;
loc_8219C8E8:
	// lwz ctx_arrow(ctx)->r11,14912(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x8219c894
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219C894;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 1;
	// stw ctx_arrow(ctx)->r4,14908(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14908);
loc_8219C8FC:
	// bl 0x8219c338
	sub_8219C338(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// b 0x8219ca04
	goto loc_8219CA04;
loc_8219C908:
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x8219c918
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219C918;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
loc_8219C918:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 31;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,0,0,26
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFE0;
	// bne ctx_arrow(ctx)->r6,0x8219c92c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C92C;
	// li ctx_arrow(ctx)->r7,54
	ctx_arrow(ctx)->r7.s64 = 54;
loc_8219C92C:
	// lwz ctx_arrow(ctx)->r11,14896(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30,2,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x3FFFFFFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219c940
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219C940;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_8219C940:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r11,14892(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r30.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219c958
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219C958;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64;
loc_8219C958:
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r30.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r7.s32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c998
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C998;
	// lwz ctx_arrow(ctx)->r9,14908(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,14904(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 31;
	// lbz ctx_arrow(ctx)->r8,10942(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,14888(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,0,0,26
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFE0;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 | 4;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,14904(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14904);
	// stw ctx_arrow(ctx)->r6,14908(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 14908);
	// stb ctx_arrow(ctx)->r9,10942(ctx_arrow(ctx)->r3)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 10942));
loc_8219C998:
	// lwz ctx_arrow(ctx)->r8,13216(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beq 0x8219c9e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219C9E4;
	// lwz ctx_arrow(ctx)->r11,13220(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,14904(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x8219c9c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219C9C8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c9e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C9E4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219c9e4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219C9E4;
loc_8219C9C8:
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r8.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219c894
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219C894;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r30.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r7.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x8219c894
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219C894;
loc_8219C9E4:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r5,14904(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219c338
	sub_8219C338(ctx, base);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r30.s64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
loc_8219CA04:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219CA10) PPC_WEAK_FUNC(sub_8219CA10);
PPC_FUNC_IMPL(__imp__sub_8219CA10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r5.u64;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219ca3c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CA3C;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8219cae4
	goto loc_8219CAE4;
loc_8219CA3C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r3,13500(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bne 0x8219ca64
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219CA64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219c808
	sub_8219C808(ctx, base);
	// b 0x8219ca80
	goto loc_8219CA80;
loc_8219CA64:
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219ca7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219CA7C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219b9b8
	sub_8219B9B8(ctx, base);
	// b 0x8219ca80
	goto loc_8219CA80;
loc_8219CA7C:
	// bl 0x8219bc28
	sub_8219BC28(ctx, base);
loc_8219CA80:
	// lwz ctx_arrow(ctx)->r11,14916(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,14920(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// stw ctx_arrow(ctx)->r11,14916(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14916);
	// ble ctx_arrow(ctx)->r6,0x8219cad0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219CAD0;
	// lwz ctx_arrow(ctx)->r11,13216(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219cad0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219CAD0;
	// lwz ctx_arrow(ctx)->r10,14908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,14888(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,160
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 160;
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// stw ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// beq ctx_arrow(ctx)->r6,0x8219cad0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219CAD0;
	// lwz ctx_arrow(ctx)->r11,14892(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,14900(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14900);
loc_8219CAD0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219cae4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219CAE4;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 32;
	// stb ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10941, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_8219CAE4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219CAF8) PPC_WEAK_FUNC(sub_8219CAF8);
PPC_FUNC_IMPL(__imp__sub_8219CAF8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r25,14884(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r24,14880(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219cb9c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CB9C;
	// lwz ctx_arrow(ctx)->r11,21516(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219ccd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219CCD4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219ccd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219CCD4;
	// lis ctx_arrow(ctx)->r21,8192
	ctx_arrow(ctx)->r21.s64 = 536870912;
	// lis ctx_arrow(ctx)->r22,16384
	ctx_arrow(ctx)->r22.s64 = 1073741824;
	// lis ctx_arrow(ctx)->r23,16640
	ctx_arrow(ctx)->r23.s64 = 1090519040;
loc_8219CB44:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r21.u32, xer);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFFFF;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r22.s64;
	// blt ctx_arrow(ctx)->r6,0x8219cb60
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219CB60;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r23.s64;
loc_8219CB60:
	// lwz ctx_arrow(ctx)->r3,21516(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r3,21516(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addic. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,-1
	xer.ca = ctx_arrow(ctx)->r31.u32 > 0;
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// bne 0x8219cb44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219CB44;
	// b 0x8219ccd4
	goto loc_8219CCD4;
loc_8219CB9C:
	// lwz ctx_arrow(ctx)->r29,10952(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 * 3;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8219c3d0
	sub_8219C3D0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219cc7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219CC7C;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r31.u64;
	// lis ctx_arrow(ctx)->r21,8192
	ctx_arrow(ctx)->r21.s64 = 536870912;
	// lis ctx_arrow(ctx)->r22,16384
	ctx_arrow(ctx)->r22.s64 = 1073741824;
	// lis ctx_arrow(ctx)->r23,16640
	ctx_arrow(ctx)->r23.s64 = 1090519040;
loc_8219CBC8:
	// lwz ctx_arrow(ctx)->r3,21516(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFFFF;
	// beq 0x8219cc08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CC08;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r21.u32, xer);
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r22.s64;
	// blt ctx_arrow(ctx)->r6,0x8219cbf0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219CBF0;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r23.s64;
loc_8219CBF0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219CC08:
	// lwz ctx_arrow(ctx)->r11,21656(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219cc38
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CC38;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r21.u32, xer);
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r22.s64;
	// blt ctx_arrow(ctx)->r6,0x8219cc24
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219CC24;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r23.s64;
loc_8219CC24:
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219CC38:
	// lis ctx_arrow(ctx)->r9,-16383
	ctx_arrow(ctx)->r9.s64 = -1073676288;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16128
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 16128;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addic. ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,-1
	xer.ca = ctx_arrow(ctx)->r27.u32 > 0;
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r25.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r24.u32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r25.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stwx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r24.u32);
	// and ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r25.u64;
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r24.u32);
	// bne 0x8219cbc8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219CBC8;
loc_8219CC7C:
	// stw ctx_arrow(ctx)->r29,10952(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 10952);
	// sync 
	// lis ctx_arrow(ctx)->r11,32712
	ctx_arrow(ctx)->r11.s64 = 2143813632;
	// stw ctx_arrow(ctx)->r29,1812(ctx_arrow(ctx)->r11)
	PPC_MM_STORE_U32(ctx_arrow(ctx)->r11.u32 + 1812, ctx_arrow(ctx)->r29.u32);
	// eieio 
	// sync 
	// lwz ctx_arrow(ctx)->r3,21516(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x8219ccb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CCB0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219CCB0:
	// lwz ctx_arrow(ctx)->r11,21656(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219ccd4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CCD4;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_8219CCD4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_8219CCE0) PPC_WEAK_FUNC(sub_8219CCE0);
PPC_FUNC_IMPL(__imp__sub_8219CCE0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r4.u64;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r5.u64;
	// ld ctx_arrow(ctx)->r11,11816(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,11816
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r29.s64 + 11816;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, ctx_arrow(ctx)->r10.u64, xer);
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
	// bne ctx_arrow(ctx)->r6,0x8219cd1c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219CD1C;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r26.u64;
loc_8219CD1C:
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,30,31,31
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 30) & 0x1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64 + ctx_arrow(ctx)->r28.u64;
	// mulli ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 * 11;
	// cmplwi ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// bne 0x8219cd3c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219CD3C;
loc_8219CD34:
	// stw ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 0);
	// b 0x8219ce98
	goto loc_8219CE98;
loc_8219CD3C:
	// li ctx_arrow(ctx)->r5,32
	ctx_arrow(ctx)->r5.s64 = 32;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8219ca10
	sub_8219CA10(ctx, base);
	// mr. ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r25.s32, 0, xer);
	// beq 0x8219cd34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CD34;
	// lis ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 65536;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r25,-4
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r25.s64 + -4;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,2607
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 | 2607;
	// lis ctx_arrow(ctx)->r11,-16380
	ctx_arrow(ctx)->r11.s64 = -1073479680;
	// lis ctx_arrow(ctx)->r6,-32768
	ctx_arrow(ctx)->r6.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,15360
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 | 15360;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219cdf4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219CDF4;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8219c5e0
	sub_8219C5E0(ctx, base);
	// li ctx_arrow(ctx)->r11,2609
	ctx_arrow(ctx)->r11.s64 = 2609;
	// lis ctx_arrow(ctx)->r8,768
	ctx_arrow(ctx)->r8.s64 = 50331648;
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFF000;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// li ctx_arrow(ctx)->r3,2609
	ctx_arrow(ctx)->r3.s64 = 2609;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4095
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4095;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFF000;
	// li ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r7.s64 = 3;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r27,8
	ctx_arrow(ctx)->r27.s64 = 8;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r20,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64;
loc_8219CDF4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219ce7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219CE7C;
	// li ctx_arrow(ctx)->r9,2609
	ctx_arrow(ctx)->r9.s64 = 2609;
	// lwz ctx_arrow(ctx)->r11,14888(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,14892(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r5,256
	ctx_arrow(ctx)->r5.s64 = 16777216;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// li ctx_arrow(ctx)->r3,2609
	ctx_arrow(ctx)->r3.s64 = 2609;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFF000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// li ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r29.s64 = 8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4095
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4095;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFF000;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// stwu ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r7)
	ea = 4 + ctx_arrow(ctx)->r7.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r7.u32 = ea;
loc_8219CE7C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 0);
	// stw ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 0);
loc_8219CE98:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed168
	return;
}

alias(__imp__sub_8219CEA0) PPC_WEAK_FUNC(sub_8219CEA0);
PPC_FUNC_IMPL(__imp__sub_8219CEA0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r9,-16384
	ctx_arrow(ctx)->r9.s64 = -1073741824;
	// lis ctx_arrow(ctx)->r8,-16382
	ctx_arrow(ctx)->r8.s64 = -1073610752;
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,15104
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64 | 15104;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + -4;
	// lwz ctx_arrow(ctx)->r9,10896(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,22528
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 22528;
	// lwz ctx_arrow(ctx)->r7,14904(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,32767
	ctx_arrow(ctx)->r3.s64 = 32767;
	// lwz ctx_arrow(ctx)->r6,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7,30
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u32 & 0x3;
	// lwz ctx_arrow(ctx)->r5,10908(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 512;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r7,13228(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 13228);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r6,13224(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 13224);
	// or ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r26.u64 | ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// stwu ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r30.s64 = 3;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r6.u64;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// li ctx_arrow(ctx)->r28,3
	ctx_arrow(ctx)->r28.s64 = 3;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// lwz ctx_arrow(ctx)->r9,21516(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219cf7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219CF7C;
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219cf7c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219CF7C;
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
loc_8219CF7C:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 2;
	// stw ctx_arrow(ctx)->r10,10908(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 10908);
	// b 0x823ed180
	return;
}

alias(__imp__sub_8219CF88) PPC_WEAK_FUNC(sub_8219CF88);
PPC_FUNC_IMPL(__imp__sub_8219CF88) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// lwz ctx_arrow(ctx)->r11,11000(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r8.u64;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d024
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D024;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r30,11004
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r30.s64 + 11004;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8240f8dc
	__imp__KfAcquireSpinLock(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11000(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d010
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D010;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,33024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64 | 2164260864;
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r28,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,16
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219c738
	sub_8219C738(ctx, base);
	// lwz ctx_arrow(ctx)->r11,11000(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,11000(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11000);
loc_8219D010:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8240f8cc
	__imp__KfReleaseSpinLock(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d050
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D050;
loc_8219D024:
	// lwz ctx_arrow(ctx)->r11,11000(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u32 & 0xFFFFFF;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r26.u64;
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,33024
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2164260864;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,11000(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11000);
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8219caf8
	sub_8219CAF8(&ctx);
loc_8219D050:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed174
	return;
}

alias(__imp__sub_8219D060) PPC_WEAK_FUNC(sub_8219D060);
PPC_FUNC_IMPL(__imp__sub_8219D060) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d11c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D11C;
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r30.s64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219d11c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219D11C;
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d0b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D0B8;
	// lwz ctx_arrow(ctx)->r11,13216(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d11c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D11C;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_8219D0B8:
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r30.s64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x8219d11c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219D11C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198a90
	sub_82198A90(ctx, base);
	// b 0x8219d0f8
	goto loc_8219D0F8;
loc_8219D0E8:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198c28
	sub_82198C28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x8219d114
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D114;
loc_8219D0F8:
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r30.s64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8219d0e8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219D0E8;
loc_8219D114:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198ac0
	sub_82198AC0(ctx, base);
loc_8219D11C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219D128) PPC_WEAK_FUNC(sub_8219D128);
PPC_FUNC_IMPL(__imp__sub_8219D128) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// std ctx_arrow(ctx)->r30,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// std ctx_arrow(ctx)->r31,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r4.u64;
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,0,29,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x6;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,8,26,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 8) & 0x3F;
	// bne 0x8219d148
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D148;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,6
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | 6;
loc_8219D148:
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,0,30,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// li ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = -1;
	// beq 0x8219d210
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D210;
	// lbz ctx_arrow(ctx)->r8,10943(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 8;
	// stb ctx_arrow(ctx)->r8,10943(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 10943));
	// bne 0x8219d178
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D178;
	// li ctx_arrow(ctx)->r8,1480
	ctx_arrow(ctx)->r8.s64 = 1480;
	// lis ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 131072;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
loc_8219D178:
	// lis ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 65536;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1404
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 1404;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// bne ctx_arrow(ctx)->r6,0x8219d198
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D198;
	// li ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = 4;
loc_8219D198:
	// li ctx_arrow(ctx)->r8,1400
	ctx_arrow(ctx)->r8.s64 = 1400;
	// li ctx_arrow(ctx)->r7,19
	ctx_arrow(ctx)->r7.s64 = 19;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r31,256
	ctx_arrow(ctx)->r31.s64 = 256;
	// li ctx_arrow(ctx)->r30,1118
	ctx_arrow(ctx)->r30.s64 = 1118;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// lwz ctx_arrow(ctx)->r8,12708(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,49156
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 3221487616;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,15360
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 15360;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// lwz ctx_arrow(ctx)->r8,10900(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,19,19
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r7.u64;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 2;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// lwz ctx_arrow(ctx)->r8,12708(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,49152
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 3221225472;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,21504
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 21504;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
loc_8219D210:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x8219d288
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D288;
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r8,-16380
	ctx_arrow(ctx)->r8.s64 = -1073479680;
	// li ctx_arrow(ctx)->r7,19
	ctx_arrow(ctx)->r7.s64 = 19;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,15361
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 15361;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,256
	ctx_arrow(ctx)->r5.s64 = 256;
	// li ctx_arrow(ctx)->r4,1404
	ctx_arrow(ctx)->r4.s64 = 1404;
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,247
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 247;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// stb ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 10943));
	// lis ctx_arrow(ctx)->r10,2989
	ctx_arrow(ctx)->r10.s64 = 195887104;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r9)
	ea = 4 + ctx_arrow(ctx)->r9.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r9.u32 = ea;
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,61453
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 | 61453;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,10900(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64;
loc_8219D288:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64;
	// ld ctx_arrow(ctx)->r30,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219D298) PPC_WEAK_FUNC(sub_8219D298);
PPC_FUNC_IMPL(__imp__sub_8219D298) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,6
	ctx_arrow(ctx)->r5.s64 = 6;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8219d060
	sub_8219D060(ctx, base);
	return;
}

alias(__imp__sub_8219D2B8) PPC_WEAK_FUNC(sub_8219D2B8);
PPC_FUNC_IMPL(__imp__sub_8219D2B8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,5
	ctx_arrow(ctx)->r5.s64 = 5;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8219d060
	sub_8219D060(ctx, base);
	return;
}

alias(__imp__sub_8219D2D8) PPC_WEAK_FUNC(sub_8219D2D8);
PPC_FUNC_IMPL(__imp__sub_8219D2D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r29,16384
	ctx_arrow(ctx)->r29.s64 = 1073741824;
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// beq 0x8219d318
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D318;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r29.s64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
loc_8219D318:
	// li ctx_arrow(ctx)->r5,128
	ctx_arrow(ctx)->r5.s64 = 128;
	// lwz ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,4224
	ctx_arrow(ctx)->r4.s64 = 4224;
	// bl 0x8219ca10
	sub_8219CA10(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne 0x8219d344
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D344;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r31,16712(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x8219d3b8
	goto loc_8219D3B8;
loc_8219D344:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r29.s64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219d390
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D390;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r31.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r29.s64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// b 0x8219d394
	goto loc_8219D394;
loc_8219D390:
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_8219D394:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r29.s64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,4224
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r3.s64 + 4224;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
loc_8219D3B8:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 4);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,4220
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 4220;
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219D3D8) PPC_WEAK_FUNC(sub_8219D3D8);
PPC_FUNC_IMPL(__imp__sub_8219D3D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219d41c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D41C;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 32;
	// lwz ctx_arrow(ctx)->r11,16712(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stb ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10941));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4800
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4800;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-160
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -160;
	// stw ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// b 0x8219d528
	goto loc_8219D528;
loc_8219D41C:
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d430
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D430;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// b 0x8219d438
	goto loc_8219D438;
loc_8219D430:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,14
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + 14;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
loc_8219D438:
	// lwz ctx_arrow(ctx)->r3,13500(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x8219d460
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D460;
	// lwz ctx_arrow(ctx)->r10,172(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d460
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D460;
	// lwz ctx_arrow(ctx)->r10,14896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x8219d460
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219D460;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
loc_8219D460:
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// li ctx_arrow(ctx)->r6,32
	ctx_arrow(ctx)->r6.s64 = 32;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// bne 0x8219d484
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D484;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219c808
	sub_8219C808(ctx, base);
	// b 0x8219d4a0
	goto loc_8219D4A0;
loc_8219D484:
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d49c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D49C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219b9b8
	sub_8219B9B8(ctx, base);
	// b 0x8219d4a0
	goto loc_8219D4A0;
loc_8219D49C:
	// bl 0x8219bc28
	sub_8219BC28(ctx, base);
loc_8219D4A0:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d4c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D4C4;
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,16712(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 32;
	// stb ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10941));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4800
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4800;
	// b 0x8219d4e8
	goto loc_8219D4E8;
loc_8219D4C4:
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -4;
	// stw ctx_arrow(ctx)->r30,14912(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14912);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30,2,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 30) & 0x3FFFFFFF;
	// stw ctx_arrow(ctx)->r29,14900(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14900);
	// stw ctx_arrow(ctx)->r29,14916(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14916);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-14
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -14;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
loc_8219D4E8:
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-160
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -160;
	// stw ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// lwz ctx_arrow(ctx)->r11,22280(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8219d524
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D524;
	// lwz ctx_arrow(ctx)->r4,14924(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x8219d524
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D524;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d060
	sub_8219D060(ctx, base);
	// stw ctx_arrow(ctx)->r29,14924(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14924);
loc_8219D524:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
loc_8219D528:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219D530) PPC_WEAK_FUNC(sub_8219D530);
PPC_FUNC_IMPL(__imp__sub_8219D530) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x8219d2d8
	sub_8219D2D8(&ctx);
	return;
}

alias(__imp__sub_8219D550) PPC_WEAK_FUNC(sub_8219D550);
PPC_FUNC_IMPL(__imp__sub_8219D550) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,14912(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x8219d690
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D690;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219d5ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D5EC;
	// lwz ctx_arrow(ctx)->r11,13500(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219d690
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D690;
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d690
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D690;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r30.s64;
	// srawi. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// beq 0x8219d690
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D690;
	// lwz ctx_arrow(ctx)->r3,13520(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,13524(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x8219d5c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219D5C0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219bb78
	sub_8219BB78(ctx, base);
loc_8219D5C0:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// oris ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,33024
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64 | 2164260864;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r8,13520(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13520);
	// b 0x8219d690
	goto loc_8219D690;
loc_8219D5EC:
	// lwz ctx_arrow(ctx)->r11,13216(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d650
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D650;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 12) & 0xFFF;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r30.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// srawi. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,2
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s32 >> 2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// beq 0x8219d690
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D690;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219d638
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219D638;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219D638:
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,33024
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64 | 2164260864;
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r9,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// b 0x8219d690
	goto loc_8219D690;
loc_8219D650:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219cea0
	sub_8219CEA0(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r30.s64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// srawi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// bl 0x8219cf88
	sub_8219CF88(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219D690:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 31;
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,26
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFE0;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219d6bc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219D6BC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + -4;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// bl 0x8219d3d8
	sub_8219D3D8(&ctx);
	// b 0x8219d6cc
	goto loc_8219D6CC;
loc_8219D6BC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFE0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// stw ctx_arrow(ctx)->r11,14912(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14912);
	// stw ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
loc_8219D6CC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8219D6D8) PPC_WEAK_FUNC(sub_8219D6D8);
PPC_FUNC_IMPL(__imp__sub_8219D6D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x8219d700
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D700;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_8219D700:
	// lwz ctx_arrow(ctx)->r11,13216(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d764
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D764;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8219d764
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D764;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219cce0
	sub_8219CCE0(ctx, base);
	// lwz ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d764
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D764;
	// li ctx_arrow(ctx)->r5,4
	ctx_arrow(ctx)->r5.s64 = 4;
	// li ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r4.s64 = 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219ca10
	sub_8219CA10(ctx, base);
	// mr. ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq 0x8219d764
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D764;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lwz ctx_arrow(ctx)->r5,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219cf88
	sub_8219CF88(ctx, base);
loc_8219D764:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d550
	sub_8219D550(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8219d7b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D7B8;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// lwz ctx_arrow(ctx)->r11,-31396(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d7b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D7B8;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8219d7b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219D7B8;
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d060
	sub_8219D060(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2;
	// stb ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10941, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_8219D7B8:
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219D7D8) PPC_WEAK_FUNC(sub_8219D7D8);
PPC_FUNC_IMPL(__imp__sub_8219D7D8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r31,10908(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,10928(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 10928);
	// bl 0x8219d6d8
	sub_8219D6D8(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219D810) PPC_WEAK_FUNC(sub_8219D810);
PPC_FUNC_IMPL(__imp__sub_8219D810) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219d870
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219D870;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d850
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D850;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_8219D850:
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r30.s64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subfc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	xer.ca = ctx_arrow(ctx)->r9.u32 >= ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
loc_8219D870:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219D888) PPC_WEAK_FUNC(sub_8219D888);
PPC_FUNC_IMPL(__imp__sub_8219D888) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219d8b4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219D8B4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_8219D8B4:
	// li ctx_arrow(ctx)->r11,1480
	ctx_arrow(ctx)->r11.s64 = 1480;
	// lis ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 131072;
	// li ctx_arrow(ctx)->r9,3332
	ctx_arrow(ctx)->r9.s64 = 3332;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219D8F0) PPC_WEAK_FUNC(sub_8219D8F0);
PPC_FUNC_IMPL(__imp__sub_8219D8F0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r11.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219d94c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219D94C;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r11.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219d94c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219D94C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d3d8
	sub_8219D3D8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// beq 0x8219d950
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219D950;
loc_8219D94C:
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_8219D950:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219D958) PPC_WEAK_FUNC(sub_8219D958);
PPC_FUNC_IMPL(__imp__sub_8219D958) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219d984
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219D984;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219D984:
	// li ctx_arrow(ctx)->r10,1480
	ctx_arrow(ctx)->r10.s64 = 1480;
	// lis ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = 131072;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,4
	ctx_arrow(ctx)->r5.s64 = 4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r4,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// bl 0x8219d060
	sub_8219D060(&ctx);
loc_8219D9AC:
	// lwz ctx_arrow(ctx)->r11,11000(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219d9ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219D9AC;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219D9D0) PPC_WEAK_FUNC(sub_8219D9D0);
PPC_FUNC_IMPL(__imp__sub_8219D9D0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219da04
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219DA04;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219DA04:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d128
	sub_8219D128(ctx, base);
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_8219DA28) PPC_WEAK_FUNC(sub_8219DA28);
PPC_FUNC_IMPL(__imp__sub_8219DA28) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-320(ctx_arrow(ctx)->r1)
	ea = -320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219da58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219DA58;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219da58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219DA58;
	// bl 0x8219d958
	sub_8219D958(ctx, base);
loc_8219DA58:
	// lwz ctx_arrow(ctx)->r10,14888(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x8219daac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219DAAC;
	// lwz ctx_arrow(ctx)->r11,14892(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,16384
	ctx_arrow(ctx)->r9.s64 = 1073741824;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r7.s64;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r6.s64;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
loc_8219DAAC:
	// lis ctx_arrow(ctx)->r30,-20096
	ctx_arrow(ctx)->r30.s64 = -1317011456;
	// lwz ctx_arrow(ctx)->r3,14820(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,14824(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r29,14820(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14820);
	// stw ctx_arrow(ctx)->r29,14824(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14824);
	// stw ctx_arrow(ctx)->r29,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stw ctx_arrow(ctx)->r29,52(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// bl 0x8240f9bc
	__imp__VdSetSystemCommandBufferGpuIdentifierAddress(ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,10900(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// stw ctx_arrow(ctx)->r29,10900(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10900);
	// stw ctx_arrow(ctx)->r29,10896(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10896);
	// bne ctx_arrow(ctx)->r6,0x8219db14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219DB14;
loc_8219DB0C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8219de48
	goto loc_8219DE48;
loc_8219DB14:
	// lwz ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r28,8(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r25,12(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// lwz ctx_arrow(ctx)->r30,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bne 0x8219db38
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219DB38;
	// lis ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,32768
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 32768;
loc_8219DB38:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219db44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219DB44;
	// lis ctx_arrow(ctx)->r25,32
	ctx_arrow(ctx)->r25.s64 = 2097152;
loc_8219DB44:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219db50
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219DB50;
	// li ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.s64 = 32;
loc_8219DB50:
	// divwu ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u32 = ctx_arrow(ctx)->r25.u32 / ctx_arrow(ctx)->r11.u32;
	// twllei ctx_arrow(ctx)->r11,0
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219db74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219DB74;
	// lis ctx_arrow(ctx)->r4,-19072
	ctx_arrow(ctx)->r4.s64 = -1249902592;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r28,14820(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14820);
loc_8219DB74:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219dba0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219DBA0;
	// lis ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = 524288;
	// lis ctx_arrow(ctx)->r4,-30848
	ctx_arrow(ctx)->r4.s64 = -2021654528;
	// subfc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	xer.ca = ctx_arrow(ctx)->r25.u32 >= ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r25.s64 - ctx_arrow(ctx)->r11.s64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// rlwimi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,28,2,3
	ctx_arrow(ctx)->r4.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 28) & 0x30000000) | (ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFFCFFFFFFF);
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r30,14824(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14824);
loc_8219DBA0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219de40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219DE40;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219de40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219DE40;
	// lis ctx_arrow(ctx)->r4,-23168
	ctx_arrow(ctx)->r4.s64 = -1518338048;
	// li ctx_arrow(ctx)->r3,96
	ctx_arrow(ctx)->r3.s64 = 96;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,10896(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10896);
	// beq 0x8219de40
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219DE40;
	// lis ctx_arrow(ctx)->r4,-27264
	ctx_arrow(ctx)->r4.s64 = -1786773504;
	// li ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r3.s64 = 32;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,10900(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10900);
	// beq 0x8219de40
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219DE40;
	// li ctx_arrow(ctx)->r5,96
	ctx_arrow(ctx)->r5.s64 = 96;
	// lwz ctx_arrow(ctx)->r3,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// li ctx_arrow(ctx)->r5,32
	ctx_arrow(ctx)->r5.s64 = 32;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,10900(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r26.u32);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// subfic ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,28
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 28;
	ctx_arrow(ctx)->r24.s64 = 28 - ctx_arrow(ctx)->r11.s64;
	// bl 0x8240f9ac
	__imp__MmGetPhysicalAddress(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x8240f99c
	__imp__VdInitializeRingBuffer(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,23,9,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 23) & 0x7FFFFF;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// subfic ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,31
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 31;
	ctx_arrow(ctx)->r4.s64 = 31 - ctx_arrow(ctx)->r11.s64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,19
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 19, xer);
	// ble ctx_arrow(ctx)->r6,0x8219dc30
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219DC30;
	// li ctx_arrow(ctx)->r4,19
	ctx_arrow(ctx)->r4.s64 = 19;
loc_8219DC30:
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 60;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// bl 0x8240f98c
	__imp__VdEnableRingBufferRPtrWriteBack(ctx, base);
	// lis ctx_arrow(ctx)->r9,2989
	ctx_arrow(ctx)->r9.s64 = 195887104;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,30,2,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 30) & 0x3FFFFFFF;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,61453
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 61453;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26,30,2,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 30) & 0x3FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,0,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r30.u64;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,-4
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r30.s64 + -4;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -4;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,-160
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r10.s64 + -160;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,14920(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14920);
	// stw ctx_arrow(ctx)->r28,14880(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14880);
	// stw ctx_arrow(ctx)->r30,14888(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14888);
	// stw ctx_arrow(ctx)->r30,14908(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14908);
	// stw ctx_arrow(ctx)->r9,14892(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14892);
	// stw ctx_arrow(ctx)->r30,14912(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14912);
	// stw ctx_arrow(ctx)->r27,14896(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14896);
	// stw ctx_arrow(ctx)->r7,14884(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14884);
	// stw ctx_arrow(ctx)->r29,60(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 60);
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,10952(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10952);
	// stw ctx_arrow(ctx)->r6,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// stw ctx_arrow(ctx)->r5,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// stw ctx_arrow(ctx)->r29,14900(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14900);
	// bne ctx_arrow(ctx)->r6,0x8219dcd4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219DCD4;
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// stw ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10908);
loc_8219DCD4:
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,14904(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// lwz ctx_arrow(ctx)->r9,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// bl 0x8240f9bc
	__imp__VdSetSystemCommandBufferGpuIdentifierAddress(ctx, base);
	// lis ctx_arrow(ctx)->r10,-16367
	ctx_arrow(ctx)->r10.s64 = -1072627712;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r29,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18432
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 18432;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-17484
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -17484;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// li ctx_arrow(ctx)->r10,1023
	ctx_arrow(ctx)->r10.s64 = 1023;
	// stw ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// li ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = 8;
	// mtctr ctx_arrow(ctx)->r10
	ctr.u64 = ctx_arrow(ctx)->r10.u64;
loc_8219DD38:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// bdnz 0x8219dd38
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_8219DD38;
	// li ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.s64 = 2048;
	// stw ctx_arrow(ctx)->r29,136(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// stw ctx_arrow(ctx)->r29,140(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// li ctx_arrow(ctx)->r4,19
	ctx_arrow(ctx)->r4.s64 = 19;
	// stw ctx_arrow(ctx)->r29,144(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r29,148(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// stw ctx_arrow(ctx)->r29,152(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// sth ctx_arrow(ctx)->r11,130(ctx_arrow(ctx)->r1)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r1.u32 + 130, ctx_arrow(ctx)->r11, 0);
	// sth ctx_arrow(ctx)->r11,10926(ctx_arrow(ctx)->r31)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r31.u32 + 10926, ctx_arrow(ctx)->r11, 0);
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// sth ctx_arrow(ctx)->r10,128(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 128, ctx_arrow(ctx)->r10.u16);
	// sth ctx_arrow(ctx)->r10,10924(ctx_arrow(ctx)->r31)
	PPC_STORE_U16(ctx_arrow(ctx)->r31.u32 + 10924, ctx_arrow(ctx)->r10.u16);
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// bl 0x8240f97c
	__imp__KiApcNormalRoutineNop(ctx);
	// li ctx_arrow(ctx)->r5,19
	ctx_arrow(ctx)->r5.s64 = 19;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219c480
	sub_8219C480(ctx, base);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219ddb8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219DDB8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219DDB8:
	// li ctx_arrow(ctx)->r10,3330
	ctx_arrow(ctx)->r10.s64 = 3330;
	// lis ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 65536;
	// lis ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 196608;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2048
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2048;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2562
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 2562;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-16368
	ctx_arrow(ctx)->r10.s64 = -1072693248;
	// lis ctx_arrow(ctx)->r7,2032
	ctx_arrow(ctx)->r7.s64 = 133169152;
	// lis ctx_arrow(ctx)->r6,-16384
	ctx_arrow(ctx)->r6.s64 = -1073741824;
	// lis ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r5.s64 = 1048576;
	// li ctx_arrow(ctx)->r4,477
	ctx_arrow(ctx)->r4.s64 = 477;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r30,476
	ctx_arrow(ctx)->r30.s64 = 476;
	// lis ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 131072;
	// ori ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,51
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64 | 51;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10900(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// bl 0x8219d888
	sub_8219D888(&ctx);
	// b 0x8219db0c
	goto loc_8219DB0C;
loc_8219DE40:
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
loc_8219DE48:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 320;
	// b 0x823ed178
	return;
}

alias(__imp__sub_8219DE50) PPC_WEAK_FUNC(sub_8219DE50);
PPC_FUNC_IMPL(__imp__sub_8219DE50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 0);
	// lhz ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r4.u32 + 2);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26,6,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 26) & 0x3FFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,26,6,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 26) & 0x3FFFFFF;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,1023
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 1023, xer);
	// ble ctx_arrow(ctx)->r6,0x8219de74
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219DE74;
	// li ctx_arrow(ctx)->r11,1023
	ctx_arrow(ctx)->r11.s64 = 1023;
loc_8219DE74:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1,15,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0x1FFFE;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,15,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0x1FFFE;
	// lhzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r5.u32);
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,6
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 6);
	// sth ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r3)
	PPC_STORE_U16(ctx_arrow(ctx)->r3.u32 + 0, ctx_arrow(ctx)->r9.u16);
	// lhzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r5.u32);
	// lhzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r5.u32);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// sth ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r3)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r3.u32 + 2, ctx_arrow(ctx)->r11, 0);
	// blr 
	return;
}

alias(__imp__sub_8219DEA0) PPC_WEAK_FUNC(sub_8219DEA0);
PPC_FUNC_IMPL(__imp__sub_8219DEA0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219defc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219DEFC;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-17400(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8219ded0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219DED0;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17404(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x8219df14
	goto loc_8219DF14;
loc_8219DED0:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17408(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fadds f13,f1,f0
	ctx.f13.f64 = double(float(ctx.f1.f64 + f0.f64));
	// lfd f2,-17416(ctx_arrow(ctx)->r11)
	ctx.f2.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17424(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// bl 0x823f0100
	sub_823F0100(ctx, base);
	// frsp f1,f1
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64));
	// b 0x8219df40
	goto loc_8219DF40;
loc_8219DEFC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-17432(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x8219df1c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_8219DF1C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17440(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_8219DF14:
	// fmuls f1,f1,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64 * f0.f64));
	// b 0x8219df40
	goto loc_8219DF40;
loc_8219DF1C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f2,-17448(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	ctx.f2.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823f0100
	sub_823F0100(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// frsp f12,f1
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f1.f64));
	// lfs f0,-17452(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f13,-17408(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmsubs f1,f12,f0,f13
	ctx.f1.f64 = double(float(ctx.f12.f64 * f0.f64 - ctx.f13.f64));
loc_8219DF40:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8219DF50) PPC_WEAK_FUNC(sub_8219DF50);
PPC_FUNC_IMPL(__imp__sub_8219DF50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219dfac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219DFAC;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-17336(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8219df80
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219DF80;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17340(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x8219dfc4
	goto loc_8219DFC4;
loc_8219DF80:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17344(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fadds f13,f1,f0
	ctx.f13.f64 = double(float(ctx.f1.f64 + f0.f64));
	// lfd f2,-17352(ctx_arrow(ctx)->r11)
	ctx.f2.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17360(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// bl 0x823f0100
	sub_823F0100(ctx, base);
	// frsp f1,f1
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64));
	// b 0x8219dff0
	goto loc_8219DFF0;
loc_8219DFAC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-17368(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x8219dfcc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219DFCC;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-17376(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_8219DFC4:
	// fmuls f1,f1,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64 * f0.f64));
	// b 0x8219dff0
	goto loc_8219DFF0;
loc_8219DFCC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f2,-17384(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	ctx.f2.u64 = PPC_Read_U64(ctx,  ctx);
	// bl 0x823f0100
	sub_823F0100(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// frsp f12,f1
	ctx.fpscr.disableFlushMode();
	ctx.f12.f64 = double(float(ctx.f1.f64));
	// lfs f0,-17392(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f13,-17344(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmsubs f1,f12,f0,f13
	ctx.f1.f64 = double(float(ctx.f12.f64 * f0.f64 - ctx.f13.f64));
loc_8219DFF0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_8219E000) PPC_WEAK_FUNC(sub_8219E000);
PPC_FUNC_IMPL(__imp__sub_8219E000) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-40
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -40;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r30.u32);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// bl 0x8240f9cc
	__imp__VdGetCurrentDisplayGamma(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32019
	ctx_arrow(ctx)->r10.s64 = -2098397184;
	// lfs f2,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r9,-31991
	ctx_arrow(ctx)->r9.s64 = -2096562176;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,28920
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 28920;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-31384
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -31384;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,11,0,20
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 11) & 0xFFFFF800;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r8,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r8.u32, xer);
	// lis ctx_arrow(ctx)->r9,-31991
	ctx_arrow(ctx)->r9.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-31392
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -31392;
	// bne ctx_arrow(ctx)->r6,0x8219e074
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E074;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f2
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f2.f64);
	// beq ctx_arrow(ctx)->r6,0x8219e178
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219E178;
loc_8219E074:
	// stfsx f2,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// stwx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// lis ctx_arrow(ctx)->r7,-32256
	ctx_arrow(ctx)->r7.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r9,-32254
	ctx_arrow(ctx)->r9.s64 = -2113798144;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// lfd f29,28168(ctx_arrow(ctx)->r7)
	f29.u64 = PPC_Read_U64(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r28.u64;
	// lfd f30,-17320(ctx_arrow(ctx)->r9)
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfs f31,2776(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f31.f64 = double(temp.f32);
	// lfs f28,-17328(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// b 0x8219e0b0
	goto loc_8219E0B0;
loc_8219E0A8:
	// lfs f2,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r8,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
loc_8219E0B0:
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s32;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fmuls f1,f0,f28
	ctx.f1.f64 = double(float(f0.f64 * f28.f64));
	// bne ctx_arrow(ctx)->r6,0x8219e0e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E0E0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x8219dea0
	sub_8219DEA0(ctx, base);
	// lfs f2,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r8,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
loc_8219E0E0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x8219e11c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219E11C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x8219e110
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219E110;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x8219e110
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E110;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219e104
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E104;
	// fdivs f2,f31,f2
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = double(float(f31.f64 / ctx.f2.f64));
loc_8219E104:
	// bl 0x823f0100
	sub_823F0100(ctx, base);
	// frsp f1,f1
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64));
	// b 0x8219e124
	goto loc_8219E124;
loc_8219E110:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219df50
	sub_8219DF50(ctx, base);
	// b 0x8219e124
	goto loc_8219E124;
loc_8219E11C:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219dea0
	sub_8219DEA0(ctx, base);
loc_8219E124:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x8219e134
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219E134;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x8219dea0
	sub_8219DEA0(ctx, base);
loc_8219E134:
	// fmadd f0,f1,f30,f29
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f1.f64 * f30.f64 + f29.f64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// fctiwz f0,f0
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x8219e158
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_8219E158;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x8219e164
	goto loc_8219E164;
loc_8219E158:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1023
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1023, xer);
	// ble ctx_arrow(ctx)->r6,0x8219e164
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219E164;
	// li ctx_arrow(ctx)->r11,1023
	ctx_arrow(ctx)->r11.s64 = 1023;
loc_8219E164:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// sth ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r29.u32 + 0, ctx_arrow(ctx)->r11, 0);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,2
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 2;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,1024
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 1024, xer);
	// blt ctx_arrow(ctx)->r6,0x8219e0a8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219E0A8;
loc_8219E178:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-40
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -40;
	// bl 0x823ed594
	// b 0x823ed188
	return;
}

alias(__imp__sub_8219E190) PPC_WEAK_FUNC(sub_8219E190);
PPC_FUNC_IMPL(__imp__sub_8219E190) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8219e000
	sub_8219E000(ctx, base);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 512;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r31.s64;
	// li ctx_arrow(ctx)->r9,256
	ctx_arrow(ctx)->r9.s64 = 256;
loc_8219E1C4:
	// lhz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 0);
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 0;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27,5,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 27) & 0x7FFFFFE;
	// lhzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + ctx_arrow(ctx)->r3.u32);
	// rotlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,6
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 6);
	// sth ctx_arrow(ctx)->r7,-512(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + -512, ctx_arrow(ctx)->r7.u16);
	// lhzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27,5,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 27) & 0x7FFFFFE;
	// lhzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + ctx_arrow(ctx)->r3.u32);
	// rotlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,6
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 6);
	// sth ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 0, ctx_arrow(ctx)->r7.u16);
	// lhz ctx_arrow(ctx)->r7,1024(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 1024);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,27,5,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 27) & 0x7FFFFFE;
	// lhzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r7.u32 + ctx_arrow(ctx)->r3.u32);
	// rotlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,6
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r7.u32, 6);
	// sth ctx_arrow(ctx)->r7,512(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 512, ctx_arrow(ctx)->r7.u16);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// bne 0x8219e1c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219E1C4;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219E228) PPC_WEAK_FUNC(sub_8219E228);
PPC_FUNC_IMPL(__imp__sub_8219E228) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x8219e000
	sub_8219E000(ctx, base);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,512
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 512;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// subf ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r31.s64;
	// li ctx_arrow(ctx)->r6,128
	ctx_arrow(ctx)->r6.s64 = 128;
loc_8219E260:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r7.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,-512
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r8.s64 + -512;
	// bl 0x8219de50
	sub_8219DE50(ctx, base);
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r8.u64;
	// bl 0x8219de50
	sub_8219DE50(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7,1024
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r7.s64 + 1024;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// bl 0x8219de50
	sub_8219DE50(ctx, base);
	// addic. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,-1
	xer.ca = ctx_arrow(ctx)->r6.u32 > 0;
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,4
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 4;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// bne 0x8219e260
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219E260;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219E2B0) PPC_WEAK_FUNC(sub_8219E2B0);
PPC_FUNC_IMPL(__imp__sub_8219E2B0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,2309
	ctx_arrow(ctx)->r4.s64 = 2309;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 65536;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,6433
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 | 6433;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,6439
	ctx_arrow(ctx)->r6.s64 = 6439;
	// li ctx_arrow(ctx)->r5,7
	ctx_arrow(ctx)->r5.s64 = 7;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1024
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 1024;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219E30C:
	// lhz ctx_arrow(ctx)->r8,-1024(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -1024);
	// li ctx_arrow(ctx)->r6,6437
	ctx_arrow(ctx)->r6.s64 = 6437;
	// lhz ctx_arrow(ctx)->r7,-512(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -512);
	// lis ctx_arrow(ctx)->r4,-16379
	ctx_arrow(ctx)->r4.s64 = -1073414144;
	// lhz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// li ctx_arrow(ctx)->r3,6434
	ctx_arrow(ctx)->r3.s64 = 6434;
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,10,6,15
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 10) & 0x3FF0000) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFFC00FFFF);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,26,6,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 26) & 0x3FFFFFF;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,4,2,21
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 4) & 0x3FFFFC00;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,17664
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 17664;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r8.u64;
	// li ctx_arrow(ctx)->r7,7
	ctx_arrow(ctx)->r7.s64 = 7;
	// li ctx_arrow(ctx)->r5,-1
	ctx_arrow(ctx)->r5.s64 = -1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,256
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 256, xer);
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// blt ctx_arrow(ctx)->r6,0x8219e30c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219E30C;
	// stw ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219E390) PPC_WEAK_FUNC(sub_8219E390);
PPC_FUNC_IMPL(__imp__sub_8219E390) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,1413
	ctx_arrow(ctx)->r4.s64 = 1413;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 65536;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,6433
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 | 6433;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,6439
	ctx_arrow(ctx)->r6.s64 = 6439;
	// li ctx_arrow(ctx)->r5,7
	ctx_arrow(ctx)->r5.s64 = 7;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,514
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 514;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
loc_8219E3E4:
	// lis ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r8.s64 = 131072;
	// lis ctx_arrow(ctx)->r7,-16379
	ctx_arrow(ctx)->r7.s64 = -1073414144;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,39204
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 39204;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,17664
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 17664;
	// li ctx_arrow(ctx)->r6,7
	ctx_arrow(ctx)->r6.s64 = 7;
	// li ctx_arrow(ctx)->r5,6436
	ctx_arrow(ctx)->r5.s64 = 6436;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// li ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = -1;
	// lhz ctx_arrow(ctx)->r8,-512(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -512);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// lhz ctx_arrow(ctx)->r31,-514(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -514);
	// rotlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 16);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,128
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 128, xer);
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r31,6434
	ctx_arrow(ctx)->r31.s64 = 6434;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// lhz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// lhz ctx_arrow(ctx)->r29,-2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -2);
	// rotlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 16);
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r29.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// lhz ctx_arrow(ctx)->r8,512(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 512);
	// lhz ctx_arrow(ctx)->r29,510(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 510);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// rotlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 16);
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r29.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// blt ctx_arrow(ctx)->r6,0x8219e3e4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219E3E4;
	// stw ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219E480) PPC_WEAK_FUNC(sub_8219E480);
PPC_FUNC_IMPL(__imp__sub_8219E480) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,1024
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 1024;
loc_8219E488:
	// li ctx_arrow(ctx)->r9,255
	ctx_arrow(ctx)->r9.s64 = 255;
	// lis ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 196608;
	// divwu ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u32 = ctx_arrow(ctx)->r10.u32 / ctx_arrow(ctx)->r9.u32;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,65280
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 65280;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,6,10,25
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 6) & 0x3FFFC0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1023
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1023;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r8.u32, xer);
	// sth ctx_arrow(ctx)->r9,-1024(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + -1024, ctx_arrow(ctx)->r9.u16);
	// sth ctx_arrow(ctx)->r9,-512(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + -512, ctx_arrow(ctx)->r9.u16);
	// sth ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 0, ctx_arrow(ctx)->r9.u16);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// blt ctx_arrow(ctx)->r6,0x8219e488
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219E488;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x8219e190
	sub_8219E190(ctx, base);
	return;
}

alias(__imp__sub_8219E4D0) PPC_WEAK_FUNC(sub_8219E4D0);
PPC_FUNC_IMPL(__imp__sub_8219E4D0) {
	PPC_FUNC_PROLOGUE();
	// blr 
	return;
}

alias(__imp__sub_8219E4D8) PPC_WEAK_FUNC(sub_8219E4D8);
PPC_FUNC_IMPL(__imp__sub_8219E4D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 512;
	// li ctx_arrow(ctx)->r7,127
	ctx_arrow(ctx)->r7.s64 = 127;
loc_8219E4E4:
	// divwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u32 = ctx_arrow(ctx)->r9.u32 / ctx_arrow(ctx)->r7.u32;
	// addis ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 65536;
	// lis ctx_arrow(ctx)->r8,127
	ctx_arrow(ctx)->r8.s64 = 8323072;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,65408
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r8.u64 | 65408;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFF;
	// divwu ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u32 = ctx_arrow(ctx)->r9.u32 / ctx_arrow(ctx)->r7.u32;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r6.u32, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// sth ctx_arrow(ctx)->r10,-512(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + -512, ctx_arrow(ctx)->r10.u16);
	// sth ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 0, ctx_arrow(ctx)->r10.u16);
	// sth ctx_arrow(ctx)->r10,512(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 512, ctx_arrow(ctx)->r10.u16);
	// sth ctx_arrow(ctx)->r8,-510(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + -510, ctx_arrow(ctx)->r8.u16);
	// sth ctx_arrow(ctx)->r8,2(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 2, ctx_arrow(ctx)->r8.u16);
	// sth ctx_arrow(ctx)->r8,514(ctx_arrow(ctx)->r11)
	PPC_STORE_U16(ctx_arrow(ctx)->r11.u32 + 514, ctx_arrow(ctx)->r8.u16);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// blt ctx_arrow(ctx)->r6,0x8219e4e4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_8219E4E4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x8219e228
	sub_8219E228(ctx, base);
	return;
}

alias(__imp__sub_8219E540) PPC_WEAK_FUNC(sub_8219E540);
PPC_FUNC_IMPL(__imp__sub_8219E540) {
	PPC_FUNC_PROLOGUE();
	// blr 
	return;
}

alias(__imp__sub_8219E548) PPC_WEAK_FUNC(sub_8219E548);
PPC_FUNC_IMPL(__imp__sub_8219E548) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// beq 0x8219e5f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219E5F0;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219e578
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219E578;
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x8219e57c
	goto loc_8219E57C;
loc_8219E578:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_8219E57C:
	// stw ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 148);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x8219e5a0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E5A0;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a50c8
	sub_821A50C8(ctx, base);
	// b 0x8219e5e4
	goto loc_8219E5E4;
loc_8219E5A0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 10, xer);
	// bne ctx_arrow(ctx)->r6,0x8219e5e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E5E4;
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219e5c0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219E5C0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_8219E5C0:
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// li ctx_arrow(ctx)->r10,25
	ctx_arrow(ctx)->r10.s64 = 25;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17920
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 17920;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 128;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stb ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10943, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_8219E5E4:
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stb ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r29)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r29.u32 + 16, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x8219e7c8
	goto loc_8219E7C8;
loc_8219E5F0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219e7c8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219E7C8;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 8, xer);
	// beq ctx_arrow(ctx)->r6,0x8219e7c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219E7C0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x8219e750
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E750;
	// lwz ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 6;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// beq ctx_arrow(ctx)->r6,0x8219e724
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219E724;
	// lbz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x8219e724
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219E724;
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219e650
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219E650;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219E650:
	// lis ctx_arrow(ctx)->r11,-16383
	ctx_arrow(ctx)->r11.s64 = -1073676288;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r30.s64 + 16;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,15616
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 | 15616;
	// li ctx_arrow(ctx)->r11,-275
	ctx_arrow(ctx)->r11.s64 = -275;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// lis ctx_arrow(ctx)->r9,-16380
	ctx_arrow(ctx)->r9.s64 = -1073479680;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,15360
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 15360;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30,20
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r30.s64 + 20;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// li ctx_arrow(ctx)->r28,19
	ctx_arrow(ctx)->r28.s64 = 19;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// li ctx_arrow(ctx)->r6,-1
	ctx_arrow(ctx)->r6.s64 = -1;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// li ctx_arrow(ctx)->r25,256
	ctx_arrow(ctx)->r25.s64 = 256;
	// li ctx_arrow(ctx)->r24,19
	ctx_arrow(ctx)->r24.s64 = 19;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// li ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.s64 = 256;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ea = 4 + ctx_arrow(ctx)->r10.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r10.u32 = ea;
	// stw ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// b 0x8219e73c
	goto loc_8219E73C;
loc_8219E724:
	// lbz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,-275
	ctx_arrow(ctx)->r11.s64 = -275;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7F;
	// stb ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r29)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 20));
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16);
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 20);
loc_8219E73C:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a50c8
	sub_821A50C8(ctx, base);
	// b 0x8219e7b8
	goto loc_8219E7B8;
loc_8219E750:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 10, xer);
	// bne ctx_arrow(ctx)->r6,0x8219e7b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E7B8;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219e774
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219E774;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219E774:
	// lis ctx_arrow(ctx)->r10,-16383
	ctx_arrow(ctx)->r10.s64 = -1073676288;
	// li ctx_arrow(ctx)->r9,26
	ctx_arrow(ctx)->r9.s64 = 26;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,23040
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 23040;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,3,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1FFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7F;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stb ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10943));
loc_8219E7B8:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stb ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r29)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r29.u32 + 16, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_8219E7C0:
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 24);
loc_8219E7C8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_8219E7D0) PPC_WEAK_FUNC(sub_8219E7D0);
PPC_FUNC_IMPL(__imp__sub_8219E7D0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,10916(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,12,18,19
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r4.u32, 12) & 0x3000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFCFFF);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r10.u32, xer);
	// stw ctx_arrow(ctx)->r11,10916(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10916);
	// ble ctx_arrow(ctx)->r6,0x8219e808
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219E808;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_8219E808:
	// li ctx_arrow(ctx)->r11,1480
	ctx_arrow(ctx)->r11.s64 = 1480;
	// lis ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 131072;
	// li ctx_arrow(ctx)->r9,3841
	ctx_arrow(ctx)->r9.s64 = 3841;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,10916(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219E840) PPC_WEAK_FUNC(sub_8219E840);
PPC_FUNC_IMPL(__imp__sub_8219E840) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r30.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x8219e8f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_8219E8F4;
	// bl 0x8219d958
	sub_8219D958(ctx, base);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r30.u32);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// bl 0x8240f9dc
	__imp__VdEnableDisableClockGating(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x8219e8f4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_8219E8F4;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219e8a0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219E8A0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_8219E8A0:
	// lis ctx_arrow(ctx)->r10,-16382
	ctx_arrow(ctx)->r10.s64 = -1073610752;
	// li ctx_arrow(ctx)->r7,129
	ctx_arrow(ctx)->r7.s64 = 129;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8448
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8448;
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64;
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r5,130
	ctx_arrow(ctx)->r5.s64 = 130;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,-9512(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32769
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2147549184;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,-9508(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
loc_8219E8F4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// lbz ctx_arrow(ctx)->r10,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,31,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0x1) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFFE);
	// stb ctx_arrow(ctx)->r10,10942(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10942));
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219E928) PPC_WEAK_FUNC(sub_8219E928);
PPC_FUNC_IMPL(__imp__sub_8219E928) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// li ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r3.s64 = 16;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// bne 0x8219e95c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219E95C;
loc_8219E954:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x8219e9a8
	goto loc_8219E9A8;
loc_8219E95C:
	// lis ctx_arrow(ctx)->r4,-23936
	ctx_arrow(ctx)->r4.s64 = -1568669696;
	// li ctx_arrow(ctx)->r3,480
	ctx_arrow(ctx)->r3.s64 = 480;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// bne 0x8219e984
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219E984;
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// b 0x8219e954
	goto loc_8219E954;
loc_8219E984:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3,480
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r3.s64 + 480;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
loc_8219E9A8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_8219E9C0) PPC_WEAK_FUNC(sub_8219E9C0);
PPC_FUNC_IMPL(__imp__sub_8219E9C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,120
	ctx_arrow(ctx)->r4.s64 = 120;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// li ctx_arrow(ctx)->r10,486
	ctx_arrow(ctx)->r10.s64 = 486;
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,917
	ctx_arrow(ctx)->r9.s64 = 917;
	// li ctx_arrow(ctx)->r8,918
	ctx_arrow(ctx)->r8.s64 = 918;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r7,3528
	ctx_arrow(ctx)->r7.s64 = 3528;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r6,3529
	ctx_arrow(ctx)->r6.s64 = 3529;
	// li ctx_arrow(ctx)->r5,3530
	ctx_arrow(ctx)->r5.s64 = 3530;
	// li ctx_arrow(ctx)->r4,3531
	ctx_arrow(ctx)->r4.s64 = 3531;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,7(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r29.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r9,3144
	ctx_arrow(ctx)->r9.s64 = 3144;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,11(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r8,3146
	ctx_arrow(ctx)->r8.s64 = 3146;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,15(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r7,3147
	ctx_arrow(ctx)->r7.s64 = 3147;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,19(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r6,3659
	ctx_arrow(ctx)->r6.s64 = 3659;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,23(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r5,3662
	ctx_arrow(ctx)->r5.s64 = 3662;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,27(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r4,3665
	ctx_arrow(ctx)->r4.s64 = 3665;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,31(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,3145
	ctx_arrow(ctx)->r10.s64 = 3145;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r9,3656
	ctx_arrow(ctx)->r9.s64 = 3656;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,35(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r29.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,39(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r29.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,43(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,47(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,51(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r8,3209
	ctx_arrow(ctx)->r8.s64 = 3209;
	// li ctx_arrow(ctx)->r7,3210
	ctx_arrow(ctx)->r7.s64 = 3210;
	// li ctx_arrow(ctx)->r6,3211
	ctx_arrow(ctx)->r6.s64 = 3211;
	// li ctx_arrow(ctx)->r29,3226
	ctx_arrow(ctx)->r29.s64 = 3226;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,55(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r5,3224
	ctx_arrow(ctx)->r5.s64 = 3224;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,59(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,3208
	ctx_arrow(ctx)->r10.s64 = 3208;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r4,3225
	ctx_arrow(ctx)->r4.s64 = 3225;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,63(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,67(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r9,3227
	ctx_arrow(ctx)->r9.s64 = 3227;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r8,4100
	ctx_arrow(ctx)->r8.s64 = 4100;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,71(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r7,3589
	ctx_arrow(ctx)->r7.s64 = 3589;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,75(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r6,3592
	ctx_arrow(ctx)->r6.s64 = 3592;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,79(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r5,3668
	ctx_arrow(ctx)->r5.s64 = 3668;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,83(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r4,3671
	ctx_arrow(ctx)->r4.s64 = 3671;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,87(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// lbz ctx_arrow(ctx)->r10,91(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r10,4103
	ctx_arrow(ctx)->r10.s64 = 4103;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,95(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,99(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,103(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,107(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,3677
	ctx_arrow(ctx)->r9.s64 = 3677;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r7,3680
	ctx_arrow(ctx)->r7.s64 = 3680;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r6,3686
	ctx_arrow(ctx)->r6.s64 = 3686;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r29,3695
	ctx_arrow(ctx)->r29.s64 = 3695;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,111(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r5,3689
	ctx_arrow(ctx)->r5.s64 = 3689;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,115(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r4,3692
	ctx_arrow(ctx)->r4.s64 = 3692;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,119(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,3674
	ctx_arrow(ctx)->r10.s64 = 3674;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r10,3683
	ctx_arrow(ctx)->r10.s64 = 3683;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,123(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,127(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// li ctx_arrow(ctx)->r8,3701
	ctx_arrow(ctx)->r8.s64 = 3701;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r7,3704
	ctx_arrow(ctx)->r7.s64 = 3704;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,131(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,135(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r6,3707
	ctx_arrow(ctx)->r6.s64 = 3707;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,139(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r5,3615
	ctx_arrow(ctx)->r5.s64 = 3615;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,143(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r4,3624
	ctx_arrow(ctx)->r4.s64 = 3624;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,147(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,3698
	ctx_arrow(ctx)->r10.s64 = 3698;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,151(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r9,3618
	ctx_arrow(ctx)->r9.s64 = 3618;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,155(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r29.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,159(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r8,3633
	ctx_arrow(ctx)->r8.s64 = 3633;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r7,3645
	ctx_arrow(ctx)->r7.s64 = 3645;
	// li ctx_arrow(ctx)->r29,2590
	ctx_arrow(ctx)->r29.s64 = 2590;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,163(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r6,3540
	ctx_arrow(ctx)->r6.s64 = 3540;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,167(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r5,3844
	ctx_arrow(ctx)->r5.s64 = 3844;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,171(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r9,3627
	ctx_arrow(ctx)->r9.s64 = 3627;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,175(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// lbz ctx_arrow(ctx)->r10,179(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r10,3636
	ctx_arrow(ctx)->r10.s64 = 3636;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r9,3642
	ctx_arrow(ctx)->r9.s64 = 3642;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,183(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r4.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,187(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,2587
	ctx_arrow(ctx)->r4.s64 = 2587;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,191(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r9,3846
	ctx_arrow(ctx)->r9.s64 = 3846;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,195(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r7,3847
	ctx_arrow(ctx)->r7.s64 = 3847;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,199(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r6,2133
	ctx_arrow(ctx)->r6.s64 = 2133;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,203(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// li ctx_arrow(ctx)->r5,2584
	ctx_arrow(ctx)->r5.s64 = 2584;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,207(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,3845
	ctx_arrow(ctx)->r10.s64 = 3845;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r10,2069
	ctx_arrow(ctx)->r10.s64 = 2069;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,211(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,215(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,219(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,223(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,227(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,231(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,235(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r10,72
	ctx_arrow(ctx)->r10.s64 = 72;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,239(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// ble ctx_arrow(ctx)->r6,0x8219ef8c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219EF8C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_8219EF8C:
	// li ctx_arrow(ctx)->r11,501
	ctx_arrow(ctx)->r11.s64 = 501;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// li ctx_arrow(ctx)->r9,8697
	ctx_arrow(ctx)->r9.s64 = 8697;
	// li ctx_arrow(ctx)->r8,23
	ctx_arrow(ctx)->r8.s64 = 23;
	// li ctx_arrow(ctx)->r7,501
	ctx_arrow(ctx)->r7.s64 = 501;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_8219EFC8) PPC_WEAK_FUNC(sub_8219EFC8);
PPC_FUNC_IMPL(__imp__sub_8219EFC8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x8219efd8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_8219EFD8;
	// blr 
	return;
loc_8219EFD8:
	// b 0x8219d810
	sub_8219D810(ctx, base);
	return;
}

alias(__imp__sub_8219EFE0) PPC_WEAK_FUNC(sub_8219EFE0);
PPC_FUNC_IMPL(__imp__sub_8219EFE0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x8219f008
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219F008;
	// bl 0x8219d298
	sub_8219D298(ctx, base);
loc_8219F008:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x8219f040
	if (ctx_arrow(ctx)->r0.eq()) goto loc_8219F040;
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x8219f028
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_8219F028;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_8219F028:
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9728
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 9728;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
loc_8219F040:
	// li ctx_arrow(ctx)->r4,360
	ctx_arrow(ctx)->r4.s64 = 360;
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-16383
	ctx_arrow(ctx)->r11.s64 = -1073676288;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15872
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 15872;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// li ctx_arrow(ctx)->r4,487
	ctx_arrow(ctx)->r4.s64 = 487;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 12) & 0xFFF;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r28,488
	ctx_arrow(ctx)->r28.s64 = 488;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r31.u32 & 0x1FFFFFFF;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 12;
	// ori ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r8.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r24,919
	ctx_arrow(ctx)->r24.s64 = 919;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,920
	ctx_arrow(ctx)->r22.s64 = 920;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 16;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r4,921
	ctx_arrow(ctx)->r4.s64 = 921;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r27,922
	ctx_arrow(ctx)->r27.s64 = 922;
	// li ctx_arrow(ctx)->r25,3532
	ctx_arrow(ctx)->r25.s64 = 3532;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3533
	ctx_arrow(ctx)->r23.s64 = 3533;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 20;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,28
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 28;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,40
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 40;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,32
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 32;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// li ctx_arrow(ctx)->r27,3535
	ctx_arrow(ctx)->r27.s64 = 3535;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,52
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 52;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3536
	ctx_arrow(ctx)->r25.s64 = 3536;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r8,3534
	ctx_arrow(ctx)->r8.s64 = 3534;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3537
	ctx_arrow(ctx)->r23.s64 = 3537;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,36
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 36;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r5.u64;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,44
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 44;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3538
	ctx_arrow(ctx)->r22.s64 = 3538;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u32 & 0x1FFFFFFF;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r28,3539
	ctx_arrow(ctx)->r28.s64 = 3539;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,48
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 48;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// li ctx_arrow(ctx)->r26,3148
	ctx_arrow(ctx)->r26.s64 = 3148;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,56
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 56;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r24,3149
	ctx_arrow(ctx)->r24.s64 = 3149;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,68
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 68;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3150
	ctx_arrow(ctx)->r22.s64 = 3150;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r28,3151
	ctx_arrow(ctx)->r28.s64 = 3151;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,64
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 64;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 84;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// li ctx_arrow(ctx)->r26,3152
	ctx_arrow(ctx)->r26.s64 = 3152;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r24,3153
	ctx_arrow(ctx)->r24.s64 = 3153;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,72
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 72;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3154
	ctx_arrow(ctx)->r22.s64 = 3154;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,76
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 76;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,92
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 92;
	// li ctx_arrow(ctx)->r4,3155
	ctx_arrow(ctx)->r4.s64 = 3155;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r27,3658
	ctx_arrow(ctx)->r27.s64 = 3658;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3657
	ctx_arrow(ctx)->r25.s64 = 3657;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,100
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 100;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3661
	ctx_arrow(ctx)->r23.s64 = 3661;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3660
	ctx_arrow(ctx)->r22.s64 = 3660;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 80;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,88
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 88;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,116
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 116;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,108
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 108;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// li ctx_arrow(ctx)->r27,3664
	ctx_arrow(ctx)->r27.s64 = 3664;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,112
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 112;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3663
	ctx_arrow(ctx)->r25.s64 = 3663;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,104
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 104;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3667
	ctx_arrow(ctx)->r23.s64 = 3667;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 96;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64 | 2;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r22,3666
	ctx_arrow(ctx)->r22.s64 = 3666;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r28,3212
	ctx_arrow(ctx)->r28.s64 = 3212;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r26,3213
	ctx_arrow(ctx)->r26.s64 = 3213;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,128
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 128;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r24,3214
	ctx_arrow(ctx)->r24.s64 = 3214;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u32 & 0x1FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,120
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 120;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,124
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 124;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,132
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 132;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3215
	ctx_arrow(ctx)->r22.s64 = 3215;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r28,3216
	ctx_arrow(ctx)->r28.s64 = 3216;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,136
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 136;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r26,3217
	ctx_arrow(ctx)->r26.s64 = 3217;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,148
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 148;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,140
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 140;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r5.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// li ctx_arrow(ctx)->r24,3218
	ctx_arrow(ctx)->r24.s64 = 3218;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,144
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 144;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3219
	ctx_arrow(ctx)->r22.s64 = 3219;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r4,3228
	ctx_arrow(ctx)->r4.s64 = 3228;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,152
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 152;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,160
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 160;
	// li ctx_arrow(ctx)->r27,3229
	ctx_arrow(ctx)->r27.s64 = 3229;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3230
	ctx_arrow(ctx)->r25.s64 = 3230;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,164
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 164;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3231
	ctx_arrow(ctx)->r23.s64 = 3231;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3232
	ctx_arrow(ctx)->r22.s64 = 3232;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,156
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 156;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,168
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 168;
	// li ctx_arrow(ctx)->r27,3233
	ctx_arrow(ctx)->r27.s64 = 3233;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,176
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 176;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,188
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 188;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3234
	ctx_arrow(ctx)->r25.s64 = 3234;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,180
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 180;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3235
	ctx_arrow(ctx)->r23.s64 = 3235;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,172
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 172;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,4102
	ctx_arrow(ctx)->r22.s64 = 4102;
	// li ctx_arrow(ctx)->r28,4101
	ctx_arrow(ctx)->r28.s64 = 4101;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,204
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 204;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r26,4105
	ctx_arrow(ctx)->r26.s64 = 4105;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r24,4104
	ctx_arrow(ctx)->r24.s64 = 4104;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u32 & 0x1FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,196
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 196;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,184
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 184;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3591
	ctx_arrow(ctx)->r22.s64 = 3591;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,192
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 192;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// li ctx_arrow(ctx)->r28,3590
	ctx_arrow(ctx)->r28.s64 = 3590;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,212
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 212;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,220
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 220;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r26,3594
	ctx_arrow(ctx)->r26.s64 = 3594;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r24,3593
	ctx_arrow(ctx)->r24.s64 = 3593;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,208
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 208;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3670
	ctx_arrow(ctx)->r22.s64 = 3670;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,200
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 200;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r4,3669
	ctx_arrow(ctx)->r4.s64 = 3669;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,228
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 228;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r27,3673
	ctx_arrow(ctx)->r27.s64 = 3673;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,236
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 236;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3672
	ctx_arrow(ctx)->r25.s64 = 3672;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,224
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 224;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,216
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 216;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3676
	ctx_arrow(ctx)->r23.s64 = 3676;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,244
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 244;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// li ctx_arrow(ctx)->r22,3675
	ctx_arrow(ctx)->r22.s64 = 3675;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r27,3679
	ctx_arrow(ctx)->r27.s64 = 3679;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,252
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 252;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,248
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 248;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3678
	ctx_arrow(ctx)->r25.s64 = 3678;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,240
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 240;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3682
	ctx_arrow(ctx)->r23.s64 = 3682;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,232
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 232;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r5.u64;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0x1000;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// li ctx_arrow(ctx)->r22,3681
	ctx_arrow(ctx)->r22.s64 = 3681;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r28,3685
	ctx_arrow(ctx)->r28.s64 = 3685;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r26,3684
	ctx_arrow(ctx)->r26.s64 = 3684;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,264
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 264;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r24,3688
	ctx_arrow(ctx)->r24.s64 = 3688;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u32 & 0x1FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,256
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 256;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,260
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 260;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,268
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 268;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3687
	ctx_arrow(ctx)->r22.s64 = 3687;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,272
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 272;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// li ctx_arrow(ctx)->r4,3691
	ctx_arrow(ctx)->r4.s64 = 3691;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r27,3690
	ctx_arrow(ctx)->r27.s64 = 3690;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,280
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 280;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3694
	ctx_arrow(ctx)->r25.s64 = 3694;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3693
	ctx_arrow(ctx)->r23.s64 = 3693;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,276
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 276;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,284
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 284;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,296
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 296;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,288
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 288;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// li ctx_arrow(ctx)->r27,3696
	ctx_arrow(ctx)->r27.s64 = 3696;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,308
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 308;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3700
	ctx_arrow(ctx)->r25.s64 = 3700;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r8,3697
	ctx_arrow(ctx)->r8.s64 = 3697;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3699
	ctx_arrow(ctx)->r23.s64 = 3699;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,292
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 292;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3703
	ctx_arrow(ctx)->r22.s64 = 3703;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,300
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 300;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u32 & 0x1FFFFFFF;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,304
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 304;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,316
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 316;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r28,3702
	ctx_arrow(ctx)->r28.s64 = 3702;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r26,3706
	ctx_arrow(ctx)->r26.s64 = 3706;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,312
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 312;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r24,3705
	ctx_arrow(ctx)->r24.s64 = 3705;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,324
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 324;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r23,3709
	ctx_arrow(ctx)->r23.s64 = 3709;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,340
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 340;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,320
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 320;
	// li ctx_arrow(ctx)->r28,3708
	ctx_arrow(ctx)->r28.s64 = 3708;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// li ctx_arrow(ctx)->r26,3617
	ctx_arrow(ctx)->r26.s64 = 3617;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r24,3616
	ctx_arrow(ctx)->r24.s64 = 3616;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,328
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 328;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3620
	ctx_arrow(ctx)->r22.s64 = 3620;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,332
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 332;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r4,3619
	ctx_arrow(ctx)->r4.s64 = 3619;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,348
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 348;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,356
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 356;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r27,3626
	ctx_arrow(ctx)->r27.s64 = 3626;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3625
	ctx_arrow(ctx)->r25.s64 = 3625;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3629
	ctx_arrow(ctx)->r23.s64 = 3629;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,336
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 336;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,344
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 344;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,372
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 372;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,364
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 364;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// li ctx_arrow(ctx)->r27,3635
	ctx_arrow(ctx)->r27.s64 = 3635;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,368
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 368;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3634
	ctx_arrow(ctx)->r25.s64 = 3634;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r8,3628
	ctx_arrow(ctx)->r8.s64 = 3628;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3638
	ctx_arrow(ctx)->r23.s64 = 3638;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,352
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 352;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r22,3637
	ctx_arrow(ctx)->r22.s64 = 3637;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r5.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,360
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 360;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 0) & 0x1000;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u32 & 0x1FFFFFFF;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// li ctx_arrow(ctx)->r28,3644
	ctx_arrow(ctx)->r28.s64 = 3644;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,384
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 384;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r26,3643
	ctx_arrow(ctx)->r26.s64 = 3643;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r24,3647
	ctx_arrow(ctx)->r24.s64 = 3647;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,380
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 380;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,376
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 376;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,388
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 388;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// li ctx_arrow(ctx)->r22,3646
	ctx_arrow(ctx)->r22.s64 = 3646;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,396
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 396;
	// li ctx_arrow(ctx)->r28,3544
	ctx_arrow(ctx)->r28.s64 = 3544;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,392
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 392;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r26,3545
	ctx_arrow(ctx)->r26.s64 = 3545;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,404
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 404;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r24,3848
	ctx_arrow(ctx)->r24.s64 = 3848;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,400
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 400;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// li ctx_arrow(ctx)->r22,3849
	ctx_arrow(ctx)->r22.s64 = 3849;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r4,3850
	ctx_arrow(ctx)->r4.s64 = 3850;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,408
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 408;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,416
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 416;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r27,3851
	ctx_arrow(ctx)->r27.s64 = 3851;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,3852
	ctx_arrow(ctx)->r25.s64 = 3852;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,3853
	ctx_arrow(ctx)->r23.s64 = 3853;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,3854
	ctx_arrow(ctx)->r22.s64 = 3854;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,412
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 412;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,420
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 420;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,432
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 432;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,424
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 424;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r27,3855
	ctx_arrow(ctx)->r27.s64 = 3855;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,444
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 444;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,2071
	ctx_arrow(ctx)->r25.s64 = 2071;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,436
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 436;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,2070
	ctx_arrow(ctx)->r23.s64 = 2070;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,428
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 428;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// li ctx_arrow(ctx)->r22,2135
	ctx_arrow(ctx)->r22.s64 = 2135;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// li ctx_arrow(ctx)->r28,2134
	ctx_arrow(ctx)->r28.s64 = 2134;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,460
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 460;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r26,2586
	ctx_arrow(ctx)->r26.s64 = 2586;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r24,2585
	ctx_arrow(ctx)->r24.s64 = 2585;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u32 & 0x1FFFFFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,452
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 452;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,440
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 440;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r22,2589
	ctx_arrow(ctx)->r22.s64 = 2589;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,448
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 448;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,512
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 512;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0,19,19
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1000;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r4,2588
	ctx_arrow(ctx)->r4.s64 = 2588;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,468
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 468;
	// li ctx_arrow(ctx)->r27,2592
	ctx_arrow(ctx)->r27.s64 = 2592;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,476
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 476;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r25,2591
	ctx_arrow(ctx)->r25.s64 = 2591;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,464
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 464;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,74
	ctx_arrow(ctx)->r23.s64 = 74;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r11.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,456
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 456;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r7.u32 & 0x1FFFFFFF;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r8,73
	ctx_arrow(ctx)->r8.s64 = 73;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,472
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 472;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 12);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_821A0618) PPC_WEAK_FUNC(sub_821A0618);
PPC_FUNC_IMPL(__imp__sub_821A0618) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bne 0x821a0668
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A0668;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a064c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A064C;
	// bl 0x8219d298
	sub_8219D298(ctx, base);
loc_821A064C:
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// lwz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821A0668:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A0680) PPC_WEAK_FUNC(sub_821A0680);
PPC_FUNC_IMPL(__imp__sub_821A0680) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r6.u64;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a06a8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A06A8;
	// bl 0x8219d298
	sub_8219D298(ctx, base);
loc_821A06A8:
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,480
	ctx_arrow(ctx)->r5.s64 = 480;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,480
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 480;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a06e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A06E0;
	// lis ctx_arrow(ctx)->r11,10922
	ctx_arrow(ctx)->r11.s64 = 715784192;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,43690
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 43690;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
loc_821A06E0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821A06F0) PPC_WEAK_FUNC(sub_821A06F0);
PPC_FUNC_IMPL(__imp__sub_821A06F0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r8.u64;
loc_821A0710:
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// twllei ctx_arrow(ctx)->r30,0
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r4.s64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// divw. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s32 = ctx_arrow(ctx)->r10.s32 / ctx_arrow(ctx)->r30.s32;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 1);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64 & ~ctx_arrow(ctx)->r10.u64;
	// twlgei ctx_arrow(ctx)->r10,-1
	// ble 0x821a0780
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_821A0780;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r30.s32);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r31.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a074c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A074C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_821A074C:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// subf ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r11.s64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16,0,15
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 16) & 0xFFFF0000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r28.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
	// beq ctx_arrow(ctx)->r6,0x821a077c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A077C;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A076C:
	// lwzu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r27)
	ea = 4 + ctx_arrow(ctx)->r27.u32;
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	ctx_arrow(ctx)->r27.u32 = ea;
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
	// bne 0x821a076c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A076C;
loc_821A077C:
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
loc_821A0780:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a079c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A079C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 48);
	// bl 0x8219d6d8
	sub_8219D6D8(&ctx);
	// lwz ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a0710
	goto loc_821A0710;
loc_821A079C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_821A07A8) PPC_WEAK_FUNC(sub_821A07A8);
PPC_FUNC_IMPL(__imp__sub_821A07A8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,12684(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a07e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A07E4;
	// lwz ctx_arrow(ctx)->r10,64(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,5,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 5) & 0x1;
loc_821A07E4:
	// lwz ctx_arrow(ctx)->r9,11844(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,10548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,31,1,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 31) & 0x7FFFFFFF;
	// lwz ctx_arrow(ctx)->r6,10560(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFFF;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r7.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,0,0,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 0) & 0xFFFFFFFE) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF00000001);
	// stw ctx_arrow(ctx)->r11,10560(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10560);
	// rlwinm. ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9,0,30,30
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// bne 0x821a081c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A081C;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0x1;
	// b 0x821a08c0
	goto loc_821A08C0;
loc_821A081C:
	// rlwinm. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,28,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 28) & 0x7;
	// bne 0x821a0838
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A0838;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0854
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0854;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 3, xer);
	// b 0x821a0844
	goto loc_821A0844;
loc_821A0838:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0854
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0854;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 6, xer);
loc_821A0844:
	// beq ctx_arrow(ctx)->r6,0x821a0854
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0854;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 2, xer);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x821a0858
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0858;
loc_821A0854:
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
loc_821A0858:
	// cntlzw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
	// clrlwi. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 27) & 0x1;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r11.u64;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r7.u64;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r9.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	// beq 0x821a08c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A08C0;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,18,20
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3800;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,12,14
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE0000;
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
	// cntlzw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 27) & 0x1;
	// rlwinm. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0,24,24
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r8.u64;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r11.u64;
	// beq 0x821a08c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A08C0;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,0,2
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xE0000000;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,0,6,8
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3800000;
	// cntlzw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r9.u32);
	// cntlzw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,27,31,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 27) & 0x1;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,27,31,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 27) & 0x1;
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r8.u64;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r11.u64;
loc_821A08C0:
	// lwz ctx_arrow(ctx)->r9,10560(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1,30,30
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 1) & 0x2) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFFFD);
	// stw ctx_arrow(ctx)->r9,10560(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10560);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a0934
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0934;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a098c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A098C;
	// lwz ctx_arrow(ctx)->r10,13488(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a08f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A08F8;
	// lwz ctx_arrow(ctx)->r10,13496(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821a098c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A098C;
loc_821A08F8:
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,251
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 251;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r10.u32, xer);
	// stb ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10941, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// ble ctx_arrow(ctx)->r6,0x821a0918
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A0918;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821A0918:
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// li ctx_arrow(ctx)->r10,15
	ctx_arrow(ctx)->r10.s64 = 15;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17920
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 17920;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// b 0x821a098c
	goto loc_821A098C;
loc_821A0934:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a098c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A098C;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a098c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A098C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28,29,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 28) & 0x7;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 7, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0980
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0980;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0980
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0980;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,0,27,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a0970
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A0970;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0980
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0980;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 6, xer);
	// b 0x821a097c
	goto loc_821A097C;
loc_821A0970:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0980
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0980;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
loc_821A097C:
	// bne ctx_arrow(ctx)->r6,0x821a098c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A098C;
loc_821A0980:
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4;
	// stb ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10941, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_821A098C:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,256
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64 | 256;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A09A8) PPC_WEAK_FUNC(sub_821A09A8);
PPC_FUNC_IMPL(__imp__sub_821A09A8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a09d8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A09D8;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A09D8:
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r21,0,23,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r21.u32 | (ctx_arrow(ctx)->r21.u64 << 32), 0) & 0x100;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r10.u64;
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r9.u64, 0, xer);
	// ori ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10,24832
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r10.u64 | 24832;
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// ori ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,24576
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64 | 24576;
	// lis ctx_arrow(ctx)->r10,-16383
	ctx_arrow(ctx)->r10.s64 = -1073676288;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,11521
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r10.u64 | 11521;
	// lis ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = 262144;
	// ori ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10,515
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r10.u64 | 515;
	// beq ctx_arrow(ctx)->r6,0x821a0c1c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0C1C;
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a0bdc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0BDC;
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,27,27
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x821a0a34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0A34;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x821a0ac4
	goto loc_821A0AC4;
loc_821A0A34:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a0abc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0ABC;
	// lwz ctx_arrow(ctx)->r10,12432(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12720(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0a54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0A54;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0abc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0ABC;
loc_821A0A54:
	// lwz ctx_arrow(ctx)->r10,12436(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12724(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0a6c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0A6C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0abc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0ABC;
loc_821A0A6C:
	// lwz ctx_arrow(ctx)->r10,12440(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12728(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0a84
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0A84;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0abc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0ABC;
loc_821A0A84:
	// lwz ctx_arrow(ctx)->r10,12444(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12732(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0a9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0A9C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0abc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0ABC;
loc_821A0A9C:
	// lwz ctx_arrow(ctx)->r10,12448(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12736(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0ab4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0AB4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0abc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0ABC;
loc_821A0AB4:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// b 0x821a0ac0
	goto loc_821A0AC0;
loc_821A0ABC:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_821A0AC0:
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
loc_821A0AC4:
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a0bdc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0BDC;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821a0b7c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821A0B7C;
loc_821A0AE8:
	// lwz ctx_arrow(ctx)->r10,11844(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,3276
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r30.s64 + 3276;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9,17,0,14
	ctx_arrow(ctx)->r27.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 17) & 0xFFFE0000) | (ctx_arrow(ctx)->r27.u64 & 0xFFFFFFFF0001FFFF);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,15,29,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 15) & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a0b24
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0B24;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0b28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0B28;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0b24
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0B24;
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,27,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a0b28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A0B28;
loc_821A0B24:
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27,0,0,30
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFFFFE;
loc_821A0B28:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 1) & 0xFFFFFFFE;
	// li ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 3;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r24.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x3F)), 0));
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// ble ctx_arrow(ctx)->r6,0x821a0b70
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A0B70;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A0B70:
	// addic. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-1
	xer.ca = ctx_arrow(ctx)->r30.u32 > 0;
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bge 0x821a0ae8
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821A0AE8;
	// b 0x821a0b80
	goto loc_821A0B80;
loc_821A0B7C:
	// lwz ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A0B80:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r27.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0bb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0BB8;
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,25,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a0bb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0BB8;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A0BB8:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r25.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12700(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12704(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// b 0x821a0c14
	goto loc_821A0C14;
loc_821A0BDC:
	// lwz ctx_arrow(ctx)->r9,11844(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,12,14
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xE0000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x821a0bf0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A0BF0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,0,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0xFFFFFFFE;
loc_821A0BF0:
	// li ctx_arrow(ctx)->r9,8707
	ctx_arrow(ctx)->r9.s64 = 8707;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r27.u32, xer);
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// beq ctx_arrow(ctx)->r6,0x821a0c14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0C14;
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,25,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a0c14
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A0C14;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r27.u64;
loc_821A0C14:
	// li ctx_arrow(ctx)->r12,-257
	ctx_arrow(ctx)->r12.s64 = -257;
	// and ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r21.u64 & ctx_arrow(ctx)->r12.u64;
loc_821A0C1C:
	// ld ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r21.u64;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,57,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 57) & 0xFFFFFFFFFFFFFFFF;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r12.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0c5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0C5C;
	// li ctx_arrow(ctx)->r8,8192
	ctx_arrow(ctx)->r8.s64 = 8192;
	// lwz ctx_arrow(ctx)->r10,10368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r12,-2
	ctx_arrow(ctx)->r12.s64 = -2;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,57,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 57) & 0xFFFFFFFFFFFFFFFF;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// and ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r21.u64 & ctx_arrow(ctx)->r12.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r22,13168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r10,0,0,17
	ctx_arrow(ctx)->r22.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFFFFC000) | (ctx_arrow(ctx)->r22.u64 & 0xFFFFFFFF00003FFF);
loc_821A0C5C:
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,37,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 37) & 0xFFFFFFFFFFFFFFFF;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r12.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0c90
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0C90;
	// li ctx_arrow(ctx)->r10,8452
	ctx_arrow(ctx)->r10.s64 = 8452;
	// li ctx_arrow(ctx)->r12,-2
	ctx_arrow(ctx)->r12.s64 = -2;
	// li ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r20.s64 = 0;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,37,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 37) & 0xFFFFFFFFFFFFFFFF;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// and ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r21.u64 & ctx_arrow(ctx)->r12.u64;
	// lwz ctx_arrow(ctx)->r10,10460(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A0C90:
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r20.u64 & ctx_arrow(ctx)->r22.u64;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r23.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0d2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0D2C;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// lis ctx_arrow(ctx)->r8,5461
	ctx_arrow(ctx)->r8.s64 = 357892096;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r23.s32, -1, xer);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,21845
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 21845;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// beq ctx_arrow(ctx)->r6,0x821a0cdc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0CDC;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A0CDC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r22.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0cf8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0CF8;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// lis ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = 262144;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r22,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A0CF8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r20.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a0d14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A0D14;
	// lis ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = 262144;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,260
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 260;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r20,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A0D14:
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12700(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12704(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A0D2C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r21.u64;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed168
	return;
}

alias(__imp__sub_821A0D40) PPC_WEAK_FUNC(sub_821A0D40);
PPC_FUNC_IMPL(__imp__sub_821A0D40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6,-4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r6.s64 + -4;
	// lwz ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A0D5C:
	// cntlzd ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r31.u64);
	// lwz ctx_arrow(ctx)->r9,52(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrldi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r5.u64;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r29.u64;
	// sld ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r31.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x7F)), 0));
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r31.u64;
	// cntlzd ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r11.u64);
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64 + ctx_arrow(ctx)->r4.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a0dc4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A0DC4;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x821a06f0
	sub_821A06F0(ctx, base);
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 & 0xFFFFFFFF;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64 + ctx_arrow(ctx)->r29.u64;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r28.u64;
	// sld ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r31.u64 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// b 0x821a0dec
	goto loc_821A0DEC;
loc_821A0DC4:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r28.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16,0,15
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 16) & 0xFFFF0000;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r28.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
loc_821A0DD8:
	// lwzu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r29)
	ea = 4 + ctx_arrow(ctx)->r29.u32;
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	ctx_arrow(ctx)->r29.u32 = ea;
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// rldicr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1,62
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u64, 1) & 0xFFFFFFFFFFFFFFFE;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
	// bne 0x821a0dd8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A0DD8;
loc_821A0DEC:
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0d5c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0D5C;
	// stw ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A0E00) PPC_WEAK_FUNC(sub_821A0E00);
PPC_FUNC_IMPL(__imp__sub_821A0E00) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r29,9096
	ctx_arrow(ctx)->r29.s64 = 9096;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,10272
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 + 10272;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a0e34
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A0E34;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A0E34:
	// li ctx_arrow(ctx)->r10,8199
	ctx_arrow(ctx)->r10.s64 = 8199;
	// li ctx_arrow(ctx)->r9,2609
	ctx_arrow(ctx)->r9.s64 = 2609;
	// lis ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 65536;
	// lis ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 65536;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,2607
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 2607;
	// lwz ctx_arrow(ctx)->r10,10396(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,4096
	ctx_arrow(ctx)->r5.s64 = 4096;
	// lis ctx_arrow(ctx)->r4,-16380
	ctx_arrow(ctx)->r4.s64 = -1073479680;
	// li ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r3.s64 = 3;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,15360
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 15360;
	// li ctx_arrow(ctx)->r27,2609
	ctx_arrow(ctx)->r27.s64 = 2609;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// lis ctx_arrow(ctx)->r24,-32768
	ctx_arrow(ctx)->r24.s64 = -2147483648;
	// li ctx_arrow(ctx)->r25,8
	ctx_arrow(ctx)->r25.s64 = 8;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,-4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + -4;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
loc_821A0EB4:
	// cntlzd ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r28.u64);
	// lwz ctx_arrow(ctx)->r9,52(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrldi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// sld ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r28.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r28.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x7F)), 0));
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r28.u64;
	// cntlzd ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r11.u64);
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26,2,0,29
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64 + ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a0f24
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A0F24;
	// li ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = 4;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a06f0
	sub_821A06F0(ctx, base);
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64 & 0xFFFFFFFF;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r25.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r27.u64;
	// sld ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r28.u64 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// b 0x821a0f68
	goto loc_821A0F68;
loc_821A0F24:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// stw ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u32 & 0x7;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16,0,15
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 16) & 0xFFFF0000;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r27.u64;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r27.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
loc_821A0F44:
	// ld ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,-1
	xer.ca = ctx_arrow(ctx)->r26.u32 > 0;
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// ld ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// rldicr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1,62
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u64, 1) & 0xFFFFFFFFFFFFFFFE;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,16
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 16;
	// std ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// std ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 16;
	// bne 0x821a0f44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A0F44;
loc_821A0F68:
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r28.u64, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0eb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0EB4;
	// stw ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
}

alias(__imp__sub_821A0F80) PPC_WEAK_FUNC(sub_821A0F80);
PPC_FUNC_IMPL(__imp__sub_821A0F80) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,1152
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 1152;
	// li ctx_arrow(ctx)->r10,18432
	ctx_arrow(ctx)->r10.s64 = 18432;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// lwz ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A0FA4:
	// cntlzd ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r31.u64);
	// lwz ctx_arrow(ctx)->r8,52(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrldi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 * 24;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 6;
	// sld ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r31.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x7F)), 0));
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r30.u64;
	// cntlzd ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r11.u64);
	// mulli ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26,6
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r26.s64 * 6;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + 5;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r8.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1068
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1068;
	// li ctx_arrow(ctx)->r8,6
	ctx_arrow(ctx)->r8.s64 = 6;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821a06f0
	sub_821A06F0(ctx, base);
	// clrldi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26,32
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r26.u64 & 0xFFFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r27.u64;
	// sld ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r31.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r9, 0, BINARY_OP_U8(ctx_arrow(ctx)->r9, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r31.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r9) & 0x7F)), 0));
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0fa4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0FA4;
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// stw ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 48);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a103c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A103C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A103C:
	// lis ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 131072;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,20480
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 20480;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 48);
	// b 0x821a10d8
	goto loc_821A10D8;
loc_821A1068:
	// lis ctx_arrow(ctx)->r10,-32768
	ctx_arrow(ctx)->r10.s64 = -2147483648;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u32 & 0x7;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16,0,15
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 16) & 0xFFFF0000;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r27.u64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r27.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
loc_821A108C:
	// ld ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,-1
	xer.ca = ctx_arrow(ctx)->r26.u32 > 0;
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// ld ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// rldicr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1,62
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u64, 1) & 0xFFFFFFFFFFFFFFFE;
	// ld ctx_arrow(ctx)->r8,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 24;
	// std ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// std ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
	// std ctx_arrow(ctx)->r8,20(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 20);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,24
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 24;
	// bne 0x821a108c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A108C;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a0fa4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A0FA4;
	// li ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r11.s64 = 37;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 16;
	// rldicr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,44,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 44) & 0xFFFFF00000000000;
	// stw ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 48);
	// std ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 4);
	// std ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 12);
loc_821A10D8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A10E0) PPC_WEAK_FUNC(sub_821A10E0);
PPC_FUNC_IMPL(__imp__sub_821A10E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6,-4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r6.s64 + -4;
	// lis ctx_arrow(ctx)->r25,-32768
	ctx_arrow(ctx)->r25.s64 = -2147483648;
	// li ctx_arrow(ctx)->r21,4
	ctx_arrow(ctx)->r21.s64 = 4;
	// lwz ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r22,20
	ctx_arrow(ctx)->r22.s64 = 20;
	// li ctx_arrow(ctx)->r23,36
	ctx_arrow(ctx)->r23.s64 = 36;
	// li ctx_arrow(ctx)->r24,52
	ctx_arrow(ctx)->r24.s64 = 52;
loc_821A1110:
	// cntlzd ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r30.u64);
	// lwz ctx_arrow(ctx)->r9,52(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrldi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0xFFFFFFF0;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r5.u64;
	// sld ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r30.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r30.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x7F)), 0));
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r30.u64;
	// cntlzd ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 == 0 ? 64 : __builtin_clzll(ctx_arrow(ctx)->r11.u64);
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28,4,0,27
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 4) & 0xFFFFFFF0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1184
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1184;
	// li ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r8.s64 = 16;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x821a06f0
	sub_821A06F0(ctx, base);
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r28.u64 & 0xFFFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r27.u64;
	// sld ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r30.u64 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x7F)), 0));
	// b 0x821a1228
	goto loc_821A1228;
loc_821A1184:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u32 & 0xF;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x821a119c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A119C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
	// b 0x821a11e0
	goto loc_821A11E0;
loc_821A119C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a11b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A11B8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
	// b 0x821a11e0
	goto loc_821A11E0;
loc_821A11B8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 12, xer);
	// bne ctx_arrow(ctx)->r6,0x821a11e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A11E0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r25.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A11E0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r27.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xFFFF0000;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r27.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ea = 4 + ctx_arrow(ctx)->r4.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r4.u32 = ea;
loc_821A11F4:
	// lvx128 v0,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r21
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r21.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// addic. ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,-1
	xer.ca = ctx_arrow(ctx)->r28.u32 > 0;
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// lvx128 v13,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r22
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r22.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// rldicr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1,62
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u64, 1) & 0xFFFFFFFFFFFFFFFE;
	// lvx128 v12,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r23
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r23.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// lvx128 v11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r24
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r24.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,64
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 64;
	// stvx128 v0,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r21
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r4.u32 + ctx_arrow(ctx)->r21.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)), _mm_load_si128((__m128i*)VectorMaskL)));
	// stvx128 v13,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r4.u32 + ctx_arrow(ctx)->r22.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)VectorMaskL)));
	// stvx128 v12,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r4.u32 + ctx_arrow(ctx)->r23.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)VectorMaskL)));
	// stvx128 v11,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r4.u32 + ctx_arrow(ctx)->r24.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)), _mm_load_si128((__m128i*)VectorMaskL)));
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,64
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 64;
	// bne 0x821a11f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A11F4;
loc_821A1228:
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r30.u64, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a1110
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1110;
	// stw ctx_arrow(ctx)->r4,48(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_821A1240) PPC_WEAK_FUNC(sub_821A1240);
PPC_FUNC_IMPL(__imp__sub_821A1240) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-592(ctx_arrow(ctx)->r1)
	ea = -592 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r7.s64 + 112;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r4.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,872
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 872;
	// lwz ctx_arrow(ctx)->r26,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq 0x821a1848
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1848;
	// lwz ctx_arrow(ctx)->r9,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,416
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r7.s64 * 416;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 9;
	// lwz ctx_arrow(ctx)->r25,24(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,68
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 68;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r30.u64;
	// beq ctx_arrow(ctx)->r6,0x821a157c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A157C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lhz ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r5,52
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r5.s64 + 52;
	// subf ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-17312
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -17312;
loc_821A12BC:
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r23.u64 + ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r28,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// beq ctx_arrow(ctx)->r6,0x821a1318
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1318;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,20,28,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 20) & 0xF;
loc_821A12E4:
	// lbz ctx_arrow(ctx)->r21,9(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r21.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a1300
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1300;
	// lbz ctx_arrow(ctx)->r21,10(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r21.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r9,16,28,31
	ctx_arrow(ctx)->r20.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 16) & 0xF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, ctx_arrow(ctx)->r20.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1310
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1310;
loc_821A1300:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,12
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 12;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r25.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a12e4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A12E4;
loc_821A1310:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r25.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1348
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1348;
loc_821A1318:
	// lis ctx_arrow(ctx)->r12,-16442
	ctx_arrow(ctx)->r12.s64 = -1077542912;
	// lbz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,95
	ctx_arrow(ctx)->r10.s64 = 95;
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,53247
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 53247;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u32 & 0xF;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,20,2,11
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 20) & 0x3FF00000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFC00FFFFF);
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64 & ctx_arrow(ctx)->r12.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28,0,0,0
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0x80000000;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,37456
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 37456;
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 393216;
	// or ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r5.u64;
	// b 0x821a1468
	goto loc_821A1468;
loc_821A1348:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u32 & 0xF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,16,29,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 16) & 0x7;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,22,26,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 22) & 0x38;
	// rlwinm ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r10,13,29,31
	ctx_arrow(ctx)->r21.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 13) & 0x7;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,0,16,21
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFC00;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3,0,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r10,0,24,25
	ctx_arrow(ctx)->r20.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xC0;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r21.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r20,64
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r20.u32, 64, xer);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 1) & 0xFFFFFFFE;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r31.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3,0,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0xFFFFFFF8;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r9.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// bne ctx_arrow(ctx)->r6,0x821a140c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A140C;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,0,0,18
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFE000;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,24576
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 24576, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a13ac
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A13AC;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,16,18
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xE000;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,19
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFF;
	// xori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,8192
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ 8192;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
loc_821A13AC:
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,0,19,21
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1C00;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,3072
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 3072, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a13cc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A13CC;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,19,21
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1C00;
	// andi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,58367
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & 58367;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// xori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1024
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ 1024;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
loc_821A13CC:
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,0,22,24
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x380;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,384
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 384, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a13ec
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A13EC;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,22,24
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x380;
	// andi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,64639
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & 64639;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// xori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,128
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ 128;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
loc_821A13EC:
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,0,25,27
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x70;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,48
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 48, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a140c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A140C;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,25,27
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x70;
	// andi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,65423
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & 65423;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// xori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ 16;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r8.u64;
loc_821A140C:
	// rlwinm ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r10,12,14,19
	ctx_arrow(ctx)->r21.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0x3F000;
	// lhz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r5.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,22,23
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x300;
	// lhz ctx_arrow(ctx)->r5,2(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r5.u32 + 2);
	// lis ctx_arrow(ctx)->r12,-16448
	ctx_arrow(ctx)->r12.s64 = -1077936128;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r21.u64 | ctx_arrow(ctx)->r10.u64;
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,53247
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 53247;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4,0,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 4) & 0xFFFFFFF0;
	// lbzx ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r21.u64 = PPC_Read_U8(ctx,  ctx);
	// and ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r29.u64 & ctx_arrow(ctx)->r12.u64;
	// lis ctx_arrow(ctx)->r31,342
	ctx_arrow(ctx)->r31.s64 = 22413312;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r29.u64;
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,86
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r31.u64 | 86;
	// subfic ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8,95
	xer.ca = ctx_arrow(ctx)->r8.u32 <= 95;
	ctx_arrow(ctx)->r29.s64 = 95 - ctx_arrow(ctx)->r8.s64;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,6,1,23
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 6) & 0x7FFFFF00;
	// mullw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r8.s64 = int64_t(ctx_arrow(ctx)->r29.s32) * int64_t(ctx_arrow(ctx)->r31.s32);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,0,0,0
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 0) & 0x80000000;
	// or ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r21.u64;
	// rlwimi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,11,8,12
	ctx_arrow(ctx)->r31.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 11) & 0xF80000) | (ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFFFF07FFFF);
	// or ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r28.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1,5,11
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 1) & 0x7F00000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFF80FFFFF);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,5,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFC7FFFFFF;
loc_821A1468:
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// stw ctx_arrow(ctx)->r5,8(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 8);
	// addic. ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,-1
	xer.ca = ctx_arrow(ctx)->r3.u32 > 0;
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,14
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 14;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,1,28,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xE;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// lhzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r4.u32);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r11.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,29,3,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFF;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,29,3,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFF;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,29,3,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31,29,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 31) & 0x7) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFF8);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,30,28,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 30) & 0xE;
	// lhzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r4.u32);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r31.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,1,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x7FFFFFFF;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,0,29,25
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0) & 0xFFFFFFFFFFFFFFC7) | (ctx_arrow(ctx)->r10.u64 & 0x38);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,27,28,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0xE;
	// lhzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r4.u32);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r29.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r31.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,29,3,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 29) & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,2,0,29
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 2) & 0xFFFFFFFC;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,1,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x7FFFFFFF;
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,26,22
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFFFFFFFFFFFFFE3F) | (ctx_arrow(ctx)->r9.u64 & 0x1C0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,24,28,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 24) & 0xE;
	// lhzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r4.u32);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r28.u64;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,29,3,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFF;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r31.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,31,1,31
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 31) & 0x7FFFFFFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r31.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,23,19
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0) & 0xFFFFFFFFFFFFF1FF) | (ctx_arrow(ctx)->r11.u64 & 0xE00);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 4);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,12
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 12;
	// bne 0x821a12bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A12BC;
loc_821A157C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r30.u64;
	// add ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a180c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A180C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-17296
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -17296;
loc_821A1598:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a180c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A180C;
loc_821A15A0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,10,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x300000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a15b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A15B8;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r26.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a15a0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A15A0;
loc_821A15B8:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a180c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A180C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a180c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A180C;
loc_821A15D0:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,10,11
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x300000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x821a15e8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A15E8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a15d0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A15D0;
loc_821A15E8:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a180c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A180C;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r30.s64;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 2;
	// srawi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2
	xer.ca = (ctx_arrow(ctx)->r8.s32 < 0) & ((ctx_arrow(ctx)->r8.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s32 >> 2;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 * 12;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,0,10,11
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x300000;
	// lis ctx_arrow(ctx)->r7,48
	ctx_arrow(ctx)->r7.s64 = 3145728;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r6.s64 + -1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// li ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r7.u32, xer);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
	// bne ctx_arrow(ctx)->r6,0x821a1660
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1660;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r30.s64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 2;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r9.u64;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,14,25,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x7C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7,30,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 7) & 0x3;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// or ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
loc_821A1660:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1754
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1754;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A1674:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r5.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a1744
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A1744;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// subf ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r4.s64;
loc_821A1684:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,14,25,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 14) & 0x7C;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,7,30,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 7) & 0x3;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r8,14,25,29
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 14) & 0x7C;
	// rlwinm ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r8,7,30,31
	ctx_arrow(ctx)->r23.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 7) & 0x3;
	// or ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r9.u64;
	// or ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r24.u64 | ctx_arrow(ctx)->r23.u64;
	// subf. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r8.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x821a16c4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A16C4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, ctx_arrow(ctx)->r8.s32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1708
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1708;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, ctx_arrow(ctx)->r7.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a1700
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1700;
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// b 0x821a1700
	goto loc_821A1700;
loc_821A16C4:
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1,0,30
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 1) & 0xFFFFFFFE;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,9
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x1FF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32 >> 9;
	// srawi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,9
	xer.ca = (ctx_arrow(ctx)->r8.s32 < 0) & ((ctx_arrow(ctx)->r8.u32 & 0x1FF) != 0);
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s32 >> 9;
	// subf. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x821a1700
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1700;
	// lhz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 4);
	// lhz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 4);
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,26
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x3F;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x3F;
	// lbzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
loc_821A1700:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a1738
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A1738;
loc_821A1708:
	// lwz ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// lwz ctx_arrow(ctx)->r24,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r24,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
loc_821A1738:
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 12;
	// bne 0x821a1684
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1684;
loc_821A1744:
	// addic. ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,-1
	xer.ca = ctx_arrow(ctx)->r28.u32 > 0;
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// bne 0x821a1674
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1674;
loc_821A1754:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r6.s64 * 12;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x821a1800
	goto loc_821A1800;
loc_821A1768:
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64;
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,25,12,13
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 25) & 0xC0000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFF3FFFF);
	// rlwimi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,25,12,13
	ctx_arrow(ctx)->r5.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 25) & 0xC0000) | (ctx_arrow(ctx)->r5.u64 & 0xFFFFFFFFFFF3FFFF);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,0,7,13
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1FC0000;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,0,7,13
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0x1FC0000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a17f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A17F8;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1,0,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 1) & 0xFFFFFFFE;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,9
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1FF) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 9;
	// srawi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,9
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x1FF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s32 >> 9;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a17f8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A17F8;
	// lhz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 4);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x3F;
	// lbzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U8(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r5.s64 - ctx_arrow(ctx)->r10.s64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 8, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a17f8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A17F8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,5,29,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 5) & 0x7;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a17e0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A17E0;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A17E0:
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,27,2,4
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 27) & 0x38000000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFC7FFFFFF);
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r7)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r7.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16384
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1073741824;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// b 0x821a17fc
	goto loc_821A17FC;
loc_821A17F8:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A17FC:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 12;
loc_821A1800:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r6.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1768
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1768;
	// b 0x821a1598
	goto loc_821A1598;
loc_821A180C:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// b 0x821a1840
	goto loc_821A1840;
loc_821A1814:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFF;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r22.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r31.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1838
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1838;
	// li ctx_arrow(ctx)->r5,12
	ctx_arrow(ctx)->r5.s64 = 12;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
loc_821A1838:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,12
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 12;
loc_821A1840:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r26.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1814
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1814;
loc_821A1848:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,592
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 592;
	// b 0x823ed168
	return;
}

alias(__imp__sub_821A1850) PPC_WEAK_FUNC(sub_821A1850);
PPC_FUNC_IMPL(__imp__sub_821A1850) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r8,28(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,27,27,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1F;
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r5.u32 + 0);
	// lwz ctx_arrow(ctx)->r9,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,20
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFF;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r7.u64;
	// std ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,25,3,7
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r4.u32, 25) & 0x1F000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFE0FFFFFF);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,9
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 9;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3FFFFFF;
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,51200
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 3355443200;
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
loc_821A18C8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFF;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a18f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A18F0;
	// li ctx_arrow(ctx)->r5,12
	ctx_arrow(ctx)->r5.s64 = 12;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
loc_821A18F0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a1904
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1904;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// b 0x821a18c8
	goto loc_821A18C8;
loc_821A1904:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A1920) PPC_WEAK_FUNC(sub_821A1920);
PPC_FUNC_IMPL(__imp__sub_821A1920) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r9,28(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,27,27,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1F;
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r5.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFF;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r8.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 9;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
loc_821A1964:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFF;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 12;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r29.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r31.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1990
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1990;
	// li ctx_arrow(ctx)->r5,12
	ctx_arrow(ctx)->r5.s64 = 12;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
loc_821A1990:
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r9.u32, xer);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,24,28,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 24) & 0xF) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFF0);
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// beq ctx_arrow(ctx)->r6,0x821a19bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A19BC;
	// li ctx_arrow(ctx)->r5,12
	ctx_arrow(ctx)->r5.s64 = 12;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
loc_821A19BC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a19d0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A19D0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// b 0x821a1964
	goto loc_821A1964;
loc_821A19D0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A19D8) PPC_WEAK_FUNC(sub_821A19D8);
PPC_FUNC_IMPL(__imp__sub_821A19D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r6.u64;
	// lbz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 7, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1b20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1B20;
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,13,13
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a1b20
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1B20;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1a20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1A20;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,14,14
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a1b20
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1B20;
loc_821A1A20:
	// rlwinm ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,27,27,31
	ctx_arrow(ctx)->r26.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1F;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 9;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// beq ctx_arrow(ctx)->r6,0x821a1a64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1A64;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7,32
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r7.s64 + 32;
	// clrlwi. ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r24.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,27,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1F;
	// beq 0x821a1a70
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1A70;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r24,-1
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r24.s64 + -1;
	// b 0x821a1a70
	goto loc_821A1A70;
loc_821A1A64:
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
loc_821A1A70:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1aec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1AEC;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A1A7C:
	// lbz ctx_arrow(ctx)->r27,3(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U8(ctx,  ctx);
	// b 0x821a1aa8
	goto loc_821A1AA8;
loc_821A1A84:
	// lbz ctx_arrow(ctx)->r11,3(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r27.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a1ab0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A1AB0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a1850
	sub_821A1850(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
loc_821A1AA8:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r26.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1a84
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1A84;
loc_821A1AB0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r10.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,20,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xF00;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a1ad8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1AD8;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a1920
	sub_821A1920(ctx, base);
loc_821A1AD8:
	// addic. ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,-1
	xer.ca = ctx_arrow(ctx)->r25.u32 > 0;
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r25.s32, 0, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// bne 0x821a1a7c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1A7C;
loc_821A1AEC:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r26.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a1b14
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A1B14;
	// subf ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r26.s64 - ctx_arrow(ctx)->r29.s64;
loc_821A1AF8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a1850
	sub_821A1850(ctx, base);
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// bne 0x821a1af8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1AF8;
loc_821A1B14:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,20,8,11
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r24.u32, 20) & 0xF00000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFF0FFFFF);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 0);
loc_821A1B20:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed170
	return;
}

alias(__imp__sub_821A1B28) PPC_WEAK_FUNC(sub_821A1B28);
PPC_FUNC_IMPL(__imp__sub_821A1B28) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed114
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r23.s64 + 112;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r4.u64;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r8.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r27,876(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,30,2,31
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 30) & 0x3FFFFFFF;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28,5
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r28.s64 + 5;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a1c80
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1C80;
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// li ctx_arrow(ctx)->r10,256
	ctx_arrow(ctx)->r10.s64 = 256;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15104
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 15104;
	// lis ctx_arrow(ctx)->r8,-16384
	ctx_arrow(ctx)->r8.s64 = -1073741824;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,11008
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 11008;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,16,2,15
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 16) & 0x3FFF0000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFC000FFFF);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,18
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u32 & 0x3FFF;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,4
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r25.s64 + 4;
	// lwz ctx_arrow(ctx)->r11,872(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addis ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -1073741824;
	// sync 
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64 + ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r24.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1c2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1C2C;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r19.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r20.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821a19d8
	sub_821A19D8(ctx, base);
loc_821A1C2C:
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r24.u32);
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,12520
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r30.s64 + 12520;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7F;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,7,24,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 7) & 0x80;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r23.u64;
	// xori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,128
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 ^ 128;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r22.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stb ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 10942, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x821a1240
	sub_821A1240(ctx, base);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// ld ctx_arrow(ctx)->r10,12520(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,12528(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r25.u64;
	// std ctx_arrow(ctx)->r10,11824(ctx_arrow(ctx)->r30)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11824);
	// std ctx_arrow(ctx)->r9,11832(ctx_arrow(ctx)->r30)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11832);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
loc_821A1C80:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// b 0x823ed164
	return;
}

alias(__imp__sub_821A1C88) PPC_WEAK_FUNC(sub_821A1C88);
PPC_FUNC_IMPL(__imp__sub_821A1C88) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a1d30
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1D30;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 20;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// b 0x821a1d28
	goto loc_821A1D28;
loc_821A1CBC:
	// lhz ctx_arrow(ctx)->r28,2(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 2);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// lhz ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r26.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 0);
	// cmplwi ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq 0x821a1d30
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1D30;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r25.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a1cf4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A1CF4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821A1CF4:
	// lis ctx_arrow(ctx)->r11,-16382
	ctx_arrow(ctx)->r11.s64 = -1073610752;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u32 & 0x1FFFFFFF;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12032
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 | 12032;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 48);
loc_821A1D28:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r27.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1cbc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1CBC;
loc_821A1D30:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_821A1D38) PPC_WEAK_FUNC(sub_821A1D38);
PPC_FUNC_IMPL(__imp__sub_821A1D38) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,416
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r7.s64 * 416;
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a1da0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1DA0;
	// ld ctx_arrow(ctx)->r10,12520(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,12520
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 12520;
	// ld ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,56(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r8,12528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r10.u64;
	// ld ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U64(ctx,  ctx);
	// xor ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 ^ ctx_arrow(ctx)->r8.u64;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r6.u64;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1e5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1E5C;
loc_821A1DA0:
	// lwz ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq 0x821a1dd0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1DD0;
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r9.s64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a1dd0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A1DD0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821a1e70
	goto loc_821A1E70;
loc_821A1DD0:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r7.s64 + 112;
	// lwz ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,12520
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 12520;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r11,872(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// bl 0x821a1240
	sub_821A1240(ctx, base);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a1e44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1E44;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-27288
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -27288;
loc_821A1E14:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A1E18:
	// mfmsr ctx_arrow(ctx)->r9
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r11,0,ctx_arrow(ctx)->r8
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r8.u32);
	ctx_arrow(ctx)->r11.u64 = __builtin_bswap32(reserved.u32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stwcx. ctx_arrow(ctx)->r11,0,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r8.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r11.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r9,1
	// bne 0x821a1e18
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A1E18;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 2, xer);
	// blt ctx_arrow(ctx)->r6,0x821a1e14
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A1E14;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
loc_821A1E44:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 40);
	// ld ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r28)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 48);
	// ld ctx_arrow(ctx)->r11,12528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r28)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 56);
loc_821A1E5C:
	// ld ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// ld ctx_arrow(ctx)->r10,12528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,11824(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 11824);
	// std ctx_arrow(ctx)->r10,11832(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 11832);
loc_821A1E70:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A1E78) PPC_WEAK_FUNC(sub_821A1E78);
PPC_FUNC_IMPL(__imp__sub_821A1E78) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stwu ctx_arrow(ctx)->r1,-256(ctx_arrow(ctx)->r1)
	ea = -256 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r20,0,14,14
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x20000;
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r11.u64;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1ebc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1EBC;
	// bl 0x821a07a8
	sub_821A07A8(ctx, base);
	// mr ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A1EBC:
	// lwz ctx_arrow(ctx)->r31,12688(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r21,11812(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r21.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,12684(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x821a2680
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2680;
	// lwz ctx_arrow(ctx)->r11,896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r23,5
	ctx_arrow(ctx)->r23.s64 = 5;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,872
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 872;
	// lis ctx_arrow(ctx)->r11,-16383
	ctx_arrow(ctx)->r11.s64 = -1073676288;
	// ori ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r11,9984
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r11.u64 | 9984;
	// bne ctx_arrow(ctx)->r6,0x821a1f94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1F94;
	// lwz ctx_arrow(ctx)->r11,872(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// li ctx_arrow(ctx)->r18,0
	ctx_arrow(ctx)->r18.s64 = 0;
	// li ctx_arrow(ctx)->r16,0
	ctx_arrow(ctx)->r16.s64 = 0;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a1f1c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1F1C;
	// lwz ctx_arrow(ctx)->r11,904(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r24,1
	ctx_arrow(ctx)->r24.s64 = 1;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,872
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 872;
loc_821A1F1C:
	// lwz ctx_arrow(ctx)->r11,10580(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x821a1f60
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A1F60;
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,0,29,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r23.u32, 0) & 0x7) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFF8);
	// oris ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 524288;
	// ori ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 8;
	// stw ctx_arrow(ctx)->r11,10580(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10580);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a1f60
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1F60;
	// lwz ctx_arrow(ctx)->r11,10372(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,16,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFF0FFFF;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,56,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 56) & 0xFFFFFFFFFFFFFFFF;
	// or ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | ctx_arrow(ctx)->r12.u64;
	// stw ctx_arrow(ctx)->r11,10372(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10372);
loc_821A1F60:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1F;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
loc_821A1F74:
	// lwz ctx_arrow(ctx)->r11,13488(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a20e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A20E8;
	// lwz ctx_arrow(ctx)->r11,872(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a20e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A20E8;
	// li ctx_arrow(ctx)->r3,245
	ctx_arrow(ctx)->r3.s64 = 245;
	// bl 0x8240f9ec
	__imp__KeBugCheck(ctx, base);
loc_821A1F94:
	// lwz ctx_arrow(ctx)->r10,64(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r20,0,11,11
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x100000;
	// lis ctx_arrow(ctx)->r9,4096
	ctx_arrow(ctx)->r9.s64 = 268435456;
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r29.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r8.u64, 0, xer);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,40
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r10.s64 + 40;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r18,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r18.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r16,12(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r18,0,1,3
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r18.u32 | (ctx_arrow(ctx)->r18.u64 << 32), 0) & 0x70000000;
	// subfc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	xer.ca = ctx_arrow(ctx)->r9.u32 >= ctx_arrow(ctx)->r8.u32;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// subfe ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 < ~ctx_arrow(ctx)->r9.u32) | (~ctx_arrow(ctx)->r9.u32 + ctx_arrow(ctx)->r9.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r9.u64 = ~ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r9.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,3,28,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0x8;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r11.u64;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0x8) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFF7);
	// stb ctx_arrow(ctx)->r10,10942(ctx_arrow(ctx)->r30)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10942));
	// beq ctx_arrow(ctx)->r6,0x821a20ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A20AC;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,40
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + 40;
	// lwz ctx_arrow(ctx)->r5,24(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a1c88
	sub_821A1C88(ctx, base);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a2008
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A2008;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A2008:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u64;
	// ori ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,16384
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 16384;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,64(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,24(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,0,3,30
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1FFFFFFE;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,64(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r10,44(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30,2,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 30) & 0x3FFFFFFF;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10580(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,10536(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10536);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0x7;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x821a20ac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A20AC;
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// oris ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 524288;
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,2,29,31
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 2) & 0x7) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFFF8);
	// ori ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 8;
	// stw ctx_arrow(ctx)->r10,10580(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10580);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a20ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A20AC;
	// lwz ctx_arrow(ctx)->r11,12432(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,56,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 56) & 0xFFFFFFFFFFFFFFFF;
	// or ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | ctx_arrow(ctx)->r12.u64;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,10372(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10372);
loc_821A20AC:
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,20(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,13488(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ ctx_arrow(ctx)->r10.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7FFFF;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// bne ctx_arrow(ctx)->r6,0x821a1f74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A1F74;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a1f74
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A1F74;
	// li ctx_arrow(ctx)->r3,245
	ctx_arrow(ctx)->r3.s64 = 245;
	// bl 0x8240f9ec
	__imp__KeBugCheck(ctx, base);
loc_821A20E8:
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r26,10580(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r22,12(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a2180
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2180;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2130
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2130;
	// lwz ctx_arrow(ctx)->r11,10556(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a2134
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A2134;
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a2134
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A2134;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a2134
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A2134;
loc_821A2130:
	// rlwimi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r23,0,29,31
	ctx_arrow(ctx)->r29.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r23.u32, 0) & 0x7) | (ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFFFFFFFFF8);
loc_821A2134:
	// lwz ctx_arrow(ctx)->r11,12692(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a214c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A214C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x8;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2180
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2180;
loc_821A214C:
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,8
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 8;
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r29,12692(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 12692);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a2180
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2180;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u32 & 0x7;
	// lwz ctx_arrow(ctx)->r11,10372(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 5, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2178
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2178;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,16,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFFFF0FFFF;
loc_821A2178:
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// b 0x821a2184
	goto loc_821A2184;
loc_821A2180:
	// lwz ctx_arrow(ctx)->r23,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r23.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A2184:
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a229c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A229C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a229c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A229C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,0,12,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x80000;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a22e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A22E4;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31,872
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r31.s64 + 872;
	// lwz ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821a1c88
	sub_821A1C88(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,191
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 191;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stb ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 10942, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// beq ctx_arrow(ctx)->r6,0x821a227c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A227C;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,25,25
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a227c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A227C;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a21f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A21F0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// b 0x821a22c8
	goto loc_821A22C8;
loc_821A21F0:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a1d38
	sub_821A1D38(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a2210
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2210;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r24.u64;
	// b 0x821a2234
	goto loc_821A2234;
loc_821A2210:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r21.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a1b28
	sub_821A1B28(ctx, base);
loc_821A2234:
	// xor ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 ^ ctx_arrow(ctx)->r26.u64;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a22e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A22E4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a22e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A22E4;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a1d38
	sub_821A1D38(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a22e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A22E4;
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
loc_821A226C:
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,64
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 64;
	// li ctx_arrow(ctx)->r15,1
	ctx_arrow(ctx)->r15.s64 = 1;
	// stb ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 10942, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x821a22e4
	goto loc_821A22E4;
loc_821A227C:
	// xor ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64 ^ ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r24.u64;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a22e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A22E4;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a22e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A22E4;
	// b 0x821a226c
	goto loc_821A226C;
loc_821A229C:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r20,0,11,12
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x180000;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a22e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A22E4;
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,191
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 191;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,872
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 872;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stb ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 10942, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lwz ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a1c88
	sub_821A1C88(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A22C8:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r21.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a1b28
	sub_821A1B28(ctx, base);
loc_821A22E4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r20,0,11,12
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x180000;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2334
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2334;
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// or ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u64 | ctx_arrow(ctx)->r16.u64;
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 65536;
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r18.u64;
	// ori ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,32768
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 | 32768;
	// stw ctx_arrow(ctx)->r9,10532(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10532);
	// stw ctx_arrow(ctx)->r10,10528(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10528);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a2334
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2334;
	// lwz ctx_arrow(ctx)->r11,904(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,880(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,884(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// or ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r18.u64;
	// or ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r16.u64;
	// b 0x821a233c
	goto loc_821A233C;
loc_821A2334:
	// lwz ctx_arrow(ctx)->r28,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A233C:
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a25fc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A25FC;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a2364
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A2364;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A2364:
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// lis ctx_arrow(ctx)->r9,5461
	ctx_arrow(ctx)->r9.s64 = 357892096;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,24576
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 | 24576;
	// lis ctx_arrow(ctx)->r8,-16384
	ctx_arrow(ctx)->r8.s64 = -1073741824;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r5.u64;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,21845
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 21845;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,24832
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r8.u64 | 24832;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r20,0,28,28
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x8;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r4.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r7.u64, 0, xer);
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// beq ctx_arrow(ctx)->r6,0x821a23bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A23BC;
	// li ctx_arrow(ctx)->r10,8712
	ctx_arrow(ctx)->r10.s64 = 8712;
	// li ctx_arrow(ctx)->r12,-9
	ctx_arrow(ctx)->r12.s64 = -9;
	// and ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 & ctx_arrow(ctx)->r12.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10580(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A23BC:
	// lis ctx_arrow(ctx)->r10,-16383
	ctx_arrow(ctx)->r10.s64 = -1073676288;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r14.s32, -1, xer);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,11521
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 11521;
	// beq ctx_arrow(ctx)->r6,0x821a23e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A23E4;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64;
	// lis ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = 262144;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,520
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 520;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r14,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A23E4:
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,56,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 56) & 0xFFFFFFFFFFFFFFFF;
	// and ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r20.u64 & ctx_arrow(ctx)->r12.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r9.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2414
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2414;
	// li ctx_arrow(ctx)->r9,8193
	ctx_arrow(ctx)->r9.s64 = 8193;
	// li ctx_arrow(ctx)->r12,-2
	ctx_arrow(ctx)->r12.s64 = -2;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,56,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 56) & 0xFFFFFFFFFFFFFFFF;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// and ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 & ctx_arrow(ctx)->r12.u64;
	// lwz ctx_arrow(ctx)->r9,10372(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A2414:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r23.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2430
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2430;
	// lis ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = 262144;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 1;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A2430:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r20,0,15,15
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r20.u32 | (ctx_arrow(ctx)->r20.u64 << 32), 0) & 0x10000;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2464
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2464;
	// lis ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 65536;
	// lis ctx_arrow(ctx)->r12,-2
	ctx_arrow(ctx)->r12.s64 = -131072;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8576
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8576;
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,32767
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 32767;
	// and ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r20.u64 & ctx_arrow(ctx)->r12.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10528(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10532(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A2464:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a248c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A248C;
	// lis ctx_arrow(ctx)->r10,-16382
	ctx_arrow(ctx)->r10.s64 = -1073610752;
	// lis ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = 262144;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,11521
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 11521;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,384
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 384;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
loc_821A248C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r15,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r15.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a257c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A257C;
	// lis ctx_arrow(ctx)->r10,-16383
	ctx_arrow(ctx)->r10.s64 = -1073676288;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r15,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r15.s64 + 112;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,9985
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 9985;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,3,0,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0xFFFFFFF8;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r10.u64;
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r15,416
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r15.s64 * 416;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r7,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r31.u64;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r19.s32, -1, xer);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r9,872(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r7.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r6.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r7.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r9,876(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,30,2,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 30) & 0x3FFFFFFF;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r9,10908(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 64);
	// beq ctx_arrow(ctx)->r6,0x821a25e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A25E0;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r5.u64;
	// lis ctx_arrow(ctx)->r9,10922
	ctx_arrow(ctx)->r9.s64 = 715784192;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r19,112
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r19.s64 + 112;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,43690
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64 | 43690;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 3) & 0xFFFFFFF8;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19,416
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r19.s64 * 416;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,872(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r7.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,876(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30,2,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 30) & 0x3FFFFFFF;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10908(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,64(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 64);
	// b 0x821a25e0
	goto loc_821A25E0;
loc_821A257C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r19.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a25e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A25E0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r19.s64 + 112;
	// stwu ctx_arrow(ctx)->r17,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r8,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19,416
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r19.s64 * 416;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,872(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r7.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,876(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30,2,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 30) & 0x3FFFFFFF;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10908(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,64(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 64);
loc_821A25E0:
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12700(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12704(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// b 0x821a267c
	goto loc_821A267C;
loc_821A25FC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r19.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2680
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2680;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a2620
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A2620;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A2620:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r19.s64 + 112;
	// stwu ctx_arrow(ctx)->r17,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r8,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 3) & 0xFFFFFFF8;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19,416
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r19.s64 * 416;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,872(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r7.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r10,876(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,30,2,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 30) & 0x3FFFFFFF;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,10908(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,64(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 64);
loc_821A267C:
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
loc_821A2680:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r20.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,256
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 256;
	// b 0x823ed150
	return;
}

alias(__imp__sub_821A2690) PPC_WEAK_FUNC(sub_821A2690);
PPC_FUNC_IMPL(__imp__sub_821A2690) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 24);
	// std ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 32);
	// std ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 40);
	// std ctx_arrow(ctx)->r7,48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 48);
	// std ctx_arrow(ctx)->r8,56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 56);
	// std ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 64);
	// std ctx_arrow(ctx)->r10,72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 72);
	// stwu ctx_arrow(ctx)->r1,-368(ctx_arrow(ctx)->r1)
	ea = -368 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,392
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 392;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,260
	ctx_arrow(ctx)->r4.s64 = 260;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8240fa0c
	__imp___vsnprintf(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8240f9fc
	__imp__DbgPrint(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,368
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 368;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A26F0) PPC_WEAK_FUNC(sub_821A26F0);
PPC_FUNC_IMPL(__imp__sub_821A26F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// addis ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,8178
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 535953408;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A2700) PPC_WEAK_FUNC(sub_821A2700);
PPC_FUNC_IMPL(__imp__sub_821A2700) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// addis ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,8178
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 535953408;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r11)
	PPC_MM_STORE_U32(ctx_arrow(ctx)->r11.u32 + 0, ctx_arrow(ctx)->r4.u32);
	// eieio 
	// blr 
	return;
}

alias(__imp__sub_821A2718) PPC_WEAK_FUNC(sub_821A2718);
PPC_FUNC_IMPL(__imp__sub_821A2718) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// std ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 32);
	// std ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 40);
	// std ctx_arrow(ctx)->r7,48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 48);
	// std ctx_arrow(ctx)->r8,56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 56);
	// std ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 64);
	// std ctx_arrow(ctx)->r10,72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 72);
	// stwu ctx_arrow(ctx)->r1,-400(ctx_arrow(ctx)->r1)
	ea = -400 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,432
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 432;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,260
	ctx_arrow(ctx)->r4.s64 = 260;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r6,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8240fa0c
	__imp___vsnprintf(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a2780
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2780;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// b 0x821a2784
	goto loc_821A2784;
loc_821A2780:
	// bl 0x821a2690
	sub_821A2690(ctx, base);
loc_821A2784:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,400
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 400;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A2798) PPC_WEAK_FUNC(sub_821A2798);
PPC_FUNC_IMPL(__imp__sub_821A2798) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-400(ctx_arrow(ctx)->r1)
	ea = -400 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,1488
	ctx_arrow(ctx)->r3.s64 = 1488;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-16536
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -16536;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16556
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16556;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32019
	ctx_arrow(ctx)->r11.s64 = -2098397184;
	// li ctx_arrow(ctx)->r26,11
	ctx_arrow(ctx)->r26.s64 = 11;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,28928
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 28928;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-16560
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -16560;
loc_821A27F4:
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r29.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a2824
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2824;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2814
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2814;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
loc_821A2814:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// li ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = 1;
loc_821A2824:
	// addic. ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,-1
	xer.ca = ctx_arrow(ctx)->r26.u32 > 0;
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// bne 0x821a27f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A27F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2848
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2848;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16580
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16580;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
loc_821A2848:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16584
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16584;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,3857
	ctx_arrow(ctx)->r3.s64 = 3857;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x8235eb58
	sub_8235EB58(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,3858
	ctx_arrow(ctx)->r3.s64 = 3858;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-16604
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -16604;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-16624
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -16624;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r27,88
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r27.s64 + 88;
	// li ctx_arrow(ctx)->r28,30
	ctx_arrow(ctx)->r28.s64 = 30;
loc_821A28AC:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// addic. ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,-1
	xer.ca = ctx_arrow(ctx)->r28.u32 > 0;
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// bne 0x821a28ac
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A28AC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,328
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r27.s64 + 328;
	// li ctx_arrow(ctx)->r23,5
	ctx_arrow(ctx)->r23.s64 = 5;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,-16628
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + -16628;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,-16636
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + -16636;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,-16648
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + -16648;
	// lis ctx_arrow(ctx)->r11,-32255
	ctx_arrow(ctx)->r11.s64 = -2113863680;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,23060
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 23060;
loc_821A2908:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a29ec
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A29EC;
loc_821A2924:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8240f93c
	__imp__sprintf(ctx, base);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
loc_821A2940:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a2950
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A2950;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A2950:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a29d0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A29D0;
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,-16(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r28.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x8235eb58
	sub_8235EB58(ctx, base);
	// lwz ctx_arrow(ctx)->r3,-12(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A299C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a299c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A299C;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// bl 0x8240f93c
	__imp__sprintf(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// b 0x821a2940
	goto loc_821A2940;
loc_821A29D0:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a2924
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A2924;
loc_821A29EC:
	// addic. ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r23,-1
	xer.ca = ctx_arrow(ctx)->r23.u32 > 0;
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r23.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r23.s32, 0, xer);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,24
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 24;
	// bne 0x821a2908
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A2908;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,400
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 400;
	// b 0x823ed174
	return;
}

alias(__imp__sub_821A2A00) PPC_WEAK_FUNC(sub_821A2A00);
PPC_FUNC_IMPL(__imp__sub_821A2A00) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16224
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16224;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2ac4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2AC4;
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2a54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2A54;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lwz ctx_arrow(ctx)->r6,164(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16352
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16352;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
loc_821A2A54:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16488
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16488;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lwz ctx_arrow(ctx)->r30,116(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq 0x821a2ac4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2AC4;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,-16508
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + -16508;
loc_821A2A78:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a2ab8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A2AB8;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,12
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 + 12;
loc_821A2A8C:
	// lwz ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFFFF;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a2a8c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A2A8C;
loc_821A2AB8:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne 0x821a2a78
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A2A78;
loc_821A2AC4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed184
	return;
}

alias(__imp__sub_821A2AD0) PPC_WEAK_FUNC(sub_821A2AD0);
PPC_FUNC_IMPL(__imp__sub_821A2AD0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed118
	// stwu ctx_arrow(ctx)->r1,-288(ctx_arrow(ctx)->r1)
	ea = -288 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// li ctx_arrow(ctx)->r20,1
	ctx_arrow(ctx)->r20.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2b04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2B04;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2b18
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2B18;
loc_821A2B04:
	// lis ctx_arrow(ctx)->r10,-32230
	ctx_arrow(ctx)->r10.s64 = -2112225280;
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,9968
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r10.s64 + 9968;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,9984
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 9984;
	// li ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r20.s64 = 0;
loc_821A2B18:
	// li ctx_arrow(ctx)->r3,1488
	ctx_arrow(ctx)->r3.s64 = 1488;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,3878
	ctx_arrow(ctx)->r3.s64 = 3878;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// li ctx_arrow(ctx)->r3,448
	ctx_arrow(ctx)->r3.s64 = 448;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,1403
	ctx_arrow(ctx)->r3.s64 = 1403;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,1404
	ctx_arrow(ctx)->r3.s64 = 1404;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,1405
	ctx_arrow(ctx)->r3.s64 = 1405;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,12
	ctx_arrow(ctx)->r4.s64 = 12;
	// li ctx_arrow(ctx)->r3,3200
	ctx_arrow(ctx)->r3.s64 = 3200;
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// li ctx_arrow(ctx)->r3,3201
	ctx_arrow(ctx)->r3.s64 = 3201;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,3201
	ctx_arrow(ctx)->r3.s64 = 3201;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r3,160(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// li ctx_arrow(ctx)->r3,3201
	ctx_arrow(ctx)->r3.s64 = 3201;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r3,164(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 164);
	// li ctx_arrow(ctx)->r3,3201
	ctx_arrow(ctx)->r3.s64 = 3201;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r3,168(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// li ctx_arrow(ctx)->r3,3201
	ctx_arrow(ctx)->r3.s64 = 3201;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r3,172(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 172);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-14928
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -14928;
	// stw ctx_arrow(ctx)->r25,144(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,148(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// stw ctx_arrow(ctx)->r30,152(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15000
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15000;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r5,6274
	ctx_arrow(ctx)->r5.s64 = 6274;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,1668(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 4);
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32763
	ctx_arrow(ctx)->r11.s64 = -2147155968;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,272
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 272;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2c74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2C74;
	// lis ctx_arrow(ctx)->r11,2989
	ctx_arrow(ctx)->r11.s64 = 195887104;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,61453
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 61453;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2c74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2C74;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2c74
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2C74;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15160
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15160;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2d44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2D44;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15204
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15204;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// b 0x821a2d44
	goto loc_821A2D44;
loc_821A2C74:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x821a2798
	sub_821A2798(ctx, base);
	// lis ctx_arrow(ctx)->r12,32763
	ctx_arrow(ctx)->r12.s64 = 2147155968;
	// lis ctx_arrow(ctx)->r10,1025
	ctx_arrow(ctx)->r10.s64 = 67174400;
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,61664
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 61664;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 & ctx_arrow(ctx)->r12.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2cb8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2CB8;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15336
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15336;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15488
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15488;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
loc_821A2CB8:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a2d08
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2D08;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,0,21,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x7C0;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a2d08
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A2D08;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,21,28,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 21) & 0xC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lis ctx_arrow(ctx)->r9,32
	ctx_arrow(ctx)->r9.s64 = 2097152;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,5,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x7F00000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a2d08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A2D08;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15624
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15624;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15800
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15800;
	// bl 0x821a2718
	sub_821A2718(ctx, base);
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
loc_821A2D08:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2d20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2D20;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r20.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r22.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x821a2a00
	sub_821A2A00(ctx, base);
loc_821A2D20:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// beq ctx_arrow(ctx)->r6,0x821a2d38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2D38;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-15936
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -15936;
	// b 0x821a2d40
	goto loc_821A2D40;
loc_821A2D38:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-16080
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -16080;
loc_821A2D40:
	// bl 0x821a2718
	sub_821A2718(ctx, base);
loc_821A2D44:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// b 0x823ed168
	return;
}

alias(__imp__sub_821A2D50) PPC_WEAK_FUNC(sub_821A2D50);
PPC_FUNC_IMPL(__imp__sub_821A2D50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-14600
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -14600;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r7,16544(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,10900(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,13416(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a2ad0
	sub_821A2AD0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,13416(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2dc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2DC8;
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,10908(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 3;
	// lwz ctx_arrow(ctx)->r8,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-2
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -2;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-16524
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -16524;
	// stb ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10941));
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// stw ctx_arrow(ctx)->r9,11000(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 11000);
	// bl 0x821a7258
	sub_821A7258(&ctx);
	// b 0x821a2de4
	goto loc_821A2DE4;
loc_821A2DC8:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-14824
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -14824;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-14920
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -14920;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
	// twi 31,ctx_arrow(ctx)->r0,22
loc_821A2DE4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A2DF8) PPC_WEAK_FUNC(sub_821A2DF8);
PPC_FUNC_IMPL(__imp__sub_821A2DF8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,32712
	ctx_arrow(ctx)->r11.s64 = 2143813632;
	// li ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = 7;
	// stw ctx_arrow(ctx)->r10,12820(ctx_arrow(ctx)->r11)
	PPC_MM_STORE_U32(ctx_arrow(ctx)->r11.u32 + 12820, ctx_arrow(ctx)->r10.u32);
	// eieio 
	// li ctx_arrow(ctx)->r10,2048
	ctx_arrow(ctx)->r10.s64 = 2048;
	// stw ctx_arrow(ctx)->r10,13320(ctx_arrow(ctx)->r11)
	PPC_MM_STORE_U32(ctx_arrow(ctx)->r11.u32 + 13320, ctx_arrow(ctx)->r10.u32);
	// eieio 
	// blr 
	return;
}

alias(__imp__sub_821A2E18) PPC_WEAK_FUNC(sub_821A2E18);
PPC_FUNC_IMPL(__imp__sub_821A2E18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// bl 0x8240fa2c
	__imp__ExRegisterTitleTerminateNotification(ctx, base);
	// bl 0x8240fa1c
	__imp__VdShutdownEngines(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A2E40) PPC_WEAK_FUNC(sub_821A2E40);
PPC_FUNC_IMPL(__imp__sub_821A2E40) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32019
	ctx_arrow(ctx)->r11.s64 = -2098397184;
	// li ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r23.s64 = 0;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,27448
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 27448;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r23.u64;
	// lwz ctx_arrow(ctx)->r25,13580(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r24,22280(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A2E68:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,30,2,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 30) & 0x3FFFFFFF;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,137
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 137;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r4,8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,12
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 12;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,404
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 404, xer);
	// blt ctx_arrow(ctx)->r6,0x821a2e68
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A2E68;
	// lis ctx_arrow(ctx)->r11,-32019
	ctx_arrow(ctx)->r11.s64 = -2098397184;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r23.u64;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31,1152
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r31.s64 + 1152;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,28664
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 28664;
loc_821A2EC4:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r23.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26,8
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r26.s64 + 8;
loc_821A2ECC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,30,2,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 30) & 0x3FFFFFFF;
	// lwz ctx_arrow(ctx)->r10,-4(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,117
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 117;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,238
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 238;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r10,-8(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,468(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,12
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 12;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,80
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 80, xer);
	// blt ctx_arrow(ctx)->r6,0x821a2ecc
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A2ECC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 32;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// rldicr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,63,63
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u64, 63) & 0xFFFFFFFFFFFFFFFF;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// srd ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x40 ? 0 : (ctx_arrow(ctx)->r10.u64 >> (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x7F)), 0));
	// bl 0x8218be00
	sub_8218BE00(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 24;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,26
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 26, xer);
	// blt ctx_arrow(ctx)->r6,0x821a2ec4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A2EC4;
	// li ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = 5;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,12184(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12184);
	// stw ctx_arrow(ctx)->r10,12188(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12188);
	// bl 0x8219e7d0
	sub_8219E7D0(&ctx);
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8218fa20
	sub_8218FA20(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82194868
	sub_82194868(ctx, base);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24,31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u32 & 0x1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82193670
	sub_82193670(ctx, base);
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r23,12708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12708);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a3060
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3060;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a3060
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3060;
	// lbz ctx_arrow(ctx)->r11,12179(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a3060
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3060;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a2fc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A2FC4;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x821a3054
	goto loc_821A3054;
loc_821A2FC4:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a304c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A304C;
	// lwz ctx_arrow(ctx)->r11,12432(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12720(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2fe4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2FE4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a304c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A304C;
loc_821A2FE4:
	// lwz ctx_arrow(ctx)->r11,12436(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12724(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a2ffc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A2FFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a304c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A304C;
loc_821A2FFC:
	// lwz ctx_arrow(ctx)->r11,12440(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12728(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3014
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3014;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a304c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A304C;
loc_821A3014:
	// lwz ctx_arrow(ctx)->r11,12444(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12732(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a302c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A302C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a304c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A304C;
loc_821A302C:
	// lwz ctx_arrow(ctx)->r11,12448(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,12736(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3044
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3044;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a304c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A304C;
loc_821A3044:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x821a3050
	goto loc_821A3050;
loc_821A304C:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_821A3050:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_821A3054:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x821a3064
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3064;
loc_821A3060:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64;
loc_821A3064:
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,24,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFE) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFF01);
	// stw ctx_arrow(ctx)->r23,12704(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12704);
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// stw ctx_arrow(ctx)->r23,10932(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10932);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// stw ctx_arrow(ctx)->r23,10936(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10936);
	// stw ctx_arrow(ctx)->r9,12700(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12700);
	// stb ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10940, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,24,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a30a0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A30A0;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8218e450
	sub_8218E450(ctx, base);
loc_821A30A0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
}

alias(__imp__sub_821A30A8) PPC_WEAK_FUNC(sub_821A30A8);
PPC_FUNC_IMPL(__imp__sub_821A30A8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-1760(ctx_arrow(ctx)->r1)
	ea = -1760 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r30,64(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r24,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r22,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r25,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// bne 0x821a30e4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A30E4;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u32 & 0x3F;
	// b 0x821a30f4
	goto loc_821A30F4;
loc_821A30E4:
	// lis ctx_arrow(ctx)->r11,10280
	ctx_arrow(ctx)->r11.s64 = 673710080;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,390
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 390;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a30fc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A30FC;
loc_821A30F4:
	// lis ctx_arrow(ctx)->r30,10280
	ctx_arrow(ctx)->r30.s64 = 673710080;
	// b 0x821a3110
	goto loc_821A3110;
loc_821A30FC:
	// lis ctx_arrow(ctx)->r11,6184
	ctx_arrow(ctx)->r11.s64 = 405274624;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,390
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 390;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3118
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3118;
	// lis ctx_arrow(ctx)->r30,6184
	ctx_arrow(ctx)->r30.s64 = 405274624;
loc_821A3110:
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,262
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 262;
	// b 0x821a3148
	goto loc_821A3148;
loc_821A3118:
	// lis ctx_arrow(ctx)->r11,10280
	ctx_arrow(ctx)->r11.s64 = 673710080;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,438
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 438;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3130
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3130;
	// lis ctx_arrow(ctx)->r30,10280
	ctx_arrow(ctx)->r30.s64 = 673710080;
	// b 0x821a3144
	goto loc_821A3144;
loc_821A3130:
	// lis ctx_arrow(ctx)->r11,6184
	ctx_arrow(ctx)->r11.s64 = 405274624;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,438
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 438;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3148
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3148;
	// lis ctx_arrow(ctx)->r30,6184
	ctx_arrow(ctx)->r30.s64 = 405274624;
loc_821A3144:
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,310
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 310;
loc_821A3148:
	// clrlwi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r30,26
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r30.u32 & 0x3F;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r23.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,50
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 50, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3160
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3160;
	// li ctx_arrow(ctx)->r26,6
	ctx_arrow(ctx)->r26.s64 = 6;
	// b 0x821a316c
	goto loc_821A316C;
loc_821A3160:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 7, xer);
	// bne ctx_arrow(ctx)->r6,0x821a316c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A316C;
	// li ctx_arrow(ctx)->r26,54
	ctx_arrow(ctx)->r26.s64 = 54;
loc_821A316C:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8240fa4c
	__imp__VdQueryVideoMode(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,100(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,21536
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r29.s64 + 21536;
	// lfs f0,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// stw ctx_arrow(ctx)->r10,21528(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 21528);
	// stw ctx_arrow(ctx)->r11,21524(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 21524);
	// stw ctx_arrow(ctx)->r11,21532(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 21532);
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// lwz ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a31e8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A31E8;
	// li ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.s64 = 3;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8218bad8
	sub_8218BAD8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x821a31e4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A31E4;
loc_821A31DC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821a32dc
	goto loc_821A32DC;
loc_821A31E4:
	// stw ctx_arrow(ctx)->r3,14812(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 14812);
loc_821A31E8:
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3224
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3224;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8218bbf8
	sub_8218BBF8(ctx, base);
	// mr. ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// beq 0x821a31dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A31DC;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// stw ctx_arrow(ctx)->r5,14816(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 14816);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82195c00
	sub_82195C00(ctx, base);
loc_821A3224:
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a325c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A325C;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8218bbf8
	sub_8218BBF8(ctx, base);
	// mr. ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq 0x821a31dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A31DC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r4,14808(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 14808);
	// bl 0x82195f68
	sub_82195F68(&ctx);
loc_821A325C:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29,13528
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r29.s64 + 13528;
	// li ctx_arrow(ctx)->r5,124
	ctx_arrow(ctx)->r5.s64 = 124;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,10280
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u64 | 673710080;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 96;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 256;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r11,13592(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 13592);
	// bl 0x821a9058
	sub_821A9058(&ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 7, xer);
	// beq ctx_arrow(ctx)->r6,0x821a32b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A32B4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,54
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 54, xer);
	// beq ctx_arrow(ctx)->r6,0x821a32b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A32B4;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// bl 0x8219e480
	sub_8219E480(ctx, base);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821955c8
	sub_821955C8(ctx, base);
	// b 0x821a32d0
	goto loc_821A32D0;
loc_821A32B4:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// bl 0x8219e4d8
	sub_8219E4D8(ctx, base);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x82195690
	sub_82195690(ctx, base);
loc_821A32D0:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,16692(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 16692);
loc_821A32DC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,1760
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 1760;
	// b 0x823ed170
	return;
}

alias(__imp__sub_821A32E8) PPC_WEAK_FUNC(sub_821A32E8);
PPC_FUNC_IMPL(__imp__sub_821A32E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821aa518
	sub_821AA518(ctx, base);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3340
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3340;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195f68
	sub_82195F68(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u64;
loc_821A331C:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195c00
	sub_82195C00(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x821a331c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A331C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d958
	sub_8219D958(ctx, base);
loc_821A3340:
	// lwz ctx_arrow(ctx)->r3,14812(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a3354
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3354;
	// bl 0x8219b708
	sub_8219B708(ctx, base);
	// stw ctx_arrow(ctx)->r29,14812(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14812);
loc_821A3354:
	// lwz ctx_arrow(ctx)->r3,14816(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a3368
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3368;
	// bl 0x8219b708
	sub_8219B708(ctx, base);
	// stw ctx_arrow(ctx)->r29,14816(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14816);
loc_821A3368:
	// lwz ctx_arrow(ctx)->r3,14808(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a337c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A337C;
	// bl 0x8219b708
	sub_8219B708(ctx, base);
	// stw ctx_arrow(ctx)->r29,14808(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14808);
loc_821A337C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821A3388) PPC_WEAK_FUNC(sub_821A3388);
PPC_FUNC_IMPL(__imp__sub_821A3388) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a33cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A33CC;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a3388
	sub_821A3388(ctx, base);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// bl 0x8209d060
	sub_8209D060(&ctx);
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821A33CC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A33E0) PPC_WEAK_FUNC(sub_821A33E0);
PPC_FUNC_IMPL(__imp__sub_821A33E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3454
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3454;
	// lwz ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3F;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 7, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3418
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3418;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,54
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 54, xer);
	// bne ctx_arrow(ctx)->r6,0x821a341c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A341C;
loc_821A3418:
	// lis ctx_arrow(ctx)->r10,2048
	ctx_arrow(ctx)->r10.s64 = 134217728;
loc_821A341C:
	// lwz ctx_arrow(ctx)->r11,68(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,16384
	ctx_arrow(ctx)->r9.s64 = 1073741824;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,28,2,3
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 28) & 0x30000000) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFCFFFFFFF);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,720
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 720, xer);
	// or ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r9.u64 | ctx_arrow(ctx)->r10.u64;
	// bne ctx_arrow(ctx)->r6,0x821a3450
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3450;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,480
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 480, xer);
	// beq ctx_arrow(ctx)->r6,0x821a344c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A344C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,576
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 576, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3450
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3450;
loc_821A344C:
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 2;
loc_821A3450:
	// bl 0x8240fa6c
	__imp__VdSetDisplayMode(ctx, base);
loc_821A3454:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x8240fa5c
	__imp__VdGetCurrentDisplayInformation(ctx, base);
	// lhz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 152);
	// lhz ctx_arrow(ctx)->r10,154(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 154);
	// lhz ctx_arrow(ctx)->r9,166(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 166);
	// stw ctx_arrow(ctx)->r11,21524(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21524);
	// stw ctx_arrow(ctx)->r10,21528(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21528);
	// stw ctx_arrow(ctx)->r9,21532(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21532);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A3488) PPC_WEAK_FUNC(sub_821A3488);
PPC_FUNC_IMPL(__imp__sub_821A3488) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-5040
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -5040;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,-6192
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + -6192;
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// lis ctx_arrow(ctx)->r3,6274
	ctx_arrow(ctx)->r3.s64 = 411172864;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,11768
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 11768;
	// bl 0x8240fa8c
	__imp__VdInitializeEngines(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32019
	ctx_arrow(ctx)->r11.s64 = -2098397184;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,29376
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 29376;
	// bl 0x8240fa2c
	__imp__ExRegisterTitleTerminateNotification(ctx, base);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-14792
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -14792;
	// stw ctx_arrow(ctx)->r10,16696(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16696);
	// bl 0x8240fa7c
	__imp__VdSetGraphicsInterruptCallback(ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A3500) PPC_WEAK_FUNC(sub_821A3500);
PPC_FUNC_IMPL(__imp__sub_821A3500) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// lis ctx_arrow(ctx)->r11,-32019
	ctx_arrow(ctx)->r11.s64 = -2098397184;
	// ld ctx_arrow(ctx)->r11,28912(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,10880(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10880);
	// bl 0x8235eaa8
	sub_8235EAA8(&ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lis ctx_arrow(ctx)->r4,-19072
	ctx_arrow(ctx)->r4.s64 = -1249902592;
	// li ctx_arrow(ctx)->r3,4800
	ctx_arrow(ctx)->r3.s64 = 4800;
	// stw ctx_arrow(ctx)->r11,10888(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10888);
	// stw ctx_arrow(ctx)->r10,10892(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10892);
	// bl 0x8209d000
	sub_8209D000(&ctx);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r3.u32);
	// stw ctx_arrow(ctx)->r3,16712(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16712);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A3570) PPC_WEAK_FUNC(sub_821A3570);
PPC_FUNC_IMPL(__imp__sub_821A3570) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,14928
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 14928;
	// bl 0x8240f94c
	__imp__RtlInitializeCriticalSection(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,14956
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 14956;
	// bl 0x8240f94c
	__imp__RtlInitializeCriticalSection(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4;
	// stb ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10942, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x821a3488
	sub_821A3488(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821a35c0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A35C0;
loc_821A35B8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821a3764
	goto loc_821A3764;
loc_821A35C0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r6.s64 = 4;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,16700
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 + 16700;
	// li ctx_arrow(ctx)->r4,10
	ctx_arrow(ctx)->r4.s64 = 10;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r3.s64 = 3;
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// sth ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r1.u32 + 80, ctx_arrow(ctx)->r11, 0);
	// bl 0x8240fa3c
	__imp__ExGetXConfigSetting(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821a35b8
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821A35B8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30,72
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r30.s64 + 72;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219da28
	sub_8219DA28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821a35b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A35B8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a4ee8
	sub_821A4EE8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a35b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A35B8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8218d928
	sub_8218D928(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a35b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A35B8;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,21540(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21540);
	// stw ctx_arrow(ctx)->r11,21544(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21544);
	// bl 0x821ab6f0
	sub_821AB6F0(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a30a8
	sub_821A30A8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a35b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A35B8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a2e40
	sub_821A2E40(ctx, base);
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a3680
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3680;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a3684
	goto loc_821A3684;
loc_821A3680:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821A3684:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a36b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A36B8;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 8, xer);
	// ble ctx_arrow(ctx)->r6,0x821a36a8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A36A8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,16704
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 16704;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,16708
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 16708;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
loc_821A36A8:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,16544
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 16544;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,21556
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 21556;
	// stw ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 24);
	// stw ctx_arrow(ctx)->r9,28(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 28);
loc_821A36B8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// bl 0x8235eb60
	sub_8235EB60(ctx, base);
	// ld ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// stfs f0,21568(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21568);
	// fdivs f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 / f0.f64));
	// stfs f0,21572(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21572);
	// bl 0x821a6ce8
	sub_821A6CE8(&ctx);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a9088
	sub_821A9088(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195758
	sub_82195758(ctx, base);
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// lwz ctx_arrow(ctx)->r11,-31396(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3738
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3738;
	// bl 0x8240fa9c
	__imp__VdIsHSIOTrainingSucceeded(ctx, base);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r3.u32);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,-31396(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + -31396);
	// beq 0x821a3744
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3744;
loc_821A3738:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-14448
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -14448;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
loc_821A3744:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a92a8
	sub_821A92A8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821a3760
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3760;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-14520
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -14520;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
loc_821A3760:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_821A3764:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A3780) PPC_WEAK_FUNC(sub_821A3780);
PPC_FUNC_IMPL(__imp__sub_821A3780) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8219c7e0
	sub_8219C7E0(ctx, base);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,21540(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21540);
	// stw ctx_arrow(ctx)->r11,21544(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21544);
	// stw ctx_arrow(ctx)->r11,14920(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 14920);
	// bl 0x821ab6f0
	sub_821AB6F0(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a2e40
	sub_821A2E40(ctx, base);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A37D0) PPC_WEAK_FUNC(sub_821A37D0);
PPC_FUNC_IMPL(__imp__sub_821A37D0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a37f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A37F0;
	// bl 0x82198d58
	sub_82198D58(ctx, base);
loc_821A37F0:
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r28,-20096
	ctx_arrow(ctx)->r28.s64 = -1317011456;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a3970
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3970;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3814
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3814;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d958
	sub_8219D958(ctx, base);
loc_821A3814:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,21612
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 21612;
	// li ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = 4;
loc_821A381C:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a382c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A382C;
	// bl 0x821a0618
	sub_821A0618(ctx, base);
loc_821A382C:
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// bne 0x821a381c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A381C;
	// lwz ctx_arrow(ctx)->r3,21628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a384c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A384C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821A384C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821ab230
	sub_821AB230(ctx, base);
	// lis ctx_arrow(ctx)->r30,-32256
	ctx_arrow(ctx)->r30.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x821a3880
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3880;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,28
	ctx_arrow(ctx)->r3.s64 = 28;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A3880:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x821a38a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A38A4;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A38A4:
	// lis ctx_arrow(ctx)->r10,-32230
	ctx_arrow(ctx)->r10.s64 = -2112225280;
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,25352
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 25352;
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a38d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A38D4;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r3,65
	ctx_arrow(ctx)->r3.s64 = 65;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821A38D4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8240f9bc
	__imp__VdSetSystemCommandBufferGpuIdentifierAddress(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a32e8
	sub_821A32E8(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a5038
	sub_821A5038(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8218da60
	sub_8218DA60(ctx, base);
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a3910
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3910;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a3914
	goto loc_821A3914;
loc_821A3910:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A3914:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3938
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3938;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 8, xer);
	// ble ctx_arrow(ctx)->r6,0x821a3930
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A3930;
	// stw ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r30,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
loc_821A3930:
	// stw ctx_arrow(ctx)->r30,24(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 24);
	// stw ctx_arrow(ctx)->r30,28(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 28);
loc_821A3938:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8240fa7c
	__imp__VdSetGraphicsInterruptCallback(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219da28
	sub_8219DA28(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32019
	ctx_arrow(ctx)->r11.s64 = -2098397184;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,29376
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 29376;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// bl 0x8240fa2c
	__imp__ExRegisterTitleTerminateNotification(ctx);
	// bl 0x8240fa1c
	__imp__VdShutdownEngines(ctx);
loc_821A3970:
	// lwz ctx_arrow(ctx)->r3,16712(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a3984
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3984;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821A3984:
	// lwz ctx_arrow(ctx)->r3,21552(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a3994
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3994;
	// bl 0x821a3388
	sub_821A3388(ctx, base);
loc_821A3994:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A39A0) PPC_WEAK_FUNC(sub_821A39A0);
PPC_FUNC_IMPL(__imp__sub_821A39A0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,2031
	ctx_arrow(ctx)->r11.s64 = 133103616;
	// addis ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,-32528
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + -2131755008;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blelr ctx_arrow(ctx)->r6
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) return;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,127
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 127;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 0) & 0xFFFFFF80;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFF80;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,7
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x7F) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 7;
	// addze ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	temp.s64 = ctx_arrow(ctx)->r10.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r10.u32;
	ctx_arrow(ctx)->r10.s64 = temp.s64;
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,29,3,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 29) & 0x1FFFFFFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x7;
	// beq 0x821a3a20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3A20;
loc_821A39D8:
	// dcbf ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r8,128
	ctx_arrow(ctx)->r8.s64 = 128;
	// dcbf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r8,256
	ctx_arrow(ctx)->r8.s64 = 256;
	// dcbf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r8,384
	ctx_arrow(ctx)->r8.s64 = 384;
	// dcbf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r8.s64 = 512;
	// dcbf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r8,640
	ctx_arrow(ctx)->r8.s64 = 640;
	// dcbf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r8,768
	ctx_arrow(ctx)->r8.s64 = 768;
	// dcbf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r8,896
	ctx_arrow(ctx)->r8.s64 = 896;
	// dcbf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 0;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1024;
	// bne 0x821a39d8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A39D8;
loc_821A3A20:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3a38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3A38;
loc_821A3A28:
	// dcbf ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,128
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 128;
	// bne 0x821a3a28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3A28;
loc_821A3A38:
	// sync 
	// blr 
	return;
}

alias(__imp__sub_821A3A40) PPC_WEAK_FUNC(sub_821A3A40);
PPC_FUNC_IMPL(__imp__sub_821A3A40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-10896
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -10896;
loc_821A3A48:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,20
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u32 & 0xFFF;
loc_821A3A58:
	// mfmsr ctx_arrow(ctx)->r8
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r7
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r7.u32);
	ctx_arrow(ctx)->r9.u64 = __builtin_bswap32(reserved.u32);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3a7c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3A7C;
	// stwcx. ctx_arrow(ctx)->r6,0,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r7.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r6.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r8,1
	// bne 0x821a3a58
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3A58;
	// b 0x821a3a84
	goto loc_821A3A84;
loc_821A3A7C:
	// stwcx. ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r7.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r9.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r8,1
loc_821A3A84:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3a48
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3A48;
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// lbz ctx_arrow(ctx)->r8,268(ctx_arrow(ctx)->r13)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-27280
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -27280;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// stwx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// stwx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// lwsync 
	// blr 
	return;
}

alias(__imp__sub_821A3AB8) PPC_WEAK_FUNC(sub_821A3AB8);
PPC_FUNC_IMPL(__imp__sub_821A3AB8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = 262144;
	// stw ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 96);
	// bne 0x821a3ae4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3AE4;
	// lis ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r31.s64 = 131072;
loc_821A3AE4:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// lis ctx_arrow(ctx)->r30,32528
	ctx_arrow(ctx)->r30.s64 = 2131755008;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64 | 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r7.u64;
	// lis ctx_arrow(ctx)->r4,32528
	ctx_arrow(ctx)->r4.s64 = 2131755008;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8240faac
	__imp__KeLockL2(ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
loc_821A3B10:
	// dcbzl ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r30
	memset(base + ((ctx_arrow(ctx)->r30.u32) & ~127), 0, 128);
	// li ctx_arrow(ctx)->r10,128
	ctx_arrow(ctx)->r10.s64 = 128;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// dcbzl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	memset(base + ((ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32) & ~127), 0, 128);
	// li ctx_arrow(ctx)->r10,256
	ctx_arrow(ctx)->r10.s64 = 256;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// dcbzl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	memset(base + ((ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32) & ~127), 0, 128);
	// li ctx_arrow(ctx)->r10,384
	ctx_arrow(ctx)->r10.s64 = 384;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// dcbzl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	memset(base + ((ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32) & ~127), 0, 128);
	// li ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = 512;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// dcbzl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	memset(base + ((ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32) & ~127), 0, 128);
	// li ctx_arrow(ctx)->r10,640
	ctx_arrow(ctx)->r10.s64 = 640;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// dcbzl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	memset(base + ((ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32) & ~127), 0, 128);
	// li ctx_arrow(ctx)->r10,768
	ctx_arrow(ctx)->r10.s64 = 768;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// dcbzl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	memset(base + ((ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32) & ~127), 0, 128);
	// li ctx_arrow(ctx)->r10,896
	ctx_arrow(ctx)->r10.s64 = 896;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// dcbzl ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	memset(base + ((ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32) & ~127), 0, 128);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 1024;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// stw ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// blt ctx_arrow(ctx)->r6,0x821a3b10
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A3B10;
	// sync 
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A3BA0) PPC_WEAK_FUNC(sub_821A3BA0);
PPC_FUNC_IMPL(__imp__sub_821A3BA0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,31
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x7FFFFFFF) != 0);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s32 >> 31;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x821a3bb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3BB8;
	// lis ctx_arrow(ctx)->r11,10922
	ctx_arrow(ctx)->r11.s64 = 715784192;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,43690
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 43690;
	// b 0x821a3bd0
	goto loc_821A3BD0;
loc_821A3BB8:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,1,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x40000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a3bcc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3BCC;
	// lis ctx_arrow(ctx)->r11,5461
	ctx_arrow(ctx)->r11.s64 = 357892096;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,21845
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 21845;
	// b 0x821a3bd0
	goto loc_821A3BD0;
loc_821A3BCC:
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
loc_821A3BD0:
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,2,2
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a3c00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3C00;
	// lwz ctx_arrow(ctx)->r10,44(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 3;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,1,0,30
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 1) & 0xFFFFFFFE;
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r11.u64;
	// bne 0x821a3c00
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3C00;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3c00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3C00;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2147483648;
loc_821A3C00:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// blr 
	return;
}

alias(__imp__sub_821A3C08) PPC_WEAK_FUNC(sub_821A3C08);
PPC_FUNC_IMPL(__imp__sub_821A3C08) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// lwz ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A3C28:
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a3ce0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A3CE0;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r26,-1
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_821A3C40:
	// lhz ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 2);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// lhz ctx_arrow(ctx)->r8,-2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -2);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// lhz ctx_arrow(ctx)->r31,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -4);
	// lhz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r9,3,0,28
	ctx_arrow(ctx)->r29.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0xFFFFFFF8;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,4,0,27
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 4) & 0xFFFFFFF0;
	// rotlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 3);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r27.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3,0,28
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 3) & 0xFFFFFFF8;
	// rotlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 3);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
loc_821A3C80:
	// lwz ctx_arrow(ctx)->r24,-4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a3cb8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A3CB8;
	// lwz ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, ctx_arrow(ctx)->r31.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a3cb8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A3CB8;
	// lwz ctx_arrow(ctx)->r24,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a3cb8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A3CB8;
	// lwz ctx_arrow(ctx)->r24,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r24.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, ctx_arrow(ctx)->r30.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a3cb8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A3CB8;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 3;
loc_821A3CB8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -16;
	// bne ctx_arrow(ctx)->r6,0x821a3c80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3C80;
	// oris ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,32768
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r6.u64 | 2147483648;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// blt ctx_arrow(ctx)->r6,0x821a3c40
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A3C40;
loc_821A3CE0:
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r25.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3cf4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3CF4;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// bl 0x821a39a0
	sub_821A39A0(ctx, base);
loc_821A3CF4:
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3c28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3C28;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_821A3D10) PPC_WEAK_FUNC(sub_821A3D10);
PPC_FUNC_IMPL(__imp__sub_821A3D10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r5.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821a3c08
	sub_821A3C08(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_821A3D30:
	// lwz ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x821a3d50
	goto loc_821A3D50;
loc_821A3D3C:
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a3c08
	sub_821A3C08(ctx, base);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
loc_821A3D50:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r30.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a3d3c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A3D3C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3d30
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3D30;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821A3D70) PPC_WEAK_FUNC(sub_821A3D70);
PPC_FUNC_IMPL(__imp__sub_821A3D70) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a3ab8
	sub_821A3AB8(ctx, base);
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// lis ctx_arrow(ctx)->r26,256
	ctx_arrow(ctx)->r26.s64 = 16777216;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_821A3DA4:
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r27.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x821a3db4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3DB4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
loc_821A3DB4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 6, xer);
	// blt ctx_arrow(ctx)->r6,0x821a3da4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A3DA4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,0,2,7
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x3F000000;
	// clrlwi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27,31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r27.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 48);
	// lis ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = 262144;
	// bne 0x821a3dd8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3DD8;
	// lis ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 131072;
loc_821A3DD8:
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r10.u32;
	// twllei ctx_arrow(ctx)->r10,0
	// lwz ctx_arrow(ctx)->r10,11796(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// lis ctx_arrow(ctx)->r9,32528
	ctx_arrow(ctx)->r9.s64 = 2131755008;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,11332
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 11332;
loc_821A3DF4:
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r27.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821a3e4c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3E4C;
	// lis ctx_arrow(ctx)->r5,-16382
	ctx_arrow(ctx)->r5.s64 = -1073610752;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r6.u64;
	// stw ctx_arrow(ctx)->r29,-4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -4);
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0);
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,22528
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | 22528;
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r9,-8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -8);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64;
	// stw ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// stw ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// lwz ctx_arrow(ctx)->r8,-8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r5,0,30,31
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r5.u32, 0) & 0x3) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFFFFFFFFC);
	// stw ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 12);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
loc_821A3E4C:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 6, xer);
	// blt ctx_arrow(ctx)->r6,0x821a3df4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A3DF4;
	// lwz ctx_arrow(ctx)->r11,11796(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 2;
	// stw ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFFFF;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,33024
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2164260864;
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// bl 0x8219caf8
	sub_8219CAF8(&ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,11324
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 11324;
loc_821A3EA8:
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r29, 0, BINARY_OP_U8(ctx_arrow(ctx)->r29, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r26.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r29) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r27.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a3ef8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3EF8;
	// lwz ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// rlwimi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,0,0,29
	ctx_arrow(ctx)->r28.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0xFFFFFFFC) | (ctx_arrow(ctx)->r28.u64 & 0xFFFFFFFF00000003);
	// bl 0x82198a90
	sub_82198A90(ctx, base);
loc_821A3ED0:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x82198c28
	sub_82198C28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a3ef0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3EF0;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r28.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3ed0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3ED0;
loc_821A3EF0:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x82198ac0
	sub_82198AC0(ctx, base);
loc_821A3EF8:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,80
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 6, xer);
	// blt ctx_arrow(ctx)->r6,0x821a3ea8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A3EA8;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A3F10) PPC_WEAK_FUNC(sub_821A3F10);
PPC_FUNC_IMPL(__imp__sub_821A3F10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821a3ba0
	sub_821A3BA0(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r9,348(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// lwz ctx_arrow(ctx)->r10,1768(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// beq ctx_arrow(ctx)->r6,0x821a3f60
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3F60;
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// stw ctx_arrow(ctx)->r11,348(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 348);
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,25088
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 25088;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8219c480
	sub_8219C480(&ctx);
loc_821A3F60:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A3F70) PPC_WEAK_FUNC(sub_821A3F70);
PPC_FUNC_IMPL(__imp__sub_821A3F70) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r28,6
	ctx_arrow(ctx)->r28.s64 = 6;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29,11328
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r29.s64 + 11328;
loc_821A3F90:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a3fe0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A3FE0;
	// lwz ctx_arrow(ctx)->r30,-4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// rlwimi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,0,30,31
	ctx_arrow(ctx)->r30.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0) & 0x3) | (ctx_arrow(ctx)->r30.u64 & 0xFFFFFFFFFFFFFFFC);
	// bl 0x82198a90
	sub_82198A90(ctx, base);
loc_821A3FB8:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198c28
	sub_82198C28(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a3fd8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A3FD8;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r30.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3fb8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3FB8;
loc_821A3FD8:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x82198ac0
	sub_82198AC0(ctx, base);
loc_821A3FE0:
	// addic. ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,-1
	xer.ca = ctx_arrow(ctx)->r28.u32 > 0;
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,80
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 80;
	// bne 0x821a3f90
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A3F90;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A3FF8) PPC_WEAK_FUNC(sub_821A3FF8);
PPC_FUNC_IMPL(__imp__sub_821A3FF8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 1073741824;
loc_821A3FFC:
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	// b 0x821a40a4
	goto loc_821A40A4;
loc_821A4008:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29,3,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x1FFFFFFC;
	// clrlwi. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r4.s64;
	// beq 0x821a4040
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4040;
	// lhz ctx_arrow(ctx)->r8,2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 2);
	// lhz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// subfc ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	xer.ca = ctx_arrow(ctx)->r8.u32 >= ctx_arrow(ctx)->r7.u32;
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// subfe ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r8.u32 < ~ctx_arrow(ctx)->r8.u32) | (~ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r8.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r8.u64 = ~ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r8.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u32 & 0x1;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	// b 0x821a4074
	goto loc_821A4074;
loc_821A4040:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,48
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 48;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,52
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 52;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 20;
	// lwbrx ctx_arrow(ctx)->r8,0,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// lwbrx ctx_arrow(ctx)->r7,0,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// lwbrx ctx_arrow(ctx)->r6,0,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r8.s64;
	// lwbrx ctx_arrow(ctx)->r7,0,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r6.s64;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r7.u64;
	// subfic ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0
	xer.ca = ctx_arrow(ctx)->r8.u32 <= 0;
	ctx_arrow(ctx)->r8.s64 = 0 - ctx_arrow(ctx)->r8.s64;
	// subfe ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r8.u32 < ~ctx_arrow(ctx)->r8.u32) | (~ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r8.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r6.u64 = ~ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r8.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
loc_821A4074:
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 12) & 0xFFF;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,19,19
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r7.u64;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r4.s64;
	// dcbf ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r9
	// dcbf ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	// li ctx_arrow(ctx)->r9,24
	ctx_arrow(ctx)->r9.s64 = 24;
	// dcbf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_821A40A4:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r5.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a4008
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A4008;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a3ffc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A3FFC;
	// blr 
	return;
}

alias(__imp__sub_821A40C0) PPC_WEAK_FUNC(sub_821A40C0);
PPC_FUNC_IMPL(__imp__sub_821A40C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// lwz ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// lis ctx_arrow(ctx)->r28,16384
	ctx_arrow(ctx)->r28.s64 = 1073741824;
loc_821A40D4:
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r4.s64 + 4;
	// b 0x821a41dc
	goto loc_821A41DC;
loc_821A40E0:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFC;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
	// dcbf ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a4184
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4184;
	// lhz ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 2);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + -1;
	// lhz ctx_arrow(ctx)->r10,6(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 6);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// lhz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// lhz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 4);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r5.u32, 3);
	// rotlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 3);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7,4,0,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 4) & 0xFFFFFFF0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,3,0,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 3) & 0xFFFFFFF8;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,3,0,28
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 3) & 0xFFFFFFF8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
loc_821A4138:
	// lwz ctx_arrow(ctx)->r27,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a4170
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A4170;
	// lwz ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r9.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a4170
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4170;
	// lwz ctx_arrow(ctx)->r27,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a4170
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A4170;
	// lwz ctx_arrow(ctx)->r27,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r5.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a4170
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4170;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 3;
loc_821A4170:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -16;
	// bne ctx_arrow(ctx)->r6,0x821a4138
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4138;
	// b 0x821a41b8
	goto loc_821A41B8;
loc_821A4184:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,48
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 48;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,52
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 52;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 20;
	// lwbrx ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// lwbrx ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// lwbrx ctx_arrow(ctx)->r8,0,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// lwbrx ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	xer.ca = ctx_arrow(ctx)->r11.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r8.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
loc_821A41B8:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 12) & 0xFFF;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
	// dcbf ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,8
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 8;
loc_821A41DC:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r29.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a40e0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A40E0;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a40d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A40D4;
	// b 0x823ed184
	return;
}

alias(__imp__sub_821A41F8) PPC_WEAK_FUNC(sub_821A41F8);
PPC_FUNC_IMPL(__imp__sub_821A41F8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// lwz ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r3.s64 + 8;
loc_821A4208:
	// lwz ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r4.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r28.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a42d8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A42D8;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r27.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 8;
loc_821A4220:
	// lhz ctx_arrow(ctx)->r8,-2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -2);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// lhz ctx_arrow(ctx)->r5,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + -4);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// lhz ctx_arrow(ctx)->r9,2(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 2);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// lhz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 0);
	// rotlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r5.u32, 3);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3,3,0,28
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r3.u32 | (ctx_arrow(ctx)->r3.u64 << 32), 3) & 0xFFFFFFF8;
	// rotlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r31.u32, 3);
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,3,0,28
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 3) & 0xFFFFFFF8;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,4,0,27
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 4) & 0xFFFFFFF0;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
loc_821A4260:
	// lwz ctx_arrow(ctx)->r26,-4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 2) & 0xFFFFFFFC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r5.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a4298
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A4298;
	// lwz ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r4.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a4298
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4298;
	// lwz ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a4298
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A4298;
	// lwz ctx_arrow(ctx)->r26,8(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r3.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a4298
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4298;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,3
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 3;
loc_821A4298:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -16;
	// bne ctx_arrow(ctx)->r6,0x821a4260
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4260;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 12) & 0xFFF;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r8.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r7.u64;
	// addis ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-16384
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1073741824;
	// dcbf ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r9
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r28.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a4220
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A4220;
loc_821A42D8:
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4208
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4208;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A42F0) PPC_WEAK_FUNC(sub_821A42F0);
PPC_FUNC_IMPL(__imp__sub_821A42F0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a4618
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4618;
	// lis ctx_arrow(ctx)->r25,-30976
	ctx_arrow(ctx)->r25.s64 = -2030043136;
loc_821A4320:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,0,7
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFF000000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r25.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a44bc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A44BC;
	// beq ctx_arrow(ctx)->r6,0x821a448c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A448C;
	// lis ctx_arrow(ctx)->r9,-32768
	ctx_arrow(ctx)->r9.s64 = -2147483648;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4458
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4458;
	// lis ctx_arrow(ctx)->r9,-32512
	ctx_arrow(ctx)->r9.s64 = -2130706432;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4430
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4430;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a460c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A460C;
	// lis ctx_arrow(ctx)->r9,-32000
	ctx_arrow(ctx)->r9.s64 = -2097152000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a43ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A43EC;
	// lis ctx_arrow(ctx)->r9,-31744
	ctx_arrow(ctx)->r9.s64 = -2080374784;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a43cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A43CC;
	// lis ctx_arrow(ctx)->r9,-31488
	ctx_arrow(ctx)->r9.s64 = -2063597568;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a439c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A439C;
	// lis ctx_arrow(ctx)->r9,-31232
	ctx_arrow(ctx)->r9.s64 = -2046820352;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4510
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4510;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8192
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 536870912;
	// stw ctx_arrow(ctx)->r10,364(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 364);
	// b 0x821a4420
	goto loc_821A4420;
loc_821A439C:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// stw ctx_arrow(ctx)->r10,360(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 360);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,26,0,0
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 26) & 0x80000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF7FFFFFFF);
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 40);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a4424
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4424;
	// lwz ctx_arrow(ctx)->r31,356(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a460c
	goto loc_821A460C;
loc_821A43CC:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,2,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFBFFFFFFF;
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 40);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a4424
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4424;
	// lwz ctx_arrow(ctx)->r31,360(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a460c
	goto loc_821A460C;
loc_821A43EC:
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r9,44(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1073741824;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// stw ctx_arrow(ctx)->r10,356(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 356);
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 40);
	// ble ctx_arrow(ctx)->r6,0x821a4424
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4424;
	// lwz ctx_arrow(ctx)->r10,100(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a4424
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4424;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2147483648;
loc_821A4420:
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 40);
loc_821A4424:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a3f10
	sub_821A3F10(ctx, base);
	// b 0x821a460c
	goto loc_821A460C;
loc_821A4430:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFFFF;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8219caf8
	sub_8219CAF8(&ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// b 0x821a460c
	goto loc_821A460C;
loc_821A4458:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 100;
	// li ctx_arrow(ctx)->r5,248
	ctx_arrow(ctx)->r5.s64 = 248;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lis ctx_arrow(ctx)->r10,32767
	ctx_arrow(ctx)->r10.s64 = 2147418112;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,65535
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 65535;
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,252
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 252;
	// stw ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 44);
	// stw ctx_arrow(ctx)->r10,348(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 348);
	// stw ctx_arrow(ctx)->r9,352(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 352);
	// b 0x821a460c
	goto loc_821A460C;
loc_821A448C:
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwz ctx_arrow(ctx)->r9,104(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,3,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFDFFFFFFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// stw ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 44);
	// stw ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 40);
	// bge ctx_arrow(ctx)->r6,0x821a4424
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A4424;
	// lwz ctx_arrow(ctx)->r31,364(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a460c
	goto loc_821A460C;
loc_821A44BC:
	// lis ctx_arrow(ctx)->r9,-30720
	ctx_arrow(ctx)->r9.s64 = -2013265920;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a45ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A45EC;
	// lis ctx_arrow(ctx)->r9,-30464
	ctx_arrow(ctx)->r9.s64 = -1996488704;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a45c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A45C8;
	// lis ctx_arrow(ctx)->r9,-30208
	ctx_arrow(ctx)->r9.s64 = -1979711488;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4568
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4568;
	// lis ctx_arrow(ctx)->r9,-29952
	ctx_arrow(ctx)->r9.s64 = -1962934272;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4560;
	// lis ctx_arrow(ctx)->r9,-29696
	ctx_arrow(ctx)->r9.s64 = -1946157056;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4618;
	// lis ctx_arrow(ctx)->r9,-29440
	ctx_arrow(ctx)->r9.s64 = -1929379840;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4618;
	// lis ctx_arrow(ctx)->r9,-29184
	ctx_arrow(ctx)->r9.s64 = -1912602624;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4524
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4524;
loc_821A4510:
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4618;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// b 0x821a460c
	goto loc_821A460C;
loc_821A4524:
	// lwz ctx_arrow(ctx)->r11,348(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a4550
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4550;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x8219caf8
	sub_8219CAF8(&ctx);
loc_821A4550:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,16
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 16;
	// stw ctx_arrow(ctx)->r11,352(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 352);
	// b 0x821a460c
	goto loc_821A460C;
loc_821A4560:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// b 0x821a460c
	goto loc_821A460C;
loc_821A4568:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r28,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r27,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a3d70
	sub_821A3D70(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a3ff8
	sub_821A3FF8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,348(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a45a8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A45A8;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 100;
	// bl 0x821a40c0
	sub_821A40C0(ctx, base);
	// b 0x821a45c0
	goto loc_821A45C0;
loc_821A45A8:
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821a45c0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A45C0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 100;
	// bl 0x821a41f8
	sub_821A41F8(ctx, base);
loc_821A45C0:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,20
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 20;
	// b 0x821a460c
	goto loc_821A460C;
loc_821A45C8:
	// lwz ctx_arrow(ctx)->r11,348(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a45e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A45E4;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,100
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 100;
	// lwz ctx_arrow(ctx)->r5,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a3d10
	sub_821A3D10(ctx, base);
loc_821A45E4:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,12
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 12;
	// b 0x821a460c
	goto loc_821A460C;
loc_821A45EC:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// lwz ctx_arrow(ctx)->r10,348(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r11.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a460c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A460C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,76
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 + 76;
	// stw ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 64);
loc_821A460C:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a4320
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4320;
loc_821A4618:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_821A4628) PPC_WEAK_FUNC(sub_821A4628);
PPC_FUNC_IMPL(__imp__sub_821A4628) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8240f8dc
	__imp__KfAcquireSpinLock(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,-2
	ctx_arrow(ctx)->r3.s64 = -2;
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4738
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4738;
	// stw ctx_arrow(ctx)->r30,36(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// lis ctx_arrow(ctx)->r7,256
	ctx_arrow(ctx)->r7.s64 = 16777216;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// andc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// bne 0x821a46f8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A46F8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,11376
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 11376;
loc_821A46A8:
	// lwz ctx_arrow(ctx)->r8,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r7.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r9.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821a46d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A46D0;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
	// stw ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r8,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// andc ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & ~ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r9,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
loc_821A46D0:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 80;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 6, xer);
	// blt ctx_arrow(ctx)->r6,0x821a46a8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A46A8;
	// lwz ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a46f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A46F8;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
loc_821A46F8:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8240f8cc
	__imp__KfReleaseSpinLock(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a3f70
	sub_821A3F70(ctx, base);
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a471c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A471C;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8240fabc
	__imp__KeUnlockL2(ctx, base);
loc_821A471C:
	// lwsync 
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = -1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bl 0x821a3a40
	sub_821A3A40(&ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821a4744
	goto loc_821A4744;
loc_821A4738:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8240f8cc
	__imp__KfReleaseSpinLock(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r29.s64 + 4;
loc_821A4744:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_821A4750) PPC_WEAK_FUNC(sub_821A4750);
PPC_FUNC_IMPL(__imp__sub_821A4750) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r3,-17477
	ctx_arrow(ctx)->r3.s64 = -1145372672;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,48059
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 48059;
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// lis ctx_arrow(ctx)->r29,256
	ctx_arrow(ctx)->r29.s64 = 16777216;
	// b 0x821a4790
	goto loc_821A4790;
loc_821A4778:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a479c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A479C;
	// db16cyc 
loc_821A4790:
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4778
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4778;
loc_821A479C:
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// li ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = 1;
loc_821A47A4:
	// mfmsr ctx_arrow(ctx)->r10
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r11,0,ctx_arrow(ctx)->r31
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r31.u32);
	ctx_arrow(ctx)->r11.u64 = __builtin_bswap32(reserved.u32);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r28.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a47c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A47C8;
	// stwcx. ctx_arrow(ctx)->r27,0,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r31.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r27.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r10,1
	// bne 0x821a47a4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A47A4;
	// b 0x821a47d0
	goto loc_821A47D0;
loc_821A47C8:
	// stwcx. ctx_arrow(ctx)->r11,0,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r31.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r11.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r10,1
loc_821A47D0:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a47a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A47A4;
	// lwsync 
	// lwz ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,-17477
	ctx_arrow(ctx)->r3.s64 = -1145372672;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a480c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A480C;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,48060
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 48060;
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// lwsync 
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
loc_821A4804:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
loc_821A480C:
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,48061
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 48061;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 52);
	// lwz ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 60);
	// bl 0x821a3a40
	sub_821A3A40(&ctx);
	// lwz ctx_arrow(ctx)->r3,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,60(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// lwz ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// ble ctx_arrow(ctx)->r6,0x821a4874
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4874;
	// lwz ctx_arrow(ctx)->r5,36(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a48a0
	goto loc_821A48A0;
loc_821A4874:
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,64(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r28,96(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 96);
	// cmplwi ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r29.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// beq 0x821a4898
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4898;
	// stw ctx_arrow(ctx)->r28,64(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 64);
	// b 0x821a48a0
	goto loc_821A48A0;
loc_821A4898:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4,4
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r4.s64 + 4;
	// stw ctx_arrow(ctx)->r4,68(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 68);
loc_821A48A0:
	// lis ctx_arrow(ctx)->r29,-16384
	ctx_arrow(ctx)->r29.s64 = -1073741824;
loc_821A48A4:
	// lwz ctx_arrow(ctx)->r6,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a48cc
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A48CC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r6.s64 + 1;
	// lwz ctx_arrow(ctx)->r4,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// lwsync 
	// b 0x821a491c
	goto loc_821A491C;
loc_821A48CC:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a4938
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4938;
	// lwz ctx_arrow(ctx)->r9,352(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,4
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 4;
	// lwz ctx_arrow(ctx)->r8,348(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,16,17,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0x7FFF;
	// and. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & ctx_arrow(ctx)->r8.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne 0x821a48f8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A48F8;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r5.u64;
	// b 0x821a48a4
	goto loc_821A48A4;
loc_821A48F8:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r4,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r5.u64;
	// stw ctx_arrow(ctx)->r27,24(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// stw ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 28);
	// stw ctx_arrow(ctx)->r10,36(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// lwsync 
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
loc_821A491C:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r5,36(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a48a4
	goto loc_821A48A4;
loc_821A4938:
	// lis ctx_arrow(ctx)->r10,-29440
	ctx_arrow(ctx)->r10.s64 = -1929379840;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4954
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4954;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,8
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 8;
	// stw ctx_arrow(ctx)->r11,352(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 352);
	// b 0x821a48a4
	goto loc_821A48A4;
loc_821A4954:
	// lis ctx_arrow(ctx)->r10,-29696
	ctx_arrow(ctx)->r10.s64 = -1946157056;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4978
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4978;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,12
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 12;
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 20);
	// b 0x821a48a4
	goto loc_821A48A4;
loc_821A4978:
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,1
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xC0000000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a49ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A49AC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a49a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A49A4;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a4628
	sub_821A4628(ctx, base);
	// mr. ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// bne 0x821a48a4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A48A4;
	// b 0x821a4804
	goto loc_821A4804;
loc_821A49A4:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// b 0x821a48a4
	goto loc_821A48A4;
loc_821A49AC:
	// lis ctx_arrow(ctx)->r3,-12288
	ctx_arrow(ctx)->r3.s64 = -805306368;
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r27,88(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 88);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwz ctx_arrow(ctx)->r10,52(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 92);
	// beq ctx_arrow(ctx)->r6,0x821a4a34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4A34;
	// stw ctx_arrow(ctx)->r5,36(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 36);
	// lwsync 
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// b 0x821a49e4
	goto loc_821A49E4;
loc_821A49E0:
	// db16cyc 
loc_821A49E4:
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a49e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A49E0;
loc_821A49F0:
	// mfmsr ctx_arrow(ctx)->r10
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r11,0,ctx_arrow(ctx)->r31
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r31.u32);
	ctx_arrow(ctx)->r11.u64 = __builtin_bswap32(reserved.u32);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r28.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4a14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4A14;
	// stwcx. ctx_arrow(ctx)->r27,0,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r31.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r27.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r10,1
	// bne 0x821a49f0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A49F0;
	// b 0x821a4a1c
	goto loc_821A4A1C;
loc_821A4A14:
	// stwcx. ctx_arrow(ctx)->r11,0,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r31.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r11.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r10,1
loc_821A4A1C:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a49f0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A49F0;
	// lwsync 
	// lwz ctx_arrow(ctx)->r5,36(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a4a48
	goto loc_821A4A48;
loc_821A4A34:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x821a42f0
	sub_821A42F0(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r28,88(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 88);
loc_821A4A48:
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,-12288
	ctx_arrow(ctx)->r3.s64 = -805306368;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 1;
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 92);
	// bl 0x821a3a40
	sub_821A3A40(&ctx);
	// b 0x821a48a4
	goto loc_821A48A4;
}

alias(__imp__sub_821A4A68) PPC_WEAK_FUNC(sub_821A4A68);
PPC_FUNC_IMPL(__imp__sub_821A4A68) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,-2
	ctx_arrow(ctx)->r3.s64 = -2;
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235dd40
	sub_8235DD40(ctx, base);
	// lis ctx_arrow(ctx)->r25,-32256
	ctx_arrow(ctx)->r25.s64 = -2113929216;
loc_821A4A88:
	// lis ctx_arrow(ctx)->r11,-5
	ctx_arrow(ctx)->r11.s64 = -327680;
	// lwz ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27680
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 27680;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,368(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4ab0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4AB0;
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
loc_821A4AB0:
	// lwz ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4b28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4B28;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28,32
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r28.s64 + 32;
	// b 0x821a4b08
	goto loc_821A4B08;
loc_821A4AC8:
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,14928
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 14928;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f8bc
	__imp__RtlEnterCriticalSection(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a4b00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4B00;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821996f0
	sub_821996F0(ctx, base);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,14828
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 14828;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821996f8
	sub_821996F8(ctx, base);
loc_821A4B00:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f8ac
	__imp__RtlLeaveCriticalSection(ctx, base);
loc_821A4B08:
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// li ctx_arrow(ctx)->r4,3
	ctx_arrow(ctx)->r4.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x8240fadc
	__imp__KeWaitForSingleObject(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,258
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 258, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4ac8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4AC8;
loc_821A4B28:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,32
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + 32;
	// bl 0x8240facc
	__imp__KeResetEvent(ctx, base);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4b48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4B48;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821a4750
	sub_821A4750(ctx, base);
	// b 0x821a4a88
	goto loc_821A4A88;
loc_821A4B48:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_821A4B58) PPC_WEAK_FUNC(sub_821A4B58);
PPC_FUNC_IMPL(__imp__sub_821A4B58) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lbz ctx_arrow(ctx)->r10,268(ctx_arrow(ctx)->r13)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u64;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 80;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r3,-21846
	ctx_arrow(ctx)->r3.s64 = -1431699456;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,43690
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 43690;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,11316
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 11316;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r31.u32);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// bl 0x821a3a40
	sub_821A3A40(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x821a3a40
	sub_821A3A40(ctx, base);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,32
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 32;
	// bl 0x8240faec
	__imp__KeSetEvent(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A4BE0) PPC_WEAK_FUNC(sub_821A4BE0);
PPC_FUNC_IMPL(__imp__sub_821A4BE0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219c2c0
	sub_8219C2C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,13228(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,13224(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,13372
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 13372;
	// li ctx_arrow(ctx)->r9,5
	ctx_arrow(ctx)->r9.s64 = 5;
	// stw ctx_arrow(ctx)->r8,13216(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13216);
	// stw ctx_arrow(ctx)->r11,13220(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13220);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	// mtctr ctx_arrow(ctx)->r9
	ctr.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A4C2C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x821a4c2c
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821A4C2C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13232
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13232;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13332
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13332;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13252
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13252;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13272
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13272;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13292
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13292;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13312
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13312;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// lwz ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,252
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 252;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a4cb0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4CB0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
loc_821A4CB0:
	// lis ctx_arrow(ctx)->r11,-32768
	ctx_arrow(ctx)->r11.s64 = -2147483648;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,13180(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12984(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,12988(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a4d30
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A4D30;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 16;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,12748
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 12748;
loc_821A4CE8:
	// lwz ctx_arrow(ctx)->r6,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r8.s64;
	// stw ctx_arrow(ctx)->r6,-4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -4);
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r7.s64;
	// stw ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r8.s64;
	// stw ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r7.s64;
	// stw ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// lwz ctx_arrow(ctx)->r6,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r6.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a4ce8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A4CE8;
loc_821A4D30:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,252
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 252;
	// stw ctx_arrow(ctx)->r11,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A4D50) PPC_WEAK_FUNC(sub_821A4D50);
PPC_FUNC_IMPL(__imp__sub_821A4D50) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a4d7c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4D7C;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x8219cce0
	sub_8219CCE0(ctx, base);
loc_821A4D7C:
	// li ctx_arrow(ctx)->r5,32
	ctx_arrow(ctx)->r5.s64 = 32;
	// li ctx_arrow(ctx)->r4,100
	ctx_arrow(ctx)->r4.s64 = 100;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219ca10
	sub_8219CA10(ctx, base);
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// mr. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// beq 0x821a4de4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4DE4;
	// lwz ctx_arrow(ctx)->r11,13352(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29,-4
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r29.s64 + -4;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a4db0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4DB0;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r26.u64;
	// b 0x821a4dc8
	goto loc_821A4DC8;
loc_821A4DB0:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addis ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -1073741824;
loc_821A4DC8:
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64 | 1;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,19288
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 19288;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d128
	sub_8219D128(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r3.s64 + 4;
	// b 0x821a4de8
	goto loc_821A4DE8;
loc_821A4DE4:
	// lwz ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A4DE8:
	// li ctx_arrow(ctx)->r5,4
	ctx_arrow(ctx)->r5.s64 = 4;
	// li ctx_arrow(ctx)->r4,32
	ctx_arrow(ctx)->r4.s64 = 32;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219ca10
	sub_8219CA10(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// bne 0x821a4e08
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4E08;
	// lwz ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A4E08:
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r26,13216(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13216);
	// stw ctx_arrow(ctx)->r26,13220(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13220);
	// rlwinm. ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// beq 0x821a4e34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4E34;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219c2f8
	sub_8219C2F8(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,223
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 223;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stb ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10941, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x821a4edc
	goto loc_821A4EDC;
loc_821A4E34:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13232
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13232;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13332
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13332;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13252
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13252;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13272
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13272;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13292
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13292;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13312
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13312;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a4e94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A4E94;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,13372
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 13372;
	// lwz ctx_arrow(ctx)->r5,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219cf88
	sub_8219CF88(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A4E94:
	// lwz ctx_arrow(ctx)->r11,21516(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a4eac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A4EAC;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a4edc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4EDC;
loc_821A4EAC:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 12) & 0xFFF;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r29.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u32 & 0x1FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,13372
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 13372;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// srawi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,2
	xer.ca = (ctx_arrow(ctx)->r9.s32 < 0) & ((ctx_arrow(ctx)->r9.u32 & 0x3) != 0);
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r9.s32 >> 2;
	// add ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219cf88
	sub_8219CF88(ctx, base);
loc_821A4EDC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A4EE8) PPC_WEAK_FUNC(sub_821A4EE8);
PPC_FUNC_IMPL(__imp__sub_821A4EE8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,22280(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,23,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x100;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a502c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A502C;
	// lis ctx_arrow(ctx)->r4,-19072
	ctx_arrow(ctx)->r4.s64 = -1249902592;
	// li ctx_arrow(ctx)->r3,200
	ctx_arrow(ctx)->r3.s64 = 200;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,11796(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11796);
	// bne 0x821a4f24
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A4F24;
loc_821A4F1C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821a5030
	goto loc_821A5030;
loc_821A4F24:
	// lwz ctx_arrow(ctx)->r8,22280(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,14880(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,-16384
	ctx_arrow(ctx)->r9.s64 = -1073741824;
	// lwz ctx_arrow(ctx)->r10,14884(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r26,-1
	ctx_arrow(ctx)->r26.s64 = -1;
	// stw ctx_arrow(ctx)->r27,11004(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11004);
	// stw ctx_arrow(ctx)->r9,11020(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11020);
	// stw ctx_arrow(ctx)->r11,10948(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10948);
	// stw ctx_arrow(ctx)->r10,10956(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 10956);
	// rlwinm. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,5,5
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0x4000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821a4f5c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4F5C;
	// li ctx_arrow(ctx)->r26,2
	ctx_arrow(ctx)->r26.s64 = 2;
	// stw ctx_arrow(ctx)->r26,11312(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11312);
loc_821A4F5C:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
	// lis ctx_arrow(ctx)->r28,32512
	ctx_arrow(ctx)->r28.s64 = 2130706432;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,11356
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 + 11356;
	// lis ctx_arrow(ctx)->r25,-32256
	ctx_arrow(ctx)->r25.s64 = -2113929216;
loc_821A4F6C:
	// lis ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.s64 = 16777216;
	// lwz ctx_arrow(ctx)->r10,22280(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r29, 0, BINARY_OP_U8(ctx_arrow(ctx)->r29, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r29) & 0x3F)), 0));
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a5010
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A5010;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x821a4f90
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A4F90;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r29,11312(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 11312);
loc_821A4F90:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,10944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 10944;
	// stw ctx_arrow(ctx)->r29,-36(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -36);
	// addis ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,16640
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r28.s64 + 1090519040;
	// stw ctx_arrow(ctx)->r28,-12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -12);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,-40
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + -40;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,12
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 12;
	// stw ctx_arrow(ctx)->r11,-40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -40);
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19048
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19048;
	// stw ctx_arrow(ctx)->r10,-16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -16);
	// lis ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 65536;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stb ctx_arrow(ctx)->r27,-8(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + -8, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r27), 0);
	// stw ctx_arrow(ctx)->r27,-4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// bl 0x8235eb98
	sub_8235EB98(&ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// beq 0x821a4f1c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A4F1C;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r4,1596(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8240fb1c
	__imp__ObReferenceObjectByHandle(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821a5010
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821A5010;
	// li ctx_arrow(ctx)->r4,17
	ctx_arrow(ctx)->r4.s64 = 17;
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8240fb0c
	__imp__KeSetBasePriorityThread(ctx, base);
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8240fafc
	__imp__ObDereferenceObject(ctx, base);
loc_821A5010:
	// lis ctx_arrow(ctx)->r11,32512
	ctx_arrow(ctx)->r11.s64 = 2130706432;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,128
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 128;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 768;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,80
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 80;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a4f6c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A4F6C;
loc_821A502C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
loc_821A5030:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_821A5038) PPC_WEAK_FUNC(sub_821A5038);
PPC_FUNC_IMPL(__imp__sub_821A5038) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r4,-20096
	ctx_arrow(ctx)->r4.s64 = -1317011456;
	// lwz ctx_arrow(ctx)->r3,11796(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,10948(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10948);
	// bl 0x8209d060
	sub_8209D060(&ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,11348
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 11348;
	// li ctx_arrow(ctx)->r29,6
	ctx_arrow(ctx)->r29.s64 = 6;
loc_821A5064:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5080
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5080;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240faec
	__imp__KeSetEvent(ctx, base);
loc_821A5080:
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,80
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 80;
	// bne 0x821a5064
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5064;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,11364
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 11364;
	// li ctx_arrow(ctx)->r30,6
	ctx_arrow(ctx)->r30.s64 = 6;
loc_821A5094:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a50b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A50B0;
	// li ctx_arrow(ctx)->r4,-1
	ctx_arrow(ctx)->r4.s64 = -1;
	// bl 0x8235eba8
	sub_8235EBA8(ctx, base);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235d388
	sub_8235D388(ctx, base);
loc_821A50B0:
	// addic. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-1
	xer.ca = ctx_arrow(ctx)->r30.u32 > 0;
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,80
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 80;
	// bne 0x821a5094
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5094;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821A50C8) PPC_WEAK_FUNC(sub_821A50C8);
PPC_FUNC_IMPL(__imp__sub_821A50C8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a50f8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A50F8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821A50F8:
	// li ctx_arrow(ctx)->r11,8712
	ctx_arrow(ctx)->r11.s64 = 8712;
	// li ctx_arrow(ctx)->r10,6
	ctx_arrow(ctx)->r10.s64 = 6;
	// lis ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 65536;
	// lis ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r8.s64 = 131072;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,8192
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 8192;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,148(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a5160
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A5160;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,5,0,26
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 5) & 0xFFFFFFE0;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// li ctx_arrow(ctx)->r9,8997
	ctx_arrow(ctx)->r9.s64 = 8997;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// b 0x821a5224
	goto loc_821A5224;
loc_821A5160:
	// lis ctx_arrow(ctx)->r9,-16384
	ctx_arrow(ctx)->r9.s64 = -1073741824;
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// ori ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r9,24832
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r9.u64 | 24832;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r25.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lis ctx_arrow(ctx)->r9,-16384
	ctx_arrow(ctx)->r9.s64 = -1073741824;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,24576
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r9.u64 | 24576;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// beq ctx_arrow(ctx)->r6,0x821a5210
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5210;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r28,5,0,26
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 5) & 0xFFFFFFE0;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,28
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 28;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A5198:
	// li ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 3;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64;
	// lis ctx_arrow(ctx)->r7,-16383
	ctx_arrow(ctx)->r7.s64 = -1073676288;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64 + ctx_arrow(ctx)->r10.u64;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,11521
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 11521;
	// lis ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r6.s64 = 262144;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,805
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 805;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r28, 0, BINARY_OP_U8(ctx_arrow(ctx)->r28, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r28) & 0x3F)), 0));
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// ble ctx_arrow(ctx)->r6,0x821a5200
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5200;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A5200:
	// addic. ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,-1
	xer.ca = ctx_arrow(ctx)->r26.u32 > 0;
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,2
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 2;
	// bne 0x821a5198
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5198;
loc_821A5210:
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12700(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,12704(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A5224:
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// li ctx_arrow(ctx)->r9,21
	ctx_arrow(ctx)->r9.s64 = 21;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,23296
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 23296;
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,57,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 57) & 0xFFFFFFFFFFFFFFFF;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r12.u64;
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,56,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 56) & 0xFFFFFFFFFFFFFFFF;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed17c
	return;
}

alias(__imp__sub_821A5278) PPC_WEAK_FUNC(sub_821A5278);
PPC_FUNC_IMPL(__imp__sub_821A5278) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// bne ctx_arrow(ctx)->r6,0x821a537c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A537C;
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,12708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12708);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a5368
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5368;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a5368
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5368;
	// lbz ctx_arrow(ctx)->r11,12179(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a5368
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5368;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a52cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A52CC;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x821a535c
	goto loc_821A535C;
loc_821A52CC:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a5354
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A5354;
	// lwz ctx_arrow(ctx)->r11,12432(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12720(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a52ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A52EC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5354
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5354;
loc_821A52EC:
	// lwz ctx_arrow(ctx)->r11,12436(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12724(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5304
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5304;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5354
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5354;
loc_821A5304:
	// lwz ctx_arrow(ctx)->r11,12440(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12728(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a531c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A531C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5354
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5354;
loc_821A531C:
	// lwz ctx_arrow(ctx)->r11,12444(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12732(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5334
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5334;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5354
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5354;
loc_821A5334:
	// lwz ctx_arrow(ctx)->r11,12448(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,12736(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a534c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A534C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5354
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5354;
loc_821A534C:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x821a5358
	goto loc_821A5358;
loc_821A5354:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A5358:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_821A535C:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x821a536c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A536C;
loc_821A5368:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A536C:
	// li ctx_arrow(ctx)->r8,-1
	ctx_arrow(ctx)->r8.s64 = -1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,24,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFE) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFF01);
	// stw ctx_arrow(ctx)->r8,12700(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12700);
	// b 0x821a5390
	goto loc_821A5390;
loc_821A537C:
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r4,12700(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12700);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// stw ctx_arrow(ctx)->r10,12708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12708);
loc_821A5390:
	// stb ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10940, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,12704(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12704);
	// stw ctx_arrow(ctx)->r4,10932(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10932);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// stw ctx_arrow(ctx)->r9,10936(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10936);
	// ble ctx_arrow(ctx)->r6,0x821a53b8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A53B8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821A53B8:
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24576
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 24576;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,12700(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A53E8) PPC_WEAK_FUNC(sub_821A53E8);
PPC_FUNC_IMPL(__imp__sub_821A53E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r27,12740(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12740);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r26.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a54a8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A54A8;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,12988
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 12988;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r22.s64 + 12;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12748
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 12748;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
loc_821A543C:
	// lwz ctx_arrow(ctx)->r7,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r7.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a544c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A544C;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
loc_821A544C:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r7.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a545c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A545C;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
loc_821A545C:
	// lwz ctx_arrow(ctx)->r7,-12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,-1
	xer.ca = ctx_arrow(ctx)->r8.u32 > 0;
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// stw ctx_arrow(ctx)->r7,-4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -4);
	// lwz ctx_arrow(ctx)->r7,-8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r7,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// lwz ctx_arrow(ctx)->r7,-12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,26
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFE0;
	// stw ctx_arrow(ctx)->r7,-4(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -4);
	// lwz ctx_arrow(ctx)->r7,-8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,0,0,26
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 0) & 0xFFFFFFE0;
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 8;
	// bne 0x821a543c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A543C;
loc_821A54A8:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a55d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A55D0;
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23,0,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r23.u32 | (ctx_arrow(ctx)->r23.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 32;
	// stb ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10943, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// beq 0x821a54cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A54CC;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16;
	// stb ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10943, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_821A54CC:
	// lhz ctx_arrow(ctx)->r11,10368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 10368);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x3;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a54e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A54E0;
	// li ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r3.s64 = 16;
	// b 0x821a54ec
	goto loc_821A54EC;
loc_821A54E0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// li ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r3.s64 = 8;
	// bne ctx_arrow(ctx)->r6,0x821a54f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A54F8;
loc_821A54EC:
	// li ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.s64 = 32;
	// li ctx_arrow(ctx)->r30,80
	ctx_arrow(ctx)->r30.s64 = 80;
	// b 0x821a5500
	goto loc_821A5500;
loc_821A54F8:
	// li ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = 16;
	// li ctx_arrow(ctx)->r30,40
	ctx_arrow(ctx)->r30.s64 = 40;
loc_821A5500:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// andc ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r11.u64 & ~ctx_arrow(ctx)->r9.u64;
	// twllei ctx_arrow(ctx)->r10,0
	// divwu ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u32 = ctx_arrow(ctx)->r5.u32 / ctx_arrow(ctx)->r10.u32;
	// beq ctx_arrow(ctx)->r6,0x821a5560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5560;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31,13104
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r31.s64 + 13104;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,12984
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 12984;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r27.u64;
loc_821A552C:
	// lwz ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 0;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// twllei ctx_arrow(ctx)->r3,0
	// divwu ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r7.u32 = ctx_arrow(ctx)->r7.u32 / ctx_arrow(ctx)->r3.u32;
	// divwu ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u32 = ctx_arrow(ctx)->r6.u32 / ctx_arrow(ctx)->r10.u32;
	// mullw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.s64 = int64_t(ctx_arrow(ctx)->r7.s32) * int64_t(ctx_arrow(ctx)->r4.s32);
	// add ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// twllei ctx_arrow(ctx)->r10,0
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r8)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + 0);
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 4;
	// bne 0x821a552c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A552C;
loc_821A5560:
	// lwz ctx_arrow(ctx)->r10,10368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r5,13164(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13164);
	// twllei ctx_arrow(ctx)->r30,0
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r5,18,0,13
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r5.u32, 18) & 0xFFFC0000) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF0003FFFF);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r30.u32;
	// stw ctx_arrow(ctx)->r10,10368(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10368);
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r30.s32);
	// ld ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,256
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 256;
	// std ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,13168(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13168);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a55c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A55C4;
	// lwz ctx_arrow(ctx)->r11,11844(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = 262144;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,12,14
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xE0000;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a55c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A55C4;
	// ld ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r12,-257
	ctx_arrow(ctx)->r12.s64 = -257;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// b 0x821a55cc
	goto loc_821A55CC;
loc_821A55C4:
	// ld ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 256;
loc_821A55CC:
	// std ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
loc_821A55D0:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r23.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r29,13172(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13172);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r28,13176(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13176);
	// stw ctx_arrow(ctx)->r23,13180(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13180);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-18980
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -18980;
	// bne 0x821a56ec
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A56EC;
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a56ec
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A56EC;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r26.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5654
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5654;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12756
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 12756;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,12988
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 12988;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
loc_821A5614:
	// lwz ctx_arrow(ctx)->r7,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,-4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r7.s64;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r4.s64 - ctx_arrow(ctx)->r7.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a5638
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A5638;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A5638:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, ctx_arrow(ctx)->r7.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a5644
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A5644;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r7.u64;
loc_821A5644:
	// addic. ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,-1
	xer.ca = ctx_arrow(ctx)->r5.u32 > 0;
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// bne 0x821a5614
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5614;
loc_821A5654:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,12640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 12640;
	// stw ctx_arrow(ctx)->r26,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// li ctx_arrow(ctx)->r5,28
	ctx_arrow(ctx)->r5.s64 = 28;
	// stw ctx_arrow(ctx)->r8,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stw ctx_arrow(ctx)->r6,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x823ee010
	sub_823EE010(&ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12668
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 12668;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// bl 0x82195ac8
	sub_82195AC8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-18956
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -18956;
	// bl 0x82195288
	sub_82195288(ctx, base);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r25.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r4,63
	ctx_arrow(ctx)->r4.s64 = 63;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82197390
	sub_82197390(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195b48
	sub_82195B48(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195288
	sub_82195288(ctx, base);
loc_821A56EC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5704
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5704;
	// li ctx_arrow(ctx)->r11,13184
	ctx_arrow(ctx)->r11.s64 = 13184;
	// lvx128 v0,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r25
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r25.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// stvx128 v0,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r11.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)), _mm_load_si128((__m128i*)VectorMaskL)));
	// b 0x821a570c
	goto loc_821A570C;
loc_821A5704:
	// std ctx_arrow(ctx)->r26,13184(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13184);
	// std ctx_arrow(ctx)->r26,13192(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13192);
loc_821A570C:
	// lwz ctx_arrow(ctx)->r10,12432(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stfs f31,13200(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f31.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13200);
	// stw ctx_arrow(ctx)->r24,13204(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13204);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64;
	// bne 0x821a5728
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5728;
	// lwz ctx_arrow(ctx)->r9,12448(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A5728:
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// lwz ctx_arrow(ctx)->r8,12436(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 32;
	// lwz ctx_arrow(ctx)->r7,12440(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,12444(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,12448(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,12720(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12720);
	// stw ctx_arrow(ctx)->r9,12716(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12716);
	// stw ctx_arrow(ctx)->r8,12724(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12724);
	// stw ctx_arrow(ctx)->r7,12728(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12728);
	// stw ctx_arrow(ctx)->r6,12732(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12732);
	// stw ctx_arrow(ctx)->r4,12736(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12736);
	// stw ctx_arrow(ctx)->r5,12712(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12712);
	// stw ctx_arrow(ctx)->r26,12708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12708);
	// stb ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10940, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a57b4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A57B4;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a57b4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A57B4;
	// lbz ctx_arrow(ctx)->r11,12179(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a57b4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A57B4;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a579c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A579C;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x821a57a8
	goto loc_821A57A8;
loc_821A579C:
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_821A57A8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x821a57b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A57B8;
loc_821A57B4:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
loc_821A57B8:
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r26,12704(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12704);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,24,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFE) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFF01);
	// stw ctx_arrow(ctx)->r26,10932(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10932);
	// stw ctx_arrow(ctx)->r26,10936(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10936);
	// stw ctx_arrow(ctx)->r9,12700(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12700);
	// stb ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10940, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x821a4be0
	sub_821A4BE0(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a5800
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5800;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A5800:
	// lis ctx_arrow(ctx)->r10,-31232
	ctx_arrow(ctx)->r10.s64 = -2046820352;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a582c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A582C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A582C:
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// li ctx_arrow(ctx)->r9,25
	ctx_arrow(ctx)->r9.s64 = 25;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17920
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 17920;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// bl 0x821a6e90
	sub_821A6E90(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82195ac8
	sub_82195AC8(ctx, base);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195758
	sub_82195758(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
}

alias(__imp__sub_821A5880) PPC_WEAK_FUNC(sub_821A5880);
PPC_FUNC_IMPL(__imp__sub_821A5880) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -96);
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// fmr f31,f1
	f31.f64 = ctx.f1.f64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r10.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// li ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r22.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x821a58cc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A58CC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5a2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5A2C;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,12744
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 + 12744;
loc_821A58CC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5a2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5A2C;
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r22.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a5a2c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5A2C;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
loc_821A58EC:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12716(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,14,18,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 14) & 0x3FFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwz ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5938
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5938;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 7;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF8;
	// stw ctx_arrow(ctx)->r11,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
loc_821A5938:
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29,17,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 29) & 0x7FFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwz ctx_arrow(ctx)->r11,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a595c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A595C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 7;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFF8;
	// stw ctx_arrow(ctx)->r11,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
loc_821A595C:
	// li ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = 3;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// slw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r28, 0, BINARY_OP_U8(ctx_arrow(ctx)->r28, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r28) & 0x3F)), 0));
	// bl 0x821a5278
	sub_821A5278(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,28,30,30
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 28) & 0x2;
	// bl 0x82194750
	sub_82194750(ctx, base);
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a59e8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A59E8;
	// lwz ctx_arrow(ctx)->r11,12432(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a59a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A59A4;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26,256
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64 | 256;
loc_821A59A4:
	// lwz ctx_arrow(ctx)->r11,12448(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a59b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A59B4;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,512
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | 512;
loc_821A59B4:
	// lwz ctx_arrow(ctx)->r11,13204(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,13184
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 13184;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// lfs f1,13200(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// stw ctx_arrow(ctx)->r22,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82197c48
	sub_82197C48(ctx, base);
	// b 0x821a5a14
	goto loc_821A5A14;
loc_821A59E8:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r23,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// stw ctx_arrow(ctx)->r24,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82197c48
	sub_82197C48(ctx, base);
loc_821A5A14:
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 16;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,2
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 2;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a58ec
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A58EC;
loc_821A5A2C:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a5278
	sub_821A5278(ctx, base);
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82194750
	sub_82194750(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,13180(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,11312(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,256
	ctx_arrow(ctx)->r9.s64 = 16777216;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,2,7
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// slw ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// beq 0x821a5a68
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A5A68;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A5A68:
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5ba0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5BA0;
	// lis ctx_arrow(ctx)->r29,-32768
	ctx_arrow(ctx)->r29.s64 = -2147483648;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a5278
	sub_821A5278(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lis ctx_arrow(ctx)->r28,16384
	ctx_arrow(ctx)->r28.s64 = 1073741824;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a5aa0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5AA0;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r22.u64;
	// b 0x821a5ab8
	goto loc_821A5AB8;
loc_821A5AA0:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
loc_821A5AB8:
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19288
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19288;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d9d0
	sub_8219D9D0(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a5278
	sub_821A5278(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// lwz ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a5afc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5AFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
loc_821A5AFC:
	// lis ctx_arrow(ctx)->r11,-30720
	ctx_arrow(ctx)->r11.s64 = -2013265920;
	// stw ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stw ctx_arrow(ctx)->r10,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// lwz ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a5b2c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5B2C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
loc_821A5B2C:
	// lis ctx_arrow(ctx)->r11,-30464
	ctx_arrow(ctx)->r11.s64 = -1996488704;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,13232(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a5b48
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5B48;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// b 0x821a5b60
	goto loc_821A5B60;
loc_821A5B48:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
loc_821A5B60:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,13332(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a5b78
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5B78;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
	// b 0x821a5b90
	goto loc_821A5B90;
loc_821A5B78:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r28.s64;
loc_821A5B90:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r10,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// b 0x821a5ba4
	goto loc_821A5BA4;
loc_821A5BA0:
	// bl 0x8219d6d8
	sub_8219D6D8(&ctx);
loc_821A5BA4:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a5bc4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5BC4;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A5BC4:
	// lis ctx_arrow(ctx)->r10,-30976
	ctx_arrow(ctx)->r10.s64 = -2030043136;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// stw ctx_arrow(ctx)->r22,12716(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12716);
	// stw ctx_arrow(ctx)->r22,12708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12708);
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,223
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 223;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// andi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,207
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 207;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// stb ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10940, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10943));
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821a5cc8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5CC8;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a5cc8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5CC8;
	// lbz ctx_arrow(ctx)->r11,12179(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a5cc8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5CC8;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a5c28
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A5C28;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x821a5cbc
	goto loc_821A5CBC;
loc_821A5C28:
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a5cb4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A5CB4;
	// lwz ctx_arrow(ctx)->r11,12432(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12720(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5c4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5C4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5cb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5CB4;
loc_821A5C4C:
	// lwz ctx_arrow(ctx)->r11,12436(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12724(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5c64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5C64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5cb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5CB4;
loc_821A5C64:
	// lwz ctx_arrow(ctx)->r11,12440(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12728(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5c7c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5C7C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5cb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5CB4;
loc_821A5C7C:
	// lwz ctx_arrow(ctx)->r11,12444(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12732(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5c94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5C94;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5cb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5CB4;
loc_821A5C94:
	// lwz ctx_arrow(ctx)->r11,12448(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12736(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5cac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5CAC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a5cb4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A5CB4;
loc_821A5CAC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// b 0x821a5cb8
	goto loc_821A5CB8;
loc_821A5CB4:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
loc_821A5CB8:
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
loc_821A5CBC:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne 0x821a5ccc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5CCC;
loc_821A5CC8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r22.u64;
loc_821A5CCC:
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,24,30
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0) & 0xFE) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFF01);
	// stw ctx_arrow(ctx)->r22,12704(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12704);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r22,10932(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10932);
	// stw ctx_arrow(ctx)->r22,10936(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10936);
	// stw ctx_arrow(ctx)->r9,12700(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12700);
	// stb ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10940, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x821a4d50
	sub_821A4D50(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-18980
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -18980;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195ac8
	sub_82195AC8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a5d30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5D30;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195758
	sub_82195758(ctx, base);
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821a5d34
	goto loc_821A5D34;
loc_821A5D30:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821A5D34:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// lfd f31,-96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed170
	return;
}

alias(__imp__sub_821A5D40) PPC_WEAK_FUNC(sub_821A5D40);
PPC_FUNC_IMPL(__imp__sub_821A5D40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a5d70
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5D70;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,12712(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12712);
	// bl 0x821a4be0
	sub_821A4BE0(&ctx);
	// b 0x821a5d74
	goto loc_821A5D74;
loc_821A5D70:
	// bl 0x8219d6d8
	sub_8219D6D8(&ctx);
loc_821A5D74:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a5d94
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5D94;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A5D94:
	// lis ctx_arrow(ctx)->r10,-32000
	ctx_arrow(ctx)->r10.s64 = -2097152000;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// not ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ~ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,6,25,25
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 6) & 0x40) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFFBF);
	// lbz ctx_arrow(ctx)->r9,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,10548(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,64
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 64;
	// stw ctx_arrow(ctx)->r8,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,28,29,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 28) & 0x7;
	// stb ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10941, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// stb ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10940));
	// stw ctx_arrow(ctx)->r8,12696(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12696);
	// rlwinm. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,26,26
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x821a5e10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A5E10;
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// ld ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,10368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,37,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 37) & 0xFFFFFFFFFFFFFFFF;
	// lwz ctx_arrow(ctx)->r9,13168(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 & 0x3FFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r12.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// std ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// beq ctx_arrow(ctx)->r6,0x821a5e10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A5E10;
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,57,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 57) & 0xFFFFFFFFFFFFFFFF;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
loc_821A5E10:
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// stw ctx_arrow(ctx)->r10,12692(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12692);
	// bl 0x82195758
	sub_82195758(&ctx);
	// lwz ctx_arrow(ctx)->r11,13180(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a5fb8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5FB8;
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a5fb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A5FB8;
	// lwz ctx_arrow(ctx)->r11,12740(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r28.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a5eac
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A5EAC;
	// rotlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12756
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 12756;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,12988
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 12988;
loc_821A5E6C:
	// lwz ctx_arrow(ctx)->r8,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,-4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r6.s64 - ctx_arrow(ctx)->r8.s64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a5e90
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A5E90;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A5E90:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a5e9c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A5E9C;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r8.u64;
loc_821A5E9C:
	// addic. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	xer.ca = ctx_arrow(ctx)->r7.u32 > 0;
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// bne 0x821a5e6c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5E6C;
loc_821A5EAC:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,12640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 12640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// li ctx_arrow(ctx)->r5,28
	ctx_arrow(ctx)->r5.s64 = 28;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,12668
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 12668;
	// lis ctx_arrow(ctx)->r9,-32254
	ctx_arrow(ctx)->r9.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,-18980
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 + -18980;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r7,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// bl 0x82195ac8
	sub_82195AC8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-18956
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -18956;
	// bl 0x82195288
	sub_82195288(ctx, base);
	// lwz ctx_arrow(ctx)->r11,13172(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,13176(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// bl 0x821a5278
	sub_821A5278(&ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,13184
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 13184;
	// lwz ctx_arrow(ctx)->r8,13204(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f1,13200(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r4,48
	ctx_arrow(ctx)->r4.s64 = 48;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x82197390
	sub_82197390(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,15
	ctx_arrow(ctx)->r29.s64 = 15;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a5f5c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A5F5C;
	// li ctx_arrow(ctx)->r29,63
	ctx_arrow(ctx)->r29.s64 = 63;
loc_821A5F5C:
	// li ctx_arrow(ctx)->r4,2
	ctx_arrow(ctx)->r4.s64 = 2;
	// stw ctx_arrow(ctx)->r28,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r28,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r27,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// stw ctx_arrow(ctx)->r26,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// bl 0x821a5278
	sub_821A5278(&ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r8,13204(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lfs f1,13200(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82197390
	sub_82197390(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a5278
	sub_821A5278(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195b48
	sub_82195B48(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195288
	sub_82195288(ctx, base);
loc_821A5FB8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A5FC0) PPC_WEAK_FUNC(sub_821A5FC0);
PPC_FUNC_IMPL(__imp__sub_821A5FC0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x7F;
	// stb ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10941, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a6004
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A6004;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A6004:
	// lis ctx_arrow(ctx)->r10,-31488
	ctx_arrow(ctx)->r10.s64 = -2063597568;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a6070
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A6070;
	// lwz ctx_arrow(ctx)->r11,11312(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,256
	ctx_arrow(ctx)->r10.s64 = 16777216;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// slw ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r5.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r11, 0, BINARY_OP_U8(ctx_arrow(ctx)->r11, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r11) & 0x3F)), 0));
	// bl 0x821a4d50
	sub_821A4D50(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a6058
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6058;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195758
	sub_82195758(ctx, base);
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821a6074
	goto loc_821A6074;
loc_821A6058:
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a6070
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A6070;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195758
	sub_82195758(ctx, base);
loc_821A6070:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821A6074:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A6088) PPC_WEAK_FUNC(sub_821A6088);
PPC_FUNC_IMPL(__imp__sub_821A6088) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// lbz ctx_arrow(ctx)->r10,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,10896(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,26,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821a621c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A621C;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r31,13232
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r31.s64 + 13232;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r31,13332
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r31.s64 + 13332;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8219c6f0
	sub_8219C6F0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,13180(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,11312(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r9,256
	ctx_arrow(ctx)->r9.s64 = 16777216;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,2,7
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// slw ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// beq 0x821a60e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A60E4;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A60E4:
	// lis ctx_arrow(ctx)->r28,-32768
	ctx_arrow(ctx)->r28.s64 = -2147483648;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821a5278
	sub_821A5278(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lis ctx_arrow(ctx)->r27,16384
	ctx_arrow(ctx)->r27.s64 = 1073741824;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821a6110
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A6110;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// b 0x821a6128
	goto loc_821A6128;
loc_821A6110:
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r27.s64;
loc_821A6128:
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,19288
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + 19288;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d9d0
	sub_8219D9D0(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a5278
	sub_821A5278(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// lwz ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a616c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A616C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
loc_821A616C:
	// lis ctx_arrow(ctx)->r11,-30720
	ctx_arrow(ctx)->r11.s64 = -2013265920;
	// stw ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r3.s64 + 8;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stw ctx_arrow(ctx)->r10,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 12;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a61a0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A61A0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A61A0:
	// lis ctx_arrow(ctx)->r11,-30464
	ctx_arrow(ctx)->r11.s64 = -1996488704;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a61cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A61CC;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r27.s64;
loc_821A61CC:
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a61f4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A61F4;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r27.s64;
loc_821A61F4:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 12;
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 8);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r9,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// bl 0x8219d530
	sub_8219D530(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8219d530
	sub_8219D530(ctx, base);
	// b 0x821a6224
	goto loc_821A6224;
loc_821A621C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821A6224:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,13352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 13352;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a6244
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A6244;
	// bl 0x8219d2d8
	sub_8219D2D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A6244:
	// lis ctx_arrow(ctx)->r10,-31744
	ctx_arrow(ctx)->r10.s64 = -2080374784;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,56,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 56) & 0xFFFFFFFFFFFFFFFF;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lbz ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r9,13360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13360);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,128
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 128;
	// stb ctx_arrow(ctx)->r10,10941(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10941));
	// andi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,191
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 191;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stb ctx_arrow(ctx)->r11,10940(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10940, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a62e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A62E4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,12668
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 12668;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82195288
	sub_82195288(ctx, base);
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 256;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,37,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 37) & 0xFFFFFFFFFFFFFFFF;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r12.u64;
	// li ctx_arrow(ctx)->r12,1
	ctx_arrow(ctx)->r12.s64 = 1;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,57,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 57) & 0xFFFFFFFFFFFFFFFF;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r12.u64;
	// lis ctx_arrow(ctx)->r12,-17
	ctx_arrow(ctx)->r12.s64 = -1114112;
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,65534
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 65534;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,37,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 37) & 0xFFFFFFFFFFFFFFFF;
	// ld ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
loc_821A62E4:
	// lbz ctx_arrow(ctx)->r11,10941(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a62fc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A62FC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a5fc0
	sub_821A5FC0(ctx, base);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A62FC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_821A6308) PPC_WEAK_FUNC(sub_821A6308);
PPC_FUNC_IMPL(__imp__sub_821A6308) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2;
	// stb ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r3)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r3.u32 + 10943, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// blr 
	return;
}

alias(__imp__sub_821A6318) PPC_WEAK_FUNC(sub_821A6318);
PPC_FUNC_IMPL(__imp__sub_821A6318) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f31,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,32767
	ctx_arrow(ctx)->r11.s64 = 2147418112;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, 0, xer);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bne ctx_arrow(ctx)->r6,0x821a634c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A634C;
	// lfs f1,80(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x821a636c
	goto loc_821A636C;
loc_821A634C:
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lfd f0,-14368(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fmul f31,f1,f0
	f31.f64 = ctx.f1.f64 * f0.f64;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// fdiv f0,f31,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = f31.f64 / ctx.f1.f64;
	// frsp f1,f0
	ctx.f1.f64 = double(float(f0.f64));
loc_821A636C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A6388) PPC_WEAK_FUNC(sub_821A6388);
PPC_FUNC_IMPL(__imp__sub_821A6388) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a63b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A63B0;
	// lis ctx_arrow(ctx)->r3,-32038
	ctx_arrow(ctx)->r3.s64 = -2099642368;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 23;
	// b 0x821a641c
	goto loc_821A641C;
loc_821A63B0:
	// lbz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,107
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 107, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a63f8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A63F8;
	// beq ctx_arrow(ctx)->r6,0x821a63e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A63E8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,97
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 97, xer);
	// beq ctx_arrow(ctx)->r6,0x821a63e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A63E8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,98
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 98, xer);
	// ble ctx_arrow(ctx)->r6,0x821a6418
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A6418;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,100
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 100, xer);
	// ble ctx_arrow(ctx)->r6,0x821a63e8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A63E8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-102
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -102;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a6418
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A6418;
loc_821A63E8:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-14360
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -14360;
	// bl 0x8240f93c
	__imp__sprintf(ctx, base);
	// b 0x821a6418
	goto loc_821A6418;
loc_821A63F8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,109
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 109, xer);
	// beq ctx_arrow(ctx)->r6,0x821a640c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A640C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,116
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 116, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6418
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6418;
	// b 0x821a63e8
	goto loc_821A63E8;
loc_821A640C:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64;
	// bl 0x821a92d0
	sub_821A92D0(ctx, base);
loc_821A6418:
	// lis ctx_arrow(ctx)->r3,730
	ctx_arrow(ctx)->r3.s64 = 47841280;
loc_821A641C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A6430) PPC_WEAK_FUNC(sub_821A6430);
PPC_FUNC_IMPL(__imp__sub_821A6430) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,16544(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,21644(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6460
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6460;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x821a6480
	goto loc_821A6480;
loc_821A6460:
	// lwz ctx_arrow(ctx)->r11,21632(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6498
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6498;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a647c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A647C;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,21632(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 21632);
loc_821A647C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821A6480:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821A6498:
	// lwz ctx_arrow(ctx)->r11,21636(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,21640(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a647c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A647C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5403
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 5403;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219efc8
	sub_8219EFC8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821a647c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A647C;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// li ctx_arrow(ctx)->r5,480
	ctx_arrow(ctx)->r5.s64 = 480;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,484
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 484;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lwz ctx_arrow(ctx)->r11,21636(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,484
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 484;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5403
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 5403;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,-4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + -4);
	// bl 0x821a0680
	sub_821A0680(&ctx);
	// lwz ctx_arrow(ctx)->r11,21636(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,21628(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,3,0,28
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 3) & 0xFFFFFFF8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bne ctx_arrow(ctx)->r6,0x821a6530
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6530;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x821a6534
	goto loc_821A6534;
loc_821A6530:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
loc_821A6534:
	// lwz ctx_arrow(ctx)->r10,16544(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,21636(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 21636);
	// stw ctx_arrow(ctx)->r10,21644(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 21644);
	// b 0x821a6480
	goto loc_821A6480;
}

alias(__imp__sub_821A6548) PPC_WEAK_FUNC(sub_821A6548);
PPC_FUNC_IMPL(__imp__sub_821A6548) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stfd f30,-40(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -40);
	// stfd f31,-32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,32767
	ctx_arrow(ctx)->r11.s64 = 2147418112;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,18
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 18, xer);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bgt ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r12,-32254
	ctx_arrow(ctx)->r12.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-14352
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -14352;
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r31,1,0,30
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 1) & 0xFFFFFFFE;
	// lhzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r0.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r12.u32 + ctx_arrow(ctx)->r0.u32);
	// lis ctx_arrow(ctx)->r12,-32230
	ctx_arrow(ctx)->r12.s64 = -2112225280;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,26020
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 26020;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r31.u64) {
	case 0:
		goto loc_821A65A4;
	case 1:
		goto loc_821A65C4;
	case 2:
		goto loc_821A65F0;
	case 3:
		goto loc_821A6608;
	case 4:
		goto loc_821A666C;
	case 5:
		goto loc_821A6688;
	case 6:
		goto loc_821A66C8;
	case 7:
		goto loc_821A676C;
	case 8:
		goto loc_821A67E8;
	case 9:
		goto loc_821A6838;
	case 10:
		goto loc_821A6898;
	case 11:
		goto loc_821A68CC;
	case 12:
		goto loc_821A6910;
	case 13:
		goto loc_821A6940;
	case 14:
		goto loc_821A696C;
	case 15:
		goto loc_821A6998;
	case 16:
		goto loc_821A69CC;
	case 17:
		goto loc_821A675C;
	case 18:
		goto loc_821A676C;
	default:
		__builtin_unreachable();
	}
loc_821A65A4:
	// lwz ctx_arrow(ctx)->r11,21556(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,21572(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// b 0x821a69f0
	goto loc_821A69F0;
loc_821A65C4:
	// lwz ctx_arrow(ctx)->r11,21556(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// lfs f0,21568(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fdivs f1,f0,f13
	ctx.f1.f64 = double(float(f0.f64 / ctx.f13.f64));
	// b 0x821a69f0
	goto loc_821A69F0;
loc_821A65F0:
	// lwz ctx_arrow(ctx)->r11,16544(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_821A65FC:
	// fcfid f0,f0
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(f0.s64);
	// frsp f1,f0
	ctx.f1.f64 = double(float(f0.f64));
	// b 0x821a69f0
	goto loc_821A69F0;
loc_821A6608:
	// lwz ctx_arrow(ctx)->r11,21592(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,21556(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
loc_821A6620:
	// fcfid f13,f13
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(ctx.f13.s64);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fdivs f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 / ctx.f13.f64));
loc_821A6634:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2944(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f12,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f13,f12
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f12.f64);
	// bge ctx_arrow(ctx)->r6,0x821a6658
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A6658;
	// fmr f0,f12
	f0.f64 = ctx.f12.f64;
	// b 0x821a6664
	goto loc_821A6664;
loc_821A6658:
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x821a6664
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A6664;
	// fmr f0,f13
	f0.f64 = ctx.f13.f64;
loc_821A6664:
	// fmr f1,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f0.f64;
	// b 0x821a69f0
	goto loc_821A69F0;
loc_821A666C:
	// lwz ctx_arrow(ctx)->r11,21596(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,21556(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821a6620
	goto loc_821A6620;
loc_821A6688:
	// lwz ctx_arrow(ctx)->r11,21556(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,21596(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,21592(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fdivs f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 / f0.f64));
	// b 0x821a6634
	goto loc_821A6634;
loc_821A66C8:
	// lwz ctx_arrow(ctx)->r11,21600(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,10896(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u32 & 0x7;
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x7;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r9.s64 + 16;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x7;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 16;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 16;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6,2,0,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 2) & 0xFFFFFFFC;
	// lwbrx ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r31.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// lwbrx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// lwbrx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = __builtin_bswap32(PPC_Read_U32(ctx,  ctx));
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, 0, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64;
	// beq ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A69EC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// stw ctx_arrow(ctx)->r11,21600(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 21600);
	// beq ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A69EC;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r30.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A69EC;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, ctx_arrow(ctx)->r30.u64, xer);
	// rldicr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32,63
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 32) & 0xFFFFFFFFFFFFFFFF;
	// bgt ctx_arrow(ctx)->r6,0x821a6740
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A6740;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
loc_821A6740:
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, ctx_arrow(ctx)->r10.u64, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a674c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A674C;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r11.u64;
loc_821A674C:
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r10.s64;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r30.s64;
	// b 0x821a6824
	goto loc_821A6824;
loc_821A675C:
	// lwz ctx_arrow(ctx)->r11,21648(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821a65fc
	goto loc_821A65FC;
loc_821A676C:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 7, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// ld ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,492(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// bne ctx_arrow(ctx)->r6,0x821a67b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A67B8;
	// ld ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r11.s64;
loc_821A67B8:
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r3.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A69EC;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// fdiv f0,f31,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = f31.f64 / ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f13,f0
	ctx.f13.f64 = double(float(f0.f64));
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fsubs f13,f0,f13
	ctx.f13.f64 = double(float(f0.f64 - ctx.f13.f64));
	// b 0x821a6634
	goto loc_821A6634;
loc_821A67E8:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,124(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A69EC;
	// ld ctx_arrow(ctx)->r10,132(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
loc_821A6818:
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
loc_821A6824:
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// fdiv f0,f31,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = f31.f64 / ctx.f1.f64;
loc_821A6830:
	// frsp f13,f0
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(f0.f64));
	// b 0x821a6634
	goto loc_821A6634;
loc_821A6838:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r11,124(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r10,604(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r3.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A69EC;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// ld ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r10,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// ld ctx_arrow(ctx)->r11,140(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r10,620(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// fsub f30,f31,f1
	ctx.fpscr.disableFlushMode();
	f30.f64 = f31.f64 - ctx.f1.f64;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// bl 0x823ef0a0
	sub_823EF0A0(ctx, base);
	// fsub f0,f30,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = f30.f64 - ctx.f1.f64;
	// fdiv f0,f0,f31
	f0.f64 = f0.f64 / f31.f64;
	// b 0x821a6830
	goto loc_821A6830;
loc_821A6898:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,124(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,604(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r31.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a69ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A69EC;
	// ld ctx_arrow(ctx)->r10,140(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,620(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821a6818
	goto loc_821A6818;
loc_821A68CC:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,444(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,924(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// ld ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// ld ctx_arrow(ctx)->r10,436(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,916(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
loc_821A6908:
	// bl 0x821a6318
	sub_821A6318(ctx, base);
	// b 0x821a69f0
	goto loc_821A69F0;
loc_821A6910:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// ld ctx_arrow(ctx)->r10,452(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,932(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
loc_821A6938:
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// b 0x821a6908
	goto loc_821A6908;
loc_821A6940:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// ld ctx_arrow(ctx)->r10,236(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,716(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821a6938
	goto loc_821A6938;
loc_821A696C:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// ld ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,572(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821a6938
	goto loc_821A6938;
loc_821A6998:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,460(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,940(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
loc_821A69B4:
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r10.s64;
	// ld ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// rldicr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r9,1,62
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u64, 1) & 0xFFFFFFFFFFFFFFFE;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// b 0x821a6908
	goto loc_821A6908;
loc_821A69CC:
	// bl 0x821a6430
	sub_821A6430(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a69ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A69EC;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-10804
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -10804;
	// ld ctx_arrow(ctx)->r10,468(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,948(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821a69b4
	goto loc_821A69B4;
loc_821A69EC:
	// lfs f1,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
loc_821A69F0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f30,-40(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-32(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A6A10) PPC_WEAK_FUNC(sub_821A6A10);
PPC_FUNC_IMPL(__imp__sub_821A6A10) {
	PPC_FUNC_PROLOGUE();
	// b 0x8219d958
	sub_8219D958(ctx, base);
	return;
}

alias(__imp__sub_821A6A18) PPC_WEAK_FUNC(sub_821A6A18);
PPC_FUNC_IMPL(__imp__sub_821A6A18) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,40
	ctx_arrow(ctx)->r5.s64 = 40;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// lbz ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lis ctx_arrow(ctx)->r30,-32256
	ctx_arrow(ctx)->r30.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r9,16544(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27152
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 27152;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// stw ctx_arrow(ctx)->r31,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// li ctx_arrow(ctx)->r9,6274
	ctx_arrow(ctx)->r9.s64 = 6274;
	// stw ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stb ctx_arrow(ctx)->r10,10943(ctx_arrow(ctx)->r31)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10943));
	// lwz ctx_arrow(ctx)->r10,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r3,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6aa8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6AA8;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r3,82
	ctx_arrow(ctx)->r3.s64 = 82;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r10,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A6AA8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6b00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6B00;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1772(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ae0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6AE0;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 0);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6b00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6B00;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6b00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6B00;
	// b 0x821a6af0
	goto loc_821A6AF0;
loc_821A6AE0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6b00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6B00;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A6AF0:
	// lwz ctx_arrow(ctx)->r4,16544(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,46
	ctx_arrow(ctx)->r3.s64 = 46;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821A6B00:
	// lbz ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// stb ctx_arrow(ctx)->r11,10943(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10943, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A6B28) PPC_WEAK_FUNC(sub_821A6B28);
PPC_FUNC_IMPL(__imp__sub_821A6B28) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1768(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ce0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6CE0;
	// rotlwi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// lwz ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ce0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6CE0;
	// ld ctx_arrow(ctx)->r11,10880(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ce0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6CE0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,34
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 34, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a6c04
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A6C04;
	// beq ctx_arrow(ctx)->r6,0x821a6bfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6BFC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x821a6bec
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A6BEC;
	// beq ctx_arrow(ctx)->r6,0x821a6bec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6BEC;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 16, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6bc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6BC0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,17
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 17, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6ce0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6CE0;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 6, xer);
	// lwz ctx_arrow(ctx)->r10,-9796(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// slw ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r9.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// or ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 | ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r10,-9796(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -9796);
	// bne ctx_arrow(ctx)->r6,0x821a6ce0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6CE0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r9,21608(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21608);
	// stw ctx_arrow(ctx)->r11,21600(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21600);
	// stw ctx_arrow(ctx)->r11,21604(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21604);
	// b 0x821a6ce0
	goto loc_821A6CE0;
loc_821A6BC0:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 6, xer);
	// slw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r9.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r4, 0, BINARY_OP_U8(ctx_arrow(ctx)->r4, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r11.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r4) & 0x3F)), 0));
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// lwz ctx_arrow(ctx)->r10,-9796(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// andc ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ~ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r10,-9796(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -9796);
	// bne ctx_arrow(ctx)->r6,0x821a6ce0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6CE0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821A6BE4:
	// stw ctx_arrow(ctx)->r11,21608(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21608);
	// b 0x821a6ce0
	goto loc_821A6CE0;
loc_821A6BEC:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// stw ctx_arrow(ctx)->r11,-9796(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -9796);
	// b 0x821a6be4
	goto loc_821A6BE4;
loc_821A6BFC:
	// stw ctx_arrow(ctx)->r4,21656(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21656);
	// b 0x821a6ce0
	goto loc_821A6CE0;
loc_821A6C04:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,224
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 224, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ca8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6CA8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,225
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 225, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ca8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6CA8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,226
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 226, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ca8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6CA8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,255
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 255, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6ce0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6CE0;
	// lis ctx_arrow(ctx)->r28,-31991
	ctx_arrow(ctx)->r28.s64 = -2096562176;
	// lwz ctx_arrow(ctx)->r11,-9796(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a6c64
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6C64;
	// lwz ctx_arrow(ctx)->r11,21556(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lfs f0,21572(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 131072;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfd f13,80(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// lfs f0,14108(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f1,f13,f0
	ctx.f1.f64 = double(float(ctx.f13.f64 * f0.f64));
	// bl 0x8235eab8
	sub_8235EAB8(ctx, base);
loc_821A6C64:
	// lis ctx_arrow(ctx)->r11,-32019
	ctx_arrow(ctx)->r11.s64 = -2098397184;
	// li ctx_arrow(ctx)->r29,17
	ctx_arrow(ctx)->r29.s64 = 17;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29400
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 29400;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 8;
loc_821A6C74:
	// lwz ctx_arrow(ctx)->r11,-8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,-9796(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r10.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a6c98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6C98;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a6548
	sub_821A6548(ctx, base);
	// lwz ctx_arrow(ctx)->r3,-4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235eab8
	sub_8235EAB8(ctx, base);
loc_821A6C98:
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,12
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 12;
	// bne 0x821a6c74
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A6C74;
	// b 0x821a6ce0
	goto loc_821A6CE0;
loc_821A6CA8:
	// lwz ctx_arrow(ctx)->r11,21516(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6ce0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6CE0;
	// bl 0x8235eaa8
	sub_8235EAA8(ctx, base);
	// lwz ctx_arrow(ctx)->r11,10888(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r3.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6ce0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6CE0;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a6cdc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A6CDC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821A6CDC:
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
loc_821A6CE0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A6CE8) PPC_WEAK_FUNC(sub_821A6CE8);
PPC_FUNC_IMPL(__imp__sub_821A6CE8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r31,-32256
	ctx_arrow(ctx)->r31.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r30,-32256
	ctx_arrow(ctx)->r30.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1772(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6d2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6D2C;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x821a6d58
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6D58;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x821a6d58
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6D58;
	// b 0x821a6d40
	goto loc_821A6D40;
loc_821A6D2C:
	// lwz ctx_arrow(ctx)->r10,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x821a6d58
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6D58;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A6D40:
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// li ctx_arrow(ctx)->r3,28
	ctx_arrow(ctx)->r3.s64 = 28;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,25480
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 25480;
	// mtctr ctx_arrow(ctx)->r10
	ctr.u64 = ctx_arrow(ctx)->r10.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,1772(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A6D58:
	// lis ctx_arrow(ctx)->r10,-32230
	ctx_arrow(ctx)->r10.s64 = -2112225280;
	// li ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27432
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 27432;
	// stw ctx_arrow(ctx)->r9,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r9,-31991
	ctx_arrow(ctx)->r9.s64 = -2096562176;
	// stw ctx_arrow(ctx)->r10,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// stw ctx_arrow(ctx)->r10,-9796(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -9796);
	// beq ctx_arrow(ctx)->r6,0x821a6da0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6DA0;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6dc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6DC4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6dc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6DC4;
	// b 0x821a6db4
	goto loc_821A6DB4;
loc_821A6DA0:
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6dc4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6DC4;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A6DB4:
	// li ctx_arrow(ctx)->r3,47
	ctx_arrow(ctx)->r3.s64 = 47;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821A6DC4:
	// lis ctx_arrow(ctx)->r11,-32230
	ctx_arrow(ctx)->r11.s64 = -2112225280;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,25352
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 25352;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6df8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6DF8;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// li ctx_arrow(ctx)->r3,66
	ctx_arrow(ctx)->r3.s64 = 66;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821A6DF8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821A6E00) PPC_WEAK_FUNC(sub_821A6E00);
PPC_FUNC_IMPL(__imp__sub_821A6E00) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a6e34
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A6E34;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A6E34:
	// lis ctx_arrow(ctx)->r10,-16382
	ctx_arrow(ctx)->r10.s64 = -1073610752;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,22528
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 | 22528;
	// lis ctx_arrow(ctx)->r10,-32768
	ctx_arrow(ctx)->r10.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64 | 3;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 12) & 0xFFF;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lis ctx_arrow(ctx)->r9,-8531
	ctx_arrow(ctx)->r9.s64 = -559087616;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,48879
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 48879;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A6E90) PPC_WEAK_FUNC(sub_821A6E90);
PPC_FUNC_IMPL(__imp__sub_821A6E90) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r4,70
	ctx_arrow(ctx)->r4.s64 = 70;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a6eb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6EB8;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
loc_821A6EB8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A6ED0) PPC_WEAK_FUNC(sub_821A6ED0);
PPC_FUNC_IMPL(__imp__sub_821A6ED0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,21632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6f94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6F94;
	// lwz ctx_arrow(ctx)->r11,21640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6f08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6F08;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// b 0x821a6f0c
	goto loc_821A6F0C;
loc_821A6F08:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
loc_821A6F0C:
	// lwz ctx_arrow(ctx)->r10,21636(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a6f94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A6F94;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a6f28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A6F28;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
loc_821A6F28:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a6f44
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A6F44;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821A6F44:
	// lis ctx_arrow(ctx)->r10,-16382
	ctx_arrow(ctx)->r10.s64 = -1073610752;
	// lis ctx_arrow(ctx)->r9,-32768
	ctx_arrow(ctx)->r9.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,22528
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 22528;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 3;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 2) & 0xFFFFFFFC;
	// lis ctx_arrow(ctx)->r7,-8531
	ctx_arrow(ctx)->r7.s64 = -559087616;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,48879
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 48879;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,21628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,20,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
loc_821A6F94:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A6FB0) PPC_WEAK_FUNC(sub_821A6FB0);
PPC_FUNC_IMPL(__imp__sub_821A6FB0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-384(ctx_arrow(ctx)->r1)
	ea = -384 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// lwz ctx_arrow(ctx)->r9,16704(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,21,21
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x400;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a715c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A715C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a6fec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A6FEC;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a6ff0
	goto loc_821A6FF0;
loc_821A6FEC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A6FF0:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r3,16708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16708);
loc_821A7000:
	// stw ctx_arrow(ctx)->r30,16704(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16704);
loc_821A7004:
	// lwz ctx_arrow(ctx)->r11,21564(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lwz ctx_arrow(ctx)->r11,21560(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mftb ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = __rdtsc();
	// ld ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// cmpdi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int64_t>(ctx_arrow(ctx)->r10.s64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a7038
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A7038;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// stw ctx_arrow(ctx)->r11,21556(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21556);
loc_821A7038:
	// ld ctx_arrow(ctx)->r9,21576(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r7,21584(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U64(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,21632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r30,21576(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21576);
	// stw ctx_arrow(ctx)->r9,21592(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21592);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// stw ctx_arrow(ctx)->r10,21564(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21564);
	// stw ctx_arrow(ctx)->r8,21560(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21560);
	// stw ctx_arrow(ctx)->r7,21596(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21596);
	// std ctx_arrow(ctx)->r30,21584(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21584);
	// bne ctx_arrow(ctx)->r6,0x821a71c0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A71C0;
	// li ctx_arrow(ctx)->r5,240
	ctx_arrow(ctx)->r5.s64 = 240;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// li ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = 8;
	// stw ctx_arrow(ctx)->r11,156(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 156);
	// li ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r11.s64 = 13;
	// stw ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// li ctx_arrow(ctx)->r11,37
	ctx_arrow(ctx)->r11.s64 = 37;
	// stw ctx_arrow(ctx)->r11,164(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 164);
	// li ctx_arrow(ctx)->r11,19
	ctx_arrow(ctx)->r11.s64 = 19;
	// stw ctx_arrow(ctx)->r11,312(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 312);
	// stw ctx_arrow(ctx)->r11,316(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 316);
	// li ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = 6;
	// stw ctx_arrow(ctx)->r11,320(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 320);
	// li ctx_arrow(ctx)->r11,25
	ctx_arrow(ctx)->r11.s64 = 25;
	// stw ctx_arrow(ctx)->r11,324(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 324);
	// li ctx_arrow(ctx)->r11,26
	ctx_arrow(ctx)->r11.s64 = 26;
	// stw ctx_arrow(ctx)->r11,328(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 328);
	// li ctx_arrow(ctx)->r11,200
	ctx_arrow(ctx)->r11.s64 = 200;
	// stw ctx_arrow(ctx)->r11,212(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 212);
	// li ctx_arrow(ctx)->r11,30
	ctx_arrow(ctx)->r11.s64 = 30;
	// stw ctx_arrow(ctx)->r11,140(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 140);
	// bne 0x821a70ec
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A70EC;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219e840
	sub_8219E840(ctx, base);
loc_821A70EC:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,21612
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 21612;
	// li ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = 4;
loc_821A70F4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7110
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7110;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219e928
	sub_8219E928(ctx, base);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
loc_821A7110:
	// addic. ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,-1
	xer.ca = ctx_arrow(ctx)->r28.u32 > 0;
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r28.s32, 0, xer);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// bne 0x821a70f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A70F4;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219e9c0
	sub_8219E9C0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,21628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,21636(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21636);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r30,21640(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21640);
	// bne ctx_arrow(ctx)->r6,0x821a7150
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7150;
	// lis ctx_arrow(ctx)->r4,-23936
	ctx_arrow(ctx)->r4.s64 = -1568669696;
	// li ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r3.s64 = 32;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// stw ctx_arrow(ctx)->r3,21628(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21628);
loc_821A7150:
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r11,21632(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21632);
	// b 0x821a7218
	goto loc_821A7218;
loc_821A715C:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,0,23,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x100;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821a7004
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A7004;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a7180
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A7180;
	// lwz ctx_arrow(ctx)->r10,32(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821a7184
	goto loc_821A7184;
loc_821A7180:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A7184:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r9,20,4,11
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 20) & 0xFF00000;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-14312
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -14312;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// stw ctx_arrow(ctx)->r3,16708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16708);
	// blt 0x821a7000
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821A7000;
	// lwz ctx_arrow(ctx)->r11,16704(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,10,23,23
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 10) & 0x100) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFEFF);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,10,21,21
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 10) & 0x400) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFFFFBFF);
	// stw ctx_arrow(ctx)->r11,16704(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16704);
	// b 0x821a7004
	goto loc_821A7004;
loc_821A71C0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7218
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7218;
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a71e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A71E0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219e840
	sub_8219E840(ctx, base);
loc_821A71E0:
	// lwz ctx_arrow(ctx)->r11,21640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x821a71f0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A71F0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 1;
loc_821A71F0:
	// lwz ctx_arrow(ctx)->r11,21636(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a7218
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A7218;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,5403
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 5403;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219efe0
	sub_8219EFE0(ctx, base);
	// stw ctx_arrow(ctx)->r30,21640(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 21640);
loc_821A7218:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a6a18
	sub_821A6A18(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1772(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a724c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A724C;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a724c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A724C;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821A724C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,384
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 384;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A7258) PPC_WEAK_FUNC(sub_821A7258);
PPC_FUNC_IMPL(__imp__sub_821A7258) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-352(ctx_arrow(ctx)->r1)
	ea = -352 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r5,255
	ctx_arrow(ctx)->r5.s64 = 255;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,81
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 81;
	// stb ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 80, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// li ctx_arrow(ctx)->r5,256
	ctx_arrow(ctx)->r5.s64 = 256;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a72c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A72C0;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r3,84
	ctx_arrow(ctx)->r3.s64 = 84;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// b 0x821a72c4
	goto loc_821A72C4;
loc_821A72C0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821A72C4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a72d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A72D4;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821a72dc
	goto loc_821A72DC;
loc_821A72D4:
	// lis ctx_arrow(ctx)->r3,-32768
	ctx_arrow(ctx)->r3.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 16389;
loc_821A72DC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A72F0) PPC_WEAK_FUNC(sub_821A72F0);
PPC_FUNC_IMPL(__imp__sub_821A72F0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7364
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7364;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7364
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7364;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7364
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7364;
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7364
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7364;
	// stw ctx_arrow(ctx)->r4,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stw ctx_arrow(ctx)->r5,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
loc_821A7364:
	// lwz ctx_arrow(ctx)->r8,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// lwz ctx_arrow(ctx)->r8,92(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// subf ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r9.s64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r11.u64;
	// bne 0x821a7388
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A7388;
	// lwz ctx_arrow(ctx)->r27,21524(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A7388:
	// lwz ctx_arrow(ctx)->r30,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne 0x821a73d0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A73D0;
	// lwz ctx_arrow(ctx)->r11,13572(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mullw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.s64 = int64_t(ctx_arrow(ctx)->r27.s32) * int64_t(ctx_arrow(ctx)->r29.s32);
	// divwu ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u32 = ctx_arrow(ctx)->r9.u32 / ctx_arrow(ctx)->r10.u32;
	// twllei ctx_arrow(ctx)->r10,0
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a73cc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A73CC;
	// bl 0x8240fb2c
	__imp__VdQueryVideoFlags(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a73cc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A73CC;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r29.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a73cc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A73CC;
	// lwz ctx_arrow(ctx)->r11,21528(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821a73d0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A73D0;
loc_821A73CC:
	// lwz ctx_arrow(ctx)->r30,21528(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A73D0:
	// li ctx_arrow(ctx)->r5,56
	ctx_arrow(ctx)->r5.s64 = 56;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r27,16(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 16);
	// stw ctx_arrow(ctx)->r30,20(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 20);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// stw ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4);
	// stw ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 8);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 12);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A7418) PPC_WEAK_FUNC(sub_821A7418);
PPC_FUNC_IMPL(__imp__sub_821A7418) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 12);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 16);
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 20);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7464
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7464;
	// stw ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 24);
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 40);
	// b 0x821a7470
	goto loc_821A7470;
loc_821A7464:
	// li ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.s64 = 3;
	// stw ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 24);
	// stw ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 40);
loc_821A7470:
	// stw ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 28);
	// stw ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 32);
	// stw ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 36);
	// stw ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 44);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 48);
	// stw ctx_arrow(ctx)->r11,52(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 52);
	// blr 
	return;
}

alias(__imp__sub_821A7490) PPC_WEAK_FUNC(sub_821A7490);
PPC_FUNC_IMPL(__imp__sub_821A7490) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x821a72f0
	sub_821A72F0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,21524(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,152
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 152;
	// lwz ctx_arrow(ctx)->r10,21528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r5,56
	ctx_arrow(ctx)->r5.s64 = 56;
	// sth ctx_arrow(ctx)->r30,144(ctx_arrow(ctx)->r1)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r1.u32 + 144, ctx_arrow(ctx)->r30, 0);
	// sth ctx_arrow(ctx)->r29,146(ctx_arrow(ctx)->r1)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r1.u32 + 146, ctx_arrow(ctx)->r29, 0);
	// sth ctx_arrow(ctx)->r11,148(ctx_arrow(ctx)->r1)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r1.u32 + 148, ctx_arrow(ctx)->r11, 0);
	// sth ctx_arrow(ctx)->r10,150(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 150, ctx_arrow(ctx)->r10.u16);
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// bl 0x8240fb3c
	__imp__VdCallGraphicsNotificationRoutines(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821A74F0) PPC_WEAK_FUNC(sub_821A74F0);
PPC_FUNC_IMPL(__imp__sub_821A74F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// vrfim v11,v1
	ctx.fpscr.enableFlushMode();
	_mm_store_ps(ctx.v11.f32, _mm_round_ps(_mm_load_ps(ctx.v1.f32), _MM_FROUND_TO_NEG_INF | _MM_FROUND_NO_EXC));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14272
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14272;
	// lvx128 v0,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// vspltw v12,v0,0
	_mm_store_si128((__m128i*)ctx.v12.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v0.u32), 0xFF));
	// vspltw v10,v0,1
	_mm_store_si128((__m128i*)ctx.v10.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v0.u32), 0xAA));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14288
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14288;
	// vspltw v7,v0,2
	_mm_store_si128((__m128i*)ctx.v7.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v0.u32), 0x55));
	// vspltw v5,v0,3
	_mm_store_si128((__m128i*)ctx.v5.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v0.u32), 0x0));
	// vsubfp v0,v1,v11
	_mm_store_ps(ctx.v0.f32, _mm_sub_ps(_mm_load_ps(ctx.v1.f32), _mm_load_ps(ctx.v11.f32)));
	// vexptefp v11,v11
	ctx.v11.f32[0] = exp2f(ctx.v11.f32[0]);
	ctx.v11.f32[1] = exp2f(ctx.v11.f32[1]);
	ctx.v11.f32[2] = exp2f(ctx.v11.f32[2]);
	ctx.v11.f32[3] = exp2f(ctx.v11.f32[3]);
	// lvx128 v13,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// vspltw v8,v13,1
	_mm_store_si128((__m128i*)ctx.v8.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v13.u32), 0xAA));
	// vspltw v9,v13,0
	_mm_store_si128((__m128i*)ctx.v9.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v13.u32), 0xFF));
	// vspltw v6,v13,2
	_mm_store_si128((__m128i*)ctx.v6.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v13.u32), 0x55));
	// vspltw v4,v13,3
	_mm_store_si128((__m128i*)ctx.v4.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v13.u32), 0x0));
	// vmaddfp v10,v0,v10,v12
	_mm_store_ps(ctx.v10.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v10.f32)), _mm_load_ps(ctx.v12.f32)));
	// vmulfp128 v13,v0,v0
	_mm_store_ps(ctx.v13.f32, _mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v0.f32)));
	// vmaddfp v9,v0,v8,v9
	_mm_store_ps(ctx.v9.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v8.f32)), _mm_load_ps(ctx.v9.f32)));
	// vmulfp128 v0,v0,v13
	_mm_store_ps(ctx.v0.f32, _mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v13.f32)));
	// vmaddfp v10,v13,v7,v10
	_mm_store_ps(ctx.v10.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v7.f32)), _mm_load_ps(ctx.v10.f32)));
	// vmaddfp v9,v13,v6,v9
	_mm_store_ps(ctx.v9.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v6.f32)), _mm_load_ps(ctx.v9.f32)));
	// vmulfp128 v13,v13,v13
	_mm_store_ps(ctx.v13.f32, _mm_mul_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v13.f32)));
	// vmaddfp v10,v0,v5,v10
	_mm_store_ps(ctx.v10.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v5.f32)), _mm_load_ps(ctx.v10.f32)));
	// vmaddfp v0,v0,v4,v9
	_mm_store_ps(ctx.v0.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v4.f32)), _mm_load_ps(ctx.v9.f32)));
	// vmaddfp v0,v13,v0,v10
	_mm_store_ps(ctx.v0.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v0.f32)), _mm_load_ps(ctx.v10.f32)));
	// vor v13,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// vor v10,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// vrefp v0,v0
	_mm_store_ps(ctx.v0.f32, _mm_div_ps(_mm_set1_ps(1), _mm_load_ps(ctx.v0.f32)));
	// vnmsubfp v13,v13,v0,v12
	_mm_store_ps(ctx.v13.f32, _mm_xor_ps(_mm_sub_ps(_mm_mul_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v0.f32)), _mm_load_ps(ctx.v12.f32)), _mm_castsi128_ps(_mm_set1_epi32(int(0x80000000)))));
	// vor v8,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v8), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// vmaddfp v0,v0,v13,v0
	_mm_store_ps(ctx.v0.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v13.f32)), _mm_load_ps(ctx.v0.f32)));
	// vnmsubfp v13,v10,v0,v12
	_mm_store_ps(ctx.v13.f32, _mm_xor_ps(_mm_sub_ps(_mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(ctx.v0.f32)), _mm_load_ps(ctx.v12.f32)), _mm_castsi128_ps(_mm_set1_epi32(int(0x80000000)))));
	// vcmpeqfp v12,v0,v0
	_mm_store_ps(ctx.v12.f32, _mm_cmpeq_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v0.f32)));
	// vmaddfp v0,v0,v13,v0
	_mm_store_ps(ctx.v0.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v13.f32)), _mm_load_ps(ctx.v0.f32)));
	// vsel v0,v8,v0,v12
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_andnot_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8))), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)))));
	// vmulfp128 v1,v11,v0
	_mm_store_ps(ctx.v1.f32, _mm_mul_ps(_mm_load_ps(ctx.v11.f32), _mm_load_ps(ctx.v0.f32)));
	// blr 
	return;
}

alias(__imp__sub_821A7590) PPC_WEAK_FUNC(sub_821A7590);
PPC_FUNC_IMPL(__imp__sub_821A7590) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,292
	ctx_arrow(ctx)->r11.s64 = 19136512;
	// stfs f1,-48(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,-48
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + -48;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,16237
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 | 16237;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,6588(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f13,-32(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2160
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2160;
	// lvx128 v12,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2176
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2176;
	// lvx128 v11,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2144
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2144;
	// lvx128 v10,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// lwz ctx_arrow(ctx)->r11,-48(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,30,1,31
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 30) & 0x7FFFFFFF) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF80000000);
	// stw ctx_arrow(ctx)->r11,-48(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// lfs f13,-48(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f12,f13,f1
	ctx.f12.f64 = double(float(ctx.f13.f64 + ctx.f1.f64));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f13,-20188(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmuls f13,f12,f13
	ctx.f13.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// fctiwz f13,f13
	ctx.f13.s64 = (ctx.f13.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&ctx.f13.f64));
	// stfiwx f13,0,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// lwa ctx_arrow(ctx)->r11,-48(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.s64 = int32_t(PPC_Read_U32(ctx,  ctx));
	// std ctx_arrow(ctx)->r11,-48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -48);
	// lfd f13,-48(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fnmsubs f0,f13,f0,f1
	f0.f64 = double(float(-(ctx.f13.f64 * f0.f64 - ctx.f1.f64)));
	// stfs f0,-28(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -28);
	// fmuls f13,f0,f0
	ctx.f13.f64 = double(float(f0.f64 * f0.f64));
	// stfs f13,-24(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,-20(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -20);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -32;
	// lvx128 v0,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -16;
	// vspltw v13,v0,1
	_mm_store_si128((__m128i*)ctx.v13.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v0.u32), 0xAA));
	// vmulfp128 v0,v0,v0
	ctx.fpscr.enableFlushModeUnconditional();
	_mm_store_ps(ctx.v0.f32, _mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v0.f32)));
	// vmulfp128 v0,v0,v13
	_mm_store_ps(ctx.v0.f32, _mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v13.f32)));
	// vspltw v9,v0,3
	_mm_store_si128((__m128i*)ctx.v9.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v0.u32), 0x0));
	// vmsum4fp128 v10,v0,v10
	_mm_store_ps(ctx.v10.f32, _mm_dp_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v10.f32), 0xFF));
	// vmulfp128 v13,v9,v13
	_mm_store_ps(ctx.v13.f32, _mm_mul_ps(_mm_load_ps(ctx.v9.f32), _mm_load_ps(ctx.v13.f32)));
	// stvx128 v10,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)), _mm_load_si128((__m128i*)VectorMaskL)));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-32
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -32;
	// vmulfp128 v0,v0,v13
	_mm_store_ps(ctx.v0.f32, _mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v13.f32)));
	// vmulfp128 v13,v0,v13
	_mm_store_ps(ctx.v13.f32, _mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v13.f32)));
	// vmsum4fp128 v0,v0,v12
	_mm_store_ps(ctx.v0.f32, _mm_dp_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v12.f32), 0xFF));
	// vmsum4fp128 v13,v13,v11
	_mm_store_ps(ctx.v13.f32, _mm_dp_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v11.f32), 0xFF));
	// stvx128 v0,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)), _mm_load_si128((__m128i*)VectorMaskL)));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-48
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -48;
	// lfs f0,-32(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushModeUnconditional();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// stvx128 v13,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)VectorMaskL)));
	// lfs f13,-48(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// lfs f13,-16(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fadds f1,f0,f13
	ctx.f1.f64 = double(float(f0.f64 + ctx.f13.f64));
	// blr 
	return;
}

alias(__imp__sub_821A7690) PPC_WEAK_FUNC(sub_821A7690);
PPC_FUNC_IMPL(__imp__sub_821A7690) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCVRegister v24{};
	PPCVRegister v25{};
	PPCVRegister v26{};
	PPCVRegister v27{};
	PPCVRegister v28{};
	PPCVRegister v29{};
	PPCVRegister v30{};
	PPCVRegister v31{};
	PPCRegister temp{};
	PPCVRegister vTemp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f1,20(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 20);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,-32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + -32;
	// stfs f2,28(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f2.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 28);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,-28
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + -28;
	// vspltisw v13,0
	_mm_store_si128((__m128i*)ctx.v13.u32, _mm_set1_epi32(int(0x0)));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,20
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 20;
	// vspltisw v11,-1
	_mm_store_si128((__m128i*)ctx.v11.u32, _mm_set1_epi32(int(0xFFFFFFFF)));
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,-20
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + -20;
	// vspltisw v4,-9
	_mm_store_si128((__m128i*)ctx.v4.u32, _mm_set1_epi32(int(0xFFFFFFF7)));
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// stfs f0,-32(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// stfs f0,-28(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -28);
	// vslw v3,v11,v11
	ctx.v3.u32[0] = ctx.v11.u32[0] << (ctx.PPCRegister_u8(v11)[0] & 0x1F);
	ctx.v3.u32[1] = ctx.v11.u32[1] << (ctx.PPCRegister_u8(v11)[4] & 0x1F);
	ctx.v3.u32[2] = ctx.v11.u32[2] << (ctx.PPCRegister_u8(v11)[8] & 0x1F);
	ctx.v3.u32[3] = ctx.v11.u32[3] << (ctx.PPCRegister_u8(v11)[12] & 0x1F);
	// lvlx v0,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,-20
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + -20;
	// lvlx v12,0,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,28
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 28;
	// stfs f0,-24(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v10,0,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r11.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// lvlx v0,0,ctx_arrow(ctx)->r8
	temp.u32 = ctx_arrow(ctx)->r8.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v0,v10,4,3
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v10.f32), 57), 4));
	// stfs f0,-20(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -20);
	// lvlx v10,0,ctx_arrow(ctx)->r7
	temp.u32 = ctx_arrow(ctx)->r7.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,-20(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -20);
	// stfs f0,-24(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// lvlx v9,0,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r11.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v9), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// lvlx v8,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v8), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lvlx v7,0,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v7), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v8,v10,4,3
	_mm_store_ps(ctx.v8.f32, _mm_blend_ps(_mm_load_ps(ctx.v8.f32), _mm_permute_ps(_mm_load_ps(ctx.v10.f32), 57), 4));
	// vrlimi128 v7,v9,4,3
	_mm_store_ps(ctx.v7.f32, _mm_blend_ps(_mm_load_ps(ctx.v7.f32), _mm_permute_ps(_mm_load_ps(ctx.v9.f32), 57), 4));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14240
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14240;
	// vor v12,v8,v8
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8)));
	// vor v10,v7,v7
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v7)));
	// vor v8,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v8), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// lvx128 v9,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v9), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// vspltw v7,v9,0
	_mm_store_si128((__m128i*)ctx.v7.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0xFF));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// vspltw v5,v9,1
	_mm_store_si128((__m128i*)ctx.v5.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0xAA));
	// vrlimi128 v10,v12,3,2
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// vupkd3d128 v12,v13,4
	temp.f32 = 3.0f;
	temp.s32 += ctx.PPCRegister_s16(v13)[1];
	vTemp.f32[3] = temp.f32;
	temp.f32 = 3.0f;
	temp.s32 += ctx.PPCRegister_s16(v13)[0];
	vTemp.f32[2] = temp.f32;
	vTemp.f32[1] = 0.0f;
	vTemp.f32[0] = 1.0f;
	ctx.v12 = vTemp;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14256
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14256;
	// vspltw v29,v9,2
	_mm_store_si128((__m128i*)v29.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0x55));
	// vspltw v6,v12,3
	_mm_store_si128((__m128i*)ctx.v6.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v12.u32), 0x0));
	// vandc v12,v8,v3
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vslw v10,v11,v4
	ctx.v10.u32[0] = ctx.v11.u32[0] << (ctx.PPCRegister_u8(v4)[0] & 0x1F);
	ctx.v10.u32[1] = ctx.v11.u32[1] << (ctx.PPCRegister_u8(v4)[4] & 0x1F);
	ctx.v10.u32[2] = ctx.v11.u32[2] << (ctx.PPCRegister_u8(v4)[8] & 0x1F);
	ctx.v10.u32[3] = ctx.v11.u32[3] << (ctx.PPCRegister_u8(v4)[12] & 0x1F);
	// vlogefp v2,v12
	ctx.fpscr.enableFlushModeUnconditional();
	ctx.v2.f32[0] = log2f(ctx.v12.f32[0]);
	ctx.v2.f32[1] = log2f(ctx.v12.f32[1]);
	ctx.v2.f32[2] = log2f(ctx.v12.f32[2]);
	ctx.v2.f32[3] = log2f(ctx.v12.f32[3]);
	// vsel v10,v12,v6,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_or_si128(_mm_andnot_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12))), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v6)))));
	// vsubfp v12,v10,v6
	_mm_store_ps(ctx.v12.f32, _mm_sub_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(ctx.v6.f32)));
	// vrfim v10,v2
	_mm_store_ps(ctx.v10.f32, _mm_round_ps(_mm_load_ps(ctx.v2.f32), _MM_FROUND_TO_NEG_INF | _MM_FROUND_NO_EXC));
	// vmaddfp v5,v12,v5,v7
	_mm_store_ps(ctx.v5.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v5.f32)), _mm_load_ps(ctx.v7.f32)));
	// lvx128 v7,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v7), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// vspltw v30,v7,1
	_mm_store_si128((__m128i*)v30.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0xAA));
	// vspltw v31,v7,0
	_mm_store_si128((__m128i*)v31.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0xFF));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14272
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14272;
	// vspltw v28,v7,2
	_mm_store_si128((__m128i*)v28.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0x55));
	// vspltw v27,v7,3
	_mm_store_si128((__m128i*)v27.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0x0));
	// vmulfp128 v1,v10,v0
	_mm_store_ps(ctx.v1.f32, _mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(ctx.v0.f32)));
	// vmulfp128 v10,v12,v12
	_mm_store_ps(ctx.v10.f32, _mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v12.f32)));
	// vmaddfp v31,v12,v30,v31
	_mm_store_ps(v31.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(v30.f32)), _mm_load_ps(v31.f32)));
	// vmaddfp v30,v10,v29,v5
	_mm_store_ps(v30.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(v29.f32)), _mm_load_ps(ctx.v5.f32)));
	// vspltw v29,v9,3
	_mm_store_si128((__m128i*)v29.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0x0));
	// lvx128 v9,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v9), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// vmulfp128 v2,v12,v10
	_mm_store_ps(ctx.v2.f32, _mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v10.f32)));
	// vspltw v5,v9,0
	_mm_store_si128((__m128i*)ctx.v5.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0xFF));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-14288
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -14288;
	// vmulfp128 v26,v10,v10
	_mm_store_ps(v26.f32, _mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(ctx.v10.f32)));
	// vmaddfp v10,v10,v28,v31
	_mm_store_ps(ctx.v10.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(v28.f32)), _mm_load_ps(v31.f32)));
	// vspltw v25,v9,1
	_mm_store_si128((__m128i*)v25.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0xAA));
	// vmulfp128 v12,v12,v0
	_mm_store_ps(ctx.v12.f32, _mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v0.f32)));
	// lvx128 v7,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v7), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF))), _mm_load_si128((__m128i*)VectorMaskL)));
	// vspltw v31,v7,0
	_mm_store_si128((__m128i*)v31.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0xFF));
	// vspltw v28,v7,1
	_mm_store_si128((__m128i*)v28.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0xAA));
	// vmaddfp v10,v2,v27,v10
	_mm_store_ps(ctx.v10.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v2.f32), _mm_load_ps(v27.f32)), _mm_load_ps(ctx.v10.f32)));
	// vspltw v24,v7,2
	_mm_store_si128((__m128i*)v24.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0x55));
	// vmaddfp v30,v2,v29,v30
	_mm_store_ps(v30.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v2.f32), _mm_load_ps(v29.f32)), _mm_load_ps(v30.f32)));
	// vspltw v29,v9,2
	_mm_store_si128((__m128i*)v29.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0x55));
	// vspltw v9,v9,3
	_mm_store_si128((__m128i*)ctx.v9.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v9.u32), 0x0));
	// vand v3,v8,v3
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v3), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v3))));
	// vspltw v7,v7,3
	_mm_store_si128((__m128i*)ctx.v7.u32, _mm_shuffle_epi32(_mm_load_si128((__m128i*)ctx.v7.u32), 0x0));
	// vslw v4,v11,v4
	ctx.v4.u32[0] = ctx.v11.u32[0] << (ctx.PPCRegister_u8(v4)[0] & 0x1F);
	ctx.v4.u32[1] = ctx.v11.u32[1] << (ctx.PPCRegister_u8(v4)[4] & 0x1F);
	ctx.v4.u32[2] = ctx.v11.u32[2] << (ctx.PPCRegister_u8(v4)[8] & 0x1F);
	ctx.v4.u32[3] = ctx.v11.u32[3] << (ctx.PPCRegister_u8(v4)[12] & 0x1F);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -16;
	// vmaddfp v10,v26,v10,v30
	_mm_store_ps(ctx.v10.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(v26.f32), _mm_load_ps(ctx.v10.f32)), _mm_load_ps(v30.f32)));
	// vcmpgtfp v30,v13,v0
	_mm_store_ps(v30.f32, _mm_cmpgt_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v0.f32)));
	// vmaddfp v12,v12,v10,v1
	_mm_store_ps(ctx.v12.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v10.f32)), _mm_load_ps(ctx.v1.f32)));
	// vrfim v10,v12
	_mm_store_ps(ctx.v10.f32, _mm_round_ps(_mm_load_ps(ctx.v12.f32), _MM_FROUND_TO_NEG_INF | _MM_FROUND_NO_EXC));
	// vsubfp v12,v12,v10
	_mm_store_ps(ctx.v12.f32, _mm_sub_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v10.f32)));
	// vexptefp v2,v10
	ctx.v2.f32[0] = exp2f(ctx.v10.f32[0]);
	ctx.v2.f32[1] = exp2f(ctx.v10.f32[1]);
	ctx.v2.f32[2] = exp2f(ctx.v10.f32[2]);
	ctx.v2.f32[3] = exp2f(ctx.v10.f32[3]);
	// vmulfp128 v10,v12,v12
	_mm_store_ps(ctx.v10.f32, _mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v12.f32)));
	// vmaddfp v1,v12,v25,v5
	_mm_store_ps(ctx.v1.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(v25.f32)), _mm_load_ps(ctx.v5.f32)));
	// vmaddfp v31,v12,v28,v31
	_mm_store_ps(v31.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(v28.f32)), _mm_load_ps(v31.f32)));
	// vmulfp128 v12,v12,v10
	_mm_store_ps(ctx.v12.f32, _mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v10.f32)));
	// vmaddfp v1,v10,v29,v1
	_mm_store_ps(ctx.v1.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(v29.f32)), _mm_load_ps(ctx.v1.f32)));
	// vmaddfp v31,v10,v24,v31
	_mm_store_ps(v31.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(v24.f32)), _mm_load_ps(v31.f32)));
	// vmulfp128 v10,v10,v10
	_mm_store_ps(ctx.v10.f32, _mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(ctx.v10.f32)));
	// vmaddfp v9,v12,v9,v1
	_mm_store_ps(ctx.v9.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v9.f32)), _mm_load_ps(ctx.v1.f32)));
	// vmaddfp v12,v12,v7,v31
	_mm_store_ps(ctx.v12.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v7.f32)), _mm_load_ps(v31.f32)));
	// vctsxs v1,v0,0
	_mm_store_si128((__m128i*)ctx.v1.s32, _mm_vctsxs(_mm_load_ps(ctx.v0.f32)));
	// vcmpeqfp v7,v0,v13
	_mm_store_ps(ctx.v7.f32, _mm_cmpeq_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v13.f32)));
	// vmaddfp v12,v10,v12,v9
	_mm_store_ps(ctx.v12.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(ctx.v12.f32)), _mm_load_ps(ctx.v9.f32)));
	// vspltisw v10,1
	_mm_store_si128((__m128i*)ctx.v10.u32, _mm_set1_epi32(int(0x1)));
	// vrfiz v9,v0
	_mm_store_ps(ctx.v9.f32, _mm_round_ps(_mm_load_ps(ctx.v0.f32), _MM_FROUND_TO_ZERO | _MM_FROUND_NO_EXC));
	// vand v1,v1,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v1), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v1)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10))));
	// vsrw v10,v4,v10
	ctx.v10.u32[0] = ctx.v4.u32[0] >> (ctx.PPCRegister_u8(v10)[0] & 0x1F);
	ctx.v10.u32[1] = ctx.v4.u32[1] >> (ctx.PPCRegister_u8(v10)[4] & 0x1F);
	ctx.v10.u32[2] = ctx.v4.u32[2] >> (ctx.PPCRegister_u8(v10)[8] & 0x1F);
	ctx.v10.u32[3] = ctx.v4.u32[3] >> (ctx.PPCRegister_u8(v10)[12] & 0x1F);
	// vslw v11,v1,v11
	ctx.v11.u32[0] = ctx.v1.u32[0] << (ctx.PPCRegister_u8(v11)[0] & 0x1F);
	ctx.v11.u32[1] = ctx.v1.u32[1] << (ctx.PPCRegister_u8(v11)[4] & 0x1F);
	ctx.v11.u32[2] = ctx.v1.u32[2] << (ctx.PPCRegister_u8(v11)[8] & 0x1F);
	ctx.v11.u32[3] = ctx.v1.u32[3] << (ctx.PPCRegister_u8(v11)[12] & 0x1F);
	// vor v29,v12,v12
	_mm_store_si128((__m128i*)PPCRegister_u8(v29), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)));
	// vcmpeqfp v31,v0,v9
	_mm_store_ps(v31.f32, _mm_cmpeq_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v9.f32)));
	// vor v1,v12,v12
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v1), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)));
	// vcmpeqfp v9,v8,v13
	_mm_store_ps(ctx.v9.f32, _mm_cmpeq_ps(_mm_load_ps(ctx.v8.f32), _mm_load_ps(ctx.v13.f32)));
	// vcmpgtfp v8,v13,v8
	_mm_store_ps(ctx.v8.f32, _mm_cmpgt_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v8.f32)));
	// vrefp v0,v12
	_mm_store_ps(ctx.v0.f32, _mm_div_ps(_mm_set1_ps(1), _mm_load_ps(ctx.v12.f32)));
	// vand v12,v3,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v3)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11))));
	// vor v13,v13,v12
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12))));
	// vandc v11,v8,v31
	// vandc v8,v9,v30
	// vor v9,v9,v7
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v9), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v9)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v7))));
	// vsel v13,v10,v13,v8
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_or_si128(_mm_andnot_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10))), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)))));
	// vnmsubfp v10,v29,v0,v5
	_mm_store_ps(ctx.v10.f32, _mm_xor_ps(_mm_sub_ps(_mm_mul_ps(_mm_load_ps(v29.f32), _mm_load_ps(ctx.v0.f32)), _mm_load_ps(ctx.v5.f32)), _mm_castsi128_ps(_mm_set1_epi32(int(0x80000000)))));
	// vor v11,v11,v9
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v9))));
	// vor v9,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v9), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// vsel v13,v13,v6,v7
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_or_si128(_mm_andnot_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v7)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13))), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v7)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v6)))));
	// vmaddfp v0,v0,v10,v0
	_mm_store_ps(ctx.v0.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v10.f32)), _mm_load_ps(ctx.v0.f32)));
	// vnmsubfp v10,v1,v0,v5
	_mm_store_ps(ctx.v10.f32, _mm_xor_ps(_mm_sub_ps(_mm_mul_ps(_mm_load_ps(ctx.v1.f32), _mm_load_ps(ctx.v0.f32)), _mm_load_ps(ctx.v5.f32)), _mm_castsi128_ps(_mm_set1_epi32(int(0x80000000)))));
	// vcmpeqfp v8,v0,v0
	_mm_store_ps(ctx.v8.f32, _mm_cmpeq_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v0.f32)));
	// vmaddfp v0,v0,v10,v0
	_mm_store_ps(ctx.v0.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v10.f32)), _mm_load_ps(ctx.v0.f32)));
	// vsel v0,v9,v0,v8
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_andnot_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v9))), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)))));
	// vmulfp128 v0,v2,v0
	_mm_store_ps(ctx.v0.f32, _mm_mul_ps(_mm_load_ps(ctx.v2.f32), _mm_load_ps(ctx.v0.f32)));
	// vor v0,v0,v12
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12))));
	// vsel v0,v0,v13,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_andnot_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)))));
	// stvx128 v0,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)), _mm_load_si128((__m128i*)VectorMaskL)));
	// lfs f1,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushModeUnconditional();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_821A78C0) PPC_WEAK_FUNC(sub_821A78C0);
PPC_FUNC_IMPL(__imp__sub_821A78C0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister f0{};
	PPCRegister temp{};
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f1,20(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 20);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,-32
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + -32;
	// vspltisw v0,1
	_mm_store_si128((__m128i*)ctx.v0.u32, _mm_set1_epi32(int(0x1)));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,-24
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + -24;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,20
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 20;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-28
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -28;
	// stfs f0,-32(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -32);
	// vcfsx v12,v0,1
	ctx.fpscr.enableFlushModeUnconditional();
	_mm_store_ps(ctx.v12.f32, _mm_mul_ps(_mm_cvtepi32_ps(_mm_load_si128((__m128i*)ctx.v0.u32)), _mm_castsi128_ps(_mm_set1_epi32(int(0x3F000000)))));
	// stfs f0,-28(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushModeUnconditional();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -28);
	// lvlx v13,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,-24(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// lvlx v11,0,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r11.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,-16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + -16;
	// vrlimi128 v11,v13,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 57), 4));
	// lvlx v10,0,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lvlx v13,0,ctx_arrow(ctx)->r8
	temp.u32 = ctx_arrow(ctx)->r8.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v13,v10,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v10.f32), 57), 4));
	// vrlimi128 v13,v11,3,2
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 78), 3));
	// vrsqrtefp v0,v13
	ctx.fpscr.enableFlushModeUnconditional();
	_mm_store_ps(ctx.v0.f32, _mm_div_ps(_mm_set1_ps(1), _mm_sqrt_ps(_mm_load_ps(ctx.v13.f32))));
	// vor v11,v13,v13
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)));
	// vmulfp128 v10,v13,v12
	_mm_store_ps(ctx.v10.f32, _mm_mul_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v12.f32)));
	// vmulfp128 v9,v0,v0
	_mm_store_ps(ctx.v9.f32, _mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v0.f32)));
	// vcmpeqfp v8,v0,v0
	_mm_store_ps(ctx.v8.f32, _mm_cmpeq_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v0.f32)));
	// vnmsubfp v12,v10,v9,v12
	_mm_store_ps(ctx.v12.f32, _mm_xor_ps(_mm_sub_ps(_mm_mul_ps(_mm_load_ps(ctx.v10.f32), _mm_load_ps(ctx.v9.f32)), _mm_load_ps(ctx.v12.f32)), _mm_castsi128_ps(_mm_set1_epi32(int(0x80000000)))));
	// vmaddfp v0,v0,v12,v0
	_mm_store_ps(ctx.v0.f32, _mm_add_ps(_mm_mul_ps(_mm_load_ps(ctx.v0.f32), _mm_load_ps(ctx.v12.f32)), _mm_load_ps(ctx.v0.f32)));
	// vcmpeqfp v12,v12,v12
	_mm_store_ps(ctx.v12.f32, _mm_cmpeq_ps(_mm_load_ps(ctx.v12.f32), _mm_load_ps(ctx.v12.f32)));
	// vmulfp128 v0,v13,v0
	_mm_store_ps(ctx.v0.f32, _mm_mul_ps(_mm_load_ps(ctx.v13.f32), _mm_load_ps(ctx.v0.f32)));
	// vxor v13,v12,v8
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_xor_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v8))));
	// vsel v0,v0,v11,v13
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_andnot_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))), _mm_and_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)))));
	// stvx128 v0,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)), _mm_load_si128((__m128i*)VectorMaskL)));
	// lfs f1,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushModeUnconditional();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// blr 
	return;
}

alias(__imp__sub_821A7948) PPC_WEAK_FUNC(sub_821A7948);
PPC_FUNC_IMPL(__imp__sub_821A7948) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-992(ctx_arrow(ctx)->r1)
	ea = -992 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mullw. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r30.s32) * int64_t(ctx_arrow(ctx)->r29.s32);
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ble 0x821a7978
	if ((((((((((((((!ctx)))))))))))))->r0.gt()) goto loc_821A7978;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// bl 0x823ee498
	sub_823EE498(ctx, base);
loc_821A7978:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a79a0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A79A0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// li ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -1;
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq 0x821a79a0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A79A0;
	// mtctr ctx_arrow(ctx)->r30
	ctr.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A7994:
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bdnz 0x821a7994
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821A7994;
loc_821A79A0:
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,1
	xer.ca = (ctx_arrow(ctx)->r30.s32 < 0) & ((ctx_arrow(ctx)->r30.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s32 >> 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// addze ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	temp.s64 = ctx_arrow(ctx)->r11.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = temp.s64;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// addze ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	temp.s64 = ctx_arrow(ctx)->r10.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r10.u32;
	ctx_arrow(ctx)->r10.s64 = temp.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 2, xer);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r8.u32);
	// beq ctx_arrow(ctx)->r6,0x821a7a0c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A7A0C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 + 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,-3
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + -3;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addze ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	temp.s64 = ctx_arrow(ctx)->r11.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = temp.s64;
	// srawi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	xer.ca = (ctx_arrow(ctx)->r10.s32 < 0) & ((ctx_arrow(ctx)->r10.u32 & 0x1) != 0);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32 >> 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addze ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	temp.s64 = ctx_arrow(ctx)->r10.s64 + xer.ca;
	xer.ca = temp.u32 < ctx_arrow(ctx)->r10.u32;
	ctx_arrow(ctx)->r10.s64 = temp.s64;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r9.u32);
	// stwx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r8.u32);
loc_821A7A0C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7a3c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7A3C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A7A1C:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, -1, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7a30
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7A30;
	// li ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.s64 = 2;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
loc_821A7A30:
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bne 0x821a7a1c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A7A1C;
loc_821A7A3C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7d98
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7D98;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// lis ctx_arrow(ctx)->r9,-32256
	ctx_arrow(ctx)->r9.s64 = -2113929216;
	// subf ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r31.s64;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lfs f12,14108(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r6,4
	ctx_arrow(ctx)->r6.s64 = 4;
	// lfd f10,28168(ctx_arrow(ctx)->r10)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// lfs f11,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
loc_821A7A70:
	// li ctx_arrow(ctx)->r7,512
	ctx_arrow(ctx)->r7.s64 = 512;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7b3c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7B3C;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64 + ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A7A8C:
	// lfs f0,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stfs f0,0(ctx_arrow(ctx)->r9)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// bne 0x821a7a8c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A7A8C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A7AAC:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r10.s64 + 7;
	// slw ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r27.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r27, 0, BINARY_OP_U8(ctx_arrow(ctx)->r27, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r27) & 0x3F)), 0));
	// extsw ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s32;
	// ble ctx_arrow(ctx)->r6,0x821a7af0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7AF0;
	// std ctx_arrow(ctx)->r27,176(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 176);
	// lfd f13,176(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fadd f0,f0,f10
	f0.f64 = f0.f64 + ctx.f10.f64;
	// b 0x821a7b08
	goto loc_821A7B08;
loc_821A7AF0:
	// std ctx_arrow(ctx)->r27,152(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// lfd f13,152(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fsub f0,f0,f10
	f0.f64 = f0.f64 - ctx.f10.f64;
loc_821A7B08:
	// fctiwz f0,f0
	ctx.fpscr.disableFlushMode();
	f0.s64 = (f0.f64 > double(INT_MAX)) ? INT_MAX : _mm_cvttsd_si32(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32);
	// addic. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	xer.ca = ctx_arrow(ctx)->r9.u32 > 0;
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subfic ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,2
	xer.ca = ctx_arrow(ctx)->r10.u32 <= 2;
	ctx_arrow(ctx)->r8.s64 = 2 - ctx_arrow(ctx)->r10.s64;
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// stwx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r27.u32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r8, 0, BINARY_OP_U8(ctx_arrow(ctx)->r8, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r10.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r8) & 0x3F)), 0));
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r10.s64;
	// bne 0x821a7aac
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A7AAC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7c2c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7C2C;
loc_821A7B3C:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f13,f12
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = ctx.f12.f64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7c00
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7C00;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_821A7B54:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fabs f9,f0
	ctx.f9.u64 = f0.u64 & ~0x8000000000000000;
	// fcmpu ctx_arrow(ctx)->r6,f9,f11
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821a7bb8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7BB8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 7;
	// lwax ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r27.s64 = int32_t(PPC_Read_U32(ctx,  ctx));
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r10, 0, BINARY_OP_U8(ctx_arrow(ctx)->r10, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r10) & 0x3F)), 0));
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// std ctx_arrow(ctx)->r27,168(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 168);
	// std ctx_arrow(ctx)->r10,160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 160);
	// lfd f9,168(ctx_arrow(ctx)->r1)
	ctx.f9.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f9,f9
	ctx.f9.f64 = double(ctx.f9.s64);
	// lfd f8,160(ctx_arrow(ctx)->r1)
	ctx.f8.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f8,f8
	ctx.f8.f64 = double(ctx.f8.s64);
	// frsp f9,f9
	ctx.f9.f64 = double(float(ctx.f9.f64));
	// frsp f8,f8
	ctx.f8.f64 = double(float(ctx.f8.f64));
	// fmuls f0,f8,f0
	f0.f64 = double(float(ctx.f8.f64 * f0.f64));
	// fsubs f9,f9,f0
	ctx.f9.f64 = double(float(ctx.f9.f64 - f0.f64));
	// fdivs f0,f9,f0
	f0.f64 = double(float(ctx.f9.f64 / f0.f64));
	// fabs f0,f0
	f0.u64 = f0.u64 & ~0x8000000000000000;
	// b 0x821a7bbc
	goto loc_821A7BBC;
loc_821A7BB8:
	// fmr f0,f12
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f12.f64;
loc_821A7BBC:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,255
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 255, xer);
	// bge ctx_arrow(ctx)->r6,0x821a7bf0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A7BF0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// sraw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r6.s32 < 0) & (((ctx_arrow(ctx)->r6.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r6.s32);
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r6.s32 >> temp.u32;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r10.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a7bf0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A7BF0;
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x821a7bf0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A7BF0;
	// fmr f13,f0
	ctx.f13.f64 = f0.f64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A7BF0:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r30.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a7b54
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A7B54;
loc_821A7C00:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// sraw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r6.s32 < 0) & (((ctx_arrow(ctx)->r6.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r6.s32);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r6.s32 >> temp.u32;
	// subf. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 - ctx_arrow(ctx)->r9.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// bgt 0x821a7b3c
	if (ctx_arrow(ctx)->r0.gt()) goto loc_821A7B3C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
loc_821A7C2C:
	// bge ctx_arrow(ctx)->r6,0x821a7d48
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A7D48;
loc_821A7C30:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r28.u64;
	// fmr f13,f12
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = ctx.f12.f64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7d20
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7D20;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
loc_821A7C48:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// lfsx f0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fabs f9,f0
	ctx.f9.u64 = f0.u64 & ~0x8000000000000000;
	// fcmpu ctx_arrow(ctx)->r6,f9,f11
	ctx_arrow(ctx)->r6.compare(ctx.f9.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821a7cb4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7CB4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r10.s64 + 7;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// std ctx_arrow(ctx)->r10,136(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 136);
	// slw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r26, 0, BINARY_OP_U8(ctx_arrow(ctx)->r26, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r3.u32 << (PPCRegister_u8(ctx_arrow(ctx)->r26) & 0x3F)), 0));
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// std ctx_arrow(ctx)->r10,144(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lfd f9,136(ctx_arrow(ctx)->r1)
	ctx.f9.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f9,f9
	ctx.f9.f64 = double(ctx.f9.s64);
	// frsp f9,f9
	ctx.f9.f64 = double(float(ctx.f9.f64));
	// lfd f8,144(ctx_arrow(ctx)->r1)
	ctx.f8.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f8,f8
	ctx.f8.f64 = double(ctx.f8.s64);
	// frsp f8,f8
	ctx.f8.f64 = double(float(ctx.f8.f64));
	// fmuls f0,f8,f0
	f0.f64 = double(float(ctx.f8.f64 * f0.f64));
	// fsubs f9,f9,f0
	ctx.f9.f64 = double(float(ctx.f9.f64 - f0.f64));
	// fdivs f0,f9,f0
	f0.f64 = double(float(ctx.f9.f64 / f0.f64));
	// fabs f0,f0
	f0.u64 = f0.u64 & ~0x8000000000000000;
	// b 0x821a7cb8
	goto loc_821A7CB8;
loc_821A7CB4:
	// fmr f0,f12
	ctx.fpscr.disableFlushMode();
	f0.f64 = ctx.f12.f64;
loc_821A7CB8:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// sraw ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r6.s32 < 0) & (((ctx_arrow(ctx)->r6.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r6.s32);
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r6.s32 >> temp.u32;
	// neg ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r27.s64 = -ctx_arrow(ctx)->r27.s64;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, ctx_arrow(ctx)->r27.s32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a7d10
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A7D10;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a7cec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7CEC;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwzx ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a7d00
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A7D00;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
loc_821A7CEC:
	// ble ctx_arrow(ctx)->r6,0x821a7d10
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7D10;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,-256
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, -256, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7d10
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7D10;
loc_821A7D00:
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x821a7d10
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A7D10;
	// fmr f13,f0
	ctx.f13.f64 = f0.f64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64;
loc_821A7D10:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, ctx_arrow(ctx)->r30.s32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a7c48
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A7C48;
loc_821A7D20:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// sraw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32 & 0x3F;
	if (temp.u32 > 0x1F) temp.u32 = 0x1F;
	xer.ca = (ctx_arrow(ctx)->r6.s32 < 0) & (((ctx_arrow(ctx)->r6.s32 >> temp.u32) << temp.u32) != ctx_arrow(ctx)->r6.s32);
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r6.s32 >> temp.u32;
	// add. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r7.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// lwzx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// stwx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// blt 0x821a7c30
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821A7C30;
loc_821A7D48:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// ble ctx_arrow(ctx)->r6,0x821a7d8c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A7D8C;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A7D60:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// subfic ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,2
	xer.ca = ctx_arrow(ctx)->r7.u32 <= 2;
	ctx_arrow(ctx)->r7.s64 = 2 - ctx_arrow(ctx)->r7.s64;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r27.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r9.u64;
	// bne 0x821a7d60
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A7D60;
loc_821A7D8C:
	// addic. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,-1
	xer.ca = ctx_arrow(ctx)->r31.u32 > 0;
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,4
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + 4;
	// bne 0x821a7a70
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A7A70;
loc_821A7D98:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,992
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 992;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A7DA0) PPC_WEAK_FUNC(sub_821A7DA0);
PPC_FUNC_IMPL(__imp__sub_821A7DA0) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f30,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fabs f30,f1
	f30.u64 = ctx.f1.u64 & ~0x8000000000000000;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f30,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(f30.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// lfs f13,-14160(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f30,f13
	ctx_arrow(ctx)->r6.compare(f30.f64, ctx.f13.f64);
	// bge ctx_arrow(ctx)->r6,0x821a7e30
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A7E30;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-14164(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// lfs f13,-14168(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f12,-14172(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fmadds f12,f0,f13,f12
	ctx.f12.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
	// lfs f13,-14176(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f12,f12,f0,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// lfs f13,-14180(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f12,f12,f0,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// lfs f13,-14184(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f12,f12,f0,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// lfs f13,-14188(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmadds f12,f12,f0,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fmadds f1,f12,f0,f13
	ctx.f1.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// b 0x821a7f00
	goto loc_821A7F00;
loc_821A7E30:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fdivs f31,f13,f30
	ctx.fpscr.disableFlushMode();
	f31.f64 = double(float(ctx.f13.f64 / f30.f64));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v0,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lvlx v13,0,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r11.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v12,0,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lvlx v0,0,ctx_arrow(ctx)->r8
	temp.u32 = ctx_arrow(ctx)->r8.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v0,v12,4,3
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// vor v1,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v1), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// bl 0x821a74f0
	sub_821A74F0(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// stvx128 v1,ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r11
	_mm_store_si128((__m128i*)(base + ((ctx_arrow(ctx)->r11.u32) & ~0xF)), _mm_shuffle_epi8(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v1)), _mm_load_si128((__m128i*)VectorMaskL)));
	// bl 0x821a78c0
	sub_821A78C0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f0,-14192(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f13,-14196(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmsubs f13,f31,f0,f13
	ctx.f13.f64 = double(float(f31.f64 * f0.f64 - ctx.f13.f64));
	// lfs f0,96(ctx_arrow(ctx)->r1)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fdivs f12,f0,f1
	ctx.f12.f64 = double(float(f0.f64 / ctx.f1.f64));
	// lfs f0,-14200(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f13,f13,f31,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64 + f0.f64));
	// lfs f0,-14204(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmsubs f13,f13,f31,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64 - f0.f64));
	// lfs f0,-14208(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f13,f13,f31,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64 + f0.f64));
	// lfs f0,-14212(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmsubs f13,f13,f31,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64 - f0.f64));
	// lfs f0,-14216(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f13,f13,f31,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64 + f0.f64));
	// lfs f0,-14220(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f13,f13,f31,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f31.f64 + f0.f64));
	// lfs f0,-14224(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmadds f0,f13,f31,f0
	f0.f64 = double(float(ctx.f13.f64 * f31.f64 + f0.f64));
	// fmuls f1,f12,f0
	ctx.f1.f64 = double(float(ctx.f12.f64 * f0.f64));
loc_821A7F00:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f30,-24(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A7F18) PPC_WEAK_FUNC(sub_821A7F18);
PPC_FUNC_IMPL(__imp__sub_821A7F18) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// bne ctx_arrow(ctx)->r6,0x821a7f44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A7F44;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// b 0x821a7f5c
	goto loc_821A7F5C;
loc_821A7F44:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,14032(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fmuls f31,f1,f0
	f31.f64 = double(float(ctx.f1.f64 * f0.f64));
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x821a7590
	sub_821A7590(ctx, base);
	// fdivs f1,f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64 / f31.f64));
loc_821A7F5C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// lfd f31,-16(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A7F70) PPC_WEAK_FUNC(sub_821A7F70);
PPC_FUNC_IMPL(__imp__sub_821A7F70) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fabs f13,f31
	ctx.f13.u64 = f31.u64 & ~0x8000000000000000;
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x821a7fe8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A7FE8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fabs f1,f31
	ctx.f1.u64 = f31.u64 & ~0x8000000000000000;
	// lfs f2,3908(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f29,f1
	ctx.fpscr.disableFlushMode();
	f29.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// lfs f30,13968(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,14492(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// fmsubs f13,f29,f30,f0
	ctx.f13.f64 = double(float(f29.f64 * f30.f64 - f0.f64));
	// lfs f0,2780(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_821A7FE0:
	// fadds f1,f13,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f13.f64 + f0.f64));
	// b 0x821a8050
	goto loc_821A8050;
loc_821A7FE8:
	// fabs f0,f31
	ctx.fpscr.disableFlushMode();
	f0.u64 = f31.u64 & ~0x8000000000000000;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f30,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f30
	ctx_arrow(ctx)->r6.compare(f0.f64, f30.f64);
	// bge ctx_arrow(ctx)->r6,0x821a8048
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8048;
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f28,f1
	ctx.fpscr.disableFlushMode();
	f28.f64 = ctx.f1.f64;
	// fabs f1,f31
	ctx.f1.u64 = f31.u64 & ~0x8000000000000000;
	// lfs f29,14492(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,3908(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// fmuls f13,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(ctx.f1.f64 * f30.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fabs f12,f31
	ctx.f12.u64 = f31.u64 & ~0x8000000000000000;
	// lfs f0,2948(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmsubs f13,f28,f29,f13
	ctx.f13.f64 = double(float(f28.f64 * f29.f64 - ctx.f13.f64));
	// fnmsubs f13,f12,f0,f13
	ctx.f13.f64 = double(float(-(ctx.f12.f64 * f0.f64 - ctx.f13.f64)));
	// lfs f0,2952(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x821a7fe0
	goto loc_821A7FE0;
loc_821A8048:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
loc_821A8050:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed594
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A8068) PPC_WEAK_FUNC(sub_821A8068);
PPC_FUNC_IMPL(__imp__sub_821A8068) {
	PPC_FUNC_PROLOGUE();
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister f0{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed548
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// fmr f31,f1
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fabs f13,f31
	ctx.f13.u64 = f31.u64 & ~0x8000000000000000;
	// fcmpu ctx_arrow(ctx)->r6,f13,f0
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, f0.f64);
	// bge ctx_arrow(ctx)->r6,0x821a80e0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A80E0;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fabs f1,f31
	ctx.f1.u64 = f31.u64 & ~0x8000000000000000;
	// lfs f2,3908(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f29,f1
	ctx.fpscr.disableFlushMode();
	f29.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// lfs f30,16032(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,14436(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmuls f0,f1,f0
	f0.f64 = double(float(ctx.f1.f64 * f0.f64));
	// fmsubs f13,f29,f30,f0
	ctx.f13.f64 = double(float(f29.f64 * f30.f64 - f0.f64));
	// lfs f0,2772(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
loc_821A80D8:
	// fadds f1,f13,f0
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f13.f64 + f0.f64));
	// b 0x821a8148
	goto loc_821A8148;
loc_821A80E0:
	// fabs f0,f31
	ctx.fpscr.disableFlushMode();
	f0.u64 = f31.u64 & ~0x8000000000000000;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f2
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f2.f64);
	// bge ctx_arrow(ctx)->r6,0x821a8140
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8140;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f28,f1
	ctx.fpscr.disableFlushMode();
	f28.f64 = ctx.f1.f64;
	// fabs f1,f31
	ctx.f1.u64 = f31.u64 & ~0x8000000000000000;
	// lfs f29,14436(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f29.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f30,3908(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f30.f64 = double(temp.f32);
	// fmr f2,f30
	ctx.f2.f64 = f30.f64;
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// fmuls f13,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(ctx.f1.f64 * f30.f64));
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fabs f12,f31
	ctx.f12.u64 = f31.u64 & ~0x8000000000000000;
	// lfs f0,28808(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmsubs f13,f28,f29,f13
	ctx.f13.f64 = double(float(f28.f64 * f29.f64 - ctx.f13.f64));
	// fnmsubs f13,f12,f0,f13
	ctx.f13.f64 = double(float(-(ctx.f12.f64 * f0.f64 - ctx.f13.f64)));
	// lfs f0,14492(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// b 0x821a80d8
	goto loc_821A80D8;
loc_821A8140:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f1,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
loc_821A8148:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-8
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -8;
	// bl 0x823ed594
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A8160) PPC_WEAK_FUNC(sub_821A8160);
PPC_FUNC_IMPL(__imp__sub_821A8160) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f22{};
	PPCRegister f23{};
	PPCRegister f24{};
	PPCRegister f25{};
	PPCRegister f26{};
	PPCRegister f27{};
	PPCRegister f28{};
	PPCRegister f29{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed530
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// fmr f25,f1
	ctx.fpscr.disableFlushMode();
	f25.f64 = ctx.f1.f64;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmr f30,f2
	f30.f64 = ctx.f2.f64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r6.u64;
	// lfs f23,2688(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f23.f64 = double(temp.f32);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r9.u64;
	// lfs f0,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// mullw ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r31.s64 = int64_t(ctx_arrow(ctx)->r27.s32) * int64_t(ctx_arrow(ctx)->r25.s32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a81b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A81B0;
	// fmr f29,f23
	f29.f64 = f23.f64;
	// b 0x821a81b4
	goto loc_821A81B4;
loc_821A81B0:
	// fmr f29,f0
	ctx.fpscr.disableFlushMode();
	f29.f64 = f0.f64;
loc_821A81B4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// lfs f24,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f24.f64 = double(temp.f32);
	// beq ctx_arrow(ctx)->r6,0x821a84f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A84F4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x821a845c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A845C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x821a83dc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A83DC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8378
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8378;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 5, xer);
	// beq ctx_arrow(ctx)->r6,0x821a82fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A82FC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 6, xer);
	// beq ctx_arrow(ctx)->r6,0x821a825c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A825C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,7
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 7, xer);
	// bne ctx_arrow(ctx)->r6,0x821a825c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A825C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a821c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A821C;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x821a821c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A821C;
	// mtctr ctx_arrow(ctx)->r31
	ctr.u64 = ctx_arrow(ctx)->r31.u64;
loc_821A8210:
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bdnz 0x821a8210
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821A8210;
loc_821A821C:
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r27.s64;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r31.u64 + ctx_arrow(ctx)->r27.u64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,31,1,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x7FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,31,1,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 31) & 0x7FFFFFFF;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a8554
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8554;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// subf. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r28.u64;
	// lis ctx_arrow(ctx)->r9,16256
	ctx_arrow(ctx)->r9.s64 = 1065353216;
	// beq 0x821a8554
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A8554;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A824C:
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 4;
	// bdnz 0x821a824c
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821A824C;
	// b 0x821a8554
	goto loc_821A8554;
loc_821A825C:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8554
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8554;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,31,1,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 31) & 0x7FFFFFFF;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// subf ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r27.s64;
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r27.s64 - ctx_arrow(ctx)->r11.s64;
loc_821A8278:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r6.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a82a8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A82A8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a82a8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A82A8;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r7.u64 + ctx_arrow(ctx)->r10.u64;
	// clrldi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,32
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fadds f0,f0,f29
	f0.f64 = double(float(f0.f64 + f29.f64));
	// b 0x821a82dc
	goto loc_821A82DC;
loc_821A82A8:
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r27.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a82e4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A82E4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a82e4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A82E4;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// add ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r27.u64;
	// clrldi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,32
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r8,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fsubs f0,f0,f29
	f0.f64 = double(float(f0.f64 - f29.f64));
loc_821A82DC:
	// stfs f0,0(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// b 0x821a82e8
	goto loc_821A82E8;
loc_821A82E4:
	// stfs f23,0(ctx_arrow(ctx)->r9)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f23.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
loc_821A82E8:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r31.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a8278
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8278;
	// b 0x821a8554
	goto loc_821A8554;
loc_821A82FC:
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8554
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8554;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFF;
	// fdivs f30,f24,f30
	ctx.fpscr.disableFlushMode();
	f30.f64 = double(float(f24.f64 / f30.f64));
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r28.u64;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f28,f13,f0
	f28.f64 = double(float(ctx.f13.f64 * f0.f64));
loc_821A8328:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fsubs f0,f0,f28
	f0.f64 = double(float(f0.f64 - f28.f64));
	// fadds f0,f0,f29
	f0.f64 = double(float(f0.f64 + f29.f64));
	// fmuls f31,f0,f25
	f31.f64 = double(float(f0.f64 * f25.f64));
	// fmuls f1,f30,f31
	ctx.f1.f64 = double(float(f30.f64 * f31.f64));
	// bl 0x821a7f18
	sub_821A7F18(ctx, base);
	// fmr f27,f1
	ctx.fpscr.disableFlushMode();
	f27.f64 = ctx.f1.f64;
	// fmr f1,f31
	ctx.f1.f64 = f31.f64;
	// bl 0x821a7f18
	sub_821A7F18(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// fmuls f0,f27,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f27.f64 * ctx.f1.f64));
	// stfs f0,0(ctx_arrow(ctx)->r30)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r31.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a8328
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8328;
	// b 0x821a8554
	goto loc_821A8554;
loc_821A8378:
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8554
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8554;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFF;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r28.u64;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f31,f13,f0
	f31.f64 = double(float(ctx.f13.f64 * f0.f64));
loc_821A83A0:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fsubs f0,f0,f31
	f0.f64 = double(float(f0.f64 - f31.f64));
	// fadds f0,f0,f29
	f0.f64 = double(float(f0.f64 + f29.f64));
	// fmuls f1,f0,f25
	ctx.f1.f64 = double(float(f0.f64 * f25.f64));
	// bl 0x821a7f70
	sub_821A7F70(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// stfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r31.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a83a0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A83A0;
	// b 0x821a8554
	goto loc_821A8554;
loc_821A83DC:
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8554
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8554;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFF;
	// fdivs f31,f24,f30
	ctx.fpscr.disableFlushMode();
	f31.f64 = double(float(f24.f64 / f30.f64));
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r28.u64;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f28,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f28.f64 = double(temp.f32);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f30,f13,f0
	f30.f64 = double(float(ctx.f13.f64 * f0.f64));
loc_821A8410:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFF;
	// fmr f1,f28
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f28.f64;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fsubs f0,f0,f30
	f0.f64 = double(float(f0.f64 - f30.f64));
	// fadds f0,f0,f29
	f0.f64 = double(float(f0.f64 + f29.f64));
	// fmuls f0,f0,f31
	f0.f64 = double(float(f0.f64 * f31.f64));
	// fmuls f0,f0,f25
	f0.f64 = double(float(f0.f64 * f25.f64));
	// fmuls f0,f0,f0
	f0.f64 = double(float(f0.f64 * f0.f64));
	// fneg f2,f0
	ctx.f2.u64 = f0.u64 ^ 0x8000000000000000;
	// bl 0x821a7690
	sub_821A7690(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// stfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r31.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a8410
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8410;
	// b 0x821a8554
	goto loc_821A8554;
loc_821A845C:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFF;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f27,f13,f0
	f27.f64 = double(float(ctx.f13.f64 * f0.f64));
	// fsubs f28,f27,f29
	f28.f64 = double(float(f27.f64 - f29.f64));
	// beq ctx_arrow(ctx)->r6,0x821a8554
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8554;
	// fdivs f26,f24,f28
	f26.f64 = double(float(f24.f64 / f28.f64));
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r28.u64;
loc_821A848C:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f31,f0
	f31.f64 = double(float(f0.f64));
	// fsubs f0,f31,f28
	f0.f64 = double(float(f31.f64 - f28.f64));
	// fmuls f0,f0,f26
	f0.f64 = double(float(f0.f64 * f26.f64));
	// fnmsubs f1,f0,f0,f24
	ctx.f1.f64 = double(float(-(f0.f64 * f0.f64 - f24.f64)));
	// bl 0x821a78c0
	sub_821A78C0(ctx, base);
	// fmuls f1,f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = double(float(ctx.f1.f64 * f30.f64));
	// bl 0x821a7da0
	sub_821A7DA0(ctx, base);
	// fmr f22,f1
	ctx.fpscr.disableFlushMode();
	f22.f64 = ctx.f1.f64;
	// fmr f1,f30
	ctx.f1.f64 = f30.f64;
	// bl 0x821a7da0
	sub_821A7DA0(ctx, base);
	// fsubs f0,f31,f27
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f31.f64 - f27.f64));
	// fdivs f31,f22,f1
	f31.f64 = double(float(f22.f64 / ctx.f1.f64));
	// fadds f0,f0,f29
	f0.f64 = double(float(f0.f64 + f29.f64));
	// fmuls f1,f0,f25
	ctx.f1.f64 = double(float(f0.f64 * f25.f64));
	// bl 0x821a7f18
	sub_821A7F18(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// fmuls f0,f31,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f31.f64 * ctx.f1.f64));
	// stfs f0,0(ctx_arrow(ctx)->r29)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r31.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a848c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A848C;
	// b 0x821a8554
	goto loc_821A8554;
loc_821A84F4:
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8554
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8554;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64 & 0xFFFFFFFF;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r28.u64;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fmuls f31,f13,f0
	f31.f64 = double(float(ctx.f13.f64 * f0.f64));
loc_821A851C:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fsubs f0,f0,f31
	f0.f64 = double(float(f0.f64 - f31.f64));
	// fadds f0,f0,f29
	f0.f64 = double(float(f0.f64 + f29.f64));
	// fmuls f1,f0,f25
	ctx.f1.f64 = double(float(f0.f64 * f25.f64));
	// bl 0x821a8068
	sub_821A8068(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// stfs f1,0(ctx_arrow(ctx)->r30)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, ctx_arrow(ctx)->r31.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a851c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A851C;
loc_821A8554:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8560
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8560;
	// stfs f23,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(f23.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
loc_821A8560:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a85cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A85CC;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
loc_821A8570:
	// fmr f0,f23
	ctx.fpscr.disableFlushMode();
	f0.f64 = f23.f64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a85c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A85C0;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r25.u64;
loc_821A8588:
	// lfs f13,0(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addic. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	xer.ca = ctx_arrow(ctx)->r11.u32 > 0;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// fadds f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 + f0.f64));
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 + ctx_arrow(ctx)->r10.u64;
	// bne 0x821a8588
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A8588;
	// fdivs f0,f24,f0
	f0.f64 = double(float(f24.f64 / f0.f64));
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
loc_821A85A8:
	// lfs f13,0(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// fmuls f13,f13,f0
	ctx.f13.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f13,0(ctx_arrow(ctx)->r11)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r8.u64;
	// bne 0x821a85a8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A85A8;
loc_821A85C0:
	// addic. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,-1
	xer.ca = ctx_arrow(ctx)->r7.u32 > 0;
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 4;
	// bne 0x821a8570
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A8570;
loc_821A85CC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r1,-64
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r1.s64 + -64;
	// bl 0x823ed57c
	// b 0x823ed17c
	return;
}

alias(__imp__sub_821A85E0) PPC_WEAK_FUNC(sub_821A85E0);
PPC_FUNC_IMPL(__imp__sub_821A85E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-784(ctx_arrow(ctx)->r1)
	ea = -784 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a861c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A861C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// std ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
loc_821A861C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,0(ctx_arrow(ctx)->r6)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lfs f9,6580(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f9
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f9.f64);
	// bge ctx_arrow(ctx)->r6,0x821a8634
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8634;
	// fmr f0,f9
	f0.f64 = ctx.f9.f64;
loc_821A8634:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f11,2776(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821a8648
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8648;
	// fmr f0,f11
	f0.f64 = ctx.f11.f64;
loc_821A8648:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// lfs f12,-14112(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,12904(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fnmsubs f13,f0,f12,f13
	ctx.f13.f64 = double(float(-(f0.f64 * ctx.f12.f64 - ctx.f13.f64)));
	// fmadds f10,f13,f0,f11
	ctx.f10.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f11.f64));
	// beq ctx_arrow(ctx)->r6,0x821a8700
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8700;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8700
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8700;
	// lfs f0,4(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f9
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f9.f64);
	// bge ctx_arrow(ctx)->r6,0x821a8680
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8680;
	// fmr f0,f9
	f0.f64 = ctx.f9.f64;
loc_821A8680:
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821a868c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A868C;
	// fmr f0,f11
	f0.f64 = ctx.f11.f64;
loc_821A868C:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,28472(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmadds f12,f0,f12,f13
	ctx.f12.f64 = double(float(f0.f64 * ctx.f12.f64 + ctx.f13.f64));
	// lfd f13,-14120(ctx_arrow(ctx)->r11)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fcmpu ctx_arrow(ctx)->r6,f1,f13
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, ctx.f13.f64);
	// lfs f13,12888(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fnmsubs f13,f12,f0,f13
	ctx.f13.f64 = double(float(-(ctx.f12.f64 * f0.f64 - ctx.f13.f64)));
	// ble ctx_arrow(ctx)->r6,0x821a86c4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A86C4;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-14128(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x821a86c8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A86C8;
loc_821A86C4:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A86C8:
	// fcmpu ctx_arrow(ctx)->r6,f10,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f11.f64);
	// bge ctx_arrow(ctx)->r6,0x821a86d4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A86D4;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A86D4:
	// fcmpu ctx_arrow(ctx)->r6,f13,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f13.f64, ctx.f11.f64);
	// bge ctx_arrow(ctx)->r6,0x821a86e0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A86E0;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A86E0:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f0,3060(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fdivs f0,f0,f1
	f0.f64 = double(float(f0.f64 / ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x821a86f8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A86F8;
	// fmr f0,f11
	f0.f64 = ctx.f11.f64;
loc_821A86F8:
	// fmuls f0,f0,f13
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f0.f64 * ctx.f13.f64));
	// b 0x821a8740
	goto loc_821A8740;
loc_821A8700:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-14136(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x821a8720
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8720;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-14144(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f1,f0
	ctx_arrow(ctx)->r6.compare(ctx.f1.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x821a8724
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8724;
loc_821A8720:
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A8724:
	// fcmpu ctx_arrow(ctx)->r6,f10,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(ctx.f10.f64, ctx.f11.f64);
	// bge ctx_arrow(ctx)->r6,0x821a8730
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8730;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A8730:
	// fdivs f0,f11,f1
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(ctx.f11.f64 / ctx.f1.f64));
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// blt ctx_arrow(ctx)->r6,0x821a8740
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8740;
	// fmr f0,f11
	f0.f64 = ctx.f11.f64;
loc_821A8740:
	// fmuls f13,f0,f10
	ctx.fpscr.disableFlushMode();
	ctx.f13.f64 = double(float(f0.f64 * ctx.f10.f64));
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,-18868(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// fmuls f0,f13,f0
	f0.f64 = double(float(ctx.f13.f64 * f0.f64));
	// stfs f0,4(ctx_arrow(ctx)->r31)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// lfs f0,-14152(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r11.s64 = 2031616;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f10,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// fmadds f0,f1,f0,f10
	f0.f64 = double(float(ctx.f1.f64 * f0.f64 + ctx.f10.f64));
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// stw ctx_arrow(ctx)->r11,648(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 648);
	// ble ctx_arrow(ctx)->r6,0x821a8790
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8790;
	// stw ctx_arrow(ctx)->r10,648(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 648);
loc_821A8790:
	// lfs f1,4(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f1.f64 = double(temp.f32);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 2, xer);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// bne ctx_arrow(ctx)->r6,0x821a87dc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A87DC;
	// lfs f0,8(ctx_arrow(ctx)->r6)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f9
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f9.f64);
	// bge ctx_arrow(ctx)->r6,0x821a87b0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A87B0;
	// fmr f0,f9
	f0.f64 = ctx.f9.f64;
loc_821A87B0:
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821a87bc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A87BC;
	// fmr f0,f11
	f0.f64 = ctx.f11.f64;
loc_821A87BC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,3908(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,12272(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmadds f12,f0,f13,f12
	ctx.f12.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
	// lfs f13,2780(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// b 0x821a885c
	goto loc_821A885C;
loc_821A87DC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x821a881c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A881C;
	// lfs f0,8(ctx_arrow(ctx)->r6)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f9
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f9.f64);
	// bge ctx_arrow(ctx)->r6,0x821a87f4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A87F4;
	// fmr f0,f9
	f0.f64 = ctx.f9.f64;
loc_821A87F4:
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821a8800
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8800;
	// fmr f0,f11
	f0.f64 = ctx.f11.f64;
loc_821A8800:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,14116(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f12,-14156(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f13,f0,f13,f12
	ctx.f13.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
	// fmadds f2,f13,f0,f10
	ctx.f2.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f10.f64));
	// b 0x821a886c
	goto loc_821A886C;
loc_821A881C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,5
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 5, xer);
	// bne ctx_arrow(ctx)->r6,0x821a8864
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A8864;
	// lfs f0,8(ctx_arrow(ctx)->r6)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f0,f9
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f9.f64);
	// bge ctx_arrow(ctx)->r6,0x821a8834
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8834;
	// fmr f0,f9
	f0.f64 = ctx.f9.f64;
loc_821A8834:
	// fcmpu ctx_arrow(ctx)->r6,f0,f11
	ctx.fpscr.disableFlushMode();
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f11.f64);
	// ble ctx_arrow(ctx)->r6,0x821a8840
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8840;
	// fmr f0,f11
	f0.f64 = ctx.f11.f64;
loc_821A8840:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,12896(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f12,-17376(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fmadds f12,f0,f13,f12
	ctx.f12.f64 = double(float(f0.f64 * ctx.f13.f64 + ctx.f12.f64));
	// lfs f13,12468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
loc_821A885C:
	// fmadds f2,f12,f0,f13
	ctx.fpscr.disableFlushMode();
	ctx.f2.f64 = double(float(ctx.f12.f64 * f0.f64 + ctx.f13.f64));
	// b 0x821a886c
	goto loc_821A886C;
loc_821A8864:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f2,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f2.f64 = double(temp.f32);
loc_821A886C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// li ctx_arrow(ctx)->r3,7
	ctx_arrow(ctx)->r3.s64 = 7;
	// bne ctx_arrow(ctx)->r6,0x821a887c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A887C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r5.u64;
loc_821A887C:
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// bl 0x821a8160
	sub_821A8160(ctx, base);
	// li ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r6.s64 = 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,8
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 8;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821a7948
	sub_821A7948(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,784
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 784;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A88C0) PPC_WEAK_FUNC(sub_821A88C0);
PPC_FUNC_IMPL(__imp__sub_821A88C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister f30{};
	PPCRegister f31{};
	PPCRegister temp{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stfd f30,-168(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -168);
	// stfd f31,-160(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -160);
	// stwu ctx_arrow(ctx)->r1,-336(ctx_arrow(ctx)->r1)
	ea = -336 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r15,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r15.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r10.u64;
	// bl 0x8240fa4c
	__imp__VdQueryVideoMode(ctx, base);
	// lwz ctx_arrow(ctx)->r29,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r29.u32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 ^ 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// bne ctx_arrow(ctx)->r6,0x821a8924
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A8924;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a8924
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A8924;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r21.u64;
loc_821A8924:
	// lwz ctx_arrow(ctx)->r20,420(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r20.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r27,16,16,31
	ctx_arrow(ctx)->r25.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 16) & 0xFFFF;
	// lwz ctx_arrow(ctx)->r18,21532(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r18.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r31,16,16,31
	ctx_arrow(ctx)->r19.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 16) & 0xFFFF;
	// lwz ctx_arrow(ctx)->r16,21528(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r16.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r31,16
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r31.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,16,16,31
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 16) & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r30.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,16
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r27.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r26,16,16,31
	ctx_arrow(ctx)->r23.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r26.u32 | (ctx_arrow(ctx)->r26.u64 << 32), 16) & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r26,16
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r26.u32 & 0xFFFF;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a8980
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A8980;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, ctx_arrow(ctx)->r23.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a896c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A896C;
	// li ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = 7;
	// b 0x821a897c
	goto loc_821A897C;
loc_821A896C:
	// subfc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r28
	xer.ca = ctx_arrow(ctx)->r28.u32 >= ctx_arrow(ctx)->r23.u32;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 - ctx_arrow(ctx)->r23.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 5;
loc_821A897C:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r20)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r20.u32 + 0);
loc_821A8980:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a89c4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A89C4;
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r22.u32 / ctx_arrow(ctx)->r10.u32;
	// twllei ctx_arrow(ctx)->r10,0
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821a89b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A89B0;
	// subfic ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0
	xer.ca = ctx_arrow(ctx)->r29.u32 <= 0;
	ctx_arrow(ctx)->r11.s64 = 0 - ctx_arrow(ctx)->r29.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFE;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,7
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 7;
	// b 0x821a89c0
	goto loc_821A89C0;
loc_821A89B0:
	// subfc ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24
	xer.ca = ctx_arrow(ctx)->r24.u32 >= ctx_arrow(ctx)->r11.u32;
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r24.s64 - ctx_arrow(ctx)->r11.s64;
	// subfe ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ASSIGN_TEMP_U8((~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 < ~ctx_arrow(ctx)->r11.u32) | (~ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r11.u32 + xer.ca < xer.ca));
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r11.u64 + xer.ca;
	xer.ca = ARRAY_TO_SCALAR_U8(temp, 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 5;
loc_821A89C0:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r15)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r15.u32 + 0);
loc_821A89C4:
	// clrldi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r23,32
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r23.u64 & 0xFFFFFFFF;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r28.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// fdivs f30,f0,f13
	f30.f64 = double(float(f0.f64 / ctx.f13.f64));
	// lfs f0,12468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f13,-14088(ctx_arrow(ctx)->r11)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f30,f0
	ctx_arrow(ctx)->r6.compare(f30.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x821a8a14
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8A14;
	// fcmpu ctx_arrow(ctx)->r6,f30,f13
	ctx_arrow(ctx)->r6.compare(f30.f64, ctx.f13.f64);
	// bgt ctx_arrow(ctx)->r6,0x821a8a14
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A8A14;
	// fmr f30,f0
	f30.f64 = f0.f64;
loc_821A8A14:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r24,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r24.u64 & 0xFFFFFFFF;
	// clrldi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22,32
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u64 & 0xFFFFFFFF;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF;
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// std ctx_arrow(ctx)->r9,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f11,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// lfd f12,88(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// lfd f10,96(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// fmuls f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f11.f64));
	// fdivs f31,f12,f10
	f31.f64 = double(float(ctx.f12.f64 / ctx.f10.f64));
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// blt ctx_arrow(ctx)->r6,0x821a8a70
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8A70;
	// fcmpu ctx_arrow(ctx)->r6,f31,f13
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f13.f64);
	// bgt ctx_arrow(ctx)->r6,0x821a8a70
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A8A70;
	// fmr f31,f0
	f31.f64 = f0.f64;
	// b 0x821a8ab4
	goto loc_821A8AB4;
loc_821A8A70:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,3908(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f31,f13
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x821a8a90
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8A90;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-14096(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// ble ctx_arrow(ctx)->r6,0x821a8ab0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8AB0;
loc_821A8A90:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f13,3060(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fcmpu ctx_arrow(ctx)->r6,f31,f13
	ctx_arrow(ctx)->r6.compare(f31.f64, ctx.f13.f64);
	// blt ctx_arrow(ctx)->r6,0x821a8ab4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8AB4;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfd f0,-14128(ctx_arrow(ctx)->r11)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f31,f0
	ctx_arrow(ctx)->r6.compare(f31.f64, f0.f64);
	// bgt ctx_arrow(ctx)->r6,0x821a8ab4
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A8AB4;
loc_821A8AB0:
	// fmr f31,f13
	ctx.fpscr.disableFlushMode();
	f31.f64 = ctx.f13.f64;
loc_821A8AB4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r9,140(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// twllei ctx_arrow(ctx)->r9,0
	// lwz ctx_arrow(ctx)->r11,1584(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r10.u32 / ctx_arrow(ctx)->r9.u32;
	// rlwinm ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,1,0,30
	ctx_arrow(ctx)->r26.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 1) & 0xFFFFFFFE;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 10, xer);
	// ble ctx_arrow(ctx)->r6,0x821a8adc
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8ADC;
	// li ctx_arrow(ctx)->r26,10
	ctx_arrow(ctx)->r26.s64 = 10;
loc_821A8ADC:
	// li ctx_arrow(ctx)->r11,7680
	ctx_arrow(ctx)->r11.s64 = 7680;
	// twllei ctx_arrow(ctx)->r28,0
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r28.u32;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// li ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r11.s64 = 6;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 6, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a8afc
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A8AFC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_821A8AFC:
	// clrldi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,32
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// std ctx_arrow(ctx)->r9,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lfd f13,88(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// frsp f12,f0
	ctx.f12.f64 = double(float(f0.f64));
	// frsp f0,f13
	f0.f64 = double(float(ctx.f13.f64));
	// fmuls f13,f12,f30
	ctx.f13.f64 = double(float(ctx.f12.f64 * f30.f64));
	// fdivs f12,f0,f13
	ctx.f12.f64 = double(float(f0.f64 / ctx.f13.f64));
	// fctidz f12,f12
	ctx.f12.s64 = (ctx.f12.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f12.f64));
	// stfiwx f12,0,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32);
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a8b54
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A8B54;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 6, xer);
	// ble ctx_arrow(ctx)->r6,0x821a8b68
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821A8B68;
	// li ctx_arrow(ctx)->r30,6
	ctx_arrow(ctx)->r30.s64 = 6;
	// b 0x821a8b68
	goto loc_821A8B68;
loc_821A8B54:
	// fdivs f0,f0,f13
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(float(f0.f64 / ctx.f13.f64));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r11
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32);
	// lwz ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A8B68:
	// lwz ctx_arrow(ctx)->r31,436(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,1408
	ctx_arrow(ctx)->r5.s64 = 1408;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r15)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r14.u64;
	// fmr f1,f31
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f31.f64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,652
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 652;
	// bl 0x821a85e0
	sub_821A85E0(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r20)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r6,428(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// fmr f1,f30
	ctx.fpscr.disableFlushMode();
	ctx.f1.f64 = f30.f64;
	// bl 0x821a85e0
	sub_821A85E0(ctx, base);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,3
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r28.s64 + 3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r21,16,16,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r21.u32 | (ctx_arrow(ctx)->r21.u64 << 32), 16) & 0xFFFF;
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,30,2,31
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 30) & 0x3FFFFFFF;
	// lwz ctx_arrow(ctx)->r8,648(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,16
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r21.u32 & 0xFFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 31;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 1;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0,0,30
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 0) & 0xFFFFFFFE;
	// subf ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r18.s64 - ctx_arrow(ctx)->r23.s64;
	// cntlzw ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r29.u32);
	// stw ctx_arrow(ctx)->r11,1348(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1348);
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r16.s64 - ctx_arrow(ctx)->r22.s64;
	// stw ctx_arrow(ctx)->r7,1360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1360);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + -1;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r17,20
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r17.u32 & 0xFFF;
	// stw ctx_arrow(ctx)->r6,1344(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1344);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r7.s64 + -1;
	// stw ctx_arrow(ctx)->r11,1332(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1332);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4,27,31,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r4.u32 | (ctx_arrow(ctx)->r4.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r11,1336(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1336);
	// rlwimi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,8,20,23
	ctx_arrow(ctx)->r6.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r23.u32, 8) & 0xF00) | (ctx_arrow(ctx)->r6.u64 & 0xFFFFFFFFFFFFF0FF);
	// rlwinm ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28,16,4,15
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 16) & 0xFFF0000;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24,20
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u32 & 0xFFF;
	// rlwinm ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r19,16,4,15
	ctx_arrow(ctx)->r24.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r19.u32 | (ctx_arrow(ctx)->r19.u64 << 32), 16) & 0xFFF0000;
	// or ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r4.u64 | ctx_arrow(ctx)->r28.u64;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u32 & 0x3FF;
	// or ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r24.u64 | ctx_arrow(ctx)->r22.u64;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 - ctx_arrow(ctx)->r27.s64;
	// subf ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 - ctx_arrow(ctx)->r25.s64;
	// stw ctx_arrow(ctx)->r4,1356(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1356);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,0,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFE0;
	// stw ctx_arrow(ctx)->r5,1404(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1404);
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u32 & 0xFFF;
	// stw ctx_arrow(ctx)->r28,1352(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1352);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27,20
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u32 & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25,20
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u32 & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r26,20
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r26.u32 & 0xFFF;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,4
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r7.s64 + 4;
	// stw ctx_arrow(ctx)->r10,1340(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1340);
	// stw ctx_arrow(ctx)->r10,1320(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1320);
	// stw ctx_arrow(ctx)->r4,1304(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1304);
	// andi. ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,3847
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 & 3847;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 0, xer);
	// stw ctx_arrow(ctx)->r5,1308(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1308);
	// stw ctx_arrow(ctx)->r3,1312(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1312);
	// stw ctx_arrow(ctx)->r28,1316(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1316);
	// stw ctx_arrow(ctx)->r6,1364(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1364);
	// lwz ctx_arrow(ctx)->r10,648(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,5,6,26
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 5) & 0x3FFFFE0;
	// stw ctx_arrow(ctx)->r10,1376(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1376);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// slw ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r7.u64 = ASSIGN_ARRAY_U8(ctx_arrow(ctx)->r7, 0, BINARY_OP_U8(ctx_arrow(ctx)->r7, 0, &, 0x20 ? 0 : (ctx_arrow(ctx)->r8.u32 << (ctx.PPCRegister_u8(ctx_arrow(ctx)->r7) & 0x3F)), 0));
	// clrlwi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u32 & 0x3FFFFFF;
	// lfs f11,25740(ctx_arrow(ctx)->r10)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f0,15940(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,256
	ctx_arrow(ctx)->r10.s64 = 16777216;
	// stw ctx_arrow(ctx)->r11,1372(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1372);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r7,1392(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1392);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// stw ctx_arrow(ctx)->r10,1388(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1388);
	// lwz ctx_arrow(ctx)->r11,648(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f13,96(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f12,88(ctx_arrow(ctx)->r1)
	ctx.f12.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// fcfid f12,f12
	ctx.f12.f64 = double(ctx.f12.s64);
	// frsp f13,f13
	ctx.f13.f64 = double(float(ctx.f13.f64));
	// frsp f12,f12
	ctx.f12.f64 = double(float(ctx.f12.f64));
	// fmadds f12,f13,f11,f12
	ctx.f12.f64 = double(float(ctx.f13.f64 * ctx.f11.f64 + ctx.f12.f64));
	// lfs f13,2776(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// fadds f10,f12,f13
	ctx.f10.f64 = double(float(ctx.f12.f64 + ctx.f13.f64));
	// lfs f12,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// fmadds f10,f10,f0,f12
	ctx.f10.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f12.f64));
	// fctidz f10,f10
	ctx.f10.s64 = (ctx.f10.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f10.f64));
	// stfiwx f10,0,ctx_arrow(ctx)->r6
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,12,22
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0xFFE00;
	// stw ctx_arrow(ctx)->r11,1380(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1380);
	// beq ctx_arrow(ctx)->r6,0x821a8da8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8DA8;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF;
	// clrldi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,32
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// std ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r9,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfs f9,-14104(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f9.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lfs f8,-14108(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f8.f64 = double(temp.f32);
	// lfd f11,96(ctx_arrow(ctx)->r1)
	ctx.f11.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f10,88(ctx_arrow(ctx)->r1)
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f11,f11
	ctx.f11.f64 = double(ctx.f11.s64);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// frsp f11,f11
	ctx.f11.f64 = double(float(ctx.f11.f64));
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// fmadds f9,f11,f9,f10
	ctx.f9.f64 = double(float(ctx.f11.f64 * ctx.f9.f64 + ctx.f10.f64));
	// fmadds f11,f11,f8,f10
	ctx.f11.f64 = double(float(ctx.f11.f64 * ctx.f8.f64 + ctx.f10.f64));
	// fadds f10,f9,f13
	ctx.f10.f64 = double(float(ctx.f9.f64 + ctx.f13.f64));
	// fadds f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 + ctx.f13.f64));
	// fmadds f11,f10,f0,f12
	ctx.f11.f64 = double(float(ctx.f10.f64 * f0.f64 + ctx.f12.f64));
	// fmadds f0,f13,f0,f12
	f0.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f12.f64));
	// fctidz f13,f11
	ctx.f13.s64 = (ctx.f11.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&ctx.f11.f64));
	// stfiwx f13,0,ctx_arrow(ctx)->r8
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r8.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,13,22
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x7FE00;
	// stfiwx f0,0,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32);
	// stw ctx_arrow(ctx)->r11,1396(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1396);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,13,22
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x7FE00;
	// stw ctx_arrow(ctx)->r11,1400(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1400);
	// b 0x821a8df4
	goto loc_821A8DF4;
loc_821A8DA8:
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// std ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// std ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f10,96(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	ctx.f10.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f9,88(ctx_arrow(ctx)->r1)
	ctx.f9.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f10,f10
	ctx.f10.f64 = double(ctx.f10.s64);
	// fcfid f9,f9
	ctx.f9.f64 = double(ctx.f9.s64);
	// frsp f10,f10
	ctx.f10.f64 = double(float(ctx.f10.f64));
	// frsp f9,f9
	ctx.f9.f64 = double(float(ctx.f9.f64));
	// fmadds f11,f10,f11,f9
	ctx.f11.f64 = double(float(ctx.f10.f64 * ctx.f11.f64 + ctx.f9.f64));
	// fadds f13,f11,f13
	ctx.f13.f64 = double(float(ctx.f11.f64 + ctx.f13.f64));
	// fmadds f0,f13,f0,f12
	f0.f64 = double(float(ctx.f13.f64 * f0.f64 + ctx.f12.f64));
	// fctidz f0,f0
	f0.s64 = (f0.f64 > double(LLONG_MAX)) ? LLONG_MAX : _mm_cvttsd_si64(_mm_load_sd(&f0.f64));
	// stfiwx f0,0,ctx_arrow(ctx)->r9
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,9,13,22
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0x7FE00;
	// stw ctx_arrow(ctx)->r11,1396(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 1396);
loc_821A8DF4:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// lfd f30,-168(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f30.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f31,-160(ctx_arrow(ctx)->r1)
	f31.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x823ed150
	return;
}

alias(__imp__sub_821A8E08) PPC_WEAK_FUNC(sub_821A8E08);
PPC_FUNC_IMPL(__imp__sub_821A8E08) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-2464(ctx_arrow(ctx)->r1)
	ea = -2464 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x821a72f0
	sub_821A72F0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,132(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r6.s64;
	// lwz ctx_arrow(ctx)->r11,140(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,21532(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,21524(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r5.s64;
	// lwz ctx_arrow(ctx)->r11,144(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r8.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821a8e84
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A8E84;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a8e68
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8E68;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a8e68
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A8E68;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A8E68:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821a8e84
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A8E84;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821a8e84
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821A8E84;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r11.s64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64;
	// rlwinm ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,31,1,31
	ctx_arrow(ctx)->r6.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 31) & 0x7FFFFFFF;
loc_821A8E84:
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// lwz ctx_arrow(ctx)->r10,148(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r8,21528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30,16
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u32 & 0xFFFF;
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 16) & 0xFFFF0000;
	// subf ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7,31,1,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 31) & 0x7FFFFFFF;
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30,31,1,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 31) & 0x7FFFFFFF;
	// clrlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29,16
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u32 & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// rlwimi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4,16,0,15
	ctx_arrow(ctx)->r30.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r4.u32, 16) & 0xFFFF0000) | (ctx_arrow(ctx)->r30.u64 & 0xFFFFFFFF0000FFFF);
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u32 & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r3.u32 & 0xFFFF;
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFF;
	// rlwimi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r5.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 16) & 0xFFFF0000) | (ctx_arrow(ctx)->r5.u64 & 0xFFFFFFFF0000FFFF);
	// lwz ctx_arrow(ctx)->r11,152(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r6.u32 & 0xFFFF;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,992
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 992;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,172
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 172;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// clrlwi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7,16
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u32 & 0xFFFF;
	// lwz ctx_arrow(ctx)->r11,168(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwimi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,16,0,15
	ctx_arrow(ctx)->r4.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 16) & 0xFFFF0000) | (ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF0000FFFF);
	// stw ctx_arrow(ctx)->r9,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,156
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 156;
	// stw ctx_arrow(ctx)->r6,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// stw ctx_arrow(ctx)->r3,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// or ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64 | ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r30.u64;
	// rlwimi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r29.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 16) & 0xFFFF0000) | (ctx_arrow(ctx)->r29.u64 & 0xFFFFFFFF0000FFFF);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821a88c0
	sub_821A88C0(ctx, base);
	// lis ctx_arrow(ctx)->r5,-32768
	ctx_arrow(ctx)->r5.s64 = -2147483648;
	// li ctx_arrow(ctx)->r4,800
	ctx_arrow(ctx)->r4.s64 = 800;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// bl 0x8240fb5c
	__imp__RtlFillMemoryUlong(ctx, base);
	// li ctx_arrow(ctx)->r4,220
	ctx_arrow(ctx)->r4.s64 = 220;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,136(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,172
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 172;
	// lwz ctx_arrow(ctx)->r8,140(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,992
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 992;
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// lwz ctx_arrow(ctx)->r10,132(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r10.s64;
	// clrlwi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r10.u32 & 0xFFFF;
	// stw ctx_arrow(ctx)->r6,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u32 & 0xFFFF;
	// stw ctx_arrow(ctx)->r7,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r9,200
	ctx_arrow(ctx)->r9.s64 = 200;
	// clrlwi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r8,16
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r8.u32 & 0xFFFF;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwimi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,16,0,15
	ctx_arrow(ctx)->r26.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 16) & 0xFFFF0000) | (ctx_arrow(ctx)->r26.u64 & 0xFFFFFFFF0000FFFF);
	// stw ctx_arrow(ctx)->r9,108(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 108);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// or ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r5.u64 | ctx_arrow(ctx)->r27.u64;
	// rlwimi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,16,0,15
	ctx_arrow(ctx)->r4.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 16) & 0xFFFF0000) | (ctx_arrow(ctx)->r4.u64 & 0xFFFFFFFF0000FFFF);
	// stw ctx_arrow(ctx)->r8,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,156
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 156;
	// lwz ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r8,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// bl 0x8240fb4c
	__imp__VdInitializeScalerCommandBuffer(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r28.u64;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,2464
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 2464;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821A8FD8) PPC_WEAK_FUNC(sub_821A8FD8);
PPC_FUNC_IMPL(__imp__sub_821A8FD8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,14812(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821a9018
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A9018;
	// lwz ctx_arrow(ctx)->r10,40(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0x2;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,19
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,19,19,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 19) & 0x1FFF;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r10.u64;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// b 0x821a9020
	goto loc_821A9020;
loc_821A9018:
	// lwz ctx_arrow(ctx)->r30,13528(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,13532(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_821A9020:
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,13708
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 13708;
	// li ctx_arrow(ctx)->r5,56
	ctx_arrow(ctx)->r5.s64 = 56;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lbz ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stb ctx_arrow(ctx)->r11,10942(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 10942, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x821a7490
	sub_821A7490(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A9058) PPC_WEAK_FUNC(sub_821A9058);
PPC_FUNC_IMPL(__imp__sub_821A9058) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821a7418
	sub_821A7418(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821a8fd8
	sub_821A8FD8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A9088) PPC_WEAK_FUNC(sub_821A9088);
PPC_FUNC_IMPL(__imp__sub_821A9088) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-2192(ctx_arrow(ctx)->r1)
	ea = -2192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x8240fb9c
	__imp__KeEnterCriticalRegion(ctx, base);
	// lis ctx_arrow(ctx)->r28,-32256
	ctx_arrow(ctx)->r28.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r3,1560(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8240f8bc
	__imp__RtlEnterCriticalSection(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a90c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A90C0;
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8240fb8c
	__imp__VdRetrainEDRAMWorker(ctx, base);
loc_821A90C0:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r8,2048
	ctx_arrow(ctx)->r8.s64 = 2048;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// li ctx_arrow(ctx)->r5,4096
	ctx_arrow(ctx)->r5.s64 = 4096;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8240fb7c
	__imp__VdRetrainEDRAM(ctx);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a9158
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A9158;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a9100
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A9100;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d958
	sub_8219D958(ctx, base);
loc_821A9100:
	// li ctx_arrow(ctx)->r4,4096
	ctx_arrow(ctx)->r4.s64 = 4096;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r8,2048
	ctx_arrow(ctx)->r8.s64 = 2048;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// li ctx_arrow(ctx)->r5,4096
	ctx_arrow(ctx)->r5.s64 = 4096;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x8240fb7c
	__imp__VdRetrainEDRAM(ctx);
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// bl 0x8219d958
	sub_8219D958(&ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a9100
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A9100;
loc_821A9158:
	// lwz ctx_arrow(ctx)->r3,1560(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8240f8ac
	__imp__RtlLeaveCriticalSection(ctx, base);
	// bl 0x8240fb6c
	__imp__KeLeaveCriticalRegion(ctx, base);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,2192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 2192;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821A9170) PPC_WEAK_FUNC(sub_821A9170);
PPC_FUNC_IMPL(__imp__sub_821A9170) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stb ctx_arrow(ctx)->r11,-9521(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -9521, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// blr 
	return;
}

alias(__imp__sub_821A9188) PPC_WEAK_FUNC(sub_821A9188);
PPC_FUNC_IMPL(__imp__sub_821A9188) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stb ctx_arrow(ctx)->r11,-9521(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -9521, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// blr 
	return;
}

alias(__imp__sub_821A91A0) PPC_WEAK_FUNC(sub_821A91A0);
PPC_FUNC_IMPL(__imp__sub_821A91A0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x823f0660
	sub_823F0660(&ctx);
	// lis ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 65536;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r3.s64;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821A91D8) PPC_WEAK_FUNC(sub_821A91D8);
PPC_FUNC_IMPL(__imp__sub_821A91D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x823f0660
	sub_823F0660(ctx, base);
	// lis ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 131072;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32728
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 32728;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821a920c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821A920C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823f0660
	sub_823F0660(ctx, base);
	// extsw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s32;
loc_821A920C:
	// lis ctx_arrow(ctx)->r10,-32018
	ctx_arrow(ctx)->r10.s64 = -2098331648;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stw ctx_arrow(ctx)->r11,-31940(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + -31940);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A9230) PPC_WEAK_FUNC(sub_821A9230);
PPC_FUNC_IMPL(__imp__sub_821A9230) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-9784
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -9784;
	// li ctx_arrow(ctx)->r5,260
	ctx_arrow(ctx)->r5.s64 = 260;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stb ctx_arrow(ctx)->r11,262(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 262, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A9278) PPC_WEAK_FUNC(sub_821A9278);
PPC_FUNC_IMPL(__imp__sub_821A9278) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stb ctx_arrow(ctx)->r11,-9523(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -9523, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// blr 
	return;
}

alias(__imp__sub_821A9290) PPC_WEAK_FUNC(sub_821A9290);
PPC_FUNC_IMPL(__imp__sub_821A9290) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// stb ctx_arrow(ctx)->r11,-9524(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -9524, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// blr 
	return;
}

alias(__imp__sub_821A92A8) PPC_WEAK_FUNC(sub_821A92A8);
PPC_FUNC_IMPL(__imp__sub_821A92A8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCRegister r11{};
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,21680
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 21680;
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// li ctx_arrow(ctx)->r10,41
	ctx_arrow(ctx)->r10.s64 = 41;
	// mtctr ctx_arrow(ctx)->r10
	ctr.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A92B8:
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bdnz 0x821a92b8
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821A92B8;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// blr 
	return;
}

alias(__imp__sub_821A92D0) PPC_WEAK_FUNC(sub_821A92D0);
PPC_FUNC_IMPL(__imp__sub_821A92D0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-688(ctx_arrow(ctx)->r1)
	ea = -688 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-6440
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -6440;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,6
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 6;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// lis ctx_arrow(ctx)->r25,-32038
	ctx_arrow(ctx)->r25.s64 = -2099642368;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,54
	ctx_arrow(ctx)->r5.s64 = 54;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,90
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 90;
	// ori ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,7
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r25.u64 | 7;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lhz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r10.u32 + 8);
	// sth ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r1.u32 + 88, ctx_arrow(ctx)->r11, 0);
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32229
	ctx_arrow(ctx)->r10.s64 = -2112159744;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-28304
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -28304;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-6456
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -6456;
	// li ctx_arrow(ctx)->r5,51
	ctx_arrow(ctx)->r5.s64 = 51;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,161
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 161;
	// stw ctx_arrow(ctx)->r10,144(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 144);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,148(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 148);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,152(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 152);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,156(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 156);
	// stb ctx_arrow(ctx)->r11,160(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 160, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32229
	ctx_arrow(ctx)->r10.s64 = -2112159744;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-28280
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -28280;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-6468
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -6468;
	// li ctx_arrow(ctx)->r5,54
	ctx_arrow(ctx)->r5.s64 = 54;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,226
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 226;
	// stw ctx_arrow(ctx)->r10,212(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 212);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,216(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 8);
	// stw ctx_arrow(ctx)->r10,220(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 220);
	// sth ctx_arrow(ctx)->r11,224(ctx_arrow(ctx)->r1)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r1.u32 + 224, ctx_arrow(ctx)->r11, 0);
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32229
	ctx_arrow(ctx)->r10.s64 = -2112159744;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-28256
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -28256;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-6488
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -6488;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,284
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 284;
	// stw ctx_arrow(ctx)->r10,280(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 280);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// li ctx_arrow(ctx)->r11,19
	ctx_arrow(ctx)->r11.s64 = 19;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A93C8:
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// stb ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r9.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// bdnz 0x821a93c8
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821A93C8;
	// li ctx_arrow(ctx)->r5,45
	ctx_arrow(ctx)->r5.s64 = 45;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,303
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 303;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lis ctx_arrow(ctx)->r10,-32229
	ctx_arrow(ctx)->r10.s64 = -2112159744;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-6516
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -6516;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-28200
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -28200;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// li ctx_arrow(ctx)->r5,27
	ctx_arrow(ctx)->r5.s64 = 27;
	// stw ctx_arrow(ctx)->r11,348(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 348);
	// bl 0x823ee010
	sub_823EE010(&ctx);
	// li ctx_arrow(ctx)->r5,37
	ctx_arrow(ctx)->r5.s64 = 37;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,379
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 379;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lis ctx_arrow(ctx)->r10,-32229
	ctx_arrow(ctx)->r10.s64 = -2112159744;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-6544
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -6544;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,-28112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + -28112;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,420
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 420;
	// li ctx_arrow(ctx)->r5,25
	ctx_arrow(ctx)->r5.s64 = 25;
	// stw ctx_arrow(ctx)->r11,416(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 416);
	// bl 0x823ee010
	sub_823EE010(&ctx);
	// li ctx_arrow(ctx)->r5,39
	ctx_arrow(ctx)->r5.s64 = 39;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,445
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 445;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32229
	ctx_arrow(ctx)->r10.s64 = -2112159744;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-28016
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -28016;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-6560
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -6560;
	// li ctx_arrow(ctx)->r5,49
	ctx_arrow(ctx)->r5.s64 = 49;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,503
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 503;
	// stw ctx_arrow(ctx)->r10,484(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 484);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,488(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 488);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,492(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 492);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,496(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 496);
	// lhz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r11.u32 + 12);
	// lbz ctx_arrow(ctx)->r11,14(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// sth ctx_arrow(ctx)->r10,500(ctx_arrow(ctx)->r1)
	PPC_STORE_U16(ctx_arrow(ctx)->r1.u32 + 500, ctx_arrow(ctx)->r10.u16);
	// stb ctx_arrow(ctx)->r11,502(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 502, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r10,-32229
	ctx_arrow(ctx)->r10.s64 = -2112159744;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-28040
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -28040;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-6576
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -6576;
	// li ctx_arrow(ctx)->r5,51
	ctx_arrow(ctx)->r5.s64 = 51;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,569
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 569;
	// stw ctx_arrow(ctx)->r10,552(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 552);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,556(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 556);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,560(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 560);
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,564(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 564);
	// stb ctx_arrow(ctx)->r11,568(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 568, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32229
	ctx_arrow(ctx)->r11.s64 = -2112159744;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-28016
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -28016;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r11,620(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 620);
loc_821A94F0:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821A94F8:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a94f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A94F8;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// rotlwi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee630
	sub_823EE630(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a955c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A955C;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,68
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 68;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 8, xer);
	// blt ctx_arrow(ctx)->r6,0x821a94f0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A94F0;
loc_821A953C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-14360
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -14360;
loc_821A9544:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,688
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 688;
	// b 0x823ed17c
	return;
loc_821A955C:
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,68
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r29.s64 * 68;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lis ctx_arrow(ctx)->r25,730
	ctx_arrow(ctx)->r25.s64 = 47841280;
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821a953c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A953C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-6584
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -6584;
	// b 0x821a9544
	goto loc_821A9544;
}

alias(__imp__sub_821A9590) PPC_WEAK_FUNC(sub_821A9590);
PPC_FUNC_IMPL(__imp__sub_821A9590) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r6.u64;
	// li ctx_arrow(ctx)->r8,4096
	ctx_arrow(ctx)->r8.s64 = 4096;
	// li ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = -1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,1028
	ctx_arrow(ctx)->r5.s64 = 1028;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// bl 0x8240fbac
	__imp__MmAllocatePhysicalMemoryEx(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x821a9600
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A9600;
	// lis ctx_arrow(ctx)->r4,-18048
	ctx_arrow(ctx)->r4.s64 = -1182793728;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a95f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A95F0;
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
	// b 0x821a9600
	goto loc_821A9600;
loc_821A95F0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821a9600
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A9600;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r30,2
	ctx_arrow(ctx)->r30.s64 = 2;
loc_821A9600:
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_821A9610) PPC_WEAK_FUNC(sub_821A9610);
PPC_FUNC_IMPL(__imp__sub_821A9610) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3,21660
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r3.s64 + 21660;
	// lwz ctx_arrow(ctx)->r3,592(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a9658
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A9658;
	// lwz ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,4
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821a9650
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821A9650;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// bl 0x8240f8fc
	__imp__MmFreePhysicalMemory(ctx, base);
	// b 0x821a9658
	goto loc_821A9658;
loc_821A9650:
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821A9658:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r30,-20096
	ctx_arrow(ctx)->r30.s64 = -1317011456;
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a9694
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A9694;
	// lwz ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3FFFFFFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 30;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x821a9688
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A9688;
	// bne ctx_arrow(ctx)->r6,0x821a9694
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A9694;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// b 0x821a9694
	goto loc_821A9694;
loc_821A9688:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// bl 0x8240f8fc
	__imp__MmFreePhysicalMemory(ctx, base);
loc_821A9694:
	// lwz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821a96d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821A96D0;
	// lwz ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3FFFFFFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 30;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x821a96c4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821A96C4;
	// bne ctx_arrow(ctx)->r6,0x821a96d0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A96D0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// b 0x821a96d0
	goto loc_821A96D0;
loc_821A96C4:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// bl 0x8240f8fc
	__imp__MmFreePhysicalMemory(ctx, base);
loc_821A96D0:
	// li ctx_arrow(ctx)->r5,620
	ctx_arrow(ctx)->r5.s64 = 620;
	// lwz ctx_arrow(ctx)->r30,616(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,20
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 20;
	// li ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = -1;
	// stw ctx_arrow(ctx)->r30,616(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 616);
	// li ctx_arrow(ctx)->r10,41
	ctx_arrow(ctx)->r10.s64 = 41;
	// mtctr ctx_arrow(ctx)->r10
	ctr.u64 = ctx_arrow(ctx)->r10.u64;
loc_821A96F8:
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4;
	// bdnz 0x821a96f8
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821A96F8;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821A9720) PPC_WEAK_FUNC(sub_821A9720);
PPC_FUNC_IMPL(__imp__sub_821A9720) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	PPCRegister temp{};
	uint32_t ea{};
	// lwz ctx_arrow(ctx)->r7,-1380(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a974c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A974C;
	// ld ctx_arrow(ctx)->r7,-1376(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpdi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int64_t>(ctx_arrow(ctx)->r7.s64, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821a974c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A974C;
	// stfs f1,496(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.f32 = float(ctx.f1.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 496);
	// lwz ctx_arrow(ctx)->r8,484(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r8,492(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 492);
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// stw ctx_arrow(ctx)->r8,512(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 512);
loc_821A974C:
	// blr 
	return;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x821a9764
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A9764;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x821a9768
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A9768;
loc_821A9764:
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
loc_821A9768:
	// b 0x820f7750
	// ERROR 820F7750
	return;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x821a9780
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821A9780;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,6
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r26.s32, 6, xer);
	// bne ctx_arrow(ctx)->r6,0x821a9784
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A9784;
loc_821A9780:
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
loc_821A9784:
	// b 0x820f7d04
	// ERROR 820F7D04
	return;
	// xori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,43
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64 ^ 43;
	// lis ctx_arrow(ctx)->r28,-32190
	ctx_arrow(ctx)->r28.s64 = -2109603840;
	// stbu ctx_arrow(ctx)->r11,569(ctx_arrow(ctx)->r28)
	ea = 569 + ctx_arrow(ctx)->r28.u32;
	PPC_STORE_U8_FUNC(&ctx, ea, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	ctx_arrow(ctx)->r28.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// b 0x8209f5f4
	// ERROR 8209F5F4
	return;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x821a97ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A97AC;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
loc_821A97AC:
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r28.u64;
	// b 0x820c4918
	// ERROR 820C4918
	return;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x821a97c0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A97C0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
loc_821A97C0:
	// stw ctx_arrow(ctx)->r10,-1604(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -1604);
	// b 0x820c7454
	// ERROR 820C7454
	return;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// bne ctx_arrow(ctx)->r6,0x821a97d4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A97D4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
loc_821A97D4:
	// stw ctx_arrow(ctx)->r10,-1604(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + -1604);
	// b 0x820c7430
	// ERROR 820C7430
	return;
	// extsh ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r4.s64 = PPCRegister_s16(ctx_arrow(ctx)->r11);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r6,19944(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r3,19936(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82144920
	sub_82144920(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x820a3e9c
	// ERROR 820A3E9C
	return;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r6.s64 + 16;
	// lvlx v12,0,ctx_arrow(ctx)->r5
	temp.u32 = ctx_arrow(ctx)->r5.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,424
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 + 424;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r5.s64 + 16;
	// lfs f11,16024(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f11,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v0,0,ctx_arrow(ctx)->r8
	temp.u32 = ctx_arrow(ctx)->r8.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// li ctx_arrow(ctx)->r8,12
	ctx_arrow(ctx)->r8.s64 = 12;
	// lfs f0,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,96(ctx_arrow(ctx)->r1)
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-6632
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -6632;
	// fcfid f0,f0
	f0.f64 = double(f0.s64);
	// lvlx v11,0,ctx_arrow(ctx)->r7
	temp.u32 = ctx_arrow(ctx)->r7.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v0,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// li ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = 16;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// li ctx_arrow(ctx)->r7,48
	ctx_arrow(ctx)->r7.s64 = 48;
	// frsp f0,f0
	f0.f64 = double(float(f0.f64));
	// fdivs f10,f13,f0
	ctx.f10.f64 = double(float(ctx.f13.f64 / f0.f64));
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v10,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// fmuls f0,f0,f12
	f0.f64 = double(float(f0.f64 * ctx.f12.f64));
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// vrlimi128 v10,v12,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// lvlx v0,0,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64;
	// stfs f10,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// lvlx v12,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	// vrlimi128 v0,v12,4,3
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v12,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vor v10,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// vrlimi128 v12,v13,3,2
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// vrlimi128 v10,v11,3,2
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 78), 3));
	// vor v0,v12,v12
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)));
	// vor v13,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// stvlx v0,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,440
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 440;
	// stvrx v0,0,ctx_arrow(ctx)->r27
	ea = ctx_arrow(ctx)->r27.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lvrx v0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// lvlx v12,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vor v0,v12,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// stvlx v0,0,ctx_arrow(ctx)->r5
	ea = ctx_arrow(ctx)->r5.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v0,0,ctx_arrow(ctx)->r26
	ea = ctx_arrow(ctx)->r26.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lvrx v0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// li ctx_arrow(ctx)->r28,32
	ctx_arrow(ctx)->r28.s64 = 32;
	// lvlx v12,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,456
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 456;
	// vor v0,v12,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r6.s64 + 16;
	// stvlx v0,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,472
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 472;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stvrx v0,0,ctx_arrow(ctx)->r19
	ea = ctx_arrow(ctx)->r19.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lvlx v12,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// lvrx v0,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r30.u32 + ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vor v0,v12,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,488
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 + 488;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stvrx v0,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r27
	temp.u32 = ctx_arrow(ctx)->r27.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v12,0,ctx_arrow(ctx)->r26
	temp.u32 = ctx_arrow(ctx)->r26.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f10,-6420(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v11,0,ctx_arrow(ctx)->r25
	temp.u32 = ctx_arrow(ctx)->r25.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f10,-6424(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f10,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v10,0,ctx_arrow(ctx)->r24
	temp.u32 = ctx_arrow(ctx)->r24.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stvrx v0,0,ctx_arrow(ctx)->r3
	ea = ctx_arrow(ctx)->r3.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f10,12468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r23
	temp.u32 = ctx_arrow(ctx)->r23.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v11,0,ctx_arrow(ctx)->r21
	temp.u32 = ctx_arrow(ctx)->r21.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f10,12272(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r5.s64 + 16;
	// stfs f10,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lvlx v12,0,ctx_arrow(ctx)->r22
	temp.u32 = ctx_arrow(ctx)->r22.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v10,0,ctx_arrow(ctx)->r20
	temp.u32 = ctx_arrow(ctx)->r20.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r30
	ea = ctx_arrow(ctx)->r30.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stvrx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f10,14492(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f10,12900(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32255
	ctx_arrow(ctx)->r11.s64 = -2113863680;
	// stfs f10,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v12,0,ctx_arrow(ctx)->r6
	temp.u32 = ctx_arrow(ctx)->r6.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v10,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f10,24852(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,504
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 504;
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v11,0,ctx_arrow(ctx)->r5
	temp.u32 = ctx_arrow(ctx)->r5.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,520
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 520;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,536
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 536;
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r6.s64 + 16;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stvrx v0,0,ctx_arrow(ctx)->r24
	ea = ctx_arrow(ctx)->r24.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stfs f11,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lvlx v0,0,ctx_arrow(ctx)->r5
	temp.u32 = ctx_arrow(ctx)->r5.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f11,14220(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f11,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v12,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lvlx v11,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lfs f13,17872(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f13,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v10,0,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v0,0,ctx_arrow(ctx)->r23
	ea = ctx_arrow(ctx)->r23.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// stvlx v13,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v13,0,ctx_arrow(ctx)->r22
	ea = ctx_arrow(ctx)->r22.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f0,-18432(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,552
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 552;
	// lvlx v13,0,ctx_arrow(ctx)->r27
	temp.u32 = ctx_arrow(ctx)->r27.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v12,0,ctx_arrow(ctx)->r26
	temp.u32 = ctx_arrow(ctx)->r26.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// lvlx v11,0,ctx_arrow(ctx)->r25
	temp.u32 = ctx_arrow(ctx)->r25.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lhz ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 2);
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 0);
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,5,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x7FFFFE0;
	// b 0x821a9e7c
	goto loc_821A9E7C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821a9e84
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821A9E84;
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 0);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// extsw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s32;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f0,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// std ctx_arrow(ctx)->r10,104(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 104);
	// lfd f13,104(ctx_arrow(ctx)->r1)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcfid f13,f13
	ctx.f13.f64 = double(ctx.f13.s64);
	// lvlx v11,0,ctx_arrow(ctx)->r5
	temp.u32 = ctx_arrow(ctx)->r5.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,424
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 + 424;
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f11,2692(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r5.u64;
	// stfs f11,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r5.s64 + 16;
	// lvlx v13,0,ctx_arrow(ctx)->r7
	temp.u32 = ctx_arrow(ctx)->r7.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lis ctx_arrow(ctx)->r5,-32254
	ctx_arrow(ctx)->r5.s64 = -2113798144;
	// lvlx v0,0,ctx_arrow(ctx)->r8
	temp.u32 = ctx_arrow(ctx)->r8.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// lfs f10,16024(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stfs f10,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stfs f0,88(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// frsp f12,f13
	ctx.f12.f64 = double(float(ctx.f13.f64));
	// lfs f13,-18868(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r5,-32256
	ctx_arrow(ctx)->r5.s64 = -2113929216;
	// lvlx v12,0,ctx_arrow(ctx)->r7
	temp.u32 = ctx_arrow(ctx)->r7.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lvlx v0,0,ctx_arrow(ctx)->r8
	temp.u32 = ctx_arrow(ctx)->r8.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,408
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 408;
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lis ctx_arrow(ctx)->r11,-32018
	ctx_arrow(ctx)->r11.s64 = -2098331648;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r6.s64 + 16;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-31864
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -31864;
	// li ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = 16;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// li ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 3;
	// li ctx_arrow(ctx)->r7,12
	ctx_arrow(ctx)->r7.s64 = 12;
	// fmuls f12,f12,f13
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f13.f64));
	// lfs f13,2776(ctx_arrow(ctx)->r5)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// fdivs f9,f13,f12
	ctx.f9.f64 = double(float(ctx.f13.f64 / ctx.f12.f64));
	// stfs f9,92(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// fdivs f9,f13,f12
	ctx.f9.f64 = double(float(ctx.f13.f64 / ctx.f12.f64));
	// stfs f9,96(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f9.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// lvlx v0,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// fmuls f12,f12,f11
	ctx.f12.f64 = double(float(ctx.f12.f64 * ctx.f11.f64));
	// lvlx v10,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	// vrlimi128 v10,v0,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64;
	// vrlimi128 v0,v11,4,3
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// vor v11,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vor v10,v0,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0)));
	// vrlimi128 v11,v13,3,2
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// vrlimi128 v10,v12,3,2
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vor v13,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// stvlx v0,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,440
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 440;
	// stvrx v0,0,ctx_arrow(ctx)->r27
	ea = ctx_arrow(ctx)->r27.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lvrx v0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// lvlx v12,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vor v0,v12,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// stvlx v0,0,ctx_arrow(ctx)->r26
	ea = ctx_arrow(ctx)->r26.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v0,0,ctx_arrow(ctx)->r25
	ea = ctx_arrow(ctx)->r25.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lvrx v0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// li ctx_arrow(ctx)->r28,32
	ctx_arrow(ctx)->r28.s64 = 32;
	// lvlx v12,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	temp.u32 = ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r11.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,456
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 456;
	// vor v0,v12,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r6.s64 + 16;
	// stvlx v0,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stvrx v0,0,ctx_arrow(ctx)->r19
	ea = ctx_arrow(ctx)->r19.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lvlx v12,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,472
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 472;
	// lvrx v0,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r30.u32 + ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vor v0,v12,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v12)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stvrx v0,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,488
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 + 488;
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lvlx v0,0,ctx_arrow(ctx)->r27
	temp.u32 = ctx_arrow(ctx)->r27.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lfs f12,-6420(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v12,0,ctx_arrow(ctx)->r26
	temp.u32 = ctx_arrow(ctx)->r26.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lvlx v11,0,ctx_arrow(ctx)->r25
	temp.u32 = ctx_arrow(ctx)->r25.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lfs f12,-6424(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v10,0,ctx_arrow(ctx)->r24
	temp.u32 = ctx_arrow(ctx)->r24.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stvrx v0,0,ctx_arrow(ctx)->r3
	ea = ctx_arrow(ctx)->r3.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f12,12468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r23
	temp.u32 = ctx_arrow(ctx)->r23.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v11,0,ctx_arrow(ctx)->r21
	temp.u32 = ctx_arrow(ctx)->r21.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f12,12272(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r5.s64 + 16;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lvlx v12,0,ctx_arrow(ctx)->r22
	temp.u32 = ctx_arrow(ctx)->r22.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v10,0,ctx_arrow(ctx)->r20
	temp.u32 = ctx_arrow(ctx)->r20.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r30
	ea = ctx_arrow(ctx)->r30.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lfs f12,14492(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f12,12900(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32255
	ctx_arrow(ctx)->r11.s64 = -2113863680;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v12,0,ctx_arrow(ctx)->r6
	temp.u32 = ctx_arrow(ctx)->r6.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v10,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f12,24852(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,504
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 504;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v11,0,ctx_arrow(ctx)->r5
	temp.u32 = ctx_arrow(ctx)->r5.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,520
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 520;
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,536
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 536;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r6.s64 + 16;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stvrx v0,0,ctx_arrow(ctx)->r24
	ea = ctx_arrow(ctx)->r24.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lvlx v0,0,ctx_arrow(ctx)->r5
	temp.u32 = ctx_arrow(ctx)->r5.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f12,14220(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v12,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lvlx v11,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v12,v0,4,3
	_mm_store_ps(ctx.v12.f32, _mm_blend_ps(_mm_load_ps(ctx.v12.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lfs f13,17872(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f13,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v10,0,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v10), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v10,v11,4,3
	_mm_store_ps(ctx.v10.f32, _mm_blend_ps(_mm_load_ps(ctx.v10.f32), _mm_permute_ps(_mm_load_ps(ctx.v11.f32), 57), 4));
	// vor v0,v10,v10
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v10)));
	// vrlimi128 v0,v12,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v0,0,ctx_arrow(ctx)->r23
	ea = ctx_arrow(ctx)->r23.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// stvlx v13,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v13,0,ctx_arrow(ctx)->r22
	ea = ctx_arrow(ctx)->r22.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lfs f13,28824(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f13,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f0,-18432(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,552
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 552;
	// lvlx v13,0,ctx_arrow(ctx)->r27
	temp.u32 = ctx_arrow(ctx)->r27.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v12,0,ctx_arrow(ctx)->r26
	temp.u32 = ctx_arrow(ctx)->r26.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// lvlx v11,0,ctx_arrow(ctx)->r25
	temp.u32 = ctx_arrow(ctx)->r25.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// stvrx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lhz ctx_arrow(ctx)->r11,2(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 2);
	// lhz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r9.u32 + 0);
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r10.s32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,23,9,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 23) & 0x7FFFFE;
loc_821A9E7C:
	// stw ctx_arrow(ctx)->r11,376(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 376);
	// b 0x821aa21c
	goto loc_821AA21C;
loc_821A9E84:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821aa214
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA214;
	// lis ctx_arrow(ctx)->r11,-32018
	ctx_arrow(ctx)->r11.s64 = -2098331648;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,424
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 424;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,-31768
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + -31768;
	// li ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.s64 = 16;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r9.s64 + 16;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	// lvlx v13,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// lvrx v0,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
	// vor v0,v13,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,440
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 440;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r6.s64 + 16;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r11.u64;
	// stvlx v0,0,ctx_arrow(ctx)->r9
	ea = ctx_arrow(ctx)->r9.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10,32
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r10.s64 + 32;
	// stvrx v0,0,ctx_arrow(ctx)->r19
	ea = ctx_arrow(ctx)->r19.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// li ctx_arrow(ctx)->r24,32
	ctx_arrow(ctx)->r24.s64 = 32;
	// lvlx v13,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,456
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 456;
	// lvrx v0,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r30.u32 + ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vor v0,v13,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stvlx v0,0,ctx_arrow(ctx)->r6
	ea = ctx_arrow(ctx)->r6.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,472
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 472;
	// stvrx v0,0,ctx_arrow(ctx)->r18
	ea = ctx_arrow(ctx)->r18.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lvlx v13,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r24
	temp.u32 = ctx_arrow(ctx)->r27.u32 + ctx_arrow(ctx)->r24.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lvrx v0,ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r25
	temp.u32 = ctx_arrow(ctx)->r26.u32 + ctx_arrow(ctx)->r25.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), temp.u32 & 0xF ? _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskR[(temp.u32 & 0xF) * 16])) : _mm_setzero_si128());
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// vor v0,v13,v0
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_or_si128(_mm_load_si128((__m128i*)ctx.PPCRegister_u8(v13)), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v0))));
	// li ctx_arrow(ctx)->r8,3
	ctx_arrow(ctx)->r8.s64 = 3;
	// li ctx_arrow(ctx)->r7,6
	ctx_arrow(ctx)->r7.s64 = 6;
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stvrx v0,0,ctx_arrow(ctx)->r9
	ea = ctx_arrow(ctx)->r9.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lfs f0,2688(ctx_arrow(ctx)->r11)
	ctx.fpscr.disableFlushMode();
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	f0.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r23
	temp.u32 = ctx_arrow(ctx)->r23.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v13,0,ctx_arrow(ctx)->r22
	temp.u32 = ctx_arrow(ctx)->r22.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f13,-6420(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v12,0,ctx_arrow(ctx)->r21
	temp.u32 = ctx_arrow(ctx)->r21.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f13,-6424(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,488
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 488;
	// stfs f13,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v11,0,ctx_arrow(ctx)->r20
	temp.u32 = ctx_arrow(ctx)->r20.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// stvrx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// lfs f13,14492(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r9
	temp.u32 = ctx_arrow(ctx)->r9.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f13,28808(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// stfs f13,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v13,0,ctx_arrow(ctx)->r6
	temp.u32 = ctx_arrow(ctx)->r6.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lvlx v11,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f12,2776(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v12,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,504
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 504;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stvrx v0,0,ctx_arrow(ctx)->r24
	ea = ctx_arrow(ctx)->r24.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,520
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 520;
	// lfs f12,3908(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r6
	temp.u32 = ctx_arrow(ctx)->r6.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f12,12900(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v13,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lfs f11,3060(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f11.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f11,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v12,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// lfs f10,12468(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f10,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v11,0,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stvrx v0,0,ctx_arrow(ctx)->r23
	ea = ctx_arrow(ctx)->r23.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lfs f10,-18868(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f10,17872(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stfs f10,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v13,0,ctx_arrow(ctx)->r27
	temp.u32 = ctx_arrow(ctx)->r27.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lfs f10,-18432(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f10,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v12,0,ctx_arrow(ctx)->r26
	temp.u32 = ctx_arrow(ctx)->r26.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f10,28824(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f10.f64 = double(temp.f32);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,552
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 552;
	// stfs f10,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f10.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v11,0,ctx_arrow(ctx)->r25
	temp.u32 = ctx_arrow(ctx)->r25.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r9
	ea = ctx_arrow(ctx)->r9.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 16;
	// stvrx v0,0,ctx_arrow(ctx)->r9
	ea = ctx_arrow(ctx)->r9.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r10
	temp.u32 = ctx_arrow(ctx)->r10.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v13,0,ctx_arrow(ctx)->r6
	temp.u32 = ctx_arrow(ctx)->r6.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lfs f12,2692(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v12,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f12,-6428(ctx_arrow(ctx)->r10)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v11,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 16;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,408
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 408;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// stvlx v0,0,ctx_arrow(ctx)->r11
	ea = ctx_arrow(ctx)->r11.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stvrx v0,0,ctx_arrow(ctx)->r24
	ea = ctx_arrow(ctx)->r24.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31,536
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r31.s64 + 536;
	// lfs f12,2772(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v0,0,ctx_arrow(ctx)->r6
	temp.u32 = ctx_arrow(ctx)->r6.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f11,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f11.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lvlx v12,0,ctx_arrow(ctx)->r30
	temp.u32 = ctx_arrow(ctx)->r30.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lfs f12,16004(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v13,0,ctx_arrow(ctx)->r3
	temp.u32 = ctx_arrow(ctx)->r3.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// lfs f12,25792(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f12.f64 = double(temp.f32);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// stfs f12,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f12.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v11,0,ctx_arrow(ctx)->r29
	temp.u32 = ctx_arrow(ctx)->r29.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,16
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r9.s64 + 16;
	// stvrx v0,0,ctx_arrow(ctx)->r23
	ea = ctx_arrow(ctx)->r23.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// stfs f13,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfs f13,2956(ctx_arrow(ctx)->r11)
	temp.u32 = PPC_Read_U32(ctx,  ctx);
	ctx.f13.f64 = double(temp.f32);
	// li ctx_arrow(ctx)->r11,48
	ctx_arrow(ctx)->r11.s64 = 48;
	// stfs f13,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(ctx.f13.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v0,0,ctx_arrow(ctx)->r28
	temp.u32 = ctx_arrow(ctx)->r28.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64;
	// lvlx v13,0,ctx_arrow(ctx)->r27
	temp.u32 = ctx_arrow(ctx)->r27.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v13), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// stfs f0,80(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// vrlimi128 v13,v0,4,3
	_mm_store_ps(ctx.v13.f32, _mm_blend_ps(_mm_load_ps(ctx.v13.f32), _mm_permute_ps(_mm_load_ps(ctx.v0.f32), 57), 4));
	// stfs f0,84(ctx_arrow(ctx)->r1)
	temp.f32 = float(f0.f64);
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// lvlx v12,0,ctx_arrow(ctx)->r26
	temp.u32 = ctx_arrow(ctx)->r26.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v12), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// lvlx v11,0,ctx_arrow(ctx)->r25
	temp.u32 = ctx_arrow(ctx)->r25.u32;
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v11), _mm_shuffle_epi8(_mm_load_si128((__m128i*)(base + (temp.u32 & ~0xF))), _mm_load_si128((__m128i*)&VectorMaskL[(temp.u32 & 0xF) * 16])));
	// vrlimi128 v11,v12,4,3
	_mm_store_ps(ctx.v11.f32, _mm_blend_ps(_mm_load_ps(ctx.v11.f32), _mm_permute_ps(_mm_load_ps(ctx.v12.f32), 57), 4));
	// vor v0,v11,v11
	_mm_store_si128((__m128i*)ctx.PPCRegister_u8(v0), _mm_load_si128((__m128i*)ctx.PPCRegister_u8(v11)));
	// vrlimi128 v0,v13,3,2
	_mm_store_ps(ctx.v0.f32, _mm_blend_ps(_mm_load_ps(ctx.v0.f32), _mm_permute_ps(_mm_load_ps(ctx.v13.f32), 78), 3));
	// stvlx v0,0,ctx_arrow(ctx)->r9
	ea = ctx_arrow(ctx)->r9.u32;
	for (size_t i = 0; i < (16 - (ea & 0xF)); i++)
		PPC_Write_U8(ctx,  ctx, ea + i)[15 - i]);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64;
	// stvrx v0,0,ctx_arrow(ctx)->r10
	ea = ctx_arrow(ctx)->r10.u32;
	for (size_t i = 0; i < (ea & 0xF); i++)
		PPC_Write_U8(ctx,  ctx, ea - i - 1)[i]);
	// lhz ctx_arrow(ctx)->r10,2(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r5.u32 + 2);
	// lhz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r5.u32 + 0);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-48
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -48;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -80;
	// divwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r10.u32 = ctx_arrow(ctx)->r10.u32 / ctx_arrow(ctx)->r6.u32;
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r9.u32;
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r10.s32) * int64_t(ctx_arrow(ctx)->r11.s32);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,6,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 6) & 0xFFFFFFC0;
	// b 0x821a9e7c
	goto loc_821A9E7C;
loc_821AA214:
	// lwz ctx_arrow(ctx)->r8,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AA21C:
	// lis ctx_arrow(ctx)->r10,-32018
	ctx_arrow(ctx)->r10.s64 = -2098331648;
	// lwz ctx_arrow(ctx)->r11,376(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,260
	ctx_arrow(ctx)->r5.s64 = 260;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r10,-31940(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rldicr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10,20,63
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u64, 20) & 0xFFFFFFFFFFFFFFFF;
	// mullw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r10.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r7.s32);
	// mullw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.s64 = int64_t(ctx_arrow(ctx)->r11.s32) * int64_t(ctx_arrow(ctx)->r8.s32);
	// stw ctx_arrow(ctx)->r11,388(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 388);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,511
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 511;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,23,9,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 23) & 0x7FFFFF;
	// clrlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 & 0xFFFF;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,172
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 172;
	// sth ctx_arrow(ctx)->r11,14(ctx_arrow(ctx)->r31)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r31.u32 + 14, ctx_arrow(ctx)->r11, 0);
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,9,0,22
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 9) & 0xFFFFFE00;
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// stb ctx_arrow(ctx)->r27,371(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 371, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r27), 0);
loc_821AA270:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aa270
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA270;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821aa2c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AA2C0;
loc_821AA2A4:
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,92
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 92, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa2c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA2C0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821aa2a4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AA2A4;
loc_821AA2C0:
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// stb ctx_arrow(ctx)->r27,1(ctx_arrow(ctx)->r11)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r11.u32 + 1, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r27), 0);
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 104;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8235ebb0
	sub_8235EBB0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821aa30c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA30C;
	// lis ctx_arrow(ctx)->r10,640
	ctx_arrow(ctx)->r10.s64 = 41943040;
	// ld ctx_arrow(ctx)->r11,104(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r10.u64;
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, ctx_arrow(ctx)->r9.u64, xer);
	// bge ctx_arrow(ctx)->r6,0x821aa30c
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AA30C;
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, ctx_arrow(ctx)->r10.u64, xer);
	// ble ctx_arrow(ctx)->r6,0x821aa308
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AA308;
	// lis ctx_arrow(ctx)->r10,-640
	ctx_arrow(ctx)->r10.s64 = -41943040;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// b 0x821aa30c
	goto loc_821AA30C;
loc_821AA308:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r27.u64;
loc_821AA30C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,2048
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 2048;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// cmpld ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, ctx_arrow(ctx)->r30.u64, xer);
	// ble ctx_arrow(ctx)->r6,0x821aa328
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AA328;
	// lis ctx_arrow(ctx)->r3,-32768
	ctx_arrow(ctx)->r3.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 16389;
	// b 0x821aa454
	goto loc_821AA454;
loc_821AA328:
	// lis ctx_arrow(ctx)->r11,-17
	ctx_arrow(ctx)->r11.s64 = -1114112;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// oris ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,65520
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r9.u64 | 4293918720;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rotlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r30.u32, 0);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r30.u64 + ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
	// divdu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 / ctx_arrow(ctx)->r8.u64;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,14,12,17
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 14) & 0xFC000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFFF03FFF);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,18,26,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x3F;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// stw ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 596);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,20,0,11
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 20) & 0xFFF00000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// stw ctx_arrow(ctx)->r10,384(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 384);
loc_821AA370:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa38c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA38C;
	// lwz ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,30
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x3FFFFFFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 30;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa390
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA390;
loc_821AA38C:
	// lwz ctx_arrow(ctx)->r4,616(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AA390:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 2) & 0xFFFFFFFC;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// add ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821a9590
	sub_821A9590(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa44c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA44C;
	// lwz ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// lwz ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// bne ctx_arrow(ctx)->r6,0x821aa3cc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA3CC;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,30,0,1
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 30) & 0xC0000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF3FFFFFFF);
	// b 0x821aa3d0
	goto loc_821AA3D0;
loc_821AA3CC:
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,28,2,3
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 28) & 0x30000000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFCFFFFFFF);
loc_821AA3D0:
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
	// stw ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 612);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 2, xer);
	// blt ctx_arrow(ctx)->r6,0x821aa370
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AA370;
	// li ctx_arrow(ctx)->r8,4096
	ctx_arrow(ctx)->r8.s64 = 4096;
	// li ctx_arrow(ctx)->r7,-1
	ctx_arrow(ctx)->r7.s64 = -1;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,4
	ctx_arrow(ctx)->r5.s64 = 4;
	// li ctx_arrow(ctx)->r4,1536
	ctx_arrow(ctx)->r4.s64 = 1536;
	// li ctx_arrow(ctx)->r3,2
	ctx_arrow(ctx)->r3.s64 = 2;
	// bl 0x8240fbac
	__imp__MmAllocatePhysicalMemoryEx(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,592(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 592);
	// beq 0x821aa414
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA414;
	// lwz ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,5,3
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFF7FFFFFF;
	// b 0x821aa434
	goto loc_821AA434;
loc_821AA414:
	// lis ctx_arrow(ctx)->r4,9344
	ctx_arrow(ctx)->r4.s64 = 612368384;
	// li ctx_arrow(ctx)->r3,1536
	ctx_arrow(ctx)->r3.s64 = 1536;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,592(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 592);
	// beq 0x821aa44c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA44C;
	// lwz ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 134217728;
loc_821AA434:
	// stw ctx_arrow(ctx)->r11,612(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 612);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16;
	// stb ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 608, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// b 0x821aa454
	goto loc_821AA454;
loc_821AA44C:
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
loc_821AA454:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,496
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 496;
	// b 0x823ed160
	return;
}

alias(__imp__sub_821AA460) PPC_WEAK_FUNC(sub_821AA460);
PPC_FUNC_IMPL(__imp__sub_821AA460) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r10,596(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,380(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r9,14(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r3.u32 + 14);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12,26,31
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 12) & 0x3F;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64 + ctx_arrow(ctx)->r11.u64;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,18,26,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 18) & 0x3F;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,172
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 172;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,9,0,22
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 9) & 0xFFFFFE00;
	// stw ctx_arrow(ctx)->r11,380(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 380);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r7.u32, xer);
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r11.u64;
	// bne ctx_arrow(ctx)->r6,0x821aa49c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA49C;
	// lwz ctx_arrow(ctx)->r9,384(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821aa4a0
	goto loc_821AA4A0;
loc_821AA49C:
	// lis ctx_arrow(ctx)->r9,-16
	ctx_arrow(ctx)->r9.s64 = -1048576;
loc_821AA4A0:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821aa4b8
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AA4B8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blelr ctx_arrow(ctx)->r6
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) return;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
loc_821AA4B8:
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r8,46
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r8.s64 + 46;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,0,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0xFFFFFFFC;
	// stwx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + ctx_arrow(ctx)->r3.u32);
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,12,26,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0x3F;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,18,26,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x3F;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// twllei ctx_arrow(ctx)->r9,0
	// divwu ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.u32 = ctx_arrow(ctx)->r10.u32 / ctx_arrow(ctx)->r9.u32;
	// mullw ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.s64 = int64_t(ctx_arrow(ctx)->r8.s32) * int64_t(ctx_arrow(ctx)->r9.s32);
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,20,6,11
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 20) & 0x3F00000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFFFC0FFFFF);
	// stw ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 596);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,6,11
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x3F00000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821aa50c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AA50C;
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,2048
	ctx_arrow(ctx)->r10.s64 = 2048;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 32;
	// stw ctx_arrow(ctx)->r10,380(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 380);
	// stb ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r3)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r3.u32 + 608, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// blr 
	return;
loc_821AA50C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,380(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 380);
	// blr 
	return;
}

alias(__imp__sub_821AA518) PPC_WEAK_FUNC(sub_821AA518);
PPC_FUNC_IMPL(__imp__sub_821AA518) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-2320(ctx_arrow(ctx)->r1)
	ea = -2320 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25,21660
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r25.s64 + 21660;
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821aa8a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA8A4;
	// lwz ctx_arrow(ctx)->r3,364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821aa87c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA87C;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r27,-1
	ctx_arrow(ctx)->r27.s64 = -1;
	// beq 0x821aa668
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA668;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821aa564
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA564;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8235eba8
	sub_8235EBA8(ctx, base);
loc_821AA564:
	// lwz ctx_arrow(ctx)->r28,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,588(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219d298
	sub_8219D298(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32018
	ctx_arrow(ctx)->r11.s64 = -2098331648;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// lis ctx_arrow(ctx)->r11,-31987
	ctx_arrow(ctx)->r11.s64 = -2096300032;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-15360
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -15360;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AA588:
	// mfmsr ctx_arrow(ctx)->r9
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r10,0,ctx_arrow(ctx)->r8
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r8.u32);
	ctx_arrow(ctx)->r10.u64 = __builtin_bswap32(reserved.u32);
	// stwcx. ctx_arrow(ctx)->r11,0,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r8.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r11.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r9,1
	// bne 0x821aa588
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AA588;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,6144
	ctx_arrow(ctx)->r9.s64 = 6144;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// divwu ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r9.u32;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 14, xer);
	// blt ctx_arrow(ctx)->r6,0x821aa5c0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AA5C0;
	// li ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r10.s64 = 14;
loc_821AA5C0:
	// lwz ctx_arrow(ctx)->r9,584(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// mulli ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,12
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 * 12;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// lwz ctx_arrow(ctx)->r6,380(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 12);
	// lis ctx_arrow(ctx)->r11,-25768
	ctx_arrow(ctx)->r11.s64 = -1688731648;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// ori ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,59162
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r11.u64 | 59162;
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,2,29,29
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 2) & 0x4;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9,9,0,22
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 9) & 0xFFFFFE00;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,4,30,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 4) & 0x3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0x3F;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 5;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r6,356(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 356);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,348
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 348;
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r26,360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 360);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r4.s64 + -4;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// bl 0x8235e018
	sub_8235E018(&ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821aa460
	sub_821AA460(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r3,364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235eba8
	sub_8235EBA8(ctx, base);
	// lis ctx_arrow(ctx)->r30,-31987
	ctx_arrow(ctx)->r30.s64 = -2096300032;
	// b 0x821aa658
	goto loc_821AA658;
loc_821AA650:
	// li ctx_arrow(ctx)->r3,6
	ctx_arrow(ctx)->r3.s64 = 6;
	// bl 0x8235eb58
	sub_8235EB58(ctx, base);
loc_821AA658:
	// lwz ctx_arrow(ctx)->r11,-15352(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821aa650
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA650;
loc_821AA668:
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r26,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,12,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFC000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821aa6e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA6E4;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,20
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 20;
loc_821AA680:
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821aa6b0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AA6B0;
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0x3F;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821aa6b0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AA6B0;
	// ble ctx_arrow(ctx)->r6,0x821aa6a8
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AA6A8;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r26.u64;
	// b 0x821aa6b4
	goto loc_821AA6B4;
loc_821AA6A8:
	// lwz ctx_arrow(ctx)->r4,380(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821aa6b4
	goto loc_821AA6B4;
loc_821AA6B0:
	// lwz ctx_arrow(ctx)->r4,164(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AA6B4:
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// bl 0x8235ed68
	sub_8235ED68(ctx, base);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235ecc0
	sub_8235ECC0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x3F;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,4
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821aa680
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AA680;
loc_821AA6E4:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// bl 0x8240fa5c
	__imp__VdGetCurrentDisplayInformation(ctx, base);
	// lwz ctx_arrow(ctx)->r11,604(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// srawi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 29;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821aa704
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AA704;
	// lis ctx_arrow(ctx)->r10,21415
	ctx_arrow(ctx)->r10.s64 = 1403453440;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8884
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8884;
	// b 0x821aa728
	goto loc_821AA728;
loc_821AA704:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821aa718
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA718;
	// lis ctx_arrow(ctx)->r10,21415
	ctx_arrow(ctx)->r10.s64 = 1403453440;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8885
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8885;
	// b 0x821aa728
	goto loc_821AA728;
loc_821AA718:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821aa72c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA72C;
	// lis ctx_arrow(ctx)->r10,21415
	ctx_arrow(ctx)->r10.s64 = 1403453440;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8886
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8886;
loc_821AA728:
	// stw ctx_arrow(ctx)->r10,192(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 192);
loc_821AA72C:
	// lis ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 65536;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 1;
	// stw ctx_arrow(ctx)->r10,196(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 196);
	// beq ctx_arrow(ctx)->r6,0x821aa768
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA768;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa768
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA768;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821aa788
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA788;
	// li ctx_arrow(ctx)->r10,400
	ctx_arrow(ctx)->r10.s64 = 400;
	// li ctx_arrow(ctx)->r11,224
	ctx_arrow(ctx)->r11.s64 = 224;
	// stw ctx_arrow(ctx)->r10,208(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 208);
	// stw ctx_arrow(ctx)->r11,212(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 212);
	// stw ctx_arrow(ctx)->r10,216(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// b 0x821aa784
	goto loc_821AA784;
loc_821AA768:
	// lhz ctx_arrow(ctx)->r11,368(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 368);
	// stw ctx_arrow(ctx)->r11,208(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 208);
	// lhz ctx_arrow(ctx)->r11,370(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r31.u32 + 370);
	// stw ctx_arrow(ctx)->r11,212(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 212);
	// lhz ctx_arrow(ctx)->r11,168(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 168);
	// stw ctx_arrow(ctx)->r11,216(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 216);
	// lhz ctx_arrow(ctx)->r11,170(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r1.u32 + 170);
loc_821AA784:
	// stw ctx_arrow(ctx)->r11,220(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 220);
loc_821AA788:
	// bl 0x8240f8ec
	__imp__KeQueryPerformanceFrequency(ctx);
	// lwz ctx_arrow(ctx)->r10,596(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r3,224(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 224);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,6,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 6) & 0x3F;
	// stw ctx_arrow(ctx)->r9,228(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 228);
	// clrlwi. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11,31
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821aa7b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA7B0;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// stw ctx_arrow(ctx)->r9,228(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 228);
loc_821AA7B0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821aa7c0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA7C0;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2;
	// stw ctx_arrow(ctx)->r9,228(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 228);
loc_821AA7C0:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0,0,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x80000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821aa7d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA7D0;
	// lwz ctx_arrow(ctx)->r4,592(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821aa7d4
	goto loc_821AA7D4;
loc_821AA7D0:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25,14988
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r25.s64 + 14988;
loc_821AA7D4:
	// lbz ctx_arrow(ctx)->r11,101(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,288
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 288;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821aa7f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AA7F8;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u64 | 4;
	// stw ctx_arrow(ctx)->r11,228(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 228);
	// bl 0x8219e228
	sub_8219E228(&ctx);
	// b 0x821aa7fc
	goto loc_821AA7FC;
loc_821AA7F8:
	// bl 0x8219e190
	sub_8219E190(&ctx);
loc_821AA7FC:
	// lwz ctx_arrow(ctx)->r30,596(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,232
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 232;
	// li ctx_arrow(ctx)->r5,56
	ctx_arrow(ctx)->r5.s64 = 56;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25,13708
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r25.s64 + 13708;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,0,5,5
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 0) & 0x4000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821aa818
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AA818;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,104
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 104;
loc_821AA818:
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821aa83c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA83C;
	// lwz ctx_arrow(ctx)->r11,380(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,200(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 200);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,12,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r30.u32 | (ctx_arrow(ctx)->r30.u64 << 32), 12) & 0x3F;
	// stw ctx_arrow(ctx)->r11,204(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 204);
	// b 0x821aa848
	goto loc_821AA848;
loc_821AA83C:
	// li ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.s64 = 2048;
	// stw ctx_arrow(ctx)->r26,204(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 204);
	// stw ctx_arrow(ctx)->r11,200(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 200);
loc_821AA848:
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31,348
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r31.s64 + 348;
	// lwz ctx_arrow(ctx)->r3,20(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r26,356(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 356);
	// li ctx_arrow(ctx)->r5,2048
	ctx_arrow(ctx)->r5.s64 = 2048;
	// stw ctx_arrow(ctx)->r26,360(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 360);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// bl 0x8235e018
	sub_8235E018(ctx, base);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r3,364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235eba8
	sub_8235EBA8(ctx, base);
	// lwz ctx_arrow(ctx)->r3,364(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235d388
	sub_8235D388(ctx, base);
loc_821AA87C:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,20
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 20;
loc_821AA884:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa8a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA8A4;
	// bl 0x8235d388
	sub_8235D388(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 1;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,41
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 41, xer);
	// blt ctx_arrow(ctx)->r6,0x821aa884
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AA884;
loc_821AA8A4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1772(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa8d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA8D4;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821aa900
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA900;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821aa900
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA900;
	// b 0x821aa8ec
	goto loc_821AA8EC;
loc_821AA8D4:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821aa900
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AA900;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AA8EC:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// li ctx_arrow(ctx)->r3,27
	ctx_arrow(ctx)->r3.s64 = 27;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,-6416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + -6416;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AA900:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// bl 0x821a9610
	sub_821A9610(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32018
	ctx_arrow(ctx)->r11.s64 = -2098331648;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-31920
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -31920;
	// bl 0x8240fbbc
	__imp__ObDeleteSymbolicLink(ctx, base);
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-9522
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -9522;
	// stb ctx_arrow(ctx)->r10,-2(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -2));
	// stb ctx_arrow(ctx)->r10,-1(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + -1));
	// stb ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0));
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,2320
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 2320;
	// b 0x823ed178
	return;
}

alias(__imp__sub_821AA938) PPC_WEAK_FUNC(sub_821AA938);
PPC_FUNC_IMPL(__imp__sub_821AA938) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCRegister reserved{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed11c
	// stwu ctx_arrow(ctx)->r1,-192(ctx_arrow(ctx)->r1)
	ea = -192 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r6.s64 = 16;
	// li ctx_arrow(ctx)->r5,112
	ctx_arrow(ctx)->r5.s64 = 112;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,21660
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 21660;
	// bl 0x8218e450
	sub_8218E450(ctx, base);
	// ld ctx_arrow(ctx)->r4,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r4.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aaa80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AAA80;
	// ld ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r4.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa98c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA98C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r5,10560(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821a09a8
	sub_821A09A8(ctx, base);
	// std ctx_arrow(ctx)->r3,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
loc_821AA98C:
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,52
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFF;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa9bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA9BC;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,10548
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 10548;
	// li ctx_arrow(ctx)->r5,8704
	ctx_arrow(ctx)->r5.s64 = 8704;
	// rldicr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,52,11
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 52) & 0xFFF0000000000000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a0d40
	sub_821A0D40(ctx, base);
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// rldicr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,51
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 0) & 0xFFFFFFFFFFFFF000;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
loc_821AA9BC:
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0,15,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1F000;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aa9f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AA9F4;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,10528
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 10528;
	// li ctx_arrow(ctx)->r5,8576
	ctx_arrow(ctx)->r5.s64 = 8576;
	// rldicr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,47,4
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 47) & 0xF800000000000000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a0d40
	sub_821A0D40(ctx, base);
	// lis ctx_arrow(ctx)->r12,-2
	ctx_arrow(ctx)->r12.s64 = -131072;
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,4095
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 4095;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
loc_821AA9F4:
	// lis ctx_arrow(ctx)->r12,0
	ctx_arrow(ctx)->r12.s64 = 0;
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,65535
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 65535;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,42,21
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 42) & 0xFFFFFC0000000000;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aaa3c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AAA3C;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,10368
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 10368;
	// li ctx_arrow(ctx)->r5,8192
	ctx_arrow(ctx)->r5.s64 = 8192;
	// rldicr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,6,15
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 6) & 0xFFFF000000000000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a0d40
	sub_821A0D40(ctx, base);
	// lis ctx_arrow(ctx)->r12,-1
	ctx_arrow(ctx)->r12.s64 = -65536;
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 0;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,42,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 42) & 0xFFFFFFFFFFFFFFFF;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
loc_821AAA3C:
	// lis ctx_arrow(ctx)->r12,-32
	ctx_arrow(ctx)->r12.s64 = -2097152;
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// clrldi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,22
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 & 0x3FFFFFFFFFF;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aaa80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AAA80;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,10444
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 10444;
	// li ctx_arrow(ctx)->r5,8448
	ctx_arrow(ctx)->r5.s64 = 8448;
	// rldicr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,22,20
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 22) & 0xFFFFF80000000000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a0d40
	sub_821A0D40(ctx, base);
	// lis ctx_arrow(ctx)->r12,-32
	ctx_arrow(ctx)->r12.s64 = -2097152;
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 0;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,21,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 21) & 0xFFFFFFFFFFFFFFFF;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
loc_821AAA80:
	// ld ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aaad0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AAAD0;
	// lis ctx_arrow(ctx)->r12,31
	ctx_arrow(ctx)->r12.s64 = 2031616;
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,65535
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 65535;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,34,29
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 34) & 0xFFFFFFFC00000000;
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aaad0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AAAD0;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,10596
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 10596;
	// li ctx_arrow(ctx)->r5,8832
	ctx_arrow(ctx)->r5.s64 = 8832;
	// rldicr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,9,20
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 9) & 0xFFFFF80000000000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a0d40
	sub_821A0D40(ctx, base);
	// lis ctx_arrow(ctx)->r12,-32
	ctx_arrow(ctx)->r12.s64 = -2097152;
	// ld ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 0;
	// rldicr ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,34,63
	ctx_arrow(ctx)->r12.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r12.u64, 34) & 0xFFFFFFFFFFFFFFFF;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r12.u64;
	// std ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
loc_821AAAD0:
	// ld ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r11.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aab08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AAB08;
	// clrldi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,26
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 & 0x3FFFFFFFFF;
	// cmpldi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint64_t>(ctx_arrow(ctx)->r10.u64, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aab08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AAB08;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,10680
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 10680;
	// li ctx_arrow(ctx)->r5,8960
	ctx_arrow(ctx)->r5.s64 = 8960;
	// rldicr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,26,37
	ctx_arrow(ctx)->r4.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 26) & 0xFFFFFFFFFC000000;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821a0d40
	sub_821A0D40(ctx, base);
	// ld ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// rldicr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 0) & 0xFFFFFFC000000000;
	// std ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
loc_821AAB08:
	// lwz ctx_arrow(ctx)->r11,604(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// srawi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 29;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10,-13416
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r10.s64 + -13416;
	// bne 0x821aab30
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AAB30;
	// lis ctx_arrow(ctx)->r26,1792
	ctx_arrow(ctx)->r26.s64 = 117440512;
	// li ctx_arrow(ctx)->r28,525
	ctx_arrow(ctx)->r28.s64 = 525;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r25.u64;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,21
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 21;
	// b 0x821aab74
	goto loc_821AAB74;
loc_821AAB30:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821aab4c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AAB4C;
	// lis ctx_arrow(ctx)->r26,1792
	ctx_arrow(ctx)->r26.s64 = 117440512;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r25,2160
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r25.s64 + 2160;
	// li ctx_arrow(ctx)->r28,933
	ctx_arrow(ctx)->r28.s64 = 933;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,19
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 19;
	// b 0x821aab74
	goto loc_821AAB74;
loc_821AAB4C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821aab68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AAB68;
	// lis ctx_arrow(ctx)->r26,1792
	ctx_arrow(ctx)->r26.s64 = 117440512;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r25,5896
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r25.s64 + 5896;
	// li ctx_arrow(ctx)->r28,210
	ctx_arrow(ctx)->r28.s64 = 210;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,15
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 15;
	// b 0x821aab74
	goto loc_821AAB74;
loc_821AAB68:
	// lwz ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r27,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r27.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r26,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AAB74:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28,5
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r28.s64 + 5;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,-16384
	ctx_arrow(ctx)->r11.s64 = -1073741824;
	// li ctx_arrow(ctx)->r10,768
	ctx_arrow(ctx)->r10.s64 = 768;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,15104
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 15104;
	// lis ctx_arrow(ctx)->r8,-16384
	ctx_arrow(ctx)->r8.s64 = -1073741824;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// ori ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,11008
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 11008;
	// li ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r22.s64 = 0;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9,16,2,15
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 16) & 0x3FFF0000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFFC000FFFF);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r22.u64;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28,18
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u32 & 0x3FFF;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// rlwinm ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,2,0,29
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 2) & 0xFFFFFFFC;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r27.s64 + 4;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// add ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64 + ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// ble ctx_arrow(ctx)->r6,0x821aabf0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AABF0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821AABF0:
	// lis ctx_arrow(ctx)->r11,-16368
	ctx_arrow(ctx)->r11.s64 = -1072693248;
	// li ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 1;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,11008
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 11008;
	// li ctx_arrow(ctx)->r9,15
	ctx_arrow(ctx)->r9.s64 = 15;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25,2100
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r25.s64 + 2100;
	// li ctx_arrow(ctx)->r5,60
	ctx_arrow(ctx)->r5.s64 = 60;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lis ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 65536;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,60
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 60;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8576
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8576;
	// oris ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r26,4096
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r26.u64 | 268435456;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r22.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r10.u32, xer);
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// ble ctx_arrow(ctx)->r6,0x821aac5c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AAC5C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821AAC5C:
	// lis ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 131072;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8448
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64 | 8448;
	// lis ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r22.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// li ctx_arrow(ctx)->r6,8851
	ctx_arrow(ctx)->r6.s64 = 8851;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r11.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r22.u64;
	// lis ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = 131072;
	// li ctx_arrow(ctx)->r27,768
	ctx_arrow(ctx)->r27.s64 = 768;
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,8708
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64 | 8708;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lis ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = 65536;
	// li ctx_arrow(ctx)->r26,8978
	ctx_arrow(ctx)->r26.s64 = 8978;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64;
	// li ctx_arrow(ctx)->r25,8205
	ctx_arrow(ctx)->r25.s64 = 8205;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r22.u64;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// li ctx_arrow(ctx)->r23,8704
	ctx_arrow(ctx)->r23.s64 = 8704;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r22.u64;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r27,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r26,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r21,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// ble ctx_arrow(ctx)->r6,0x821aad00
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AAD00;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821AAD00:
	// lis ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = 327680;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,392
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r30.s64 + 392;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18432
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 18432;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,28(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r11,372(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 372);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,22,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x3FC;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,17,0,9
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 17) & 0xFFC00000;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32768
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2147483648;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18434
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 18434;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,12,20,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0xFFF;
	// clrlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,512
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 + 512;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,19,19
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,36(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13,0,18
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 13) & 0xFFFFE000;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,7
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFFFF001FFF;
	// srawi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,13
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1FFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 13;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,7,0
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0xFFFFFFFF81FFFFFF;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,24,19,12
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r9.u32, 24) & 0xFFFFFFFFFFF81FFF) | (ctx_arrow(ctx)->r11.u64 & 0x7E000);
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | ctx_arrow(ctx)->r10.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,44(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,584(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,2,30,31
	ctx_arrow(ctx)->r27.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x3;
	// lwz ctx_arrow(ctx)->r11,604(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0x4;
	// clrlwi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r27,31
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r27.u32 & 0x1;
	// srawi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,29
	xer.ca = (ctx_arrow(ctx)->r11.s32 < 0) & ((ctx_arrow(ctx)->r11.u32 & 0x1FFFFFFF) != 0);
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s32 >> 29;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// mulli ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r24,56
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r24.s64 * 56;
	// lwzx ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,31,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 31) & 0x1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,527
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 527;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1536
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 1536;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,22
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFE00;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r25.u64;
	// bne 0x821aadf8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AADF8;
loc_821AADD0:
	// lwz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,0,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x1FFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// andi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,49400
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & 49400;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// oris ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,19200
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 1258291200;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1536
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 1536;
	// b 0x821aae2c
	goto loc_821AAE2C;
loc_821AADF8:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x821aadd0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AADD0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// bne ctx_arrow(ctx)->r6,0x821aae54
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AAE54;
	// lwz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,0,3,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x1FFFFFFC;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29,12,20,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 12) & 0xFFF;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 512;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,19,19
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x1000;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r9.u64;
	// andi. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,49400
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r8.u64 & 49400;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// oris ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,19200
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 1258291200;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,2560
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 2560;
loc_821AAE2C:
	// lis ctx_arrow(ctx)->r7,16384
	ctx_arrow(ctx)->r7.s64 = 1073741824;
	// lwz ctx_arrow(ctx)->r11,388(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,75
	ctx_arrow(ctx)->r6.s64 = 75;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 8);
	// rlwimi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10,30,2,31
	ctx_arrow(ctx)->r7.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 30) & 0x3FFFFFFF) | (ctx_arrow(ctx)->r7.u64 & 0xFFFFFFFFC0000000);
	// lis ctx_arrow(ctx)->r10,19200
	ctx_arrow(ctx)->r10.s64 = 1258291200;
	// rlwimi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,24,0,8
	ctx_arrow(ctx)->r11.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r6.u32, 24) & 0xFF800000) | (ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF007FFFFF);
	// stw ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 4);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 12);
loc_821AAE54:
	// li ctx_arrow(ctx)->r4,49
	ctx_arrow(ctx)->r4.s64 = 49;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d8f0
	sub_8219D8F0(ctx, base);
	// lis ctx_arrow(ctx)->r11,47
	ctx_arrow(ctx)->r11.s64 = 3080192;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16384
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 16384;
	// li ctx_arrow(ctx)->r5,192
	ctx_arrow(ctx)->r5.s64 = 192;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28,192
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r28.s64 + 192;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,25,25
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x40;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821aaea0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AAEA0;
	// li ctx_arrow(ctx)->r4,-1
	ctx_arrow(ctx)->r4.s64 = -1;
	// lwz ctx_arrow(ctx)->r3,364(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235eba8
	sub_8235EBA8(ctx, base);
loc_821AAEA0:
	// lhz ctx_arrow(ctx)->r10,14(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 14);
	// lis ctx_arrow(ctx)->r11,-32018
	ctx_arrow(ctx)->r11.s64 = -2098331648;
	// rotlwi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,9
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 9);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-31944
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -31944;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AAEB8:
	// mfmsr ctx_arrow(ctx)->r7
	// mtmsrd ctx_arrow(ctx)->r13,1
	// lwarx ctx_arrow(ctx)->r8,0,ctx_arrow(ctx)->r10
	reserved.u32 = *(uint32_t*)(base + ctx_arrow(ctx)->r10.u32);
	ctx_arrow(ctx)->r8.u64 = __builtin_bswap32(reserved.u32);
	// stwcx. ctx_arrow(ctx)->r9,0,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r0.lt() = 0;
	ctx_arrow(ctx)->r0.gt() = 0;
	ctx_arrow(ctx)->r0.eq() = __sync_bool_compare_and_swap(reinterpret_cast<uint32_t*>(base + ctx_arrow(ctx)->r10.u32), reserved.s32, __builtin_bswap32(ctx_arrow(ctx)->r9.s32));
	ctx_arrow(ctx)->r0.so() = xer.so;
	// mtmsrd ctx_arrow(ctx)->r7,1
	// bne 0x821aaeb8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AAEB8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r8,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,6144
	ctx_arrow(ctx)->r7.s64 = 6144;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r8.s64;
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r11.u32 / ctx_arrow(ctx)->r7.u32;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,14
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 14, xer);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r11.u64;
	// blt ctx_arrow(ctx)->r6,0x821aaef4
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AAEF4;
	// li ctx_arrow(ctx)->r23,14
	ctx_arrow(ctx)->r23.s64 = 14;
loc_821AAEF4:
	// lwz ctx_arrow(ctx)->r11,584(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,-25768
	ctx_arrow(ctx)->r10.s64 = -1688731648;
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// clrlwi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29,3
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u32 & 0x1FFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// lwz ctx_arrow(ctx)->r7,596(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,59162
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r10.u64 | 59162;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,2,29,29
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0x4;
	// lwz ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,12,20,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 12) & 0xFFF;
	// lwz ctx_arrow(ctx)->r4,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,4,30,31
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r7.u32 | (ctx_arrow(ctx)->r7.u64 << 32), 4) & 0x3;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,512
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r11.s64 + 512;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r4.u32, xer);
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,19,19
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0x1000;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-4
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -4;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 + ctx_arrow(ctx)->r8.u64;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r9,10392(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10392);
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// ble ctx_arrow(ctx)->r6,0x821aaf60
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AAF60;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821AAF60:
	// li ctx_arrow(ctx)->r11,8198
	ctx_arrow(ctx)->r11.s64 = 8198;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r22.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r11,13488(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stw ctx_arrow(ctx)->r3,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stw ctx_arrow(ctx)->r11,13488(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13488);
	// lwz ctx_arrow(ctx)->r29,376(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AAF88:
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821aafa4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AAFA4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821AAFA4:
	// li ctx_arrow(ctx)->r9,8450
	ctx_arrow(ctx)->r9.s64 = 8450;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,65535
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 65535, xer);
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r28,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// ble ctx_arrow(ctx)->r6,0x821aafc4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AAFC4;
	// lis ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,65534
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 65534;
loc_821AAFC4:
	// lis ctx_arrow(ctx)->r9,-16384
	ctx_arrow(ctx)->r9.s64 = -1073741824;
	// li ctx_arrow(ctx)->r8,129
	ctx_arrow(ctx)->r8.s64 = 129;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,13825
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 13825;
	// rlwimi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,16,0,15
	ctx_arrow(ctx)->r8.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 16) & 0xFFFF0000) | (ctx_arrow(ctx)->r8.u64 & 0xFFFFFFFF0000FFFF);
	// subf. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 - ctx_arrow(ctx)->r10.s64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// beq 0x821aaff0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AAFF0;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r28.u64;
	// b 0x821aaf88
	goto loc_821AAF88;
loc_821AAFF0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r22,10392(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10392);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821ab00c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AB00C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
loc_821AB00C:
	// li ctx_arrow(ctx)->r11,8198
	ctx_arrow(ctx)->r11.s64 = 8198;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r22.u64;
	// stwu ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ea = 4 + ctx_arrow(ctx)->r3.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r3.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,13488(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r9,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// stw ctx_arrow(ctx)->r10,13488(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 13488);
	// ble ctx_arrow(ctx)->r6,0x821ab048
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AB048;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821AB048:
	// lis ctx_arrow(ctx)->r10,-16384
	ctx_arrow(ctx)->r10.s64 = -1073741824;
	// li ctx_arrow(ctx)->r9,6
	ctx_arrow(ctx)->r9.s64 = 6;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,17920
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 17920;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 8;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 524288;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,16
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 1048576;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// ld ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65024
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4261412864;
	// std ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// ld ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2048;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,256
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 256;
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// lwz ctx_arrow(ctx)->r26,588(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r26.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8219d7d8
	sub_8219D7D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,588(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 588);
	// bl 0x8218e450
	sub_8218E450(&ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8218e450
	sub_8218E450(ctx, base);
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// clrlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,30
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r27.u32 & 0x3;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,4,1
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFFFFCFFFFFFF;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r28,28,0,3
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 28) & 0xF0000000;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r25,16
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r25.s64 + 16;
	// or ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64 | ctx_arrow(ctx)->r11.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 596);
	// beq ctx_arrow(ctx)->r6,0x821ab110
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB110;
	// li ctx_arrow(ctx)->r5,56
	ctx_arrow(ctx)->r5.s64 = 56;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,13708
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 13708;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,56
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 56;
loc_821AB110:
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 - ctx_arrow(ctx)->r25.s64;
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r27.u32 | (ctx_arrow(ctx)->r27.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,511
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 511;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,22
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFE00;
	// add ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r25.u64;
	// beq 0x821ab160
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB160;
	// lbz ctx_arrow(ctx)->r11,600(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r4,592(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,24
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821ab148
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB148;
	// bl 0x8219e228
	sub_8219E228(ctx, base);
	// b 0x821ab14c
	goto loc_821AB14C;
loc_821AB148:
	// bl 0x8219e190
	sub_8219E190(ctx, base);
loc_821AB14C:
	// li ctx_arrow(ctx)->r5,1536
	ctx_arrow(ctx)->r5.s64 = 1536;
	// lwz ctx_arrow(ctx)->r4,592(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1536
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1536;
loc_821AB160:
	// lwz ctx_arrow(ctx)->r8,584(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28,26,0,5
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r28.u32 | (ctx_arrow(ctx)->r28.u64 << 32), 26) & 0xFC000000;
	// lhz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r9.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 12);
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r23,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r23.s64 * 12;
	// lwz ctx_arrow(ctx)->r6,596(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r5,608(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U8(ctx,  ctx);
	// lhz ctx_arrow(ctx)->r10,14(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_LOAD_U16(ctx_arrow(ctx)->r30.u32 + 14);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,2,29,29
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 2) & 0x4;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// or ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | ctx_arrow(ctx)->r6.u64;
	// rlwinm ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,9,0,22
	ctx_arrow(ctx)->r31.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 9) & 0xFFFFFE00;
	// clrlwi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r7.u32 & 0x3FFFFFFF;
	// lwzx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r29.s64 - ctx_arrow(ctx)->r8.s64;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,23,9,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 23) & 0x7FFFFF;
	// stw ctx_arrow(ctx)->r9,596(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 596);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// sth ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r30)
	PPC_STORE_ARRAY_U16(ctx_arrow(ctx)->r30.u32 + 12, ctx_arrow(ctx)->r11, 0);
	// rlwinm. ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r5,0,0,24
	ctx_arrow(ctx)->r7.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r5.u32 | (ctx_arrow(ctx)->r5.u64 << 32), 0) & 0xFFFFFF80;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x821ab210
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB210;
	// lwz ctx_arrow(ctx)->r11,380(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// stw ctx_arrow(ctx)->r22,360(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 360);
	// stw ctx_arrow(ctx)->r11,356(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 356);
	// bl 0x8219d298
	sub_8219D298(&ctx);
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r30,348
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r30.s64 + 348;
	// lwz ctx_arrow(ctx)->r10,584(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,12,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 12) & 0x3F;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 5;
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2,29,29
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 2) & 0x4;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwzx ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwzx ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235e018
	sub_8235E018(ctx, base);
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,64
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 64;
	// stb ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + 608, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x821aa460
	sub_821AA460(ctx, base);
loc_821AB210:
	// lbz ctx_arrow(ctx)->r10,608(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,584(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,128
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 128;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// stb ctx_arrow(ctx)->r10,608(ctx_arrow(ctx)->r30)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 608));
	// stw ctx_arrow(ctx)->r11,584(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 584);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,192
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 192;
	// b 0x823ed16c
	return;
}

alias(__imp__sub_821AB230) PPC_WEAK_FUNC(sub_821AB230);
PPC_FUNC_IMPL(__imp__sub_821AB230) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// bl 0x821aa518
	sub_821AA518(&ctx);
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stb ctx_arrow(ctx)->r11,-9521(ctx_arrow(ctx)->r10)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r10.u32 + -9521, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821AB260) PPC_WEAK_FUNC(sub_821AB260);
PPC_FUNC_IMPL(__imp__sub_821AB260) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-816(ctx_arrow(ctx)->r1)
	ea = -816 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r24,21660
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r24.s64 + 21660;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r5.u64;
	// lbz ctx_arrow(ctx)->r11,608(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821ab298
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB298;
loc_821AB288:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x821aa518
	sub_821AA518(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821ab5ec
	goto loc_821AB5EC;
loc_821AB298:
	// li ctx_arrow(ctx)->r5,260
	ctx_arrow(ctx)->r5.s64 = 260;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
	// stb ctx_arrow(ctx)->r25,371(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 371, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r25), 0);
loc_821AB2B4:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ab2b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AB2B4;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821ab304
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AB304;
loc_821AB2E8:
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,92
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 92, xer);
	// beq ctx_arrow(ctx)->r6,0x821ab304
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB304;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,-1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + -1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ab2e8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AB2E8;
loc_821AB304:
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,92
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 92, xer);
	// beq ctx_arrow(ctx)->r6,0x821ab320
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB320;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-6288
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -6288;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
	// b 0x821ab288
	goto loc_821AB288;
loc_821AB320:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stb ctx_arrow(ctx)->r25,0(ctx_arrow(ctx)->r31)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r25), 0);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// bl 0x8240fbdc
	__imp__RtlInitAnsiString(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32018
	ctx_arrow(ctx)->r11.s64 = -2098331648;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-31920
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -31920;
	// bl 0x8240fbcc
	__imp__ObCreateSymbolicLink(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge 0x821ab35c
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821AB35C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-6324
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -6324;
loc_821AB350:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821a2690
	sub_821A2690(ctx, base);
	// b 0x821ab288
	goto loc_821AB288;
loc_821AB35C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-6332
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -6332;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,480
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 480;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20196
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20196;
	// bl 0x8240f93c
	__imp__sprintf(ctx, base);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,480
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 480;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
	// bl 0x821a9720
	sub_821A9720(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821ab288
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AB288;
	// li ctx_arrow(ctx)->r5,260
	ctx_arrow(ctx)->r5.s64 = 260;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,480
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 480;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stb ctx_arrow(ctx)->r25,371(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 371, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r25), 0);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AB3AC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ab3ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AB3AC;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821ab40c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AB40C;
loc_821AB3E4:
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,46
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 46, xer);
	// beq ctx_arrow(ctx)->r6,0x821ab40c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB40C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,92
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 92, xer);
	// beq ctx_arrow(ctx)->r6,0x821ab40c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB40C;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,-1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + -1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ab3e4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AB3E4;
loc_821AB40C:
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,46
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 46, xer);
	// beq ctx_arrow(ctx)->r6,0x821ab41c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB41C;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AB41C:
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r25.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,12,17
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFC000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,-6340
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + -6340;
	// beq 0x821ab504
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB504;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r29,20
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r29.s64 + 20;
	// lis ctx_arrow(ctx)->r26,-31991
	ctx_arrow(ctx)->r26.s64 = -2096562176;
loc_821AB43C:
	// lbz ctx_arrow(ctx)->r11,-9524(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821ab288
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB288;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,480
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 480;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r11.s64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// add ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f93c
	__imp__sprintf(ctx, base);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// lis ctx_arrow(ctx)->r8,26624
	ctx_arrow(ctx)->r8.s64 = 1744830464;
	// li ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r7.s64 = 2;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lis ctx_arrow(ctx)->r4,16384
	ctx_arrow(ctx)->r4.s64 = 1073741824;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x8235d008
	sub_8235D008(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x821ab5f4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB5F4;
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x3F;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821ab4c8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AB4C8;
	// lwz ctx_arrow(ctx)->r11,384(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ab4bc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB4BC;
	// clrldi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// b 0x821ab4d0
	goto loc_821AB4D0;
loc_821AB4BC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// rldicr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,32,63
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u64, 32) & 0xFFFFFFFFFFFFFFFF;
	// b 0x821ab4d0
	goto loc_821AB4D0;
loc_821AB4C8:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// oris ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65520
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 4293918720;
loc_821AB4D0:
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r4,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235ed68
	sub_8235ED68(ctx, base);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235ecc0
	sub_8235ECC0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,596(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,18,26,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 18) & 0x3F;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,4
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821ab43c
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AB43C;
loc_821AB504:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,480
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 480;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r30.s64 - ctx_arrow(ctx)->r11.s64;
	// add ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
loc_821AB514:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x8240f93c
	__imp__sprintf(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// bl 0x8235eed8
	sub_8235EED8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821ab514
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB514;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29,348
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r29.s64 + 348;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// stw ctx_arrow(ctx)->r25,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r25,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// stw ctx_arrow(ctx)->r25,8(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// stw ctx_arrow(ctx)->r25,12(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 12);
	// stw ctx_arrow(ctx)->r25,16(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// bl 0x8235dec8
	sub_8235DEC8(&ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,364(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 364);
	// beq 0x821ab288
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB288;
	// li ctx_arrow(ctx)->r5,2048
	ctx_arrow(ctx)->r5.s64 = 2048;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// stw ctx_arrow(ctx)->r25,356(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 356);
	// stw ctx_arrow(ctx)->r25,360(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 360);
	// bl 0x823edf70
	sub_823EDF70(&ctx);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,2048
	ctx_arrow(ctx)->r5.s64 = 2048;
	// lwz ctx_arrow(ctx)->r3,20(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235e018
	sub_8235E018(ctx, base);
	// li ctx_arrow(ctx)->r4,-1
	ctx_arrow(ctx)->r4.s64 = -1;
	// lwz ctx_arrow(ctx)->r3,364(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8235eba8
	sub_8235EBA8(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,384
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 384;
	// bl 0x8240fa5c
	__imp__VdGetCurrentDisplayInformation(ctx, base);
	// lbz ctx_arrow(ctx)->r11,389(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,600(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,2048
	ctx_arrow(ctx)->r9.s64 = 2048;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// lwz ctx_arrow(ctx)->r8,596(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r25,584(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 584);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
	// rlwinm ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,0,12,5
	ctx_arrow(ctx)->r8.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r8.u32 | (ctx_arrow(ctx)->r8.u64 << 32), 0) & 0xFFFFFFFFFC0FFFFF;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// stw ctx_arrow(ctx)->r9,380(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 380);
	// rlwimi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,7,24,24
	ctx_arrow(ctx)->r10.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 7) & 0x80) | (ctx_arrow(ctx)->r10.u64 & 0xFFFFFFFFFFFFFF7F);
	// stw ctx_arrow(ctx)->r8,596(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 596);
	// stb ctx_arrow(ctx)->r10,600(ctx_arrow(ctx)->r29)
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 600));
loc_821AB5EC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,816
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 816;
	// b 0x823ed178
	return;
loc_821AB5F4:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,-6396
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + -6396;
	// b 0x821ab350
	goto loc_821AB350;
}

alias(__imp__sub_821AB600) PPC_WEAK_FUNC(sub_821AB600);
PPC_FUNC_IMPL(__imp__sub_821AB600) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-352(ctx_arrow(ctx)->r1)
	ea = -352 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-31991
	ctx_arrow(ctx)->r11.s64 = -2096562176;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-9784
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -9784;
	// lbz ctx_arrow(ctx)->r11,262(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ab6e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB6E0;
	// lbz ctx_arrow(ctx)->r11,22268(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ab6bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB6BC;
	// bl 0x821ab260
	sub_821AB260(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821ab640
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB640;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// b 0x821ab648
	goto loc_821AB648;
loc_821AB640:
	// lis ctx_arrow(ctx)->r6,-32768
	ctx_arrow(ctx)->r6.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,16389
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 16389;
loc_821AB648:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,-6224
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r11.s64 + -6224;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-6236
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -6236;
	// bl 0x8240f93c
	__imp__sprintf(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1772(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ab690
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AB690;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r10.u32, 0);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ab6e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB6E0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ab6e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB6E0;
	// b 0x821ab6a8
	goto loc_821AB6A8;
loc_821AB690:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// lwz ctx_arrow(ctx)->r11,1756(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ab6e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB6E0;
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AB6A8:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r3,27
	ctx_arrow(ctx)->r3.s64 = 27;
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// b 0x821ab6e0
	goto loc_821AB6E0;
loc_821AB6BC:
	// lbz ctx_arrow(ctx)->r11,260(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ab6d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB6D0;
	// bl 0x821aa518
	sub_821AA518(ctx, base);
	// b 0x821ab6e0
	goto loc_821AB6E0;
loc_821AB6D0:
	// lbz ctx_arrow(ctx)->r11,261(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ab6e0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB6E0;
	// bl 0x821aa938
	sub_821AA938(ctx, base);
loc_821AB6E0:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821AB6F0) PPC_WEAK_FUNC(sub_821AB6F0);
PPC_FUNC_IMPL(__imp__sub_821AB6F0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// clrldi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r11.u64 & 0xFFFFFFFF;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1152
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 1152;
	// li ctx_arrow(ctx)->r10,26
	ctx_arrow(ctx)->r10.s64 = 26;
	// std ctx_arrow(ctx)->r30,11816(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 11816);
loc_821AB714:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,0,0,29
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r9.u32 | (ctx_arrow(ctx)->r9.u64 << 32), 0) & 0xFFFFFFFC;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,24
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 24;
	// bne 0x821ab714
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB714;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1776
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 1776;
	// li ctx_arrow(ctx)->r10,18
	ctx_arrow(ctx)->r10.s64 = 18;
loc_821AB734:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = 1;
	// addic. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-1
	xer.ca = ctx_arrow(ctx)->r10.u32 > 0;
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// rlwimi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r8,0,30,31
	ctx_arrow(ctx)->r9.u64 = (__builtin_rotateleft32(ctx_arrow(ctx)->r8.u32, 0) & 0x3) | (ctx_arrow(ctx)->r9.u64 & 0xFFFFFFFFFFFFFFFC);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// bne 0x821ab734
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB734;
	// lis ctx_arrow(ctx)->r7,8192
	ctx_arrow(ctx)->r7.s64 = 536870912;
	// lwz ctx_arrow(ctx)->r11,10564(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r6,15
	ctx_arrow(ctx)->r6.s64 = 983040;
	// lwz ctx_arrow(ctx)->r8,10568(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,8192
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r7.u64 | 8192;
	// lis ctx_arrow(ctx)->r5,15
	ctx_arrow(ctx)->r5.s64 = 983040;
	// li ctx_arrow(ctx)->r9,8
	ctx_arrow(ctx)->r9.s64 = 8;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,61440
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 61440;
	// ori ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,61696
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r5.u64 | 61696;
	// stw ctx_arrow(ctx)->r7,10428(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10428);
	// oris ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r11.u64 | 524288;
	// lis ctx_arrow(ctx)->r11,255
	ctx_arrow(ctx)->r11.s64 = 16711680;
	// stw ctx_arrow(ctx)->r9,10604(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10604);
	// li ctx_arrow(ctx)->r10,14
	ctx_arrow(ctx)->r10.s64 = 14;
	// stw ctx_arrow(ctx)->r6,10708(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10708);
	// li ctx_arrow(ctx)->r9,4
	ctx_arrow(ctx)->r9.s64 = 4;
	// stw ctx_arrow(ctx)->r5,10712(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10712);
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// stw ctx_arrow(ctx)->r7,10564(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10564);
	// oris ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 | 65536;
	// li ctx_arrow(ctx)->r5,2
	ctx_arrow(ctx)->r5.s64 = 2;
	// stw ctx_arrow(ctx)->r10,10628(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10628);
	// li ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = -1;
	// stw ctx_arrow(ctx)->r9,10580(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10580);
	// stw ctx_arrow(ctx)->r9,10688(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10688);
	// stw ctx_arrow(ctx)->r10,10768(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10768);
	// stw ctx_arrow(ctx)->r4,10772(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10772);
	// stw ctx_arrow(ctx)->r8,10568(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10568);
	// stw ctx_arrow(ctx)->r6,10444(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10444);
	// stw ctx_arrow(ctx)->r5,10824(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10824);
	// std ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// std ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// std ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// std ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// std ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// lwz ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r9,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,10916(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 10916);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821ab800
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AB800;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8219d6d8
	sub_8219D6D8(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
loc_821AB800:
	// li ctx_arrow(ctx)->r9,3329
	ctx_arrow(ctx)->r9.s64 = 3329;
	// lis ctx_arrow(ctx)->r8,1024
	ctx_arrow(ctx)->r8.s64 = 67108864;
	// lis ctx_arrow(ctx)->r10,-16382
	ctx_arrow(ctx)->r10.s64 = -1073610752;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8448
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 8448;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r9,129
	ctx_arrow(ctx)->r9.s64 = 129;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r10.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r10.u64;
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// li ctx_arrow(ctx)->r5,130
	ctx_arrow(ctx)->r5.s64 = 130;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r3,3650
	ctx_arrow(ctx)->r3.s64 = 3650;
	// li ctx_arrow(ctx)->r29,8032
	ctx_arrow(ctx)->r29.s64 = 8032;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r9,15
	ctx_arrow(ctx)->r9.s64 = 15;
	// stwu ctx_arrow(ctx)->r6,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,-9512(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,32769
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 2147549184;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lis ctx_arrow(ctx)->r10,-31991
	ctx_arrow(ctx)->r10.s64 = -2096562176;
	// stwu ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,-9508(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// lwz ctx_arrow(ctx)->r10,22280(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,0,30,30
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// li ctx_arrow(ctx)->r10,3205
	ctx_arrow(ctx)->r10.s64 = 3205;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// bne 0x821ab88c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB88C;
	// li ctx_arrow(ctx)->r9,3
	ctx_arrow(ctx)->r9.s64 = 3;
loc_821AB88C:
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// li ctx_arrow(ctx)->r10,1404
	ctx_arrow(ctx)->r10.s64 = 1404;
	// lis ctx_arrow(ctx)->r9,2989
	ctx_arrow(ctx)->r9.s64 = 195887104;
	// li ctx_arrow(ctx)->r8,1403
	ctx_arrow(ctx)->r8.s64 = 1403;
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,61453
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r9.u64 | 61453;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// stwu ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r9,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r8,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stwu ctx_arrow(ctx)->r7,4(ctx_arrow(ctx)->r11)
	ea = 4 + ctx_arrow(ctx)->r11.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r11.u32 = ea;
	// stw ctx_arrow(ctx)->r11,48(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 48);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821AB8C0) PPC_WEAK_FUNC(sub_821AB8C0);
PPC_FUNC_IMPL(__imp__sub_821AB8C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,118
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 118, xer);
	// bne ctx_arrow(ctx)->r6,0x821ab954
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AB954;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AB8E4:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ab8e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AB8E4;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r3.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r3.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 3, xer);
	// ble ctx_arrow(ctx)->r6,0x821ab954
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AB954;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,-3
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + -3;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5192
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5192;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee630
	sub_823EE630(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821ab94c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AB94C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5188
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5188;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee630
	sub_823EE630(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821ab954
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB954;
loc_821AB94C:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x821ab958
	goto loc_821AB958;
loc_821AB954:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AB958:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AB970) PPC_WEAK_FUNC(sub_821AB970);
PPC_FUNC_IMPL(__imp__sub_821AB970) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,118
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 118, xer);
	// bne ctx_arrow(ctx)->r6,0x821aba18
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABA18;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AB998:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ab998
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AB998;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r31.u64;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r31.s64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 3, xer);
	// ble ctx_arrow(ctx)->r6,0x821aba18
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821ABA18;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,-3
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + -3;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5192
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5192;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee630
	sub_823EE630(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821ab9f0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AB9F0;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,4188
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 4188;
	// b 0x821aba50
	goto loc_821ABA50;
loc_821AB9F0:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,3
	ctx_arrow(ctx)->r5.s64 = 3;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5188
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5188;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee630
	sub_823EE630(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821aba18
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABA18;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,4176
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 4176;
	// b 0x821aba50
	goto loc_821ABA50;
loc_821ABA18:
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,11,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x100000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821aba4c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABA4C;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,118
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 118, xer);
	// bne ctx_arrow(ctx)->r6,0x821aba3c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABA3C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,4208
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 4208;
	// b 0x821aba4c
	goto loc_821ABA4C;
loc_821ABA3C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 112, xer);
	// bne ctx_arrow(ctx)->r6,0x821aba4c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABA4C;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,11992
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r11.s64 + 11992;
loc_821ABA4C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
loc_821ABA50:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821ABA58) PPC_WEAK_FUNC(sub_821ABA58);
PPC_FUNC_IMPL(__imp__sub_821ABA58) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r30{};
	PPCRegister r31{};
	// std ctx_arrow(ctx)->r30,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// std ctx_arrow(ctx)->r31,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aba74
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABA74;
	// lis ctx_arrow(ctx)->r3,-30602
	ctx_arrow(ctx)->r3.s64 = -2005532672;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,2156
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 2156;
	// b 0x821abae8
	goto loc_821ABAE8;
loc_821ABA74:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// li ctx_arrow(ctx)->r6,49
	ctx_arrow(ctx)->r6.s64 = 49;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,4560
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 4560;
loc_821ABA84:
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u64 + ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r3.u64;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,31,1,31
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 31) & 0x7FFFFFFF;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 * 12;
	// lwzx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ABA98:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ababc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ABABC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aba98
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABA98;
loc_821ABABC:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x821abaf4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ABAF4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bge ctx_arrow(ctx)->r6,0x821abad4
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821ABAD4;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// b 0x821abad8
	goto loc_821ABAD8;
loc_821ABAD4:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64;
loc_821ABAD8:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r6.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821aba84
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821ABA84;
loc_821ABAE0:
	// lis ctx_arrow(ctx)->r3,-32768
	ctx_arrow(ctx)->r3.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 16389;
loc_821ABAE8:
	// ld ctx_arrow(ctx)->r30,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821ABAF4:
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 * 12;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r30.s64 + 8;
	// lwzx ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 & ctx_arrow(ctx)->r4.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r4.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821abae0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABAE0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abb30
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABB30;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
loc_821ABB30:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821abae8
	goto loc_821ABAE8;
}

alias(__imp__sub_821ABB38) PPC_WEAK_FUNC(sub_821ABB38);
PPC_FUNC_IMPL(__imp__sub_821ABB38) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r9,49
	ctx_arrow(ctx)->r9.s64 = 49;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,4560
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 4560;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,596
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 596;
loc_821ABB48:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -12;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,-1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + -1;
	// lwz ctx_arrow(ctx)->r8,-4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r3.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821abb6c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABB6C;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// and ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r8.u64 & ctx_arrow(ctx)->r4.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, ctx_arrow(ctx)->r4.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821abb84
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABB84;
loc_821ABB6C:
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10,8
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r10.s64 + 8;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r8.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821abb48
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821ABB48;
	// lis ctx_arrow(ctx)->r3,-32768
	ctx_arrow(ctx)->r3.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 16389;
	// blr 
	return;
loc_821ABB84:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abbac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABBAC;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,12
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r9.s64 * 12;
	// add ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r10.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 4);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 8);
loc_821ABBAC:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_821ABBB8) PPC_WEAK_FUNC(sub_821ABBB8);
PPC_FUNC_IMPL(__imp__sub_821ABBB8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r28.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821abbe4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABBE4;
	// lis ctx_arrow(ctx)->r29,-32761
	ctx_arrow(ctx)->r29.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,87
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r29.u64 | 87;
	// b 0x821abc18
	goto loc_821ABC18;
loc_821ABBE4:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4,-1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r4.s64 + -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823eef48
	sub_823EEF48(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821abc0c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ABC0C;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r31.u32, xer);
	// bgt ctx_arrow(ctx)->r6,0x821abc0c
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821ABC0C;
	// bne ctx_arrow(ctx)->r6,0x821abc18
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABC18;
	// b 0x821abc14
	goto loc_821ABC14;
loc_821ABC0C:
	// lis ctx_arrow(ctx)->r29,-32761
	ctx_arrow(ctx)->r29.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,122
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r29.u64 | 122;
loc_821ABC14:
	// stbx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r31.u32 + ctx_arrow(ctx)->r30.u32, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r28), 0);
loc_821ABC18:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821ABC28) PPC_WEAK_FUNC(sub_821ABC28);
PPC_FUNC_IMPL(__imp__sub_821ABC28) {
	PPC_FUNC_PROLOGUE();
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// b 0x8209d000
	sub_8209D000(ctx, base);
	return;
}

alias(__imp__sub_821ABC30) PPC_WEAK_FUNC(sub_821ABC30);
PPC_FUNC_IMPL(__imp__sub_821ABC30) {
	PPC_FUNC_PROLOGUE();
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// b 0x8209d060
	sub_8209D060(ctx, base);
	return;
}

alias(__imp__sub_821ABC38) PPC_WEAK_FUNC(sub_821ABC38);
PPC_FUNC_IMPL(__imp__sub_821ABC38) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lis ctx_arrow(ctx)->r10,-32256
	ctx_arrow(ctx)->r10.s64 = -2113929216;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r10,2334
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r10.s64 + 2334;
	// lwz ctx_arrow(ctx)->r8,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821b0420
	sub_821B0420(ctx, base);
	return;
}

alias(__imp__sub_821ABC60) PPC_WEAK_FUNC(sub_821ABC60);
PPC_FUNC_IMPL(__imp__sub_821ABC60) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,5148
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 5148;
	// clrlwi. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4,31
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// beq 0x821abc8c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ABC8C;
	// bl 0x8209d150
	sub_8209D150(&ctx);
loc_821ABC8C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821ABCA8) PPC_WEAK_FUNC(sub_821ABCA8);
PPC_FUNC_IMPL(__imp__sub_821ABCA8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abccc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABCCC;
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
loc_821ABCCC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821abce0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABCE0;
loc_821ABCD4:
	// lis ctx_arrow(ctx)->r3,-30602
	ctx_arrow(ctx)->r3.s64 = -2005532672;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,2156
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 2156;
	// b 0x821abd88
	goto loc_821ABD88;
loc_821ABCE0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abcd4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABCD4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r10,4138
	ctx_arrow(ctx)->r10.s64 = 271187968;
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,4352
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 4352;
	// rlwinm ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,0,0,23
	ctx_arrow(ctx)->r9.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFFFF00;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821abd1c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABD1C;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,0,15
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0xFFFF0000;
	// lis ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = -131072;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// beq ctx_arrow(ctx)->r6,0x821abd1c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABD1C;
	// lis ctx_arrow(ctx)->r10,-1
	ctx_arrow(ctx)->r10.s64 = -65536;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821abd80
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABD80;
loc_821ABD1C:
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,32
	ctx_arrow(ctx)->r3.s64 = 32;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821abd38
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ABD38;
	// bl 0x821b6b08
	sub_821B6B08(ctx, base);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
loc_821ABD38:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821abd4c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ABD4C;
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821abd88
	goto loc_821ABD88;
loc_821ABD4C:
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821b7030
	sub_821B7030(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bge 0x821abd80
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821ABD80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821b5cf0
	sub_821B5CF0(ctx, base);
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// b 0x821abd88
	goto loc_821ABD88;
loc_821ABD80:
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821ABD88:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821ABD90) PPC_WEAK_FUNC(sub_821ABD90);
PPC_FUNC_IMPL(__imp__sub_821ABD90) {
	PPC_FUNC_PROLOGUE();
	// b 0x821abca8
	sub_821ABCA8(ctx, base);
	return;
}

alias(__imp__sub_821ABD98) PPC_WEAK_FUNC(sub_821ABD98);
PPC_FUNC_IMPL(__imp__sub_821ABD98) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 40);
	// std ctx_arrow(ctx)->r7,48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 48);
	// std ctx_arrow(ctx)->r8,56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 56);
	// std ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 64);
	// std ctx_arrow(ctx)->r10,72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 72);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,32767
	ctx_arrow(ctx)->r11.s64 = 2147418112;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, ctx_arrow(ctx)->r11.u32, xer);
	// ble ctx_arrow(ctx)->r6,0x821abdd4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821ABDD4;
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,87
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 87;
	// b 0x821abde8
	goto loc_821ABDE8;
loc_821ABDD4:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,136
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 136;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821abbb8
	sub_821ABBB8(ctx, base);
loc_821ABDE8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821ABDF8) PPC_WEAK_FUNC(sub_821ABDF8);
PPC_FUNC_IMPL(__imp__sub_821ABDF8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed114
	// stwu ctx_arrow(ctx)->r1,-1152(ctx_arrow(ctx)->r1)
	ea = -1152 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r20,0
	ctx_arrow(ctx)->r20.s64 = 0;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// stw ctx_arrow(ctx)->r20,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r7.u64;
	// stw ctx_arrow(ctx)->r20,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r19.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r10.u64;
	// bl 0x821ae2e8
	sub_821AE2E8(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abe44
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABE44;
	// stw ctx_arrow(ctx)->r20,0(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 0);
loc_821ABE44:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abe50
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABE50;
	// stw ctx_arrow(ctx)->r20,0(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 0);
loc_821ABE50:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abe70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABE70;
	// lwz ctx_arrow(ctx)->r11,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abe70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABE70;
	// lis ctx_arrow(ctx)->r30,-30602
	ctx_arrow(ctx)->r30.s64 = -2005532672;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,2156
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 2156;
	// b 0x821ac440
	goto loc_821AC440;
loc_821ABE70:
	// lis ctx_arrow(ctx)->r12,-863
	ctx_arrow(ctx)->r12.s64 = -56557568;
	// ori ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,57792
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 | 57792;
	// and. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r12
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64 & ctx_arrow(ctx)->r12.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821abe8c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ABE8C;
loc_821ABE80:
	// lis ctx_arrow(ctx)->r30,-30602
	ctx_arrow(ctx)->r30.s64 = -2005532672;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,2156
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 2156;
	// b 0x821ac424
	goto loc_821AC424;
loc_821ABE8C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821abe80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ABE80;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r20.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac2d4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC2D4;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821ac2d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC2D4;
	// bl 0x822567e0
	sub_822567E0(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// stw ctx_arrow(ctx)->r31,20(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 20);
	// bne 0x821abecc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABECC;
	// lis ctx_arrow(ctx)->r30,-32761
	ctx_arrow(ctx)->r30.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,14
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 14;
	// b 0x821ac424
	goto loc_821AC424;
loc_821ABECC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5496
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5496;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822549a0
	sub_822549A0(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821abf34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ABF34;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x821abf28
	goto loc_821ABF28;
loc_821ABF18:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r5,4(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x82257140
	sub_82257140(ctx, base);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,8
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 8;
loc_821ABF28:
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// bne 0x821abf18
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABF18;
loc_821ABF34:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,5368
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 + 5368;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,5360
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 5360;
	// bne 0x821abf54
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABF54;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821ABF54:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5356
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5356;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,30,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x2;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821abf74
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABF74;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821ABF74:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5352
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5352;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,11,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x100000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821abf94
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABF94;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821ABF94:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5336
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5336;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,14,14
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x20000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821abfb4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABFB4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821ABFB4:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5320
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5320;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821abfd8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABFD8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821ABFD8:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5312
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5312;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821abffc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ABFFC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821ABFFC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5304
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5304;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// lwz ctx_arrow(ctx)->r6,16(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,5300
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 5300;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821abd98
	sub_821ABD98(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5284
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5284;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r6,32(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821abd98
	sub_821ABD98(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5272
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5272;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r6,36(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821abd98
	sub_821ABD98(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5260
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5260;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821abd98
	sub_821ABD98(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5248
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5248;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r6,44(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821abd98
	sub_821ABD98(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5236
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5236;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r6,52(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821abd98
	sub_821ABD98(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5224
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5224;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// li ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 16;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r6,48(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821abd98
	sub_821ABD98(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5212
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5212;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac13c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC13C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC13C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5492
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5492;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac15c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC15C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC15C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5484
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5484;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,27,27
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x10;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac17c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC17C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC17C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5476
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5476;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac19c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC19C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC19C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5468
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5468;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,23,23
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x100;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac1bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC1BC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC1BC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5464
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5464;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,22,22
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x200;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac1dc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC1DC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC1DC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5456
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5456;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,21,21
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x400;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac1fc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC1FC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC1FC:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5448
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5448;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,13,13
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x40000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac21c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC21C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC21C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5432
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5432;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,9,9
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x400000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac23c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC23C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC23C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5424
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5424;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,6,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x2000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac25c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC25C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC25C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5416
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5416;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29,0,7,7
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r29.u32 | (ctx_arrow(ctx)->r29.u64 << 32), 0) & 0x1000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac27c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC27C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC27C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5408
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5408;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,28,28
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac2a0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC2A0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC2A0:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5388
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5388;
	// bl 0x82256828
	sub_82256828(ctx, base);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0,26,26
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 0) & 0x20;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac2c4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC2C4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AC2C4:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5376
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5376;
	// bl 0x82256828
	sub_82256828(ctx, base);
loc_821AC2D4:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821ab970
	sub_821AB970(ctx, base);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r27,1028(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 1028);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821ac424
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AC424;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821ab8c0
	sub_821AB8C0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// beq 0x821ac32c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC32C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5176
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5176;
	// b 0x821ac334
	goto loc_821AC334;
loc_821AC32C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,5160
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 5160;
loc_821AC334:
	// bl 0x821af4e0
	sub_821AF4E0(ctx, base);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x821bf678
	sub_821BF678(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,100
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 100;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r29,256
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r29.u64 | 256;
	// stw ctx_arrow(ctx)->r27,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r23.u64;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bl 0x821d5668
	sub_821D5668(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// bge 0x821ac388
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821AC388;
	// bl 0x821c15e8
	sub_821C15E8(ctx, base);
	// b 0x821ac424
	goto loc_821AC424;
loc_821AC388:
	// bl 0x821c15e8
	sub_821C15E8(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,360
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 360;
	// bl 0x823dc1f0
	sub_823DC1F0(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ac3a8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC3A8;
	// lis ctx_arrow(ctx)->r30,-30602
	ctx_arrow(ctx)->r30.s64 = -2005532672;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,2905
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 2905;
	// b 0x821ac424
	goto loc_821AC424;
loc_821AC3A8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac3fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC3FC;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822572b8
	sub_822572B8(ctx, base);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,12
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r27.s64 + 12;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821b21d8
	sub_821B21D8(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821ac3fc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AC3FC;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x822572c0
	sub_822572C0(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
loc_821AC3FC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r22,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r22.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac410
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC410;
	// lwz ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r20,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 0);
loc_821AC410:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r21,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r21.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac424
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC424;
	// lwz ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r20,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 0);
loc_821AC424:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac440
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC440;
	// lwz ctx_arrow(ctx)->r3,20(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ac440
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC440;
	// bl 0x82253110
	sub_82253110(ctx, base);
	// stw ctx_arrow(ctx)->r20,20(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 20);
loc_821AC440:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r19,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r19.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac454
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC454;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r19.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,360
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 360;
	// bl 0x821b7480
	sub_821B7480(ctx, base);
loc_821AC454:
	// lwz ctx_arrow(ctx)->r3,100(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac474
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC474;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r20,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
loc_821AC474:
	// lwz ctx_arrow(ctx)->r3,96(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac494
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC494;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r20,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
loc_821AC494:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,336
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 336;
	// bl 0x821ae3f8
	sub_821AE3F8(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,1152
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 1152;
	// b 0x823ed164
	return;
}

alias(__imp__sub_821AC4A8) PPC_WEAK_FUNC(sub_821AC4A8);
PPC_FUNC_IMPL(__imp__sub_821AC4A8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed108
	// stwu ctx_arrow(ctx)->r1,-272(ctx_arrow(ctx)->r1)
	ea = -272 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r30,-31991
	ctx_arrow(ctx)->r30.s64 = -2096562176;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// lbz ctx_arrow(ctx)->r11,-9499(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r21.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r10.u64;
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// lis ctx_arrow(ctx)->r29,-31991
	ctx_arrow(ctx)->r29.s64 = -2096562176;
	// bne 0x821ac518
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC518;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,5736
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 5736;
	// bl 0x8235f050
	sub_8235F050(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac510
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC510;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,5648
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 5648;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stb ctx_arrow(ctx)->r11,-9500(ctx_arrow(ctx)->r29)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r29.u32 + -9500, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x8235e140
	sub_8235E140(ctx, base);
loc_821AC510:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stb ctx_arrow(ctx)->r11,-9499(ctx_arrow(ctx)->r30)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r30.u32 + -9499, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
loc_821AC518:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r22.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821abdf8
	sub_821ABDF8(ctx, base);
	// mr. ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// blt 0x821ac968
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AC968;
	// lbz ctx_arrow(ctx)->r11,-9500(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821ac968
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC968;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,6,6
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x2000000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac968
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC968;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,11,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x100000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac968
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC968;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r24.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac968
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC968;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac968
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC968;
	// li ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r29.s64 = 0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// oris ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,16
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64 | 1048576;
	// oris ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r31,512
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r31.u64 | 33554432;
	// stw ctx_arrow(ctx)->r29,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// stw ctx_arrow(ctx)->r29,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// stw ctx_arrow(ctx)->r29,120(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 120);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,118
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 118, xer);
	// bne ctx_arrow(ctx)->r6,0x821ac5ac
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AC5AC;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,4208
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 4208;
	// b 0x821ac5b4
	goto loc_821AC5B4;
loc_821AC5AC:
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,11992
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 11992;
loc_821AC5B4:
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
	// stw ctx_arrow(ctx)->r11,132(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 132);
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,120
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 120;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,116
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 116;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,132
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 132;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821abdf8
	sub_821ABDF8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge 0x821ac5f4
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821AC5F4;
	// lwz ctx_arrow(ctx)->r3,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AC5E4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac968
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC968;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ac95c
	goto loc_821AC95C;
loc_821AC5F4:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lis ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 65536;
	// bl 0x821b21d8
	sub_821B21D8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge 0x821ac64c
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821AC64C;
	// lwz ctx_arrow(ctx)->r3,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac628
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC628;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r29,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
loc_821AC628:
	// lwz ctx_arrow(ctx)->r3,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac644
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC644;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC644:
	// lwz ctx_arrow(ctx)->r3,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ac5e4
	goto loc_821AC5E4;
loc_821AC64C:
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,128(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 128);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823edf70
	sub_823EDF70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac69c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC69C;
	// lwz ctx_arrow(ctx)->r30,16(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ac6a0
	goto loc_821AC6A0;
loc_821AC69C:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r29.u64;
loc_821AC6A0:
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lis ctx_arrow(ctx)->r11,-32195
	ctx_arrow(ctx)->r11.s64 = -2109931520;
	// lwz ctx_arrow(ctx)->r28,120(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r28.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r11,8928
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r11.s64 + 8928;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r18.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r31,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r17.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r16.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r17.u64;
	// stw ctx_arrow(ctx)->r28,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r18.u64;
	// stw ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 100);
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r19.u64;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x8225b4f8
	sub_8225B4F8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge 0x821ac7a0
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821AC7A0;
loc_821AC748:
	// lwz ctx_arrow(ctx)->r3,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac768
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC768;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r29,116(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 116);
loc_821AC768:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac798
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC798;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC798:
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ac5e4
	goto loc_821AC5E4;
loc_821AC7A0:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r25)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,118
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 118, xer);
	// bne ctx_arrow(ctx)->r6,0x821ac7cc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AC7CC;
	// bl 0x8217aa40
	sub_8217AA40(ctx, base);
	// b 0x821ac7d0
	goto loc_821AC7D0;
loc_821AC7CC:
	// bl 0x8217aa40
	sub_8217AA40(ctx, base);
loc_821AC7D0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ac900
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AC900;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,5512
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s64 + 5512;
	// bl 0x8235e140
	sub_8235E140(ctx, base);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,124
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 124;
	// lwz ctx_arrow(ctx)->r3,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,124(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 124);
	// bl 0x821b21d8
	sub_821B21D8(&ctx);
	// mr. ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r20.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r20.s32, 0, xer);
	// blt 0x821ac748
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AC748;
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r30,128(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r11.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac858
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC858;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC858:
	// lwz ctx_arrow(ctx)->r11,124(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 112);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r24.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r22)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ac8ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC8AC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC8AC:
	// lwz ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r22)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r22.u32 + 0);
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r21)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ac8d0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC8D0;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC8D0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r21)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r21.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x821ac968
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC968;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r23)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ac968
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AC968;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// stw ctx_arrow(ctx)->r29,12(ctx_arrow(ctx)->r23)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r23.u32 + 12);
	// b 0x821ac968
	goto loc_821AC968;
loc_821AC900:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// lwz ctx_arrow(ctx)->r3,112(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac930
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC930;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC930:
	// lwz ctx_arrow(ctx)->r3,116(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac94c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC94C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC94C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ac968
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AC968;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
loc_821AC95C:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AC968:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r20.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,272
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 272;
	// b 0x823ed158
	return;
}

alias(__imp__sub_821AC978) PPC_WEAK_FUNC(sub_821AC978);
PPC_FUNC_IMPL(__imp__sub_821AC978) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed128
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r9.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r10.u64;
	// bl 0x821ac4a8
	sub_821AC4A8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-30602
	ctx_arrow(ctx)->r11.s64 = -2005532672;
	// ori ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2924
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 | 2924;
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, ctx_arrow(ctx)->r11.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821ac9e4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AC9E4;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,0,29,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r31.u32 | (ctx_arrow(ctx)->r31.u64 << 32), 0) & 0x4;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821ac9e4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AC9E4;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r27.u64;
	// ori ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r31.u64 | 4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821ac4a8
	sub_821AC4A8(ctx, base);
loc_821AC9E4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed178
	return;
}

alias(__imp__sub_821AC9F0) PPC_WEAK_FUNC(sub_821AC9F0);
PPC_FUNC_IMPL(__imp__sub_821AC9F0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-208(ctx_arrow(ctx)->r1)
	ea = -208 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// stw ctx_arrow(ctx)->r5,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r9.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// stw ctx_arrow(ctx)->r31,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// stw ctx_arrow(ctx)->r31,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stw ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bne ctx_arrow(ctx)->r6,0x821aca44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ACA44;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r31.u64;
	// li ctx_arrow(ctx)->r10,7
	ctx_arrow(ctx)->r10.s64 = 7;
	// mtctr ctx_arrow(ctx)->r10
	ctr.u64 = ctx_arrow(ctx)->r10.u64;
loc_821ACA34:
	// std ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8;
	// bdnz 0x821aca34
	--ctr.u64;
	if (ctr.u32 != 0) goto loc_821ACA34;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 96;
loc_821ACA44:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r31.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aca70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACA70;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,118
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 118, xer);
	// beq ctx_arrow(ctx)->r6,0x821aca70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACA70;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,112
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 112, xer);
	// beq ctx_arrow(ctx)->r6,0x821aca70
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACA70;
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// oris ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,16
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r6.u64 | 1048576;
loc_821ACA70:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9,24
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r9.u32 & 0xFF;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821acb44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ACB44;
	// rlwinm. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6,0,11,11
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r6.u32 | (ctx_arrow(ctx)->r6.u64 << 32), 0) & 0x100000;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821acb44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ACB44;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r1,88
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r1.s64 + 88;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// bl 0x821ac978
	sub_821AC978(ctx, base);
	// mr. ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r27.s32, 0, xer);
	// blt 0x821acad0
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ACAD0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acab4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACAB4;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x821acab8
	goto loc_821ACAB8;
loc_821ACAB4:
	// lwz ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ACAB8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r28.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acad4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACAD4;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// b 0x821acad8
	goto loc_821ACAD8;
loc_821ACAD0:
	// lwz ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ACAD4:
	// lwz ctx_arrow(ctx)->r3,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ACAD8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acaec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACAEC;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r31,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 0);
loc_821ACAEC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acb04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACB04;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821ACB04:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acb20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACB20;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821ACB20:
	// lwz ctx_arrow(ctx)->r3,88(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acb3c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACB3C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821ACB3C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// b 0x821acb58
	goto loc_821ACB58;
loc_821ACB44:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r26.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,92
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 92;
	// bl 0x821ac978
	sub_821AC978(ctx, base);
loc_821ACB58:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,208
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 208;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821ACB60) PPC_WEAK_FUNC(sub_821ACB60);
PPC_FUNC_IMPL(__imp__sub_821ACB60) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r10.u64;
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r5.u64;
	// stw ctx_arrow(ctx)->r31,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r6.u64;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r10,5196
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r10.s64 + 5196;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r8.u64;
	// lwz ctx_arrow(ctx)->r8,228(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r9.u64;
	// lwz ctx_arrow(ctx)->r9,236(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 84);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stw ctx_arrow(ctx)->r30,92(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 92);
	// stw ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stw ctx_arrow(ctx)->r29,96(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 96);
	// bl 0x821ac9f0
	sub_821AC9F0(&ctx);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821ACBC8) PPC_WEAK_FUNC(sub_821ACBC8);
PPC_FUNC_IMPL(__imp__sub_821ACBC8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821b7558
	sub_821B7558(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// bl 0x821d5700
	sub_821D5700(ctx, base);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 56);
	// stw ctx_arrow(ctx)->r11,72(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 72);
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 84);
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 88);
	// stw ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// stw ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 92);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821ACC20) PPC_WEAK_FUNC(sub_821ACC20);
PPC_FUNC_IMPL(__imp__sub_821ACC20) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed130
	// stwu ctx_arrow(ctx)->r1,-144(ctx_arrow(ctx)->r1)
	ea = -144 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821ACC44:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821acc44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ACC44;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// rotlwi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r28.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r28.s64 + 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821d5928
	sub_821D5928(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// beq 0x821acc9c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ACC9C;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821d5928
	sub_821D5928(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
	// bne 0x821acca8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ACCA8;
loc_821ACC9C:
	// lis ctx_arrow(ctx)->r26,-32761
	ctx_arrow(ctx)->r26.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,14
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r26.u64 | 14;
	// b 0x821accf4
	goto loc_821ACCF4;
loc_821ACCA8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x823f0600
	sub_823F0600(ctx, base);
	// li ctx_arrow(ctx)->r4,92
	ctx_arrow(ctx)->r4.s64 = 92;
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823f0670
	sub_823F0670(ctx, base);
	// mr. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// beq 0x821accd0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ACCD0;
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + 1;
loc_821ACCD0:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// stbx ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r28
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r28.u32, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r26), 0);
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,76(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821accf4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACCF4;
	// stb ctx_arrow(ctx)->r26,0(ctx_arrow(ctx)->r29)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r29.u32 + 0, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r26), 0);
loc_821ACCF4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r26.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,144
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 144;
	// b 0x823ed180
	return;
}

alias(__imp__sub_821ACD00) PPC_WEAK_FUNC(sub_821ACD00);
PPC_FUNC_IMPL(__imp__sub_821ACD00) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-704(ctx_arrow(ctx)->r1)
	ea = -704 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r25.u64 = ctx_arrow(ctx)->r6.u64;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r22.u64 = ctx_arrow(ctx)->r8.u64;
	// mr ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r24.u64 = ctx_arrow(ctx)->r10.u64;
	// stw ctx_arrow(ctx)->r9,72(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 72);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acd5c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACD5C;
	// lis ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r8,260
	ctx_arrow(ctx)->r8.s64 = 260;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// li ctx_arrow(ctx)->r6,-1
	ctx_arrow(ctx)->r6.s64 = -1;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,65001
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 65001;
	// bl 0x8235ef90
	sub_8235EF90(ctx, base);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r1.s64 + 352;
loc_821ACD5C:
	// lwz ctx_arrow(ctx)->r11,72(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ace94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACE94;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821ACD70:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821acd70
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ACD70;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821d5928
	sub_821D5928(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
	// bne 0x821acdb8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ACDB8;
loc_821ACDAC:
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821acf04
	goto loc_821ACF04;
loc_821ACDB8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,72(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31,88
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r31.s64 + 88;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,84
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 84;
	// lwz ctx_arrow(ctx)->r5,76(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r6,788(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r10,260
	ctx_arrow(ctx)->r10.s64 = 260;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stb ctx_arrow(ctx)->r26,80(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 80, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r26), 0);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// bge 0x821ace2c
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821ACE2C;
loc_821ACE0C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8152
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8152;
	// li ctx_arrow(ctx)->r5,1507
	ctx_arrow(ctx)->r5.s64 = 1507;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r22.u64;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
	// b 0x821acf00
	goto loc_821ACF00;
loc_821ACE2C:
	// lbz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq 0x821acedc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ACEDC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stb ctx_arrow(ctx)->r26,339(ctx_arrow(ctx)->r1)
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r1.u32 + 339, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r26), 0);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821ACE44:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ace44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ACE44;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r25.u64;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821d5928
	sub_821D5928(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq 0x821acdac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ACDAC;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// stw ctx_arrow(ctx)->r30,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
	// b 0x821acedc
	goto loc_821ACEDC;
loc_821ACE94:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821acc20
	sub_821ACC20(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821acf00
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ACF00;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r4,76(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// bl 0x821d5718
	sub_821D5718(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821ace0c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ACE0C;
	// lwz ctx_arrow(ctx)->r11,64(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,84
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 84;
	// lwz ctx_arrow(ctx)->r10,68(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r31,88
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r31.s64 + 88;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 84);
	// stw ctx_arrow(ctx)->r10,88(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 88);
loc_821ACEDC:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r22.u64;
	// lwz ctx_arrow(ctx)->r6,76(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r5,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821b7580
	sub_821B7580(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
loc_821ACF00:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
loc_821ACF04:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,704
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 704;
	// b 0x823ed170
	return;
}

alias(__imp__sub_821ACF10) PPC_WEAK_FUNC(sub_821ACF10);
PPC_FUNC_IMPL(__imp__sub_821ACF10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r8.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821acf4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ACF4C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821acf4c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ACF4C;
	// lis ctx_arrow(ctx)->r3,-30602
	ctx_arrow(ctx)->r3.s64 = -2005532672;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,2156
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 2156;
	// b 0x821acf8c
	goto loc_821ACF8C;
loc_821ACF4C:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 84);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// stw ctx_arrow(ctx)->r6,88(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 88);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821acc20
	sub_821ACC20(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821acf8c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ACF8C;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,88(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r4,84(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r7.s64 = 1;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821b7580
	sub_821B7580(ctx, base);
loc_821ACF8C:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821ACF98) PPC_WEAK_FUNC(sub_821ACF98);
PPC_FUNC_IMPL(__imp__sub_821ACF98) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821d9810
	sub_821D9810(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821acfd0
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ACFD0;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,684(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 684);
	// bl 0x821d59f0
	sub_821D59F0(&ctx);
	// stw ctx_arrow(ctx)->r3,688(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 688);
loc_821ACFD0:
	// stw ctx_arrow(ctx)->r30,680(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 680);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821ACFF0) PPC_WEAK_FUNC(sub_821ACFF0);
PPC_FUNC_IMPL(__imp__sub_821ACFF0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,684(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad024
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD024;
	// lwz ctx_arrow(ctx)->r3,688(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821d59f0
	sub_821D59F0(ctx, base);
	// bl 0x821d9958
	sub_821D9958(ctx, base);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r11,684(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 684);
loc_821AD024:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AD038) PPC_WEAK_FUNC(sub_821AD038);
PPC_FUNC_IMPL(__imp__sub_821AD038) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad04c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD04C;
	// lwz ctx_arrow(ctx)->r11,632(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
loc_821AD04C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad060
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD060;
	// lwz ctx_arrow(ctx)->r11,632(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
loc_821AD060:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_821AD068) PPC_WEAK_FUNC(sub_821AD068);
PPC_FUNC_IMPL(__imp__sub_821AD068) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lwz ctx_arrow(ctx)->r11,628(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ad074
	goto loc_821AD074;
loc_821AD070:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u64;
loc_821AD074:
	// lwz ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne 0x821ad070
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD070;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad090
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD090;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r4)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r4.u32 + 0);
loc_821AD090:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad0b4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD0B4;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// bge ctx_arrow(ctx)->r6,0x821ad0b0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AD0B0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821AD0B0:
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
loc_821AD0B4:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_821AD0C0) PPC_WEAK_FUNC(sub_821AD0C0);
PPC_FUNC_IMPL(__imp__sub_821AD0C0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-368(ctx_arrow(ctx)->r1)
	ea = -368 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b8768
	sub_821B8768(ctx, base);
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad20c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD20C;
	// lwz ctx_arrow(ctx)->r5,632(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ad124
	goto loc_821AD124;
loc_821AD100:
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,32
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 32, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad118
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD118;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad12c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD12C;
loc_821AD118:
	// lwz ctx_arrow(ctx)->r11,632(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AD124:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r11.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821ad100
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AD100;
loc_821AD12C:
	// li ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r8.s64 = 0;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 2;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r31.s64 + 1;
loc_821AD138:
	// lwz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ad1d8
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AD1D8;
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r7, 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,92
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 92, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad1b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD1B0;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ad178
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AD178;
	// lbz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 10, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad178
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD178;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,2
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 2;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 2;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 2;
	// b 0x821ad1d0
	goto loc_821AD1D0;
loc_821AD178:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,92
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 92, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad1b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD1B0;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r9.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ad1b0
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AD1B0;
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,13
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 13, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad1b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD1B0;
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 10, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad1b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD1B0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,3
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 3;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 3;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,3
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 3;
	// b 0x821ad1d0
	goto loc_821AD1D0;
loc_821AD1B0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 13, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,1
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// beq ctx_arrow(ctx)->r6,0x821ad1d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD1D0;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// stbx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r9.u32));
	// addi ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,1
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r8.s64 + 1;
loc_821AD1D0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,255
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 255, xer);
	// blt ctx_arrow(ctx)->r6,0x821ad138
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AD138;
loc_821AD1D8:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8188
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8188;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r30.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 24;
	// stbx ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r10
	PPC_STORE_U8_FUNC(&ctx, ctx_arrow(ctx)->r8.u32 + ctx_arrow(ctx)->r10.u32, 0, 0, 0, 0, 0, 0, 0, 0 + (ctx_arrow(ctx)->r11), 0);
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 84);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 80);
loc_821AD20C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,368
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 368;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AD228) PPC_WEAK_FUNC(sub_821AD228);
PPC_FUNC_IMPL(__imp__sub_821AD228) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne 0x821ad278
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD278;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1508
	ctx_arrow(ctx)->r5.s64 = 1508;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8236
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8236;
loc_821AD258:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lis ctx_arrow(ctx)->r3,-32768
	ctx_arrow(ctx)->r3.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 16389;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// b 0x821ad2d4
	goto loc_821AD2D4;
loc_821AD278:
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad294
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD294;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1513
	ctx_arrow(ctx)->r5.s64 = 1513;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8200
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8200;
	// b 0x821ad258
	goto loc_821AD258;
loc_821AD294:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad2b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD2B8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad2b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD2B8;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne ctx_arrow(ctx)->r6,0x821ad2bc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD2BC;
loc_821AD2B8:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821AD2BC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 96);
	// beq ctx_arrow(ctx)->r6,0x821ad2d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD2D0;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 0);
loc_821AD2D0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AD2D4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AD2E8) PPC_WEAK_FUNC(sub_821AD2E8);
PPC_FUNC_IMPL(__imp__sub_821AD2E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821ad338
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD338;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1509
	ctx_arrow(ctx)->r5.s64 = 1509;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8292
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8292;
loc_821AD318:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lis ctx_arrow(ctx)->r3,-32768
	ctx_arrow(ctx)->r3.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 16389;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// b 0x821ad388
	goto loc_821AD388;
loc_821AD338:
	// lwz ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad354
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD354;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1514
	ctx_arrow(ctx)->r5.s64 = 1514;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8256
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8256;
	// b 0x821ad318
	goto loc_821AD318;
loc_821AD354:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad374
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD374;
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r9.u64;
	// bne ctx_arrow(ctx)->r6,0x821ad378
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD378;
loc_821AD374:
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
loc_821AD378:
	// stw ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 96);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
loc_821AD388:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AD3A0) PPC_WEAK_FUNC(sub_821AD3A0);
PPC_FUNC_IMPL(__imp__sub_821AD3A0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed134
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r28,640
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r28.s64 + 640;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821ad588
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AD588;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad564
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD564;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r28,648
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r28.s64 + 648;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25744
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 25744;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AD3EC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad410
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD410;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad3ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD3EC;
loc_821AD410:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad564
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD564;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821ad588
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AD588;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad45c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD45C;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821ad588
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AD588;
	// b 0x821ad460
	goto loc_821AD460;
loc_821AD45C:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
loc_821AD460:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad564
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD564;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8340
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8340;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AD478:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad49c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD49C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad478
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD478;
loc_821AD49C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad564
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD564;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821ad588
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AD588;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad4d0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD4D0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 13, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad564
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD564;
loc_821AD4D0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad4e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD4E0;
	// stw ctx_arrow(ctx)->r27,60(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 60);
	// b 0x821ad584
	goto loc_821AD584;
loc_821AD4E0:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8328
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8328;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_821AD4EC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad510
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD510;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad4ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD4EC;
loc_821AD510:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad520
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD520;
	// li ctx_arrow(ctx)->r11,1024
	ctx_arrow(ctx)->r11.s64 = 1024;
	// b 0x821ad55c
	goto loc_821AD55C;
loc_821AD520:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8312
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8312;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_821AD52C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad550
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD550;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad52c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD52C;
loc_821AD550:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad564
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD564;
	// li ctx_arrow(ctx)->r11,2048
	ctx_arrow(ctx)->r11.s64 = 2048;
loc_821AD55C:
	// stw ctx_arrow(ctx)->r11,60(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 60);
	// b 0x821ad584
	goto loc_821AD584;
loc_821AD564:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad580
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD580;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad580
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD580;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b8768
	sub_821B8768(ctx, base);
loc_821AD580:
	// stw ctx_arrow(ctx)->r27,668(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 668);
loc_821AD584:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
loc_821AD588:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 76);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed184
	return;
}

alias(__imp__sub_821AD598) PPC_WEAK_FUNC(sub_821AD598);
PPC_FUNC_IMPL(__imp__sub_821AD598) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r14{};
	PPCRegister r15{};
	PPCRegister r16{};
	PPCRegister r17{};
	PPCRegister r18{};
	PPCRegister r19{};
	PPCRegister r20{};
	PPCRegister r21{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed100
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r25.s64 = 0;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r26,640
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r26.s64 + 640;
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r25.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r25,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x821b9380
	sub_821B9380(&ctx);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADA44;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r26,648
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r26.s64 + 648;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25744
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 25744;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
loc_821AD5EC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad610
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD610;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad5ec
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD5EC;
loc_821AD610:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADA44;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r15,-1
	ctx_arrow(ctx)->r15.s64 = -1;
	// addi ctx_arrow(ctx)->r22,ctx_arrow(ctx)->r11,8380
	ctx_arrow(ctx)->r22.s64 = ctx_arrow(ctx)->r11.s64 + 8380;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r20,ctx_arrow(ctx)->r11,8376
	ctx_arrow(ctx)->r20.s64 = ctx_arrow(ctx)->r11.s64 + 8376;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r19,ctx_arrow(ctx)->r11,8368
	ctx_arrow(ctx)->r19.s64 = ctx_arrow(ctx)->r11.s64 + 8368;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r18,ctx_arrow(ctx)->r11,8360
	ctx_arrow(ctx)->r18.s64 = ctx_arrow(ctx)->r11.s64 + 8360;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r17,ctx_arrow(ctx)->r11,8352
	ctx_arrow(ctx)->r17.s64 = ctx_arrow(ctx)->r11.s64 + 8352;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r21,ctx_arrow(ctx)->r11,8344
	ctx_arrow(ctx)->r21.s64 = ctx_arrow(ctx)->r11.s64 + 8344;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r11,8340
	ctx_arrow(ctx)->r23.s64 = ctx_arrow(ctx)->r11.s64 + 8340;
	// lis ctx_arrow(ctx)->r11,16383
	ctx_arrow(ctx)->r11.s64 = 1073676288;
	// ori ctx_arrow(ctx)->r16,ctx_arrow(ctx)->r11,65535
	ctx_arrow(ctx)->r16.u64 = ctx_arrow(ctx)->r11.u64 | 65535;
loc_821AD674:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad6b4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD6B4;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
loc_821AD688:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad6ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD6AC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD688;
loc_821AD6AC:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821ada98
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADA98;
loc_821AD6B4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad7b0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD7B0;
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r21
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r21.u64;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821AD6C8:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad6ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD6EC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad6c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD6C8;
loc_821AD6EC:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad6fc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD6FC;
	// li ctx_arrow(ctx)->r28,16
	ctx_arrow(ctx)->r28.s64 = 16;
	// b 0x821ad7e0
	goto loc_821AD7E0;
loc_821AD6FC:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r17
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r17.u64;
loc_821AD704:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad728
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD728;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad704
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD704;
loc_821AD728:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad738
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD738;
	// li ctx_arrow(ctx)->r28,15
	ctx_arrow(ctx)->r28.s64 = 15;
	// b 0x821ad7e0
	goto loc_821AD7E0;
loc_821AD738:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r18
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r18.u64;
loc_821AD740:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad764
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD764;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad740
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD740;
loc_821AD764:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad774
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD774;
	// li ctx_arrow(ctx)->r28,0
	ctx_arrow(ctx)->r28.s64 = 0;
	// b 0x821ad7e0
	goto loc_821AD7E0;
loc_821AD774:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r19
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r19.u64;
loc_821AD77C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad7a0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD7A0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad77c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD77C;
loc_821AD7A0:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADA44;
	// li ctx_arrow(ctx)->r28,255
	ctx_arrow(ctx)->r28.s64 = 255;
	// b 0x821ad7e0
	goto loc_821AD7E0;
loc_821AD7B0:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad7c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD7C8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad7c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD7C8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADA44;
loc_821AD7C8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 1, xer);
	// blt ctx_arrow(ctx)->r6,0x821ada44
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821ADA44;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 4, xer);
	// bgt ctx_arrow(ctx)->r6,0x821ada44
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821ADA44;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AD7E0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADA44;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r20
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r20.u64;
loc_821AD80C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad830
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD830;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad80c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD80C;
loc_821AD830:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADA44;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
loc_821AD850:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad86c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD86C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad86c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD86C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADA44;
loc_821AD86C:
	// not ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ~ctx_arrow(ctx)->r25.u64;
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// and ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u64 & ctx_arrow(ctx)->r25.u64;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad918
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD918;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 1) & 0xFFFFFFFE;
	// bne ctx_arrow(ctx)->r6,0x821ad894
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD894;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_821AD894:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r16.u32, xer);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// ble ctx_arrow(ctx)->r6,0x821ad8a4
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AD8A4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r15.u64;
loc_821AD8A4:
	// bl 0x8209d088
	sub_8209D088(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// beq 0x821adb10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADB10;
	// rlwinm ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r25,2,0,29
	ctx_arrow(ctx)->r30.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r4,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d150
	sub_8209D150(ctx, base);
	// stw ctx_arrow(ctx)->r31,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,1,0,30
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 1) & 0xFFFFFFFE;
	// bne ctx_arrow(ctx)->r6,0x821ad8e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD8E0;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_821AD8E0:
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r16
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r16.u32, xer);
	// rlwinm ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// ble ctx_arrow(ctx)->r6,0x821ad8f0
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AD8F0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r15
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r15.u64;
loc_821AD8F0:
	// bl 0x8209d088
	sub_8209D088(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// beq 0x821adb10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADB10;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r14.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r14.u64;
	// bl 0x8209d150
	sub_8209D150(ctx, base);
	// mr ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r14.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AD918:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r25,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r25.u32 | (ctx_arrow(ctx)->r25.u64 << 32), 2) & 0xFFFFFFFC;
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r25,1
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r25.s64 + 1;
	// stwx ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r14
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r14.u32);
	// stwx ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + ctx_arrow(ctx)->r10.u32);
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad850
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD850;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r22.u64;
loc_821AD958:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad97c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD97C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad958
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD958;
loc_821AD97C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821ad9b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD9B8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
loc_821AD98C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad9b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD9B0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad98c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD98C;
loc_821AD9B0:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad850
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD850;
loc_821AD9B8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r22
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r22.u64;
loc_821AD9C0:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ad9e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AD9E4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ad9c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AD9C0;
loc_821AD9E4:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad674
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD674;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821ad674
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AD674;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r27.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r23.u64;
loc_821ADA18:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ada3c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADA3C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ada18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADA18;
loc_821ADA3C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821ad674
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AD674;
loc_821ADA44:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821ada64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADA64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x821ada64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADA64;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b8768
	sub_821B8768(ctx, base);
loc_821ADA64:
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// stw ctx_arrow(ctx)->r31,668(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 668);
loc_821ADA6C:
	// lwz ctx_arrow(ctx)->r3,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d150
	sub_8209D150(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r14.u64;
	// bl 0x8209d150
	sub_8209D150(ctx, base);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// bl 0x8209d150
	sub_8209D150(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r26)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r26.u32 + 76);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed150
	return;
loc_821ADA98:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r24.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r24)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821adac4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADAC4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// bne ctx_arrow(ctx)->r6,0x821ada44
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADA44;
loc_821ADAC4:
	// li ctx_arrow(ctx)->r27,0
	ctx_arrow(ctx)->r27.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r25.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adb08
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADB08;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r26,24
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r26.s64 + 24;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r14
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r14.u64;
	// subf ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r14,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r14.s64;
loc_821ADAE0:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwzx ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b8018
	sub_821B8018(ctx, base);
	// mr. ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r31.s32, 0, xer);
	// blt 0x821ada6c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADA6C;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r27,1
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r27.s64 + 1;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,4
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r30.s64 + 4;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r27.u32, ctx_arrow(ctx)->r25.u32, xer);
	// blt ctx_arrow(ctx)->r6,0x821adae0
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821ADAE0;
loc_821ADB08:
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// b 0x821ada6c
	goto loc_821ADA6C;
loc_821ADB10:
	// lis ctx_arrow(ctx)->r31,-32761
	ctx_arrow(ctx)->r31.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,14
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r31.u64 | 14;
	// b 0x821ada6c
	goto loc_821ADA6C;
}

alias(__imp__sub_821ADB20) PPC_WEAK_FUNC(sub_821ADB20);
PPC_FUNC_IMPL(__imp__sub_821ADB20) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// lis ctx_arrow(ctx)->r10,1586
	ctx_arrow(ctx)->r10.s64 = 103940096;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// ori ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,55311
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 | 55311;
	// beq ctx_arrow(ctx)->r6,0x821adb68
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADB68;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821adb68
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADB68;
loc_821ADB3C:
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// mulli ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,19
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 * 19;
	// add ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u64 + ctx_arrow(ctx)->r11.u64;
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne 0x821adb3c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADB3C;
	// li ctx_arrow(ctx)->r11,127
	ctx_arrow(ctx)->r11.s64 = 127;
	// divwu ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u32 = ctx_arrow(ctx)->r10.u32 / ctx_arrow(ctx)->r11.u32;
	// mulli ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,127
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 * 127;
	// subf ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
	// blr 
	return;
loc_821ADB68:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// blr 
	return;
}

alias(__imp__sub_821ADB70) PPC_WEAK_FUNC(sub_821ADB70);
PPC_FUNC_IMPL(__imp__sub_821ADB70) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADB80:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821adba4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADBA4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adb80
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADB80;
loc_821ADBA4:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821adca8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADCA8;
	// lwz ctx_arrow(ctx)->r30,4(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r29,4(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r29.u64;
	// mr. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821adbe0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADBE0;
loc_821ADBC0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adbd8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADBD8;
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821adbc0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADBC0;
loc_821ADBD8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821adca8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADCA8;
loc_821ADBE0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821adca8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADCA8;
	// lwz ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r5)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ade04
	goto loc_821ADE04;
loc_821ADBF4:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adc94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADC94;
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821adc94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADC94;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 11, xer);
	// bgt ctx_arrow(ctx)->r6,0x821addf0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821ADDF0;
	// lis ctx_arrow(ctx)->r12,-32254
	ctx_arrow(ctx)->r12.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,7992
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + 7992;
	// lbzx ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r0.u64 = PPC_Read_U8(ctx,  ctx);
	// rlwinm ctx_arrow(ctx)->r0,ctx_arrow(ctx)->r0,2,0,29
	ctx_arrow(ctx)->r0.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r0.u32 | (ctx_arrow(ctx)->r0.u64 << 32), 2) & 0xFFFFFFFC;
	// lis ctx_arrow(ctx)->r12,-32229
	ctx_arrow(ctx)->r12.s64 = -2112159744;
	// addi ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,-9156
	ctx_arrow(ctx)->r12.s64 = ctx_arrow(ctx)->r12.s64 + -9156;
	// add ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r12,ctx_arrow(ctx)->r0
	ctx_arrow(ctx)->r12.u64 = ctx_arrow(ctx)->r12.u64 + ctx_arrow(ctx)->r0.u64;
	// mtctr ctx_arrow(ctx)->r12
	ctr.u64 = ctx_arrow(ctx)->r12.u64;
	// nop 
	// bctr 
	switch (ctx_arrow(ctx)->r11.u64) {
	case 0:
		goto loc_821ADC3C;
	case 1:
		goto loc_821ADC54;
	case 2:
		goto loc_821ADC3C;
	case 3:
		goto loc_821ADC3C;
	case 4:
		goto loc_821ADC3C;
	case 5:
		goto loc_821ADCB0;
	case 6:
		goto loc_821ADCB0;
	case 7:
		goto loc_821ADCB0;
	case 8:
		goto loc_821ADCB0;
	case 9:
		goto loc_821ADCC0;
	case 10:
		goto loc_821ADDC0;
	case 11:
		goto loc_821ADDC0;
	default:
		__builtin_unreachable();
	}
loc_821ADC3C:
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r11.s64;
loc_821ADC48:
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r11.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r11.u32);
loc_821ADC4C:
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
	// b 0x821addf4
	goto loc_821ADDF4;
loc_821ADC54:
	// lbz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821adc94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADC94;
	// lbz ctx_arrow(ctx)->r11,25(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,25(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821adc94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADC94;
	// lbz ctx_arrow(ctx)->r11,26(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,26(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
	// bne ctx_arrow(ctx)->r6,0x821adc94
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADC94;
	// lbz ctx_arrow(ctx)->r11,27(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r10,27(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, ctx_arrow(ctx)->r11.u32, xer);
loc_821ADC90:
	// beq ctx_arrow(ctx)->r6,0x821addfc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADDFC;
loc_821ADC94:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821adca8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADCA8;
loc_821ADC9C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// beq ctx_arrow(ctx)->r6,0x821adcac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADCAC;
loc_821ADCA8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821ADCAC:
	// b 0x823ed18c
	return;
loc_821ADCB0:
	// lfd f0,24(ctx_arrow(ctx)->r3)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// lfd f13,24(ctx_arrow(ctx)->r31)
	ctx.f13.u64 = PPC_Read_U64(ctx,  ctx);
	// fcmpu ctx_arrow(ctx)->r6,f0,f13
	ctx_arrow(ctx)->r6.compare(f0.f64, ctx.f13.f64);
	// b 0x821adc90
	goto loc_821ADC90;
loc_821ADCC0:
	// mr. ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r30.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// li ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = 1;
	// beq 0x821add20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADD20;
	// lwz ctx_arrow(ctx)->r5,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADCD4:
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u64;
loc_821ADCDC:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821add00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADD00;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adcdc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADCDC;
loc_821ADD00:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x821add1c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADD1C;
	// lwz ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,1
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r6.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne 0x821adcd4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADCD4;
	// b 0x821add20
	goto loc_821ADD20;
loc_821ADD1C:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
loc_821ADD20:
	// mr. ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r29.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r6,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r6.s64 + -1;
	// beq 0x821add7c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADD7C;
	// lwz ctx_arrow(ctx)->r6,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADD30:
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r6
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r6.u64;
loc_821ADD38:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821add5c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADD5C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821add38
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADD38;
loc_821ADD5C:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x821add78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADD78;
	// lwz ctx_arrow(ctx)->r8,12(ctx_arrow(ctx)->r8)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,-1
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + -1;
	// cmplwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 0, xer);
	// bne 0x821add30
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADD30;
	// b 0x821add7c
	goto loc_821ADD7C;
loc_821ADD78:
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
loc_821ADD7C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r4.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821add8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADD8C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r5.s64 + 0;
	// b 0x821adc48
	goto loc_821ADC48;
loc_821ADD8C:
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADD94:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821addb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADDB8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821add94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADD94;
loc_821ADDB8:
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r8.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r8.u32);
	// b 0x821adc4c
	goto loc_821ADC4C;
loc_821ADDC0:
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADDC8:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821addb8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADDB8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821addc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADDC8;
	// b 0x821addb8
	goto loc_821ADDB8;
loc_821ADDF0:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_821ADDF4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adc94
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADC94;
loc_821ADDFC:
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADE04:
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x821adbf4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADBF4;
	// b 0x821adc9c
	goto loc_821ADC9C;
}

alias(__imp__sub_821ADE10) PPC_WEAK_FUNC(sub_821ADE10);
PPC_FUNC_IMPL(__imp__sub_821ADE10) {
	PPC_FUNC_PROLOGUE();
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821b7618
	sub_821B7618(ctx, base);
	return;
}

alias(__imp__sub_821ADE18) PPC_WEAK_FUNC(sub_821ADE18);
PPC_FUNC_IMPL(__imp__sub_821ADE18) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x821adb20
	sub_821ADB20(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 30;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821ade80
	goto loc_821ADE80;
loc_821ADE40:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821ADE48:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ade6c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADE6C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ade48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADE48;
loc_821ADE6C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// blt 0x821ade88
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADE88;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ade90
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADE90;
	// lwz ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADE80:
	// cmplwi ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne 0x821ade40
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADE40;
loc_821ADE88:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// b 0x821adef8
	goto loc_821ADEF8;
loc_821ADE90:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adea4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADEA4;
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x821adef8
	goto loc_821ADEF8;
loc_821ADEA4:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lwz ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16);
	// b 0x821aded8
	goto loc_821ADED8;
loc_821ADEB4:
	// lwz ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821aded4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821ADED4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r4,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821ade18
	sub_821ADE18(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821adee0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADEE0;
loc_821ADED4:
	// lwz ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADED8:
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne 0x821adeb4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADEB4;
loc_821ADEE0:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// subf ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 - ctx_arrow(ctx)->r11.s64;
	// cntlzw ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 16);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r10.u32 | (ctx_arrow(ctx)->r10.u64 << 32), 27) & 0x1;
	// xori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r10.u64 ^ 1;
loc_821ADEF8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821ADF00) PPC_WEAK_FUNC(sub_821ADF00);
PPC_FUNC_IMPL(__imp__sub_821ADF00) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x821ade18
	sub_821ADE18(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821adf8c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADF8C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821adb20
	sub_821ADB20(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 30;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// lwzx ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821adf84
	goto loc_821ADF84;
loc_821ADF44:
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
loc_821ADF4C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821adf70
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821ADF70;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adf4c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADF4C;
loc_821ADF70:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// blt 0x821adf8c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821ADF8C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adfa8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADFA8;
	// lwz ctx_arrow(ctx)->r7,12(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
loc_821ADF84:
	// cmplwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r7.u32, 0, xer);
	// bne 0x821adf44
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADF44;
loc_821ADF8C:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821ADF90:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
loc_821ADFA8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adfb8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADFB8;
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r5)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r5.u32 + 0);
loc_821ADFB8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821adfc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821ADFC8;
	// lwz ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r6)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r6.u32 + 0);
loc_821ADFC8:
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x821adf90
	goto loc_821ADF90;
}

alias(__imp__sub_821ADFD0) PPC_WEAK_FUNC(sub_821ADFD0);
PPC_FUNC_IMPL(__imp__sub_821ADFD0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r5.u32, 0, xer);
	// beqlr ctx_arrow(ctx)->r6
	if (ctx_arrow(ctx)->r6.eq()) return;
	// li ctx_arrow(ctx)->r9,92
	ctx_arrow(ctx)->r9.s64 = 92;
loc_821ADFE8:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,34
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 34, xer);
	// bne ctx_arrow(ctx)->r6,0x821ae01c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AE01C;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae008
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE008;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r7.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ae008
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AE008;
	// stbx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r6.u32));
loc_821AE008:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ae01c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AE01C;
	// cntlzw ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r10.u32 == 0 ? 32 : __builtin_clz(ctx_arrow(ctx)->r10.u32);
	// rlwinm ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,27,31,31
	ctx_arrow(ctx)->r10.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 27) & 0x1;
loc_821AE01C:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae050
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE050;
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,92
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r8.u32, 92, xer);
	// bne ctx_arrow(ctx)->r6,0x821ae050
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AE050;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae048
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE048;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r7.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ae048
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AE048;
	// stbx ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r6.u32));
loc_821AE048:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 1;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
loc_821AE050:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae068
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE068;
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, ctx_arrow(ctx)->r7.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821ae068
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AE068;
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r4)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// stbx ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r6
	PPC_Write_U8(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + ctx_arrow(ctx)->r6.u32));
loc_821AE068:
	// addic. ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r5,-1
	xer.ca = ctx_arrow(ctx)->r5.u32 > 0;
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r5.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r5.s32, 0, xer);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 1;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r4.s64 + 1;
	// bne 0x821adfe8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821ADFE8;
	// blr 
	return;
}

alias(__imp__sub_821AE080) PPC_WEAK_FUNC(sub_821AE080);
PPC_FUNC_IMPL(__imp__sub_821AE080) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae0a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE0A4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r4.u64;
	// b 0x821ae0d4
	goto loc_821AE0D4;
loc_821AE0A4:
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ae0d0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AE0D0;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8384
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8384;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
loc_821AE0D0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AE0D4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AE0E8) PPC_WEAK_FUNC(sub_821AE0E8);
PPC_FUNC_IMPL(__imp__sub_821AE0E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r3,12(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae118
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE118;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae0e8
	sub_821AE0E8(ctx, base);
loc_821AE118:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821ae12c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE12C;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821AE12C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AE148) PPC_WEAK_FUNC(sub_821AE148);
PPC_FUNC_IMPL(__imp__sub_821AE148) {
	PPC_FUNC_PROLOGUE();
	PPCRegister ctr{};
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,56(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae170
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE170;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae0e8
	sub_821AE0E8(ctx, base);
loc_821AE170:
	// lwz ctx_arrow(ctx)->r3,92(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae184
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE184;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae1d8
	sub_821AE1D8(ctx, base);
loc_821AE184:
	// lwz ctx_arrow(ctx)->r11,72(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae1b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE1B0;
	// lwz ctx_arrow(ctx)->r4,84(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x821ae1b0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE1B0;
	// rotlwi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r3.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mtctr ctx_arrow(ctx)->r11
	ctr.u64 = ctx_arrow(ctx)->r11.u64;
	// bctrl 
	PPC_CALL_INDIRECT_FUNC(ctr.u32);
loc_821AE1B0:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,60
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 60;
	// bl 0x821d5878
	sub_821D5878(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x823d22e0
	sub_823D22E0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AE1D8) PPC_WEAK_FUNC(sub_821AE1D8);
PPC_FUNC_IMPL(__imp__sub_821AE1D8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x821ae148
	sub_821AE148(ctx, base);
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821ae20c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE20C;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821AE20C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AE228) PPC_WEAK_FUNC(sub_821AE228);
PPC_FUNC_IMPL(__imp__sub_821AE228) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae258
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE258;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae228
	sub_821AE228(ctx, base);
loc_821AE258:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821ae26c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE26C;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821AE26C:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AE288) PPC_WEAK_FUNC(sub_821AE288);
PPC_FUNC_IMPL(__imp__sub_821AE288) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lwz ctx_arrow(ctx)->r3,40(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae2b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE2B8;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae288
	sub_821AE288(ctx, base);
loc_821AE2B8:
	// clrlwi. ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30,31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u32 & 0x1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq 0x821ae2cc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE2CC;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821AE2CC:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AE2E8) PPC_WEAK_FUNC(sub_821AE2E8);
PPC_FUNC_IMPL(__imp__sub_821AE2E8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 65536;
	// lis ctx_arrow(ctx)->r4,16
	ctx_arrow(ctx)->r4.s64 = 1048576;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// bl 0x821d5890
	sub_821D5890(ctx, base);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b7450
	sub_821B7450(ctx, base);
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r30,684(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 684);
	// bl 0x821acf98
	sub_821ACF98(&ctx);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// stw ctx_arrow(ctx)->r30,60(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 60);
	// li ctx_arrow(ctx)->r5,508
	ctx_arrow(ctx)->r5.s64 = 508;
	// stw ctx_arrow(ctx)->r30,64(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 64);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// stw ctx_arrow(ctx)->r30,72(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 72);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,120
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 120;
	// stw ctx_arrow(ctx)->r30,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// stw ctx_arrow(ctx)->r30,84(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 84);
	// stw ctx_arrow(ctx)->r29,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
	// stw ctx_arrow(ctx)->r29,88(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 88);
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 92);
	// stw ctx_arrow(ctx)->r29,96(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 96);
	// stw ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 100);
	// stw ctx_arrow(ctx)->r30,104(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 104);
	// stw ctx_arrow(ctx)->r30,108(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 108);
	// stw ctx_arrow(ctx)->r30,112(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 112);
	// stw ctx_arrow(ctx)->r30,116(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 116);
	// stw ctx_arrow(ctx)->r30,628(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 628);
	// stw ctx_arrow(ctx)->r30,632(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 632);
	// stw ctx_arrow(ctx)->r30,68(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 68);
	// bl 0x823edf70
	sub_823EDF70(&ctx);
	// std ctx_arrow(ctx)->r30,640(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 640);
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// std ctx_arrow(ctx)->r30,648(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 648);
	// li ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r3.s64 = 4;
	// std ctx_arrow(ctx)->r30,656(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 656);
	// std ctx_arrow(ctx)->r30,664(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 664);
	// stw ctx_arrow(ctx)->r29,672(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 672);
	// bl 0x823f0760
	sub_823F0760(&ctx);
	// bl 0x823f06c8
	sub_823F06C8(&ctx);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,676(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 676);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,-20548
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + -20548;
	// beq 0x821ae3dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE3DC;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
loc_821AE3B0:
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// subf ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 - ctx_arrow(ctx)->r9.s64;
	// beq 0x821ae3d4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE3D4;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r3.s64 + 1;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae3b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE3B0;
loc_821AE3D4:
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// beq 0x821ae3e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE3E4;
loc_821AE3DC:
	// li ctx_arrow(ctx)->r3,4
	ctx_arrow(ctx)->r3.s64 = 4;
	// bl 0x823f0760
	sub_823F0760(ctx, base);
loc_821AE3E4:
	// stw ctx_arrow(ctx)->r30,692(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 692);
	// bl 0x821d9a78
	sub_821D9A78(&ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821AE3F8) PPC_WEAK_FUNC(sub_821AE3F8);
PPC_FUNC_IMPL(__imp__sub_821AE3F8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r3,64(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae41c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE41C;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae288
	sub_821AE288(ctx, base);
loc_821AE41C:
	// lwz ctx_arrow(ctx)->r3,116(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae430
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE430;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae228
	sub_821AE228(ctx, base);
loc_821AE430:
	// lwz ctx_arrow(ctx)->r31,628(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// beq 0x821ae450
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE450;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821ae148
	sub_821AE148(ctx, base);
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x8209d060
	sub_8209D060(ctx, base);
loc_821AE450:
	// lwz ctx_arrow(ctx)->r3,68(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae464
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE464;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae228
	sub_821AE228(ctx, base);
loc_821AE464:
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,120
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 + 120;
	// li ctx_arrow(ctx)->r29,127
	ctx_arrow(ctx)->r29.s64 = 127;
loc_821AE46C:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae480
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE480;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// bl 0x821ae0e8
	sub_821AE0E8(ctx, base);
loc_821AE480:
	// addic. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r29,-1
	xer.ca = ctx_arrow(ctx)->r29.u32 > 0;
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r29.s64 + -1;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r31,4
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r31.s64 + 4;
	// bne 0x821ae46c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE46C;
	// lwz ctx_arrow(ctx)->r11,684(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae4a0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE4A0;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821acff0
	sub_821ACFF0(ctx, base);
loc_821AE4A0:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 24;
	// bl 0x821b7cd0
	sub_821B7CD0(ctx, base);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821d58d8
	sub_821D58D8(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821AE4B8) PPC_WEAK_FUNC(sub_821AE4B8);
PPC_FUNC_IMPL(__imp__sub_821AE4B8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r3.s64 = 12;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821ae504
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE504;
	// li ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r10.s64 = 0;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// li ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = 1;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// b 0x821ae508
	goto loc_821AE508;
loc_821AE504:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821AE508:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821ae51c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AE51C;
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821ae530
	goto loc_821AE530;
loc_821AE51C:
	// lwz ctx_arrow(ctx)->r10,116(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 4);
	// stw ctx_arrow(ctx)->r11,116(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 116);
	// stw ctx_arrow(ctx)->r30,672(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 672);
loc_821AE530:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AE548) PPC_WEAK_FUNC(sub_821AE548);
PPC_FUNC_IMPL(__imp__sub_821AE548) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-176(ctx_arrow(ctx)->r1)
	ea = -176 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED08;
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed08
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED08;
	// lwz ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r28,640
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r28.s64 + 640;
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x821ae5b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE5B8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// ld ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// ld ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// ld ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// ld ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 112);
	// stw ctx_arrow(ctx)->r30,12(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 12);
	// b 0x821ae5d4
	goto loc_821AE5D4;
loc_821AE5B8:
	// lwz ctx_arrow(ctx)->r11,672(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// ori ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r11.u64 | 4;
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821aed10
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AED10;
loc_821AE5D4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// beq ctx_arrow(ctx)->r6,0x821aec64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEC64;
	// ble ctx_arrow(ctx)->r6,0x821aed00
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AED00;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// ble ctx_arrow(ctx)->r6,0x821aec5c
	if ((((((((((((((!ctx)))))))))))))->r6.gt()) goto loc_821AEC5C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae620
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE620;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 10, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae618
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE618;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae60c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE60C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED00;
loc_821AE60C:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 76);
	// b 0x821aed10
	goto loc_821AED10;
loc_821AE618:
	// li ctx_arrow(ctx)->r3,280
	ctx_arrow(ctx)->r3.s64 = 280;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE620:
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aeb18
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEB18;
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// stw ctx_arrow(ctx)->r30,88(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 88);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// lwz ctx_arrow(ctx)->r11,648(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 100);
	// lbz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r10.s64 = ARRAY_S8_TO_S64(ctx_arrow(ctx)->r10, 0);
	// beq ctx_arrow(ctx)->r6,0x821ae96c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE96C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,100
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 100, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae930
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE930;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,101
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 101, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae830
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE830;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,105
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 105, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae734
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE734;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,108
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 108, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae6f8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE6F8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,112
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 112, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae6bc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE6BC;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,117
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 117, xer);
	// bne ctx_arrow(ctx)->r6,0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEA28;
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8556
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8556;
loc_821AE688:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ae6ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE6AC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae688
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE688;
loc_821AE6AC:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEA28;
	// li ctx_arrow(ctx)->r3,258
	ctx_arrow(ctx)->r3.s64 = 258;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE6BC:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8548
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8548;
loc_821AE6C4:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ae6e8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE6E8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae6c4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE6C4;
loc_821AE6E8:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEA28;
	// li ctx_arrow(ctx)->r3,270
	ctx_arrow(ctx)->r3.s64 = 270;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE6F8:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8540
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8540;
loc_821AE700:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ae724
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE724;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae700
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE700;
loc_821AE724:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEA28;
	// li ctx_arrow(ctx)->r3,259
	ctx_arrow(ctx)->r3.s64 = 259;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE734:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8536
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8536;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE740:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae764
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE764;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae740
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE740;
loc_821AE764:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x821ae774
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE774;
	// li ctx_arrow(ctx)->r3,262
	ctx_arrow(ctx)->r3.s64 = 262;
	// b 0x821ae86c
	goto loc_821AE86C;
loc_821AE774:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8528
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8528;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE780:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae7a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE7A4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae780
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE780;
loc_821AE7A4:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x821ae7b4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE7B4;
	// li ctx_arrow(ctx)->r3,263
	ctx_arrow(ctx)->r3.s64 = 263;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE7B4:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8520
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8520;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE7C0:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae7e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE7E4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae7c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE7C0;
loc_821AE7E4:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x821ae7f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE7F4;
	// li ctx_arrow(ctx)->r3,264
	ctx_arrow(ctx)->r3.s64 = 264;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE7F4:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8512
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8512;
loc_821AE7FC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ae820
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE820;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae7fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE7FC;
loc_821AE820:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEA28;
	// li ctx_arrow(ctx)->r3,260
	ctx_arrow(ctx)->r3.s64 = 260;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE830:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8504
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8504;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE83C:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae860
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE860;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae83c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE83C;
loc_821AE860:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x821ae874
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE874;
loc_821AE868:
	// li ctx_arrow(ctx)->r3,265
	ctx_arrow(ctx)->r3.s64 = 265;
loc_821AE86C:
	// stw ctx_arrow(ctx)->r29,100(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 100);
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE874:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8496
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8496;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE880:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae8a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE8A4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae880
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE880;
loc_821AE8A4:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x821ae8b4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE8B4;
loc_821AE8AC:
	// li ctx_arrow(ctx)->r3,266
	ctx_arrow(ctx)->r3.s64 = 266;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE8B4:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8488
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8488;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE8C0:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae8e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE8E4;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae8c0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE8C0;
loc_821AE8E4:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x821ae8f4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE8F4;
loc_821AE8EC:
	// li ctx_arrow(ctx)->r3,267
	ctx_arrow(ctx)->r3.s64 = 267;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE8F4:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8352
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8352;
loc_821AE8FC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ae920
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE920;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae8fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE8FC;
loc_821AE920:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEA28;
	// li ctx_arrow(ctx)->r3,261
	ctx_arrow(ctx)->r3.s64 = 261;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE930:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8480
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8480;
loc_821AE938:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821ae95c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE95C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae938
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE938;
loc_821AE95C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEA28;
	// li ctx_arrow(ctx)->r3,257
	ctx_arrow(ctx)->r3.s64 = 257;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE96C:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,101
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 101, xer);
	// beq ctx_arrow(ctx)->r6,0x821aea34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEA34;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,105
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 105, xer);
	// bne ctx_arrow(ctx)->r6,0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEA28;
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8536
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8536;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE988:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae9ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE9AC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae988
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE988;
loc_821AE9AC:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// bne 0x821ae9bc
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AE9BC;
loc_821AE9B4:
	// li ctx_arrow(ctx)->r3,268
	ctx_arrow(ctx)->r3.s64 = 268;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AE9BC:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8528
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8528;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AE9C8:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821ae9ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE9EC;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae9c8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE9C8;
loc_821AE9EC:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x821ae9b4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE9B4;
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8520
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8520;
loc_821AE9FC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821aea20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEA20;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821ae9fc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AE9FC;
loc_821AEA20:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821ae9b4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE9B4;
loc_821AEA28:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 88);
	// b 0x821aec54
	goto loc_821AEC54;
loc_821AEA34:
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8496
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8496;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AEA40:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821aea64
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEA64;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aea40
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEA40;
loc_821AEA64:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x821ae8ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE8AC;
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r10,8488
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r10.s64 + 8488;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821AEA78:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821aea9c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEA9C;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r9,1
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r9.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aea78
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEA78;
loc_821AEA9C:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq 0x821ae8ec
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AE8EC;
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,8504
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 8504;
loc_821AEAAC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821aead0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEAD0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aeaac
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEAAC;
loc_821AEAD0:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aea28
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEA28;
	// lwz ctx_arrow(ctx)->r11,628(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821aeaf0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEAF0;
	// stw ctx_arrow(ctx)->r29,92(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 92);
	// b 0x821ae868
	goto loc_821AE868;
loc_821AEAF0:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq 0x821aeb10
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEB10;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aeb10
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEB10;
	// stw ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 92);
	// b 0x821ae868
	goto loc_821AE868;
loc_821AEB10:
	// li ctx_arrow(ctx)->r3,269
	ctx_arrow(ctx)->r3.s64 = 269;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AEB18:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lwz ctx_arrow(ctx)->r4,648(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8472
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8472;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
loc_821AEB28:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821aeb4c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEB4C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aeb28
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEB28;
loc_821AEB4C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821aeb60
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEB60;
	// li ctx_arrow(ctx)->r3,271
	ctx_arrow(ctx)->r3.s64 = 271;
	// stw ctx_arrow(ctx)->r30,100(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 100);
	// b 0x821aed14
	goto loc_821AED14;
loc_821AEB60:
	// lwz ctx_arrow(ctx)->r11,100(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aec54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEC54;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821adf00
	sub_821ADF00(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821aec54
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEC54;
	// lwz ctx_arrow(ctx)->r10,80(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// ld ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// ld ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r8,16(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r7,24(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// std ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// std ctx_arrow(ctx)->r8,16(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 16);
	// std ctx_arrow(ctx)->r7,24(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 24);
	// bne ctx_arrow(ctx)->r6,0x821aebd8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEBD8;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r6,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r5,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b15d8
	sub_821B15D8(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 1, xer);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	// beq ctx_arrow(ctx)->r6,0x821aebdc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEBDC;
loc_821AEBD8:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_821AEBDC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 80);
	// bne ctx_arrow(ctx)->r6,0x821aec00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEC00;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821ae548
	sub_821AE548(ctx, base);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r3.s32, -1, xer);
	// beq ctx_arrow(ctx)->r6,0x821aec04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEC04;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r30.u64;
	// b 0x821aec08
	goto loc_821AEC08;
loc_821AEC00:
	// lwz ctx_arrow(ctx)->r3,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AEC04:
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
loc_821AEC08:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 80);
	// beq ctx_arrow(ctx)->r6,0x821aed14
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AED14;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stw ctx_arrow(ctx)->r29,84(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 84);
	// lis ctx_arrow(ctx)->r10,-32254
	ctx_arrow(ctx)->r10.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1518
	ctx_arrow(ctx)->r5.s64 = 1518;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,8420
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r10.s64 + 8420;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r31.u64;
	// ld ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r28.s64 + 24;
	// ld ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r8,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// std ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// std ctx_arrow(ctx)->r8,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// std ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// bl 0x821b80c8
	sub_821B80C8(&ctx);
loc_821AEC54:
	// li ctx_arrow(ctx)->r3,278
	ctx_arrow(ctx)->r3.s64 = 278;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AEC5C:
	// li ctx_arrow(ctx)->r3,279
	ctx_arrow(ctx)->r3.s64 = 279;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AEC64:
	// lbz ctx_arrow(ctx)->r11,649(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb. ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s8;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// bne 0x821aec7c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEC7C;
	// lbz ctx_arrow(ctx)->r11,648(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// extsb ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r11.s8;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AEC7C:
	// lbz ctx_arrow(ctx)->r11,650(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED00;
	// lbz ctx_arrow(ctx)->r11,648(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,61
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 61, xer);
	// extsb ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s8;
	// bne ctx_arrow(ctx)->r6,0x821aecd8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AECD8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,33
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 33, xer);
	// beq ctx_arrow(ctx)->r6,0x821aecd0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AECD0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,60
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 60, xer);
	// beq ctx_arrow(ctx)->r6,0x821aecc8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AECC8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,61
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 61, xer);
	// beq ctx_arrow(ctx)->r6,0x821aecc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AECC0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,62
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 62, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED00;
	// li ctx_arrow(ctx)->r3,273
	ctx_arrow(ctx)->r3.s64 = 273;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AECC0:
	// li ctx_arrow(ctx)->r3,274
	ctx_arrow(ctx)->r3.s64 = 274;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AECC8:
	// li ctx_arrow(ctx)->r3,272
	ctx_arrow(ctx)->r3.s64 = 272;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AECD0:
	// li ctx_arrow(ctx)->r3,275
	ctx_arrow(ctx)->r3.s64 = 275;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AECD8:
	// cmpw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, ctx_arrow(ctx)->r10.s32, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED00;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,38
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 38, xer);
	// beq ctx_arrow(ctx)->r6,0x821aecf8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AECF8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,124
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 124, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed00
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED00;
	// li ctx_arrow(ctx)->r3,277
	ctx_arrow(ctx)->r3.s64 = 277;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AECF8:
	// li ctx_arrow(ctx)->r3,276
	ctx_arrow(ctx)->r3.s64 = 276;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AED00:
	// li ctx_arrow(ctx)->r3,281
	ctx_arrow(ctx)->r3.s64 = 281;
	// b 0x821aed14
	goto loc_821AED14;
loc_821AED08:
	// li ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r11.s64 = 12;
	// stw ctx_arrow(ctx)->r11,640(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 640);
loc_821AED10:
	// li ctx_arrow(ctx)->r3,-1
	ctx_arrow(ctx)->r3.s64 = -1;
loc_821AED14:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,176
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 176;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821AED20) PPC_WEAK_FUNC(sub_821AED20);
PPC_FUNC_IMPL(__imp__sub_821AED20) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u64;
	// bl 0x821adb20
	sub_821ADB20(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 30;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r9.u64;
	// b 0x821aed8c
	goto loc_821AED8C;
loc_821AED48:
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AED54:
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// subf ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r8
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r8.s64 - ctx_arrow(ctx)->r7.s64;
	// beq 0x821aed78
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AED78;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aed54
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AED54;
loc_821AED78:
	// cmpwi ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// blt 0x821aedb8
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AEDB8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r7.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aed9c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AED9C;
	// addi ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r6,12
	ctx_arrow(ctx)->r9.s64 = ctx_arrow(ctx)->r6.s64 + 12;
loc_821AED8C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aed48
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AED48;
	// b 0x821aedb8
	goto loc_821AEDB8;
loc_821AED9C:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r9)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r9)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r9.u32 + 0);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// bl 0x821ae0e8
	sub_821AE0E8(&ctx);
loc_821AEDB8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821AEDD0) PPC_WEAK_FUNC(sub_821AEDD0);
PPC_FUNC_IMPL(__imp__sub_821AEDD0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,16
	ctx_arrow(ctx)->r3.s64 = 16;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821aee20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEE20;
	// lwz ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// stw ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// b 0x821aee24
	goto loc_821AEE24;
loc_821AEE20:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821AEE24:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821aee38
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEE38;
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821aee70
	goto loc_821AEE70;
loc_821AEE38:
	// lwz ctx_arrow(ctx)->r10,628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 12);
	// lwz ctx_arrow(ctx)->r10,628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,56(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 56);
	// lwz ctx_arrow(ctx)->r11,92(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821aee64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEE64;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// bne ctx_arrow(ctx)->r6,0x821aee68
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEE68;
loc_821AEE64:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821AEE68:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r11,96(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 96);
loc_821AEE70:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AEE88) PPC_WEAK_FUNC(sub_821AEE88);
PPC_FUNC_IMPL(__imp__sub_821AEE88) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r11,628(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,56(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// bne 0x821aeed8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AEED8;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1510
	ctx_arrow(ctx)->r5.s64 = 1510;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8564
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8564;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// lis ctx_arrow(ctx)->r3,-32768
	ctx_arrow(ctx)->r3.s64 = -2147483648;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,16389
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 16389;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// b 0x821aeefc
	goto loc_821AEEFC;
loc_821AEED8:
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r9.s64 = 0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// stw ctx_arrow(ctx)->r10,96(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 96);
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,56(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 56);
	// stw ctx_arrow(ctx)->r9,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// bl 0x821ae0e8
	sub_821AE0E8(&ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AEEFC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AEF10) PPC_WEAK_FUNC(sub_821AEF10);
PPC_FUNC_IMPL(__imp__sub_821AEF10) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821aefec
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AEFEC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x821aef58
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEF58;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// bne ctx_arrow(ctx)->r6,0x821aefcc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEFCC;
loc_821AEF58:
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,8
	ctx_arrow(ctx)->r3.s64 = 8;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821aef84
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AEF84;
	// lwz ctx_arrow(ctx)->r10,68(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r9,648(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821aef88
	goto loc_821AEF88;
loc_821AEF84:
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
loc_821AEF88:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// stw ctx_arrow(ctx)->r11,68(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 68);
	// bne ctx_arrow(ctx)->r6,0x821aefa0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AEFA0;
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821aefec
	goto loc_821AEFEC;
loc_821AEFA0:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r30.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821aefec
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AEFEC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821aefe8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEFE8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x821aefe8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEFE8;
loc_821AEFCC:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821aefe8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEFE8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x821aefe8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AEFE8;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b8768
	sub_821B8768(ctx, base);
loc_821AEFE8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AEFEC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AF010) PPC_WEAK_FUNC(sub_821AF010);
PPC_FUNC_IMPL(__imp__sub_821AF010) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r22{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	PPCRegister f0{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed120
	// stwu ctx_arrow(ctx)->r1,-224(ctx_arrow(ctx)->r1)
	ea = -224 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r29,640
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r29.s64 + 640;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF3B8;
	// lis ctx_arrow(ctx)->r11,-32256
	ctx_arrow(ctx)->r11.s64 = -2113929216;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r29,648
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r29.s64 + 648;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,25744
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 25744;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AF058:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af07c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF07C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af058
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF058;
loc_821AF07C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF3B8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF3B8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r22,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r22.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF3B8;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r24,ctx_arrow(ctx)->r11,8588
	ctx_arrow(ctx)->r24.s64 = ctx_arrow(ctx)->r11.s64 + 8588;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
loc_821AF0E0:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af104
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF104;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af0e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF0E0;
loc_821AF104:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF3B8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF3B8;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lwz ctx_arrow(ctx)->r23,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r23.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r26.s64 = 0;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,8584
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 8584;
loc_821AF144:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r30.s64 = 0;
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF3B8;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r24.u64;
loc_821AF174:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af198
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF198;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af174
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF174;
loc_821AF198:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF3B8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821af214
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF214;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r25.u64;
loc_821AF1CC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af1f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF1F0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af1cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF1CC;
loc_821AF1F0:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821af214
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF214;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r30,1
	ctx_arrow(ctx)->r30.s64 = 1;
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
loc_821AF214:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 2, xer);
	// beq ctx_arrow(ctx)->r6,0x821af254
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF254;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 3, xer);
	// beq ctx_arrow(ctx)->r6,0x821af244
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF244;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,4
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 4, xer);
	// beq ctx_arrow(ctx)->r6,0x821af254
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF254;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-5
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -5;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,3
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 3, xer);
	// bgt ctx_arrow(ctx)->r6,0x821af3b8
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821AF3B8;
	// lfd f0,0(ctx_arrow(ctx)->r31)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821af264
	goto loc_821AF264;
loc_821AF244:
	// lwa ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.s64 = int32_t(PPC_Read_U32(ctx,  ctx));
	// std ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lfd f0,80(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
	// b 0x821af260
	goto loc_821AF260;
loc_821AF254:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// lfd f0,88(ctx_arrow(ctx)->r1)
	ctx.fpscr.disableFlushMode();
	f0.u64 = PPC_Read_U64(ctx,  ctx);
loc_821AF260:
	// fcfid f0,f0
	ctx.fpscr.disableFlushMode();
	f0.f64 = double(f0.s64);
loc_821AF264:
	// stfd f0,0(ctx_arrow(ctx)->r28)
	ctx.fpscr.disableFlushMode();
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af278
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF278;
	// fneg f0,f0
	f0.u64 = f0.u64 ^ 0x8000000000000000;
	// stfd f0,0(ctx_arrow(ctx)->r28)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
loc_821AF278:
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,1
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 1;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r28,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r28.s64 + 8;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,4
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 4, xer);
	// blt ctx_arrow(ctx)->r6,0x821af144
	if (ctx_arrow(ctx)->r6.lt()) goto loc_821AF144;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF3B8;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8340
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8340;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AF2B8:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af2dc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF2DC;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af2b8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF2B8;
loc_821AF2DC:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF3B8;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r27.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821af3dc
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF3DC;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821af310
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF310;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// bne ctx_arrow(ctx)->r6,0x821af3b8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF3B8;
loc_821AF310:
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821af334
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF334;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 40);
	// b 0x821af338
	goto loc_821AF338;
loc_821AF334:
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
loc_821AF338:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r31.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821af34c
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF34C;
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821af3dc
	goto loc_821AF3DC;
loc_821AF34C:
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// stw ctx_arrow(ctx)->r22,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r29,64
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r29.s64 + 64;
	// stw ctx_arrow(ctx)->r23,4(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 4);
	// ld ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r8,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r10,8(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 8);
	// std ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 16);
	// std ctx_arrow(ctx)->r8,24(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 24);
	// std ctx_arrow(ctx)->r11,32(ctx_arrow(ctx)->r31)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 32);
	// b 0x821af39c
	goto loc_821AF39C;
loc_821AF380:
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,4(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823f07a0
	sub_823F07A0(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bge 0x821af3a8
	if ((((((((((((((!ctx)))))))))))))->r0.lt()) goto loc_821AF3A8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r30.s64 = ctx_arrow(ctx)->r11.s64 + 40;
loc_821AF39C:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne 0x821af380
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF380;
loc_821AF3A8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,40(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 40);
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 0);
	// b 0x821af3d8
	goto loc_821AF3D8;
loc_821AF3B8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821af3d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF3D8;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x821af3d8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF3D8;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b8768
	sub_821B8768(ctx, base);
loc_821AF3D8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AF3DC:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// stw ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 76);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,224
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 224;
	// b 0x823ed170
	return;
}

alias(__imp__sub_821AF3F0) PPC_WEAK_FUNC(sub_821AF3F0);
PPC_FUNC_IMPL(__imp__sub_821AF3F0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-128(ctx_arrow(ctx)->r1)
	ea = -128 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// lwz ctx_arrow(ctx)->r29,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r29.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821adb20
	sub_821ADB20(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r3,30
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r3.s64 + 30;
	// rlwinm ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,2,0,29
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft64(ctx_arrow(ctx)->r11.u32 | (ctx_arrow(ctx)->r11.u64 << 32), 2) & 0xFFFFFFFC;
	// add ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r11.u64 + ctx_arrow(ctx)->r30.u64;
	// b 0x821af464
	goto loc_821AF464;
loc_821AF420:
	// lwz ctx_arrow(ctx)->r7,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r7)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AF42C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af450
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF450;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af42c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF42C;
loc_821AF450:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// blt 0x821af4c4
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AF4C4;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af474
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF474;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r7,12
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r7.s64 + 12;
loc_821AF464:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821af420
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF420;
	// b 0x821af4c4
	goto loc_821AF4C4;
loc_821AF474:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821adb70
	sub_821ADB70(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// bne 0x821af4a8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF4A8;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r7.u64 = ctx_arrow(ctx)->r29.u64;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8592
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8592;
	// li ctx_arrow(ctx)->r5,1519
	ctx_arrow(ctx)->r5.s64 = 1519;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r30.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r30.s64 + 24;
	// bl 0x821b8300
	sub_821B8300(ctx, base);
loc_821AF4A8:
	// lwz ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// bl 0x821ae0e8
	sub_821AE0E8(&ctx);
loc_821AF4C4:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 12);
	// stw ctx_arrow(ctx)->r28,0(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 0);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821AF4E0) PPC_WEAK_FUNC(sub_821AF4E0);
PPC_FUNC_IMPL(__imp__sub_821AF4E0) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -24);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821af530
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF530;
	// li ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.s64 = 0;
	// stw ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r11,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r11,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r11,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// b 0x821af534
	goto loc_821AF534;
loc_821AF530:
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
loc_821AF534:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r30,-24(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r30.u64 = PPC_Read_U64(ctx,  ctx);
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AF558) PPC_WEAK_FUNC(sub_821AF558);
PPC_FUNC_IMPL(__imp__sub_821AF558) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed138
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r28.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// beq 0x821af5a4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF5A4;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// b 0x821af5a8
	goto loc_821AF5A8;
loc_821AF5A4:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AF5A8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821af5bc
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF5BC;
loc_821AF5B0:
	// lis ctx_arrow(ctx)->r3,-32761
	ctx_arrow(ctx)->r3.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r3,14
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r3.u64 | 14;
	// b 0x821af610
	goto loc_821AF610;
loc_821AF5BC:
	// li ctx_arrow(ctx)->r11,2
	ctx_arrow(ctx)->r11.s64 = 2;
	// stw ctx_arrow(ctx)->r29,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// bl 0x821d5a70
	sub_821D5A70(&ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821af5e4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF5E4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821d6090
	sub_821D6090(ctx, base);
	// b 0x821af5e8
	goto loc_821AF5E8;
loc_821AF5E4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AF5E8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 8);
	// bne ctx_arrow(ctx)->r6,0x821af604
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF604;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821ae0e8
	sub_821AE0E8(ctx, base);
	// b 0x821af5b0
	goto loc_821AF5B0;
loc_821AF604:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r30.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
loc_821AF610:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed188
	return;
}

alias(__imp__sub_821AF618) PPC_WEAK_FUNC(sub_821AF618);
PPC_FUNC_IMPL(__imp__sub_821AF618) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8692
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8692;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r4.u64;
loc_821AF638:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af65c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF65C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af638
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF638;
loc_821AF65C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821af66c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF66C;
	// lwz ctx_arrow(ctx)->r3,660(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821af6fc
	goto loc_821AF6FC;
loc_821AF66C:
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r1,84
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r1.s64 + 84;
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821adf00
	sub_821ADF00(ctx, base);
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// beq 0x821af6f8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF6F8;
	// lwz ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af6b0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF6B0;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1517
	ctx_arrow(ctx)->r5.s64 = 1517;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8624
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8624;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
	// li ctx_arrow(ctx)->r3,1
	ctx_arrow(ctx)->r3.s64 = 1;
	// b 0x821af6fc
	goto loc_821AF6FC;
loc_821AF6B0:
	// lwz ctx_arrow(ctx)->r11,84(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af6e0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF6E0;
	// lwz ctx_arrow(ctx)->r10,12(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821af6e0
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF6E0;
	// lwz ctx_arrow(ctx)->r10,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,-2
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + -2;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,2
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 2, xer);
	// bgt ctx_arrow(ctx)->r6,0x821af6e0
	if (ctx_arrow(ctx)->r6.gt()) goto loc_821AF6E0;
	// lwz ctx_arrow(ctx)->r3,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// b 0x821af6fc
	goto loc_821AF6FC;
loc_821AF6E0:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,1518
	ctx_arrow(ctx)->r5.s64 = 1518;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8420
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8420;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
loc_821AF6F8:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AF6FC:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AF710) PPC_WEAK_FUNC(sub_821AF710);
PPC_FUNC_IMPL(__imp__sub_821AF710) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r12{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -16);
	// stwu ctx_arrow(ctx)->r1,-352(ctx_arrow(ctx)->r1)
	ea = -352 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r5.u64;
	// lwz ctx_arrow(ctx)->r10,92(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r10.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af7e4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF7E4;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8744
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8744;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
loc_821AF748:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af76c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF76C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af748
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF748;
loc_821AF76C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821af7b8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF7B8;
	// lwz ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af7a4
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF7A4;
	// lwz ctx_arrow(ctx)->r11,640(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821af7a4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF7A4;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lwz ctx_arrow(ctx)->r7,648(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r5,1504
	ctx_arrow(ctx)->r5.s64 = 1504;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8708
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8708;
	// b 0x821af7dc
	goto loc_821AF7DC;
loc_821AF7A4:
	// addi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r5.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// li ctx_arrow(ctx)->r4,1500
	ctx_arrow(ctx)->r4.s64 = 1500;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b85d0
	sub_821B85D0(ctx, base);
	// b 0x821af7e4
	goto loc_821AF7E4;
loc_821AF7B8:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r4.u64;
	// li ctx_arrow(ctx)->r4,256
	ctx_arrow(ctx)->r4.s64 = 256;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821abbb8
	sub_821ABBB8(ctx, base);
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r7,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r7.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,8704
	ctx_arrow(ctx)->r6.s64 = ctx_arrow(ctx)->r11.s64 + 8704;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r31.s64 + 640;
loc_821AF7DC:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
loc_821AF7E4:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,352
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 352;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// ld ctx_arrow(ctx)->r31,-16(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r31.u64 = PPC_Read_U64(ctx,  ctx);
	// blr 
	return;
}

alias(__imp__sub_821AF7F8) PPC_WEAK_FUNC(sub_821AF7F8);
PPC_FUNC_IMPL(__imp__sub_821AF7F8) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r23{};
	PPCRegister r24{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed124
	// stwu ctx_arrow(ctx)->r1,-160(ctx_arrow(ctx)->r1)
	ea = -160 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r31.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r5
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r5.u64;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// li ctx_arrow(ctx)->r24,0
	ctx_arrow(ctx)->r24.s64 = 0;
	// beq 0x821af844
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF844;
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r24,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// stw ctx_arrow(ctx)->r24,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// stw ctx_arrow(ctx)->r24,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r24,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// b 0x821af848
	goto loc_821AF848;
loc_821AF844:
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r24.u64;
loc_821AF848:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afb20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFB20;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afa34
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFA34;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,4(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplw ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, ctx_arrow(ctx)->r10.u32, xer);
	// bge ctx_arrow(ctx)->r6,0x821afa34
	if ((((((((((((((!ctx)))))))))))))->r6.lt()) goto loc_821AFA34;
	// rotlwi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r11.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// lbz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U8(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,40
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 40, xer);
	// bne ctx_arrow(ctx)->r6,0x821afa34
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AFA34;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r23,4
	ctx_arrow(ctx)->r27.s64 = ctx_arrow(ctx)->r23.s64 + 4;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821afb50
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AFB50;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r11,8588
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r11.s64 + 8588;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r25,ctx_arrow(ctx)->r11,8760
	ctx_arrow(ctx)->r25.s64 = ctx_arrow(ctx)->r11.s64 + 8760;
loc_821AF8AC:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821afb50
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AFB50;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821af9f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF9F8;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// beq 0x821af938
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF938;
	// lwz ctx_arrow(ctx)->r7,648(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
loc_821AF8E0:
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821AF8E8:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af90c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF90C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af8e8
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF8E8;
loc_821AF90C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821af924
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF924;
	// lwz ctx_arrow(ctx)->r6,12(ctx_arrow(ctx)->r6)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r6.u32, 0, xer);
	// bne 0x821af8e0
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AF8E0;
	// b 0x821af938
	goto loc_821AF938;
loc_821AF924:
	// mr ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r25
	ctx_arrow(ctx)->r6.u64 = ctx_arrow(ctx)->r25.u64;
	// li ctx_arrow(ctx)->r5,1511
	ctx_arrow(ctx)->r5.s64 = 1511;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b80c8
	sub_821B80C8(ctx, base);
loc_821AF938:
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x821d5a70
	sub_821D5A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821af954
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF954;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r28.u64;
	// bl 0x821d6090
	sub_821D6090(ctx, base);
	// b 0x821af958
	goto loc_821AF958;
loc_821AF954:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r24.u64;
loc_821AF958:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,0(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// beq ctx_arrow(ctx)->r6,0x821afb20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFB20;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3,12
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r3.s64 + 12;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821afb50
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AFB50;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 1, xer);
	// bne ctx_arrow(ctx)->r6,0x821af9f8
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AF9F8;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,648
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 648;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r26
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r26.u64;
loc_821AF994:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af9b8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF9B8;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af994
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF994;
loc_821AF9B8:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821af8ac
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF8AC;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r31,648
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r31.s64 + 648;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8340
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8340;
loc_821AF9CC:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821af9f0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AF9F0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821af9cc
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AF9CC;
loc_821AF9F0:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq 0x821afa34
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFA34;
loc_821AF9F8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r28)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821afa10
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFA10;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// bne ctx_arrow(ctx)->r6,0x821afa14
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AFA14;
loc_821AFA10:
	// stw ctx_arrow(ctx)->r29,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
loc_821AFA14:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r28.u64;
	// li ctx_arrow(ctx)->r4,1500
	ctx_arrow(ctx)->r4.s64 = 1500;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31,24
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r31.s64 + 24;
	// bl 0x821b85d0
	sub_821B85D0(ctx, base);
	// lis ctx_arrow(ctx)->r30,-32768
	ctx_arrow(ctx)->r30.s64 = -2147483648;
	// stw ctx_arrow(ctx)->r29,80(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 80);
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,16389
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 16389;
	// b 0x821afb50
	goto loc_821AFB50;
loc_821AFA34:
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r23,8
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r23.s64 + 8;
loc_821AFA38:
	// lwz ctx_arrow(ctx)->r10,112(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31,640
	ctx_arrow(ctx)->r29.s64 = ctx_arrow(ctx)->r31.s64 + 640;
	// cmplwi ctx_arrow(ctx)->r10,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r10.u32, 0, xer);
	// beq 0x821afa90
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFA90;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,16
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r10.s64 + 16;
	// ld ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r29)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 0);
	// ld ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r9,8(ctx_arrow(ctx)->r29)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// ld ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r9,16(ctx_arrow(ctx)->r29)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 16);
	// ld ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U64(ctx,  ctx);
	// std ctx_arrow(ctx)->r11,24(ctx_arrow(ctx)->r29)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 24);
	// lwz ctx_arrow(ctx)->r11,12(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,112(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 112);
	// stw ctx_arrow(ctx)->r24,12(ctx_arrow(ctx)->r10)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r10.u32 + 12);
	// lwz ctx_arrow(ctx)->r11,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r10,24(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r10.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r10,656(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 656);
	// lwz ctx_arrow(ctx)->r11,28(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r11,660(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 660);
	// b 0x821afaa8
	goto loc_821AFAA8;
loc_821AFA90:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821afb50
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AFB50;
loc_821AFAA8:
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r29)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821afb2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFB2C;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r11.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x821afb2c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFB2C;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x821d5a70
	sub_821D5A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821afadc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFADC;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821d6090
	sub_821D6090(ctx, base);
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// b 0x821afae0
	goto loc_821AFAE0;
loc_821AFADC:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r24.u64;
loc_821AFAE0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r30,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r30.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afb20
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFB20;
	// li ctx_arrow(ctx)->r5,1
	ctx_arrow(ctx)->r5.s64 = 1;
	// lwz ctx_arrow(ctx)->r4,668(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821d5928
	sub_821D5928(ctx, base);
	// mr. ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r29.s32, 0, xer);
	// beq 0x821afb20
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFB20;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// lwz ctx_arrow(ctx)->r5,668(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r4,664(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x823ee010
	sub_823EE010(ctx, base);
	// stw ctx_arrow(ctx)->r29,40(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 40);
	// stw ctx_arrow(ctx)->r30,0(ctx_arrow(ctx)->r28)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r28.u32 + 0);
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r30,12
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r30.s64 + 12;
	// b 0x821afa38
	goto loc_821AFA38;
loc_821AFB20:
	// lis ctx_arrow(ctx)->r30,-32761
	ctx_arrow(ctx)->r30.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,14
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 14;
	// b 0x821afb50
	goto loc_821AFB50;
loc_821AFB2C:
	// li ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = 1;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r23.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
	// stw ctx_arrow(ctx)->r11,76(ctx_arrow(ctx)->r31)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r31.u32 + 76);
	// bl 0x821af3f0
	sub_821AF3F0(&ctx);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821afb50
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AFB50;
	// mr ctx_arrow(ctx)->r23,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r23.u64 = ctx_arrow(ctx)->r24.u64;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r24
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r24.u64;
loc_821AFB50:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r23,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r23.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afb64
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFB64;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r23
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r23.u64;
	// bl 0x821ae0e8
	sub_821AE0E8(ctx, base);
loc_821AFB64:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,160
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 160;
	// b 0x823ed174
	return;
}

alias(__imp__sub_821AFB70) PPC_WEAK_FUNC(sub_821AFB70);
PPC_FUNC_IMPL(__imp__sub_821AFB70) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed13c
	// stwu ctx_arrow(ctx)->r1,-112(ctx_arrow(ctx)->r1)
	ea = -112 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	// addi ctx_arrow(ctx)->r31,ctx_arrow(ctx)->r30,640
	ctx_arrow(ctx)->r31.s64 = ctx_arrow(ctx)->r30.s64 + 640;
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
	// lwz ctx_arrow(ctx)->r4,672(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b9380
	sub_821B9380(ctx, base);
	// li ctx_arrow(ctx)->r29,1
	ctx_arrow(ctx)->r29.s64 = 1;
	// cmpwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r3.s32, 0, xer);
	// blt 0x821afce4
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821AFCE4;
	// lwz ctx_arrow(ctx)->r6,0(ctx_arrow(ctx)->r31)
	ctx_arrow(ctx)->r6.u64 = PPC_Read_U32(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,9
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 9, xer);
	// bne ctx_arrow(ctx)->r6,0x821afcc4
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821AFCC4;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// lwz ctx_arrow(ctx)->r7,648(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r7.u64 = PPC_Read_U32(ctx,  ctx);
	// stw ctx_arrow(ctx)->r29,72(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 72);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8816
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8816;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821AFBC0:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821afbe4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFBE4;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afbc0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFBC0;
loc_821AFBE4:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821afbf8
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AFBF8;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821ad3a0
	sub_821AD3A0(ctx, base);
	// b 0x821afce8
	goto loc_821AFCE8;
loc_821AFBF8:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8808
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8808;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821AFC04:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821afc28
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFC28;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afc04
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFC04;
loc_821AFC28:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821afc3c
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AFC3C;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821ad598
	sub_821AD598(ctx, base);
	// b 0x821afce8
	goto loc_821AFCE8;
loc_821AFC3C:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8804
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8804;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821AFC48:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821afc6c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFC6C;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afc48
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFC48;
loc_821AFC6C:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821afc80
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AFC80;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821af010
	sub_821AF010(ctx, base);
	// b 0x821afce8
	goto loc_821AFCE8;
loc_821AFC80:
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11,8792
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r11.s64 + 8792;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r7
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r7.u64;
loc_821AFC8C:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// lbz ctx_arrow(ctx)->r8,0(ctx_arrow(ctx)->r10)
	ctx_arrow(ctx)->r8.u64 = PPC_Read_U8(ctx,  ctx);
	// cmpwi ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r9.s32, 0, xer);
	// subf ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r9
	ctx_arrow(ctx)->r8.s64 = ctx_arrow(ctx)->r9.s64 - ctx_arrow(ctx)->r8.s64;
	// beq 0x821afcb0
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFCB0;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r10,1
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r10.s64 + 1;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821afc8c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFC8C;
loc_821AFCB0:
	// cmpwi ctx_arrow(ctx)->r8,0
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r8.s32, 0, xer);
	// bne 0x821afcc4
	if ((((((((((((((!ctx)))))))))))))->r0.eq()) goto loc_821AFCC4;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// bl 0x821aef10
	sub_821AEF10(ctx, base);
	// b 0x821afce8
	goto loc_821AFCE8;
loc_821AFCC4:
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,12
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 12, xer);
	// beq ctx_arrow(ctx)->r6,0x821afce0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFCE0;
	// cmpwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r6,13
	ctx_arrow(ctx)->r6.compare<int32_t>(ctx_arrow(ctx)->r6.s32, 13, xer);
	// beq ctx_arrow(ctx)->r6,0x821afce0
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821AFCE0;
	// li ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r4.s64 = 0;
	// lwz ctx_arrow(ctx)->r3,632(ctx_arrow(ctx)->r30)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821b8768
	sub_821B8768(ctx, base);
loc_821AFCE0:
	// li ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r3.s64 = 0;
loc_821AFCE4:
	// stw ctx_arrow(ctx)->r29,76(ctx_arrow(ctx)->r30)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r30.u32 + 76);
loc_821AFCE8:
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// b 0x823ed18c
	return;
}

alias(__imp__sub_821AFCF0) PPC_WEAK_FUNC(sub_821AFCF0);
PPC_FUNC_IMPL(__imp__sub_821AFCF0) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 32);
	// std ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 40);
	// std ctx_arrow(ctx)->r7,48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 48);
	// std ctx_arrow(ctx)->r8,56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 56);
	// std ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 64);
	// std ctx_arrow(ctx)->r10,72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 72);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// lwz ctx_arrow(ctx)->r3,3032(ctx_arrow(ctx)->r3)
	ctx_arrow(ctx)->r3.u64 = PPC_Read_U32(ctx,  ctx);
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821af710
	sub_821AF710(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

alias(__imp__sub_821AFD40) PPC_WEAK_FUNC(sub_821AFD40);
PPC_FUNC_IMPL(__imp__sub_821AFD40) {
	PPC_FUNC_PROLOGUE();
	PPCXERRegister xer{};
	PPCCRRegister cr0{};
	PPCCRRegister cr6{};
	PPCRegister r11{};
	PPCRegister r25{};
	PPCRegister r26{};
	PPCRegister r27{};
	PPCRegister r28{};
	PPCRegister r29{};
	PPCRegister r30{};
	PPCRegister r31{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// bl 0x823ed12c
	// stwu ctx_arrow(ctx)->r1,-240(ctx_arrow(ctx)->r1)
	ea = -240 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// li ctx_arrow(ctx)->r31,0
	ctx_arrow(ctx)->r31.s64 = 0;
	// mr ctx_arrow(ctx)->r27,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r27.u64 = ctx_arrow(ctx)->r3.u64;
	// mr ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r26.u64 = ctx_arrow(ctx)->r4.u64;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// std ctx_arrow(ctx)->r31,0(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// std ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 8);
	// std ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 16);
	// std ctx_arrow(ctx)->r31,24(ctx_arrow(ctx)->r11)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 24);
	// lwz ctx_arrow(ctx)->r25,632(ctx_arrow(ctx)->r27)
	ctx_arrow(ctx)->r25.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821afda8
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFDA8;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8932
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8932;
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821afdac
	goto loc_821AFDAC;
loc_821AFDA8:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFDAC:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821afe00
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFE00;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8924
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8924;
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821afe04
	goto loc_821AFE04;
loc_821AFE00:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFE04:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821afe58
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFE58;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8908
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8908;
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821afe5c
	goto loc_821AFE5C;
loc_821AFE58:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFE5C:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// li ctx_arrow(ctx)->r28,2
	ctx_arrow(ctx)->r28.s64 = 2;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// stw ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// stw ctx_arrow(ctx)->r28,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// bl 0x8209d000
	sub_8209D000(&ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821afebc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFEBC;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8892
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8892;
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821afec0
	goto loc_821AFEC0;
loc_821AFEBC:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFEC0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x821d5a70
	sub_821D5A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821afee4
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFEE4;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821d6090
	sub_821D6090(ctx, base);
	// b 0x821afee8
	goto loc_821AFEE8;
loc_821AFEE4:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFEE8:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// li ctx_arrow(ctx)->r11,2560
	ctx_arrow(ctx)->r11.s64 = 2560;
	// stw ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// bl 0x8209d000
	sub_8209D000(&ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821aff4c
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFF4C;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8872
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8872;
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821aff50
	goto loc_821AFF50;
loc_821AFF4C:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFF50:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x821d5a70
	sub_821D5A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821aff74
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFF74;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821d6090
	sub_821D6090(ctx, base);
	// b 0x821aff78
	goto loc_821AFF78;
loc_821AFF74:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFF78:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// li ctx_arrow(ctx)->r11,2589
	ctx_arrow(ctx)->r11.s64 = 2589;
	// stw ctx_arrow(ctx)->r28,80(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 80);
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// stw ctx_arrow(ctx)->r11,88(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 88);
	// bl 0x8209d000
	sub_8209D000(&ctx);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821affdc
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821AFFDC;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8856
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8856;
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821affe0
	goto loc_821AFFE0;
loc_821AFFDC:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
loc_821AFFE0:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// li ctx_arrow(ctx)->r3,48
	ctx_arrow(ctx)->r3.s64 = 48;
	// bl 0x821d5a70
	sub_821D5A70(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821b0004
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821B0004;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// bl 0x821d6090
	sub_821D6090(ctx, base);
	// b 0x821b0008
	goto loc_821B0008;
loc_821B0004:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r31.u64;
loc_821B0008:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// stw ctx_arrow(ctx)->r3,8(ctx_arrow(ctx)->r29)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r29.u32 + 8);
	// beq ctx_arrow(ctx)->r6,0x821b006c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B006C;
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// lis ctx_arrow(ctx)->r4,9345
	ctx_arrow(ctx)->r4.s64 = 612433920;
	// li ctx_arrow(ctx)->r3,20
	ctx_arrow(ctx)->r3.s64 = 20;
	// bl 0x8209d000
	sub_8209D000(ctx, base);
	// cmplwi ctx_arrow(ctx)->r3,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r3.u32, 0, xer);
	// beq 0x821b0060
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821B0060;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// stw ctx_arrow(ctx)->r31,4(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 4);
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r3.u64;
	// stw ctx_arrow(ctx)->r31,8(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 8);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,8848
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 8848;
	// stw ctx_arrow(ctx)->r31,12(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 12);
	// stw ctx_arrow(ctx)->r31,16(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 16);
	// stw ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r3)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r3.u32 + 0);
	// b 0x821b0064
	goto loc_821B0064;
loc_821B0060:
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
loc_821B0064:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821b0078
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821B0078;
loc_821B006C:
	// lis ctx_arrow(ctx)->r30,-32761
	ctx_arrow(ctx)->r30.s64 = -2147024896;
	// ori ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r30,14
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r30.u64 | 14;
	// b 0x821b0178
	goto loc_821B0178;
loc_821B0078:
	// mr ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r4.u64 = ctx_arrow(ctx)->r29.u64;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af3f0
	sub_821AF3F0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,8840
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 8840;
	// mr ctx_arrow(ctx)->r29,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r29.u64 = ctx_arrow(ctx)->r31.u64;
	// bl 0x821af4e0
	sub_821AF4E0(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// lis ctx_arrow(ctx)->r11,-32254
	ctx_arrow(ctx)->r11.s64 = -2113798144;
	// li ctx_arrow(ctx)->r5,200
	ctx_arrow(ctx)->r5.s64 = 200;
	// addi ctx_arrow(ctx)->r4,ctx_arrow(ctx)->r11,8828
	ctx_arrow(ctx)->r4.s64 = ctx_arrow(ctx)->r11.s64 + 8828;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af558
	sub_821AF558(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b0178
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B0178;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r26,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r26.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b0174
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B0174;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821b7558
	sub_821B7558(ctx, base);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// stw ctx_arrow(ctx)->r11,632(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 632);
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// beq ctx_arrow(ctx)->r6,0x821b016c
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B016C;
	// addi ctx_arrow(ctx)->r28,ctx_arrow(ctx)->r27,24
	ctx_arrow(ctx)->r28.s64 = ctx_arrow(ctx)->r27.s64 + 24;
loc_821B00EC:
	// lwz ctx_arrow(ctx)->r4,4(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r4,0
	ctx_arrow(ctx)->r0.compare<uint32_t>(ctx_arrow(ctx)->r4.u32, 0, xer);
	// beq 0x821b0120
	if (ctx_arrow(ctx)->r0.eq()) goto loc_821B0120;
	// mr ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r4
	ctx_arrow(ctx)->r11.u64 = ctx_arrow(ctx)->r4.u64;
	// mr ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r10.u64 = ctx_arrow(ctx)->r11.u64;
loc_821B0100:
	// lbz ctx_arrow(ctx)->r9,0(ctx_arrow(ctx)->r11)
	ctx_arrow(ctx)->r9.u64 = PPC_Read_U8(ctx,  ctx);
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + 1;
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r9,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r9.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821b0100
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821B0100;
	// subf ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r11
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 - ctx_arrow(ctx)->r10.s64;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r11,-1
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r11.s64 + -1;
	// rotlwi ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r5.u64 = __builtin_rotateleft32(ctx_arrow(ctx)->r11.u32, 0);
	// b 0x821b0124
	goto loc_821B0124;
loc_821B0120:
	// mr ctx_arrow(ctx)->r5,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r5.u64 = ctx_arrow(ctx)->r31.u64;
loc_821B0124:
	// mr ctx_arrow(ctx)->r9,ctx_arrow(ctx)->r28
	ctx_arrow(ctx)->r9.u64 = ctx_arrow(ctx)->r28.u64;
	// mr ctx_arrow(ctx)->r8,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r8.u64 = ctx_arrow(ctx)->r27.u64;
	// li ctx_arrow(ctx)->r7,0
	ctx_arrow(ctx)->r7.s64 = 0;
	// li ctx_arrow(ctx)->r6,0
	ctx_arrow(ctx)->r6.s64 = 0;
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x821b7580
	sub_821B7580(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b019c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B019C;
	// li ctx_arrow(ctx)->r5,0
	ctx_arrow(ctx)->r5.s64 = 0;
	// lwz ctx_arrow(ctx)->r4,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r4.u64 = PPC_Read_U32(ctx,  ctx);
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r27
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r27.u64;
	// bl 0x821af7f8
	sub_821AF7F8(ctx, base);
	// mr. ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r3
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r3.u64;
	ctx_arrow(ctx)->r0.compare<int32_t>(ctx_arrow(ctx)->r30.s32, 0, xer);
	// blt 0x821b019c
	if (ctx_arrow(ctx)->r0.lt()) goto loc_821B019C;
	// addi ctx_arrow(ctx)->r26,ctx_arrow(ctx)->r26,8
	ctx_arrow(ctx)->r26.s64 = ctx_arrow(ctx)->r26.s64 + 8;
	// lwz ctx_arrow(ctx)->r11,0(ctx_arrow(ctx)->r26)
	ctx_arrow(ctx)->r11.u64 = PPC_Read_U32(ctx,  ctx);
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r11,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r11.u32, 0, xer);
	// bne ctx_arrow(ctx)->r6,0x821b00ec
	if ((((((((((((((!ctx)))))))))))))->r6.eq()) goto loc_821B00EC;
loc_821B016C:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x823d22e0
	sub_823D22E0(ctx, base);
loc_821B0174:
	// mr ctx_arrow(ctx)->r30,ctx_arrow(ctx)->r31
	ctx_arrow(ctx)->r30.u64 = ctx_arrow(ctx)->r31.u64;
loc_821B0178:
	// cmplwi ctx_arrow(ctx)->r6,ctx_arrow(ctx)->r29,0
	ctx_arrow(ctx)->r6.compare<uint32_t>(ctx_arrow(ctx)->r29.u32, 0, xer);
	// stw ctx_arrow(ctx)->r25,632(ctx_arrow(ctx)->r27)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r27.u32 + 632);
	// beq ctx_arrow(ctx)->r6,0x821b0190
	if (ctx_arrow(ctx)->r6.eq()) goto loc_821B0190;
	// li ctx_arrow(ctx)->r4,1
	ctx_arrow(ctx)->r4.s64 = 1;
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r29
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r29.u64;
	// bl 0x821ae0e8
	sub_821AE0E8(ctx, base);
loc_821B0190:
	// mr ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r30
	ctx_arrow(ctx)->r3.u64 = ctx_arrow(ctx)->r30.u64;
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,240
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 240;
	// b 0x823ed17c
	return;
loc_821B019C:
	// addi ctx_arrow(ctx)->r3,ctx_arrow(ctx)->r1,112
	ctx_arrow(ctx)->r3.s64 = ctx_arrow(ctx)->r1.s64 + 112;
	// bl 0x823d22e0
	sub_823D22E0(ctx, base);
	// b 0x821b0178
	goto loc_821B0178;
}

alias(__imp__sub_821B01A8) PPC_WEAK_FUNC(sub_821B01A8);
PPC_FUNC_IMPL(__imp__sub_821B01A8) {
	PPC_FUNC_PROLOGUE();
	PPCRegister r11{};
	PPCRegister r12{};
	uint32_t ea{};
	// mflr ctx_arrow(ctx)->r12
	// stw ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + -8);
	// std ctx_arrow(ctx)->r5,32(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 32);
	// std ctx_arrow(ctx)->r6,40(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 40);
	// std ctx_arrow(ctx)->r7,48(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 48);
	// std ctx_arrow(ctx)->r8,56(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 56);
	// std ctx_arrow(ctx)->r9,64(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 64);
	// std ctx_arrow(ctx)->r10,72(ctx_arrow(ctx)->r1)
	PPC_Write_U64(ctx,  ctx, ctx_arrow(ctx)->r1.u32 + 72);
	// stwu ctx_arrow(ctx)->r1,-96(ctx_arrow(ctx)->r1)
	ea = -96 + ctx_arrow(ctx)->r1.u32;
	PPC_Write_U32(ctx,  ctx, ea);
	ctx_arrow(ctx)->r1.u32 = ea;
	// addi ctx_arrow(ctx)->r11,ctx_arrow(ctx)->r1,80
	ctx_arrow(ctx)->r11.s64 = ctx_arrow(ctx)->r1.s64 + 80;
	// addi ctx_arrow(ctx)->r10,ctx_arrow(ctx)->r1,128
	ctx_arrow(ctx)->r10.s64 = ctx_arrow(ctx)->r1.s64 + 128;
	// stw ctx_arrow(ctx)->r10,0(ctx_arrow(ctx)->r11)
	PPC_Write_U32(ctx,  ctx, ctx_arrow(ctx)->r11.u32 + 0);
	// lwz ctx_arrow(ctx)->r5,80(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r5.u64 = PPC_Read_U32(ctx,  ctx);
	// bl 0x821af710
	sub_821AF710(ctx, base);
	// addi ctx_arrow(ctx)->r1,ctx_arrow(ctx)->r1,96
	ctx_arrow(ctx)->r1.s64 = ctx_arrow(ctx)->r1.s64 + 96;
	// lwz ctx_arrow(ctx)->r12,-8(ctx_arrow(ctx)->r1)
	ctx_arrow(ctx)->r12.u64 = PPC_Read_U32(ctx,  ctx);
	// mtlr ctx_arrow(ctx)->r12
	// blr 
	return;
}

